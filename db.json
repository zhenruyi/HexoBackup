{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/css/noscript.styl","path":"css/noscript.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/avatar2.jpg","path":"images/avatar2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/comments.js","path":"js/comments.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/config.js","path":"js/config.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon3/android-chrome-192x192.png","path":"images/favicon3/android-chrome-192x192.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon3/android-chrome-384x384.png","path":"images/favicon3/android-chrome-384x384.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon3/apple-touch-icon.png","path":"images/favicon3/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon3/browserconfig.xml","path":"images/favicon3/browserconfig.xml","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon3/favicon-16x16.png","path":"images/favicon3/favicon-16x16.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon3/favicon-32x32.png","path":"images/favicon3/favicon-32x32.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon3/favicon.ico","path":"images/favicon3/favicon.ico","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon3/mstile-150x150.png","path":"images/favicon3/mstile-150x150.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon3/safari-pinned-tab.svg","path":"images/favicon3/safari-pinned-tab.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon3/site.webmanifest","path":"images/favicon3/site.webmanifest","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/rating.js","path":"js/third-party/rating.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/chat/gitter.js","path":"js/third-party/chat/gitter.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":0,"renderable":1},{"_id":"source/files/ComputerSecurity.pdf","path":"files/ComputerSecurity.pdf","modified":0,"renderable":0},{"_id":"source/files/DFSOtherExamples.pdf","path":"files/DFSOtherExamples.pdf","modified":0,"renderable":0},{"_id":"source/files/DijkstraAlgoOfShortest.pdf","path":"files/DijkstraAlgoOfShortest.pdf","modified":0,"renderable":0},{"_id":"source/files/RedBlackSearchTree.pdf","path":"files/RedBlackSearchTree.pdf","modified":0,"renderable":0},{"_id":"source/files/HDFSAndP2PFileDistriSys.pdf","path":"files/HDFSAndP2PFileDistriSys.pdf","modified":0,"renderable":0},{"_id":"source/files/RedBlackSearchTreeDel.pdf","path":"files/RedBlackSearchTreeDel.pdf","modified":0,"renderable":0},{"_id":"source/files/TwoTreeSearchTree.pdf","path":"files/TwoTreeSearchTree.pdf","modified":0,"renderable":0},{"_id":"source/images/01_nodejs_releases.png","path":"images/01_nodejs_releases.png","modified":0,"renderable":0},{"_id":"source/images/OfficialAccountCode.jpg","path":"images/OfficialAccountCode.jpg","modified":0,"renderable":0},{"_id":"source/images/algo-learn03Algorithms01Foundation1.png","path":"images/algo-learn03Algorithms01Foundation1.png","modified":0,"renderable":0},{"_id":"source/images/algo-learn03Algorithms01Foundation2.png","path":"images/algo-learn03Algorithms01Foundation2.png","modified":0,"renderable":0},{"_id":"source/images/algo-learn03Algorithms02Sorting1.png","path":"images/algo-learn03Algorithms02Sorting1.png","modified":0,"renderable":0},{"_id":"source/images/algo-learn03Algorithms03Search1.png","path":"images/algo-learn03Algorithms03Search1.png","modified":0,"renderable":0},{"_id":"source/images/algo-learn03Algorithms03Search2.png","path":"images/algo-learn03Algorithms03Search2.png","modified":0,"renderable":0},{"_id":"source/images/algo-learn03Algorithms03Search3.png","path":"images/algo-learn03Algorithms03Search3.png","modified":0,"renderable":0},{"_id":"source/images/algo-learn03Algorithms03Search4.png","path":"images/algo-learn03Algorithms03Search4.png","modified":0,"renderable":0},{"_id":"source/images/algo-learn03Algorithms03Search5.png","path":"images/algo-learn03Algorithms03Search5.png","modified":0,"renderable":0},{"_id":"source/images/algo-learn03Algorithms03Search6.png","path":"images/algo-learn03Algorithms03Search6.png","modified":0,"renderable":0},{"_id":"source/images/algo-learn03Algorithms03Search7.png","path":"images/algo-learn03Algorithms03Search7.png","modified":0,"renderable":0},{"_id":"source/images/algo-learn03Algorithms03Search8.png","path":"images/algo-learn03Algorithms03Search8.png","modified":0,"renderable":0},{"_id":"source/images/algo-learn03Algorithms03Search9.png","path":"images/algo-learn03Algorithms03Search9.png","modified":0,"renderable":0},{"_id":"source/images/algo-learn03Algorithms04Graph1.png","path":"images/algo-learn03Algorithms04Graph1.png","modified":0,"renderable":0},{"_id":"source/images/algo-learn03Algorithms05String1.png","path":"images/algo-learn03Algorithms05String1.png","modified":0,"renderable":0},{"_id":"source/images/algo-learn03Algorithms04Graph2.png","path":"images/algo-learn03Algorithms04Graph2.png","modified":0,"renderable":0},{"_id":"source/images/algo-learn03Algorithms05String2.png","path":"images/algo-learn03Algorithms05String2.png","modified":0,"renderable":0},{"_id":"source/images/algo02Leetcode30daysApril122_1.png","path":"images/algo02Leetcode30daysApril122_1.png","modified":0,"renderable":0},{"_id":"source/images/algo02Leetcode30daysApril122_2.png","path":"images/algo02Leetcode30daysApril122_2.png","modified":0,"renderable":0},{"_id":"source/images/courgette.log","path":"images/courgette.log","modified":0,"renderable":0},{"_id":"source/images/other01NIVIDIAReflex10.png","path":"images/other01NIVIDIAReflex10.png","modified":0,"renderable":0},{"_id":"source/images/other01NIVIDIAReflex1.png","path":"images/other01NIVIDIAReflex1.png","modified":0,"renderable":0},{"_id":"source/images/other01NIVIDIAReflex2.jpeg","path":"images/other01NIVIDIAReflex2.jpeg","modified":0,"renderable":0},{"_id":"source/images/other01NIVIDIAReflex3.png","path":"images/other01NIVIDIAReflex3.png","modified":0,"renderable":0},{"_id":"source/images/other01NIVIDIAReflex4.png","path":"images/other01NIVIDIAReflex4.png","modified":0,"renderable":0},{"_id":"source/images/other01NIVIDIAReflex5.png","path":"images/other01NIVIDIAReflex5.png","modified":0,"renderable":0},{"_id":"source/images/other01NIVIDIAReflex6.png","path":"images/other01NIVIDIAReflex6.png","modified":0,"renderable":0},{"_id":"source/images/other01NIVIDIAReflex8.png","path":"images/other01NIVIDIAReflex8.png","modified":0,"renderable":0},{"_id":"source/images/other01NIVIDIAReflex7.jpg","path":"images/other01NIVIDIAReflex7.jpg","modified":0,"renderable":0},{"_id":"source/images/other01NIVIDIAReflex9.png","path":"images/other01NIVIDIAReflex9.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/images/courgette.log","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1650081748626},{"_id":"source/_posts/algo-exec01Leetcode30daysApril.md","hash":"af9750e670e74d860d4b4c75005b7eb39cf6bbb5","modified":1650150024691},{"_id":"source/_posts/algo-exec02LeetcodeFeb.md","hash":"858cf7a892cafc940e6c0004a3d51d45bbf0c3f6","modified":1650150012200},{"_id":"source/_posts/algo-exec03LeetCodeDPStart.md","hash":"005ab8fed4b05ca41195716ade3a6b521dcb319c","modified":1650150001409},{"_id":"source/_posts/algo-learn02DynamicProgramming.md","hash":"491bbc212b9a63b812f682ef2b1ed2388e2a6fbb","modified":1650150168099},{"_id":"source/_posts/algo-learn01SortingAlgo.md","hash":"5970d16b819f938447e25ded7d560e1264d2a52f","modified":1650150093361},{"_id":"source/_posts/algo-learn03Algorithms00Framework.md","hash":"f1924c749fa44cbf9d890c5428877c8b0cd07933","modified":1650151583651},{"_id":"source/_posts/algo-learn03Algorithms01Foundation.md","hash":"3a57eea150edbbb4e4374000345f7a94f2a2cdfb","modified":1650150223310},{"_id":"source/_posts/algo-learn03Algorithms03Search.md","hash":"8cf928c7552c4e8348539a8c3066f9844a660d12","modified":1650150252258},{"_id":"source/_posts/algo-learn03Algorithms05String.md","hash":"78f05ae3f09560036f7e4a3a98c8cac744cc4077","modified":1650150276063},{"_id":"source/_posts/algo-learn03Algorithms02Sorting.md","hash":"69538fa73601dd705a39132d1941f589ad9da80e","modified":1650150239672},{"_id":"source/_posts/algo-learn03Algorithms04Graph.md","hash":"87276a4922edc5275377c4f30e44932f6b487fc3","modified":1650150263422},{"_id":"source/_posts/db-mysql01TODO.md","hash":"265e94dc6ded7ec5204eb9ffc1129afea84a2c29","modified":1650150306938},{"_id":"source/_posts/db-redis01TODO.md","hash":"865917bb38a734977afcde683f42c06bfbc2c05b","modified":1650150324989},{"_id":"source/_posts/lang-asm01TODO.md","hash":"860d07d3883364d4830a63a160a0403e37a6fd26","modified":1650150342684},{"_id":"source/_posts/lang-go01GoProjBubbleList.md","hash":"c8b23c0c99773e4dc14f444918a2d2f04f34475f","modified":1650150404596},{"_id":"source/_posts/lang-cpp01CppClassForget.md","hash":"7fcf0880cbcd305354e03664b4ae0df711a8a945","modified":1650150390834},{"_id":"source/_posts/lang-go02GoMarshalAndUnmarshal.md","hash":"fba60780eda675b48691dae7429d9748cdd84351","modified":1650150419545},{"_id":"source/_posts/lang-go03GoPackageAndMod.md","hash":"4579fe832e70787865d319ff7dc39a7d41ae626d","modified":1650150431679},{"_id":"source/_posts/lang-py01PythonMoocNotes.md","hash":"02941ef4ab7e0cdc35bc2092aba0cd1915b6457e","modified":1650150446724},{"_id":"source/_posts/linux-webServer01webServer.md","hash":"2245c39cbe421496c4432eae8439f8b467adbf77","modified":1650150498852},{"_id":"source/_posts/lang-py03PythonWebCrawler.md","hash":"117349596be2c10cd8e215166a8655d919ca9f05","modified":1650150473119},{"_id":"source/_posts/lang-py02PythonAlexNotes.md","hash":"472531d1e4b29e14f546134c8e66254950f7f108","modified":1650150458315},{"_id":"source/_posts/other-intro01NIVIDIAReflex.md","hash":"fc71e369cb137e892e38cc937022173290f259f5","modified":1650150516905},{"_id":"source/_posts/other-useless00Catalog.md","hash":"4ca901859c0731da333d39063f5e3f0479593ede","modified":1650150565451},{"_id":"source/_posts/other-intro02HDFSAndP2PFileDistriSys.md","hash":"69b0c6903df1301f8cf2cd2a0252b98284fd6b68","modified":1650150534715},{"_id":"source/_posts/other-useless01HelloWorld.md","hash":"eb56adef002cfa291f8f7b7ccde0fa802a45668f","modified":1650150578455},{"_id":"source/_posts/other-job01MyFirstInterview.md","hash":"67a5b1d308e7f2905677e374762a15fbb87299d0","modified":1650150547022},{"_id":"source/_posts/sci-net01InternetHomeworkPatch.md","hash":"e7294012a5a954f3dc59163b2aeebf55027a5fb4","modified":1650150591613},{"_id":"source/_posts/tech-git02GithubCmd.md","hash":"c5824500a43ed995805125d35241177dd9912506","modified":1650150626684},{"_id":"source/_posts/sic-sec01ComputerSecurityFinal.md","hash":"0da2524c6260949e712f1863bae63bc7205a2ea6","modified":1650150604526},{"_id":"source/_posts/tech-git01GithubRepositoriesInit.md","hash":"9050ca485030593c648880334e0bcca4cf189782","modified":1650150615845},{"_id":"source/_posts/tech-hexo02ConfigHexo.md","hash":"ab62f6079647644a66613fb266ca934914b3ccda","modified":1650150654865},{"_id":"source/_posts/tech-hexo01UseHexoToBuildBlog.md","hash":"1bca88d668fa17478fc25b9cf54b7050b1ed6253","modified":1650150639141},{"_id":"source/categories/index.md","hash":"2e1b917a0e667ad7af1336366a83da3107d94012","modified":1648366546688},{"_id":"source/_posts/tech-hexo03Collection1.md","hash":"19b8bf2941fa38e5ec5961c0e3c3b17b320a5a16","modified":1650150666016},{"_id":"source/images/01_nodejs_releases.png","hash":"042d28958abd4f576b6bbc1a6880d6d28e0d81e2","modified":1648223462061},{"_id":"source/images/OfficialAccountCode.jpg","hash":"1a9aa956db84759369d61d52ae35ced92669bcab","modified":1648566304962},{"_id":"source/images/algo-learn03Algorithms03Search1.png","hash":"3d2ec0842dbe58f3acf80f5c37504110feb573b8","modified":1649901404096},{"_id":"source/images/algo-learn03Algorithms03Search8.png","hash":"2f886e30066da25250e0bacfa7d9022ff2ad322b","modified":1649987858516},{"_id":"source/images/algo02Leetcode30daysApril122_2.png","hash":"ef13af6faf125e29fd3bb584214e18d5d96075d8","modified":1638645624000},{"_id":"source/images/algo02Leetcode30daysApril122_1.png","hash":"13311c2fcfbe884076cd49c4002cbcf7f3c57150","modified":1638645318000},{"_id":"source/images/other01NIVIDIAReflex4.png","hash":"b116279a0bc88c50e9256de7673c5870c1ac68e8","modified":1639192572000},{"_id":"source/images/other01NIVIDIAReflex2.jpeg","hash":"973bc73da605a481a51a2956f0e3c8f83c72620a","modified":1639305132000},{"_id":"source/images/other01NIVIDIAReflex6.png","hash":"5298a9ba632af0aebcb4e0c44e32835ddd8c5f61","modified":1639224986000},{"_id":"source/tags/index.md","hash":"86f5003def071dc112243dd450fd16855c054100","modified":1648366586904},{"_id":"source/images/other01NIVIDIAReflex9.png","hash":"ce308b3b653a01718389f2188082a9c832ddaeda","modified":1639226978000},{"_id":"source/plugins/google-code-prettify/lang-Splus.js","hash":"cf0eb1b7e60d2b5704901965578eeb8333196ff3","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-aea.js","hash":"6a795a6049869e05b98fe851e72094276d3ae613","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-apollo.js","hash":"6a795a6049869e05b98fe851e72094276d3ae613","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-basic.js","hash":"efeefe1f0d1f20b66d2cb0635b8f0c7fcfe7ff0a","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-cbm.js","hash":"efeefe1f0d1f20b66d2cb0635b8f0c7fcfe7ff0a","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-agc.js","hash":"6a795a6049869e05b98fe851e72094276d3ae613","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-cl.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-el.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-clj.js","hash":"a2c893fc1b79d9c3aed59e22bcf3769bb5563b5c","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-css.js","hash":"22160ffbcd219c018c3dbef745da29cc334c6e8c","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-dart.js","hash":"be57991fbb09bd187be3cb0218bd5e9c997eea5b","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-erl.js","hash":"d3ba7d0376ff6f95f5785341653c24166d4ef8e4","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-erlang.js","hash":"d3ba7d0376ff6f95f5785341653c24166d4ef8e4","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-ex.js","hash":"2bb479f04b548bfc183940a7ddd8c3a0a1afa4ff","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-exs.js","hash":"2bb479f04b548bfc183940a7ddd8c3a0a1afa4ff","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-fs.js","hash":"fe6b2569654df7a1861bb2518a2ac443603d471f","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-go.js","hash":"640ffa4b3f9c5aee9414962645b9a7f0f49dd555","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-hs.js","hash":"3158902af4476578fc61eb9e47c679e663a77342","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-kotlin.js","hash":"17877c550364c4e65c013d815da614291051c55a","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-lasso.js","hash":"60ba20b8b45ae3bdc1cf86f3b33b61d3859e3706","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-lisp.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-latex.js","hash":"57371d546cb8e1c105985a59ed135a1b97944d17","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-lassoscript.js","hash":"60ba20b8b45ae3bdc1cf86f3b33b61d3859e3706","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-llvm.js","hash":"91b28e339c9b32bfe61fc6ae6eba166936ee38fb","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-lgt.js","hash":"a8ca762427547d5968153b6afe1e3ee02520886a","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-ls.js","hash":"60ba20b8b45ae3bdc1cf86f3b33b61d3859e3706","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-lsp.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-ll.js","hash":"91b28e339c9b32bfe61fc6ae6eba166936ee38fb","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-logtalk.js","hash":"a8ca762427547d5968153b6afe1e3ee02520886a","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-lua.js","hash":"60a3dccac2fe79b0e1c38dec6be79a6ae51883fa","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-ml.js","hash":"fe6b2569654df7a1861bb2518a2ac443603d471f","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-mumps.js","hash":"a6002126b8dfc84a167040a024aad9b6b4e406ee","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-n.js","hash":"65e144772759352d3b8c612219d5d817735cc7a0","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-nemerle.js","hash":"65e144772759352d3b8c612219d5d817735cc7a0","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-r.js","hash":"cf0eb1b7e60d2b5704901965578eeb8333196ff3","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-matlab.js","hash":"94c8fd7c44194dd3b1a444a3fc7c2b7fd09d9d6a","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-pascal.js","hash":"6630a2845b3a0951cbd4b2b8f69d538e0845a53e","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-rd.js","hash":"f2c5bbaca8b6a00737dbdd30d26ea84a0c9db9bc","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-proto.js","hash":"76ab0965b0e47de76cb5293ceafc7e5ca1588380","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-rust.js","hash":"daa26f076cddc6640685b9e8bff7e1e76d1c70f0","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-s.js","hash":"cf0eb1b7e60d2b5704901965578eeb8333196ff3","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-rkt.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-scm.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-ss.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-scala.js","hash":"cf07e43b333938964236f455826c335fc806aaa5","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-swift.js","hash":"e86ce3125d09494db6384123ba462fd2035bc0b9","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-tcl.js","hash":"38c918e9a43c8975074302305b8b8e5f30d513dc","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-sql.js","hash":"483cc0f4bd0773f6e7377f48b7a028d83790dd1b","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-tex.js","hash":"57371d546cb8e1c105985a59ed135a1b97944d17","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-vbs.js","hash":"1f5344a5051aa3800193b8031dab4acbe3e341cb","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-vhdl.js","hash":"09c27f0ced7244e8ece3ab043bf8aa3028cc2927","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-vb.js","hash":"1f5344a5051aa3800193b8031dab4acbe3e341cb","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-vhd.js","hash":"09c27f0ced7244e8ece3ab043bf8aa3028cc2927","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-wiki.js","hash":"c4090580e86c5040709e6b8fd63b661f978149a6","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-xq.js","hash":"52c4ad346f115881a250652f1d98f35826f4f239","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/prettify.css","hash":"dc032dcd1ee5fff6a03959a962cc7dda4410c822","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-yml.js","hash":"5aaea285d2e08556c0a754d637d912ed82734d8e","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-yaml.js","hash":"5aaea285d2e08556c0a754d637d912ed82734d8e","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/lang-xquery.js","hash":"52c4ad346f115881a250652f1d98f35826f4f239","modified":1545032830000},{"_id":"source/plugins/prettify/lang-Splus.js","hash":"cf0eb1b7e60d2b5704901965578eeb8333196ff3","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/prettify.js","hash":"38a0e547b123d32c9e61ae87b797b3b2f7929b7a","modified":1545032636000},{"_id":"source/plugins/prettify/lang-apollo.js","hash":"6a795a6049869e05b98fe851e72094276d3ae613","modified":1545032830000},{"_id":"source/plugins/prettify/lang-agc.js","hash":"6a795a6049869e05b98fe851e72094276d3ae613","modified":1545032830000},{"_id":"source/plugins/prettify/lang-basic.js","hash":"efeefe1f0d1f20b66d2cb0635b8f0c7fcfe7ff0a","modified":1545032830000},{"_id":"source/plugins/prettify/lang-cl.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1545032830000},{"_id":"source/plugins/prettify/lang-aea.js","hash":"6a795a6049869e05b98fe851e72094276d3ae613","modified":1545032830000},{"_id":"source/plugins/prettify/lang-cbm.js","hash":"efeefe1f0d1f20b66d2cb0635b8f0c7fcfe7ff0a","modified":1545032830000},{"_id":"source/plugins/prettify/lang-css.js","hash":"22160ffbcd219c018c3dbef745da29cc334c6e8c","modified":1545032830000},{"_id":"source/plugins/prettify/lang-clj.js","hash":"a2c893fc1b79d9c3aed59e22bcf3769bb5563b5c","modified":1545032830000},{"_id":"source/plugins/prettify/lang-dart.js","hash":"be57991fbb09bd187be3cb0218bd5e9c997eea5b","modified":1545032830000},{"_id":"source/plugins/prettify/lang-el.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1545032830000},{"_id":"source/plugins/prettify/lang-ex.js","hash":"2bb479f04b548bfc183940a7ddd8c3a0a1afa4ff","modified":1545032830000},{"_id":"source/plugins/prettify/lang-fs.js","hash":"fe6b2569654df7a1861bb2518a2ac443603d471f","modified":1545032830000},{"_id":"source/plugins/prettify/lang-exs.js","hash":"2bb479f04b548bfc183940a7ddd8c3a0a1afa4ff","modified":1545032830000},{"_id":"source/plugins/prettify/lang-go.js","hash":"640ffa4b3f9c5aee9414962645b9a7f0f49dd555","modified":1545032830000},{"_id":"source/plugins/prettify/lang-erl.js","hash":"d3ba7d0376ff6f95f5785341653c24166d4ef8e4","modified":1545032830000},{"_id":"source/plugins/prettify/lang-hs.js","hash":"3158902af4476578fc61eb9e47c679e663a77342","modified":1545032830000},{"_id":"source/plugins/prettify/lang-lasso.js","hash":"60ba20b8b45ae3bdc1cf86f3b33b61d3859e3706","modified":1545032830000},{"_id":"source/plugins/prettify/lang-erlang.js","hash":"d3ba7d0376ff6f95f5785341653c24166d4ef8e4","modified":1545032830000},{"_id":"source/plugins/prettify/lang-kotlin.js","hash":"17877c550364c4e65c013d815da614291051c55a","modified":1545032830000},{"_id":"source/plugins/prettify/lang-lassoscript.js","hash":"60ba20b8b45ae3bdc1cf86f3b33b61d3859e3706","modified":1545032830000},{"_id":"source/plugins/prettify/lang-lgt.js","hash":"a8ca762427547d5968153b6afe1e3ee02520886a","modified":1545032830000},{"_id":"source/plugins/prettify/lang-latex.js","hash":"57371d546cb8e1c105985a59ed135a1b97944d17","modified":1545032830000},{"_id":"source/plugins/prettify/lang-lisp.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1545032830000},{"_id":"source/plugins/prettify/lang-llvm.js","hash":"91b28e339c9b32bfe61fc6ae6eba166936ee38fb","modified":1545032830000},{"_id":"source/plugins/prettify/lang-ll.js","hash":"91b28e339c9b32bfe61fc6ae6eba166936ee38fb","modified":1545032830000},{"_id":"source/plugins/prettify/lang-logtalk.js","hash":"a8ca762427547d5968153b6afe1e3ee02520886a","modified":1545032830000},{"_id":"source/plugins/prettify/lang-ls.js","hash":"60ba20b8b45ae3bdc1cf86f3b33b61d3859e3706","modified":1545032830000},{"_id":"source/plugins/prettify/lang-lsp.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1545032830000},{"_id":"source/plugins/prettify/lang-lua.js","hash":"60a3dccac2fe79b0e1c38dec6be79a6ae51883fa","modified":1545032830000},{"_id":"source/plugins/prettify/lang-ml.js","hash":"fe6b2569654df7a1861bb2518a2ac443603d471f","modified":1545032830000},{"_id":"source/plugins/prettify/lang-mumps.js","hash":"a6002126b8dfc84a167040a024aad9b6b4e406ee","modified":1545032830000},{"_id":"source/plugins/prettify/lang-n.js","hash":"65e144772759352d3b8c612219d5d817735cc7a0","modified":1545032830000},{"_id":"source/plugins/prettify/lang-nemerle.js","hash":"65e144772759352d3b8c612219d5d817735cc7a0","modified":1545032830000},{"_id":"source/plugins/prettify/lang-proto.js","hash":"76ab0965b0e47de76cb5293ceafc7e5ca1588380","modified":1545032830000},{"_id":"source/plugins/prettify/lang-rd.js","hash":"f2c5bbaca8b6a00737dbdd30d26ea84a0c9db9bc","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/run_prettify.js","hash":"4f2ae0678e8257fe5444b50692eaa68321851646","modified":1545032642000},{"_id":"source/plugins/prettify/lang-r.js","hash":"cf0eb1b7e60d2b5704901965578eeb8333196ff3","modified":1545032830000},{"_id":"source/plugins/prettify/lang-rust.js","hash":"daa26f076cddc6640685b9e8bff7e1e76d1c70f0","modified":1545032830000},{"_id":"source/plugins/prettify/lang-rkt.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1545032830000},{"_id":"source/plugins/prettify/lang-s.js","hash":"cf0eb1b7e60d2b5704901965578eeb8333196ff3","modified":1545032830000},{"_id":"source/plugins/prettify/lang-scala.js","hash":"cf07e43b333938964236f455826c335fc806aaa5","modified":1545032830000},{"_id":"source/plugins/prettify/lang-scm.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1545032830000},{"_id":"source/plugins/prettify/lang-ss.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1545032830000},{"_id":"source/plugins/prettify/lang-pascal.js","hash":"6630a2845b3a0951cbd4b2b8f69d538e0845a53e","modified":1545032830000},{"_id":"source/plugins/prettify/lang-swift.js","hash":"e86ce3125d09494db6384123ba462fd2035bc0b9","modified":1545032830000},{"_id":"source/plugins/prettify/lang-matlab.js","hash":"94c8fd7c44194dd3b1a444a3fc7c2b7fd09d9d6a","modified":1545032830000},{"_id":"source/plugins/prettify/lang-tex.js","hash":"57371d546cb8e1c105985a59ed135a1b97944d17","modified":1545032830000},{"_id":"source/plugins/prettify/lang-vb.js","hash":"1f5344a5051aa3800193b8031dab4acbe3e341cb","modified":1545032830000},{"_id":"source/plugins/prettify/lang-vbs.js","hash":"1f5344a5051aa3800193b8031dab4acbe3e341cb","modified":1545032830000},{"_id":"source/plugins/prettify/lang-vhd.js","hash":"09c27f0ced7244e8ece3ab043bf8aa3028cc2927","modified":1545032830000},{"_id":"source/plugins/prettify/lang-vhdl.js","hash":"09c27f0ced7244e8ece3ab043bf8aa3028cc2927","modified":1545032830000},{"_id":"source/plugins/prettify/lang-wiki.js","hash":"c4090580e86c5040709e6b8fd63b661f978149a6","modified":1545032830000},{"_id":"source/plugins/prettify/lang-sql.js","hash":"483cc0f4bd0773f6e7377f48b7a028d83790dd1b","modified":1545032830000},{"_id":"source/plugins/prettify/lang-yaml.js","hash":"5aaea285d2e08556c0a754d637d912ed82734d8e","modified":1545032830000},{"_id":"source/plugins/prettify/lang-tcl.js","hash":"38c918e9a43c8975074302305b8b8e5f30d513dc","modified":1545032830000},{"_id":"source/plugins/prettify/lang-yml.js","hash":"5aaea285d2e08556c0a754d637d912ed82734d8e","modified":1545032830000},{"_id":"source/plugins/prettify/prettify.css","hash":"dc032dcd1ee5fff6a03959a962cc7dda4410c822","modified":1545032830000},{"_id":"source/plugins/prettify/lang-xq.js","hash":"52c4ad346f115881a250652f1d98f35826f4f239","modified":1545032830000},{"_id":"source/plugins/prettify/lang-xquery.js","hash":"52c4ad346f115881a250652f1d98f35826f4f239","modified":1545032830000},{"_id":"source/plugins/prettify/skins/doxy.css","hash":"cc3f6d71ea63414f391474196f45b6eaa6a95369","modified":1545032830000},{"_id":"source/plugins/prettify/skins/sons-of-obsidian.css","hash":"e54ae8129555fab5dc165f2a523932d3eee586c4","modified":1545032830000},{"_id":"source/plugins/prettify/skins/desert.css","hash":"2663a198d1a399343e3ee10126b5e425991dedd5","modified":1545032830000},{"_id":"source/plugins/prettify/skins/sunburst.css","hash":"fad26fe701faae75df9c953fbeaa28c7eedc12f0","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/skins/doxy.css","hash":"cc3f6d71ea63414f391474196f45b6eaa6a95369","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/skins/sons-of-obsidian.css","hash":"e54ae8129555fab5dc165f2a523932d3eee586c4","modified":1545032830000},{"_id":"source/plugins/google-code-prettify/skins/desert.css","hash":"2663a198d1a399343e3ee10126b5e425991dedd5","modified":1545032830000},{"_id":"source/plugins/prettify/run_prettify.js","hash":"4f2ae0678e8257fe5444b50692eaa68321851646","modified":1545032642000},{"_id":"source/plugins/prettify/prettify.js","hash":"38a0e547b123d32c9e61ae87b797b3b2f7929b7a","modified":1545032636000},{"_id":"source/plugins/google-code-prettify/skins/sunburst.css","hash":"fad26fe701faae75df9c953fbeaa28c7eedc12f0","modified":1545032830000},{"_id":"source/images/algo-learn03Algorithms03Search2.png","hash":"151dc42461ed9e77b01e0772d7c0606baafaacdd","modified":1649901455043},{"_id":"source/images/algo-learn03Algorithms03Search3.png","hash":"08e45b100c4a6c4727608e0bf674caa8bf3a7d7c","modified":1649906198309},{"_id":"source/images/algo-learn03Algorithms03Search5.png","hash":"dc56fb2a1be8a2d4e90d0f997ebd51cbab798560","modified":1649916845955},{"_id":"source/images/algo-learn03Algorithms03Search7.png","hash":"bed0b6b6dfac54f3feec198ff7468bea9c415dec","modified":1649926193472},{"_id":"source/images/algo-learn03Algorithms04Graph1.png","hash":"8c25ddf1282370e93e62546ef8ca3a695ccfcbc4","modified":1650041008974},{"_id":"source/images/algo-learn03Algorithms05String1.png","hash":"7f82ccc0e9c5d29707808b5b666482520baf7a25","modified":1650102993531},{"_id":"source/images/algo-learn03Algorithms04Graph2.png","hash":"70c4a098ebfaf68ad234227f9c25e1cab837f7b1","modified":1650080918032},{"_id":"source/images/other01NIVIDIAReflex5.png","hash":"8844c45a7f955ce32723b41b8605594f78c8c75b","modified":1639195638000},{"_id":"source/images/algo-learn03Algorithms05String2.png","hash":"62a02f69a7bb4c697083bb96c12424bf83aea495","modified":1650103239870},{"_id":"source/images/algo-learn03Algorithms03Search4.png","hash":"9ef8851ff771b94c1481a63c7829f7318450fe84","modified":1649906219291},{"_id":"source/images/algo-learn03Algorithms02Sorting1.png","hash":"f2d7c3642f26c21502f2bd659ceb168420eadae2","modified":1649870600755},{"_id":"source/images/other01NIVIDIAReflex10.png","hash":"ade2642d1e354eec17b830068baa67f76f4ed4fa","modified":1639303746000},{"_id":"source/images/other01NIVIDIAReflex8.png","hash":"9d74c66ac0976fb1fb991cc772d9fb1bc8726556","modified":1639225754000},{"_id":"source/images/other01NIVIDIAReflex7.jpg","hash":"94476253c9d199bb323feacc90e0e70d6f6b6335","modified":1639225380000},{"_id":"source/images/algo-learn03Algorithms03Search9.png","hash":"f621f1b8b23353b85610439a8510d62b88a89d49","modified":1649987976283},{"_id":"source/images/algo-learn03Algorithms01Foundation2.png","hash":"e486c7a43a4c43a4cce60fabb7ed12d048a2aca3","modified":1649817668028},{"_id":"source/images/algo-learn03Algorithms01Foundation1.png","hash":"8e12be83705a8c5a92bfe8d41a600442199b40dc","modified":1649817475934},{"_id":"source/images/algo-learn03Algorithms03Search6.png","hash":"9bc458077c606be547794a1e83c98b5f9cca2c1e","modified":1649917907348},{"_id":"themes/hexo-theme-next/.gitignore","hash":"087b7677078303acb2acb47432165950e4d29b43","modified":1648376345224},{"_id":"themes/hexo-theme-next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1648376345214},{"_id":"themes/hexo-theme-next/.eslintrc.json","hash":"611e15c3fcb41dc68fa8532ee595a1262a1b5a8a","modified":1648376345214},{"_id":"themes/hexo-theme-next/.gitattributes","hash":"aeeca2f1e987d83232d7870d1435a4e3ed66b648","modified":1648376345214},{"_id":"themes/hexo-theme-next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1648376345234},{"_id":"themes/hexo-theme-next/LICENSE.md","hash":"8cfb03967dd4cbaf3b825271ffce0039aa3fc22a","modified":1648376345224},{"_id":"themes/hexo-theme-next/_vendors.yml","hash":"87ac52adf742be6196a1e0214b2b9dcdd2079bff","modified":1648376345234},{"_id":"themes/hexo-theme-next/package.json","hash":"7d4167385c128f93bf9596620fb2f6858f263bcd","modified":1648376345300},{"_id":"themes/hexo-theme-next/renovate.json","hash":"767b077c7b615e20af3cf865813cd64674a9bea6","modified":1648376345300},{"_id":"themes/hexo-theme-next/README.md","hash":"f0d4d51746c1acd3bd7ea86856747712cd376d63","modified":1648376345224},{"_id":"themes/hexo-theme-next/.githooks/pre-commit","hash":"b69b9d0b51e27d5d4c87c3242f5067c2cda26e44","modified":1648376345214},{"_id":"themes/hexo-theme-next/.stylintrc","hash":"6259e2a0b65d46865ab89564b88fc67638668295","modified":1648376345224},{"_id":"themes/hexo-theme-next/.githooks/install.js","hash":"305c2a269818466eed9e381b866c6cd1ad7f8afd","modified":1648376345214},{"_id":"themes/hexo-theme-next/.github/config.yml","hash":"0956bf71b6f36632b63b14d26580458041a5abd2","modified":1648376345224},{"_id":"themes/hexo-theme-next/.github/PULL_REQUEST_TEMPLATE.md","hash":"a103e2d875f7434191859e5b42075cfa9a4cbcb3","modified":1648376345224},{"_id":"themes/hexo-theme-next/_config.yml","hash":"0b4a5a514cea9bd9d9ab5ea2c28d71d7fa517444","modified":1649918397961},{"_id":"themes/hexo-theme-next/.github/issue_label_bot.yaml","hash":"533fbe6b2f87d7e7ec6949063bb7ea7eb4fbe52d","modified":1648376345224},{"_id":"themes/hexo-theme-next/.github/CODE_OF_CONDUCT.md","hash":"593ae64e72d43c020a697eac65b1f9c3483ff097","modified":1648376345214},{"_id":"themes/hexo-theme-next/.github/release-drafter.yml","hash":"de38f816e3023e0a5c1fd1f3c2b626f78bc35246","modified":1648376345224},{"_id":"themes/hexo-theme-next/.github/labeler.yml","hash":"ff76a903609932a867082b8ccced906e9910533a","modified":1648376345224},{"_id":"themes/hexo-theme-next/.github/CONTRIBUTING.md","hash":"2fdca1040427cabfe27cae6754ec5e027ec7092e","modified":1648376345221},{"_id":"themes/hexo-theme-next/test/index.js","hash":"983a505399796b9d9e174ba46d89abbdde38f8ee","modified":1648376345419},{"_id":"themes/hexo-theme-next/docs/LICENSE.txt","hash":"d1cd5a8e83d3bbdb50f902d2b487813da95ddfd3","modified":1648376345236},{"_id":"themes/hexo-theme-next/.github/label-commenter-config.yml","hash":"a1aa85a2fc66ff0c52c65bd97b0fa282e297a73f","modified":1648376345224},{"_id":"themes/hexo-theme-next/docs/AUTHORS.md","hash":"579014d47f45b27fd1618b9709f0efe9585c7449","modified":1648376345236},{"_id":"themes/hexo-theme-next/layout/archive.njk","hash":"aa491dba8f746e626c273a920effedf7d0b32170","modified":1648376345294},{"_id":"themes/hexo-theme-next/layout/index.njk","hash":"fa52c3049871e879980cb6abccdea3792ca4ce70","modified":1648376345294},{"_id":"themes/hexo-theme-next/layout/post.njk","hash":"707a50e50b90df5fbeaf8407d12895d04163a290","modified":1648376345300},{"_id":"themes/hexo-theme-next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1648376345234},{"_id":"themes/hexo-theme-next/layout/_layout.njk","hash":"2842f3e9fdde5bbd14cac89629221e68d80c8ea1","modified":1648376345254},{"_id":"themes/hexo-theme-next/layout/category.njk","hash":"82f541452cae76a94ee15cb8d8a888f44260a0fd","modified":1648376345294},{"_id":"themes/hexo-theme-next/layout/tag.njk","hash":"b6c017d30d08ddd30d66e9c6f3a71aa65d214eac","modified":1648376345300},{"_id":"themes/hexo-theme-next/layout/page.njk","hash":"fddfdee95f5da86eab8a85d6eb1901996d2153cf","modified":1648376345300},{"_id":"themes/hexo-theme-next/languages/README.md","hash":"b1c96465b3bc139bf5ba6200974b66581d8ff85a","modified":1648376345236},{"_id":"themes/hexo-theme-next/languages/bn.yml","hash":"e78a674af44f19415b9bd91e994548a95be174ae","modified":1648376345236},{"_id":"themes/hexo-theme-next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1648376345236},{"_id":"themes/hexo-theme-next/languages/de.yml","hash":"83023c4246b93a2f89f342afe29a7b9e1185f74f","modified":1648376345236},{"_id":"themes/hexo-theme-next/languages/es.yml","hash":"21676d658d309eb90342a924e106645611c937bc","modified":1648376345244},{"_id":"themes/hexo-theme-next/languages/en.yml","hash":"66445143decfbb5eb7031eb370698e31d5222a7a","modified":1648376345236},{"_id":"themes/hexo-theme-next/languages/ar.yml","hash":"cc7e3e2855348563d746f15c4752b9c63fcdd91a","modified":1648376345236},{"_id":"themes/hexo-theme-next/languages/fr.yml","hash":"328c255c82e9b561e20a9f51a4d84abc63d1b90a","modified":1648376345244},{"_id":"themes/hexo-theme-next/languages/ja.yml","hash":"57a35b21aca04ce8bca64fb5933f35626c462ea3","modified":1648376345244},{"_id":"themes/hexo-theme-next/languages/fa.yml","hash":"e09fad889ab3ae87874093e1acd51edc9297d869","modified":1648376345244},{"_id":"themes/hexo-theme-next/languages/it.yml","hash":"c038ff0cadbe405750d980bcacfd3900acf96905","modified":1648376345244},{"_id":"themes/hexo-theme-next/languages/id.yml","hash":"d7c337ca72efb0bd02ade8b5560c559384ad84dd","modified":1648376345244},{"_id":"themes/hexo-theme-next/languages/pt.yml","hash":"ff93459250c33d3c7ba06c30164cc4208edf9b33","modified":1648376345244},{"_id":"themes/hexo-theme-next/languages/nl.yml","hash":"e47858bd1e0d0622c15366ae6c0513d996f589e3","modified":1648376345244},{"_id":"themes/hexo-theme-next/languages/ru.yml","hash":"837bb39651769244b19ce458053757d429869764","modified":1648376345244},{"_id":"themes/hexo-theme-next/languages/ko.yml","hash":"d6e2add7488065ec4f7d21cfcf7f0eaa877a84f4","modified":1648376345244},{"_id":"themes/hexo-theme-next/languages/pt-BR.yml","hash":"305025e932832328b7e2a8a584638a23c462e68f","modified":1648376345244},{"_id":"themes/hexo-theme-next/languages/uk.yml","hash":"f32871f67c63d26bc4e3e15df9b01f5a41236a50","modified":1648376345252},{"_id":"themes/hexo-theme-next/languages/tk.yml","hash":"bf61562ac892231bd28f23a2a5597ee98fb05aa6","modified":1648376345244},{"_id":"themes/hexo-theme-next/languages/tr.yml","hash":"d3262d2221b0583a52e5d20a3cd1380f5dc49378","modified":1648376345252},{"_id":"themes/hexo-theme-next/languages/si.yml","hash":"c15ed758dbad890e856f4fc281208d7b78cc1a59","modified":1648376345244},{"_id":"themes/hexo-theme-next/languages/vi.yml","hash":"e452ea8c48993262a3e8fce9d92072cafabfc734","modified":1648376345252},{"_id":"themes/hexo-theme-next/languages/zh-HK.yml","hash":"c1ee97ceb56da76ecdc7b69fa975f28c8574441b","modified":1648376345254},{"_id":"themes/hexo-theme-next/languages/zh-CN.yml","hash":"f8379d15038e22ef7039d91272cb4f36842dbbe1","modified":1648376345254},{"_id":"themes/hexo-theme-next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"032194e7975564176f2109aa8b7c020fa6d5e6b1","modified":1648376345221},{"_id":"themes/hexo-theme-next/.github/workflows/label-commenter.yml","hash":"7dec949b13131783e726facb2f4acde0945db1b8","modified":1648376345224},{"_id":"themes/hexo-theme-next/.github/ISSUE_TEMPLATE/config.yml","hash":"daeedc5da2ee74ac31cf71846b766ca6499e9fc6","modified":1648376345221},{"_id":"themes/hexo-theme-next/languages/zh-TW.yml","hash":"70c45076ad722b777956048fcc430eac37844c11","modified":1648376345254},{"_id":"themes/hexo-theme-next/.github/workflows/labeler.yml","hash":"46d0b29dc561fe571d91fd06a7c8ef606b984c72","modified":1648376345224},{"_id":"themes/hexo-theme-next/.github/ISSUE_TEMPLATE/other.md","hash":"618d07b49f4774cd79613d4001984a19d954a6ad","modified":1648376345221},{"_id":"themes/hexo-theme-next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"4a7885fe2c8b25be02ab57c345cd862aeeeeacaf","modified":1648376345221},{"_id":"themes/hexo-theme-next/.github/workflows/linter.yml","hash":"204f009ed04428833e60aad7de9c2982379fa6d7","modified":1648376345224},{"_id":"themes/hexo-theme-next/.github/workflows/release-drafter.yml","hash":"359b74890a47d784e35a5cc3c7885d5cdf302e82","modified":1648376345224},{"_id":"themes/hexo-theme-next/scripts/events/index.js","hash":"e1c366efdab730a7791099115698c97b31b5ff78","modified":1648376345300},{"_id":"themes/hexo-theme-next/.github/workflows/lock.yml","hash":"58eca481fd71088a8ae1dbc04645bcfc03460b87","modified":1648376345224},{"_id":"themes/hexo-theme-next/scripts/filters/default-injects.js","hash":"0c9a1fe9906672724dbf274154a37bac1915ca2c","modified":1648376345304},{"_id":"themes/hexo-theme-next/docs/ru/README.md","hash":"6ed776be76faee1aa7bb29f3070ccb56d9af434d","modified":1648376345236},{"_id":"themes/hexo-theme-next/.github/workflows/tester.yml","hash":"08c50c0c37db1dd2c7baa8f4bbab1144f38ce0bb","modified":1648376345224},{"_id":"themes/hexo-theme-next/scripts/filters/locals.js","hash":"87f3bff03fa9fd96cf0787a6442464a7ff57f76b","modified":1648376345304},{"_id":"themes/hexo-theme-next/scripts/filters/minify.js","hash":"056f9c9f8c6e34b084b4ac69901c9858a072d9ab","modified":1648376345314},{"_id":"themes/hexo-theme-next/scripts/filters/post.js","hash":"5a132b7f9280a40b3d5fb40928c8cbbe071fe6f6","modified":1648376345314},{"_id":"themes/hexo-theme-next/scripts/helpers/next-config.js","hash":"e73f43f1bcb46965e317285d6831e129a40ea59b","modified":1648376345316},{"_id":"themes/hexo-theme-next/scripts/helpers/navigation.js","hash":"82f6e81bacf23d10cac71b09cff8708e47891ef3","modified":1648376345316},{"_id":"themes/hexo-theme-next/scripts/helpers/font.js","hash":"0a6fa582a0890ecaf5f03f758a730936e48aeca1","modified":1648376345316},{"_id":"themes/hexo-theme-next/scripts/helpers/engine.js","hash":"72ccb6e4fbc84bf6732a742468acb7ac305cd1bd","modified":1648376345314},{"_id":"themes/hexo-theme-next/scripts/helpers/next-url.js","hash":"98fc68cf3fcd6253bbb94068ab1d86578a4ef9ea","modified":1648376345316},{"_id":"themes/hexo-theme-next/scripts/helpers/next-vendors.js","hash":"52acbc74c1ead8a77cd3bbcba4e033053683f7d0","modified":1648376345316},{"_id":"themes/hexo-theme-next/scripts/tags/caniuse.js","hash":"8e912c715702addaf0cefe63e580e45b97ae8c3f","modified":1648376345316},{"_id":"themes/hexo-theme-next/scripts/tags/button.js","hash":"86c71c73a63744efbbbb367612871fede0d69529","modified":1648376345316},{"_id":"themes/hexo-theme-next/scripts/tags/center-quote.js","hash":"b4d12e6fe29089be0f43bafc9eea736602cd16bf","modified":1648376345316},{"_id":"themes/hexo-theme-next/scripts/tags/index.js","hash":"255dd1090e8319b557eeca43571f0e4f8aab013b","modified":1648376345316},{"_id":"themes/hexo-theme-next/scripts/tags/label.js","hash":"c18b0e619a779ed40be7f014db92af18f45fbd5c","modified":1648376345316},{"_id":"themes/hexo-theme-next/scripts/tags/link-grid.js","hash":"3f358bb78c5c6fdf45de287f3ead553e3a6a93c2","modified":1648376345324},{"_id":"themes/hexo-theme-next/scripts/tags/note.js","hash":"a12fd53e421400836a3722ae69130969558d6ac0","modified":1648376345324},{"_id":"themes/hexo-theme-next/scripts/tags/group-pictures.js","hash":"1c609312a71d47f838226346aad5c2e1c35f15dd","modified":1648376345316},{"_id":"themes/hexo-theme-next/scripts/tags/tabs.js","hash":"e0ed5fe1bc9d2957952a1aacdf3252d6ef3f9743","modified":1648376345324},{"_id":"themes/hexo-theme-next/scripts/tags/mermaid.js","hash":"b3844e168b51a99d495ca05562ffac47677f5728","modified":1648376345324},{"_id":"themes/hexo-theme-next/scripts/tags/video.js","hash":"f6ad3f52779f0636251238d3cbdc5b6f91cc5aba","modified":1648376345324},{"_id":"themes/hexo-theme-next/scripts/tags/pdf.js","hash":"317ba4611020cc840854386dde098dbbe452777e","modified":1648376345324},{"_id":"themes/hexo-theme-next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7befb4325b107dd668d9eae3d7e86a34910ce3f2","modified":1648376345236},{"_id":"themes/hexo-theme-next/docs/zh-CN/CONTRIBUTING.md","hash":"a09ceb82b45dd8b7da76c227f3d0bb7eebe7d5d1","modified":1648376345236},{"_id":"themes/hexo-theme-next/source/css/noscript.styl","hash":"7dc97674c232f6ca71e48b95e3f66472cd8e9c05","modified":1648376345388},{"_id":"themes/hexo-theme-next/docs/zh-CN/README.md","hash":"da1bc4d36d8f79eca38a0e0afd2d3ea3def3cf03","modified":1648376345236},{"_id":"themes/hexo-theme-next/source/css/_colors.styl","hash":"a88430865c99f47ce1d8240f8895819b8b7b0c06","modified":1648376345324},{"_id":"themes/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1648376345389},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1648376345390},{"_id":"themes/hexo-theme-next/source/css/_mixins.styl","hash":"74cf298800fa560e1521d1875f60b5097a5c3b4d","modified":1648376345364},{"_id":"themes/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1648376345390},{"_id":"themes/hexo-theme-next/source/css/main.styl","hash":"38b8a12681a3a04bed02aa1659054912ed6def11","modified":1648376345387},{"_id":"themes/hexo-theme-next/source/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1648376345392},{"_id":"themes/hexo-theme-next/source/images/avatar.jpg","hash":"c8addcf1e94604e3d2564fd2be0d513699511abe","modified":1648570154058},{"_id":"themes/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1648376345391},{"_id":"themes/hexo-theme-next/source/images/avatar2.jpg","hash":"aa438473e6e40ea5cb7d50cdd10d6fb6ae267a81","modified":1648571373336},{"_id":"themes/hexo-theme-next/source/js/comments-buttons.js","hash":"81ea6cbcdf0357094753d7523919c1eafa38e79f","modified":1648376345393},{"_id":"themes/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1648376345391},{"_id":"themes/hexo-theme-next/source/js/bookmark.js","hash":"1457291a7244b7786ec35b949d97183e4fbd181d","modified":1648376345393},{"_id":"themes/hexo-theme-next/source/js/comments.js","hash":"0b4daf0ce610760bd52e95d423f61f3e1c72442a","modified":1648376345394},{"_id":"themes/hexo-theme-next/source/js/next-boot.js","hash":"b0bdb542a809932182cfbb8772328115142a0b77","modified":1648376345396},{"_id":"themes/hexo-theme-next/source/js/config.js","hash":"211a9ab35205ccfa6b7c74394bade84da0d00af7","modified":1648376345394},{"_id":"themes/hexo-theme-next/source/js/motion.js","hash":"20b979ebe3671cb415e6e7171485d65cc347086e","modified":1648376345395},{"_id":"themes/hexo-theme-next/source/js/pjax.js","hash":"85293c253e0f43540572c4e4615c712325a732e2","modified":1648376345396},{"_id":"themes/hexo-theme-next/test/helpers/index.js","hash":"2fb58dca3df2fe53116ee2b1232fa26ebe7b2ce5","modified":1648376345418},{"_id":"themes/hexo-theme-next/source/js/schedule.js","hash":"4858233224756e3cadfabd8135f7c4b1e3673b44","modified":1648376345397},{"_id":"themes/hexo-theme-next/test/helpers/font.js","hash":"6f5076bd3f2724e47b46ca69028393a9b6275cd1","modified":1648376345417},{"_id":"themes/hexo-theme-next/test/helpers/next-url.js","hash":"08e84781f1cd54e5634b86877ad9cefae4a78e95","modified":1648376345419},{"_id":"themes/hexo-theme-next/test/tags/button.js","hash":"a50ca44eaec3d91c2958e3157d624cd3e68828c7","modified":1648376345420},{"_id":"themes/hexo-theme-next/test/tags/center-quote.js","hash":"2ac4b5a358681691a17e736de06fce0b640a7023","modified":1648376345421},{"_id":"themes/hexo-theme-next/source/js/utils.js","hash":"c13fa66aae52f59f88881738c00ebdcaf0209496","modified":1648376345416},{"_id":"themes/hexo-theme-next/test/tags/caniuse.js","hash":"2852be850d9103c25114253a45e6c62e32517de4","modified":1648376345421},{"_id":"themes/hexo-theme-next/test/tags/group-pictures.js","hash":"8f66d3c6f03fb11d85aa2ab05c9b3c9aa2b4e994","modified":1648376345422},{"_id":"themes/hexo-theme-next/test/tags/index.js","hash":"5cad001936a694bf32d59751cc2b68a66199f976","modified":1648376345422},{"_id":"themes/hexo-theme-next/test/tags/label.js","hash":"6cad7d84c42511459a89cda3971e8ea5cdee0125","modified":1648376345423},{"_id":"themes/hexo-theme-next/test/tags/mermaid.js","hash":"f718a3d0e303d842e2ca5a3b162539a49e45a520","modified":1648376345424},{"_id":"themes/hexo-theme-next/test/tags/link-grid.js","hash":"41730266306c02362258384cd73659223928361f","modified":1648376345423},{"_id":"themes/hexo-theme-next/test/tags/video.js","hash":"88db9a3a26cd35525c43c0339fcd1c5965ec9518","modified":1648376345426},{"_id":"themes/hexo-theme-next/test/tags/pdf.js","hash":"2d114596a8a180b2f3cd2a9c6528a328961f12d4","modified":1648376345425},{"_id":"themes/hexo-theme-next/test/tags/note.js","hash":"161a81ce749e239d2403681372d48ecc1b51d7b9","modified":1648376345424},{"_id":"themes/hexo-theme-next/layout/_partials/footer.njk","hash":"65f0d69084e0e26a0153d3b8db610a15c4102691","modified":1648376345254},{"_id":"themes/hexo-theme-next/layout/_partials/comments.njk","hash":"60f4620dd479da6d86d1d493440e9e2a28b6e132","modified":1648376345254},{"_id":"themes/hexo-theme-next/test/validate/index.js","hash":"560862194991c5963da5a411629d8e6c71d20ee2","modified":1648376345427},{"_id":"themes/hexo-theme-next/test/tags/tabs.js","hash":"b19d2592347eae5d6a7a97ca7e8cec03e8f25b51","modified":1648376345425},{"_id":"themes/hexo-theme-next/layout/_partials/pagination.njk","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1648376345264},{"_id":"themes/hexo-theme-next/layout/_scripts/index.njk","hash":"4eb65641b47ea9b23ed2ddfd69b18f21d7d8f214","modified":1648376345274},{"_id":"themes/hexo-theme-next/layout/_partials/languages.njk","hash":"537026fc120adeef9148c98ebf074207e3810538","modified":1648376345264},{"_id":"themes/hexo-theme-next/layout/_partials/widgets.njk","hash":"967594ee64805e27b7ff9d957e23ab3f5c948600","modified":1648376345274},{"_id":"themes/hexo-theme-next/layout/_scripts/vendors.njk","hash":"0a1470440f11362df2b1cd6b6228e273d9f999d6","modified":1648376345274},{"_id":"themes/hexo-theme-next/layout/_macro/post-collapse.njk","hash":"d9d8e6d7a6a8c80009dd5334cc17fd3e4977a008","modified":1648376345254},{"_id":"themes/hexo-theme-next/layout/_third-party/fancybox.njk","hash":"53ad3c31762b74e5d29787b37d5e494cc4fded9b","modified":1648376345284},{"_id":"themes/hexo-theme-next/layout/_third-party/index.njk","hash":"33a4a3275474bd3bb2e8d1b0ea01b42dda9ea608","modified":1648376345284},{"_id":"themes/hexo-theme-next/scripts/events/lib/config.js","hash":"f78cd74b25cc0ef65c060fec1d7e056967e26b4b","modified":1648376345304},{"_id":"themes/hexo-theme-next/layout/_third-party/quicklink.njk","hash":"73bc15a9c3c5c239ab90efa19a1e721f41f3cb93","modified":1648376345284},{"_id":"themes/hexo-theme-next/layout/_third-party/rating.njk","hash":"d0444179fec512760ab1d4f76928d795b971c884","modified":1648376345284},{"_id":"themes/hexo-theme-next/scripts/events/lib/highlight.js","hash":"00cec6980cafd417def885f496371856cd524a25","modified":1648376345304},{"_id":"themes/hexo-theme-next/scripts/events/lib/navigation.js","hash":"0a2df7d40d64c61ce7e730bb8269b848b03526d1","modified":1648376345304},{"_id":"themes/hexo-theme-next/scripts/events/lib/injects.js","hash":"1f1ea7b579a49f17574c31d78d663c54896133eb","modified":1648376345304},{"_id":"themes/hexo-theme-next/scripts/events/lib/vendors.js","hash":"2ee5838df9948fa279697644a7383b861a2a4465","modified":1648376345304},{"_id":"themes/hexo-theme-next/scripts/events/lib/utils.js","hash":"65825c37e473c942095df05183424003d7263df5","modified":1648376345304},{"_id":"themes/hexo-theme-next/scripts/filters/comment/common.js","hash":"550cc7f57bc3ab3d093e34741e7860222851d4d4","modified":1648376345304},{"_id":"themes/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"17fbc99521440a5d6c32ac991ba2038a12f86b31","modified":1648376345304},{"_id":"themes/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"3283bdd6e5ac7d10376df8ddd5faaec5dc1bd667","modified":1648376345304},{"_id":"themes/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"1cb58aa6b88f7461c3c3f9605273686adcc30979","modified":1648376345304},{"_id":"themes/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"70eb507ef7f1a4fc3ca71a3814cc57afe7f3f60c","modified":1648376345304},{"_id":"themes/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"96e58efba0dc76af409cc7d2db225f0fe4526ea8","modified":1648376345304},{"_id":"themes/hexo-theme-next/scripts/filters/comment/livere.js","hash":"bb8ebb541c40362c0cbbd8e83d3b777302bb6c40","modified":1648376345304},{"_id":"themes/hexo-theme-next/scripts/filters/comment/isso.js","hash":"c22cbccd7d514947e084eeac6a3af1aa41ec857a","modified":1648376345304},{"_id":"themes/hexo-theme-next/scripts/filters/comment/utterances.js","hash":"a50718c081685fd35ff8ea9ca13682c284399ed8","modified":1648376345304},{"_id":"themes/hexo-theme-next/layout/_macro/sidebar.njk","hash":"eec74e135d01948361020140c3798769e1e7363b","modified":1648376345254},{"_id":"themes/hexo-theme-next/layout/_third-party/pace.njk","hash":"13b2a77b4858a127f458ea092b6f713b052befac","modified":1648376345284},{"_id":"themes/hexo-theme-next/layout/_macro/post.njk","hash":"c8e94f5b8ff1ee7b5abaa01f9bbda13e23315d68","modified":1648398209603},{"_id":"themes/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"c4537fa2de33d98baff2c87a73801770414e0b69","modified":1648376345380},{"_id":"themes/hexo-theme-next/source/css/_variables/Mist.styl","hash":"ee5024be8e39605f0c6d71db038e15e0693d0f41","modified":1648376345380},{"_id":"themes/hexo-theme-next/source/css/_variables/Muse.styl","hash":"d3a8f6e71c86926d0c2a247a31d7446d829736d5","modified":1648376345380},{"_id":"themes/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"58014a2d087c4126058a99b5b1cb7d8a2eb6224d","modified":1648376345380},{"_id":"themes/hexo-theme-next/source/css/_variables/base.styl","hash":"0876b50a58f114bc0b7982b85c5e5011730253b8","modified":1648376345386},{"_id":"themes/hexo-theme-next/source/images/favicon3/browserconfig.xml","hash":"974aea18bda5a95802c06b80126ab1d96d91d708","modified":1648355726000},{"_id":"themes/hexo-theme-next/source/images/favicon3/apple-touch-icon.png","hash":"608ff8af4a62b9e7e2a2e6c6274f7aa1e4aefffa","modified":1648355726000},{"_id":"themes/hexo-theme-next/source/images/favicon3/android-chrome-192x192.png","hash":"83885b61b8e051530b2b8c72096fdab200ea630f","modified":1648355726000},{"_id":"themes/hexo-theme-next/source/images/favicon3/favicon-32x32.png","hash":"f980c1c5d2cef0fcc152d411e8f042c09b9cb624","modified":1648355727000},{"_id":"themes/hexo-theme-next/source/images/favicon3/android-chrome-384x384.png","hash":"c348dbb90bbb400293d14a417ac36f5d771d0f24","modified":1648355726000},{"_id":"themes/hexo-theme-next/source/images/favicon3/favicon.ico","hash":"8d524bc0d9be53c3223b3aa9836821b8db081233","modified":1648355728000},{"_id":"themes/hexo-theme-next/source/images/favicon3/favicon-16x16.png","hash":"a7ee7b9319a3314dbec09634ae0d5b21609cca24","modified":1648355727000},{"_id":"themes/hexo-theme-next/source/images/favicon3/mstile-150x150.png","hash":"5deec6902a5681b0091cd92f4b3ca829f832c9a8","modified":1648355728000},{"_id":"themes/hexo-theme-next/source/images/favicon3/safari-pinned-tab.svg","hash":"c242db88eaa3ba4ffcadcf64f93676151029fd71","modified":1648355728000},{"_id":"themes/hexo-theme-next/source/images/favicon3/site.webmanifest","hash":"e1723dd9813b4f2df2da91f834ff644578649cc1","modified":1648355728000},{"_id":"themes/hexo-theme-next/source/js/third-party/fancybox.js","hash":"8a847a7bbdbc0086dd1de12b82107a854b43f5e5","modified":1648376345407},{"_id":"themes/hexo-theme-next/source/js/third-party/pace.js","hash":"0ebee77b2307bf4b260afb06c060171ef42b7141","modified":1648376345409},{"_id":"themes/hexo-theme-next/source/js/third-party/quicklink.js","hash":"5b0197e061f57e00875be3636ba372a67693abe0","modified":1648376345410},{"_id":"themes/hexo-theme-next/source/js/schemes/muse.js","hash":"e1b4bf9aa47d14c790a0920d7dbb3e9812d4358b","modified":1648376345398},{"_id":"themes/hexo-theme-next/layout/_partials/head/head-unique.njk","hash":"fd75652957c1c3668874fdfd16f4f56027be0d8b","modified":1648376345254},{"_id":"themes/hexo-theme-next/source/js/third-party/rating.js","hash":"a1f44247c18ac00ee3e0026560398429e4c77dd7","modified":1648376345411},{"_id":"themes/hexo-theme-next/layout/_partials/header/index.njk","hash":"1b2ae17f3c394ce310fe2d9ed5f4d07d8cc74ae7","modified":1648376345254},{"_id":"themes/hexo-theme-next/layout/_partials/header/brand.njk","hash":"8e08c19e1bd92f3179907b0ff3743d6e2371d7ae","modified":1648376345254},{"_id":"themes/hexo-theme-next/layout/_partials/head/head.njk","hash":"3ff7e251bf99a275cd5dfda1b3e51f773c5f7b05","modified":1648376345254},{"_id":"themes/hexo-theme-next/layout/_partials/header/menu-item.njk","hash":"62513f08e9e7f4abeaeedca91fd0af0861a2540f","modified":1648376345254},{"_id":"themes/hexo-theme-next/layout/_partials/header/menu.njk","hash":"828700af2a2f273d3e3e0554ffc60706d889d539","modified":1648376345254},{"_id":"themes/hexo-theme-next/layout/_partials/page/breadcrumb.njk","hash":"1fe44a1e156cd30e3e9fd8313e1011ad30970f83","modified":1648376345264},{"_id":"themes/hexo-theme-next/layout/_partials/page/page-header.njk","hash":"92553feb26f30f7fc9147bc4ef122908a9da06be","modified":1648376345264},{"_id":"themes/hexo-theme-next/layout/_partials/header/sub-menu.njk","hash":"20cb9c39bcdcfa3f710df7bc5838d6e62d4dd674","modified":1648376345264},{"_id":"themes/hexo-theme-next/layout/_partials/page/categories.njk","hash":"b352346dd2cb42f7eeaec5e39d9a2a353b029775","modified":1648376345264},{"_id":"themes/hexo-theme-next/layout/_partials/page/schedule.njk","hash":"6ec9c97e91c793cc2eb5ac0f7c3c36fdaaf637d1","modified":1648376345264},{"_id":"themes/hexo-theme-next/layout/_partials/page/tags.njk","hash":"752df7d12360a077c51a25609916a3ecc1763bb3","modified":1648376345264},{"_id":"themes/hexo-theme-next/layout/_partials/post/post-followme.njk","hash":"ebf83083856f8bd81ad47ffb985d44e338b4e6bb","modified":1648376345268},{"_id":"themes/hexo-theme-next/layout/_partials/post/post-copyright.njk","hash":"0ebc0142abebbeef4278e32abb543c7d7fa75d88","modified":1648376345268},{"_id":"themes/hexo-theme-next/layout/_partials/post/post-related.njk","hash":"17e03b61e20a5cb4195f0e0d75261ce61a1cddc4","modified":1648376345268},{"_id":"themes/hexo-theme-next/layout/_partials/post/post-footer.njk","hash":"e3502059bcc443ce932946a9891fcbe8b2bb362d","modified":1648376345268},{"_id":"themes/hexo-theme-next/layout/_partials/post/post-reward.njk","hash":"58b3f657a47bae406e5fcf19cd5e42680785ac71","modified":1648376345268},{"_id":"themes/hexo-theme-next/layout/_partials/post/post-meta.njk","hash":"9a9c4fb7e7c4fe4b7d474bdfdb4ed2b0a5423df2","modified":1648376345268},{"_id":"themes/hexo-theme-next/layout/_partials/search/algolia-search.njk","hash":"93fbb449fbd599cb4315d7eb0daeb239811b233f","modified":1648376345268},{"_id":"themes/hexo-theme-next/layout/_partials/search/localsearch.njk","hash":"f73d25a8ccfdd5d4ca2953dc434ff8ce36034c57","modified":1648376345274},{"_id":"themes/hexo-theme-next/layout/_partials/search/index.njk","hash":"9766852e72c1809d8c1eea71ac6116b4cc0886d2","modified":1648376345268},{"_id":"themes/hexo-theme-next/layout/_partials/sidebar/site-overview.njk","hash":"c5c38b4fb137cc799a6ec31f391d1efc12234c8c","modified":1648376345274},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.njk","hash":"3e80332f88b101141be69f2a07f54ed8c053eabb","modified":1648376345274},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/cloudflare.njk","hash":"c7cea42f6db2137c11ca1d83e43fcb7ad7ccfb89","modified":1648376345274},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/index.njk","hash":"eef710e9be20e7fed7573d0824feaa4eb1cf2737","modified":1648376345274},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/google-analytics.njk","hash":"52ad137450f7b3d6a330e16b3ed1c6174290f0eb","modified":1648376345274},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/growingio.njk","hash":"9ff9ec05c2037beea229a6bb698f9e3546973220","modified":1648376345274},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/changyan.njk","hash":"5f7967bd946060f4102263a552ddfbae9975e7ea","modified":1648376345284},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/disqusjs.njk","hash":"c5086b4c35f730f82c99c4a8317f2f153ebde869","modified":1648376345284},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/disqus.njk","hash":"b0828dd1b1fd66ecd612d9e886a08e7579e9a4f7","modified":1648376345284},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"24719266662fcff63e88a21ee9b5b284abb8b37c","modified":1648376345274},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/gitalk.njk","hash":"6fd4df5c21cfe530dbb0c012bc0b202f2c362b9c","modified":1648376345284},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/isso.njk","hash":"38badcc7624a13961381c2465478056b9602aee5","modified":1648376345284},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/livere.njk","hash":"b8e0d5de584cece5e05b03db5b86145aa1e422b4","modified":1648376345284},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/utterances.njk","hash":"a7921be7328e1509d33b435175f5333a9aada66f","modified":1648376345284},{"_id":"themes/hexo-theme-next/layout/_third-party/chat/tidio.njk","hash":"3fbc72427c1211e5dcfd269af1a74852a7ba5c1a","modified":1648376345274},{"_id":"themes/hexo-theme-next/layout/_third-party/chat/gitter.njk","hash":"375a86f0b19e130cfa7707007e3a53d9ae7c9b64","modified":1648376345274},{"_id":"themes/hexo-theme-next/layout/_third-party/chat/chatra.njk","hash":"09d2c9487d75894d45a823e3237ae9f90fd6ee01","modified":1648376345274},{"_id":"themes/hexo-theme-next/layout/_third-party/math/katex.njk","hash":"a84db8bc8804335f95609a221ac1746433dcdc89","modified":1648376345284},{"_id":"themes/hexo-theme-next/layout/_third-party/math/index.njk","hash":"1856c4b035c5b8e64300a11af0461b519dfc4cf4","modified":1648376345284},{"_id":"themes/hexo-theme-next/layout/_third-party/math/mathjax.njk","hash":"a62aa1ed4e35b8d0451d83f341bf0a97538bc9a4","modified":1648376345284},{"_id":"themes/hexo-theme-next/layout/_third-party/search/algolia-search.njk","hash":"67f67a77f27103177b9940446f43610229536d82","modified":1648376345284},{"_id":"themes/hexo-theme-next/layout/_third-party/statistics/firestore.njk","hash":"af5336e8bbdc4638435971da115bb7443d374ade","modified":1648376345294},{"_id":"themes/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"d97790e4b442a1e3ded7d7b4f84b8ee6cdb6e8ea","modified":1648376345294},{"_id":"themes/hexo-theme-next/layout/_third-party/search/localsearch.njk","hash":"210c32b654adae3d8076c4417d370b42af258cea","modified":1648376345294},{"_id":"themes/hexo-theme-next/layout/_third-party/tags/mermaid.njk","hash":"dd8f963acd5a3685be46fd5319c06df0308d99b2","modified":1648376345294},{"_id":"themes/hexo-theme-next/layout/_third-party/statistics/index.njk","hash":"866ffa15a3250678eb8a90aa6f609fa965db90fd","modified":1648376345294},{"_id":"themes/hexo-theme-next/layout/_third-party/statistics/lean-analytics.njk","hash":"8703d1855bb8d251c9b7c2940b7e3be525e53000","modified":1648376345294},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"2bbf9046ef2a8f99ef3668bbb8be4e52e9d97bb7","modified":1648376345324},{"_id":"themes/hexo-theme-next/layout/_third-party/tags/pdf.njk","hash":"0386c708975cc5faea4f782611c5d2c6b8ac2850","modified":1648376345294},{"_id":"themes/hexo-theme-next/source/css/_common/components/index.styl","hash":"991c1f80995cec418dc00d3d6b13e2d911ac9894","modified":1648376345324},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"1239f1b432a6932b2bb9ebcfbaabf724b8f4e59a","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"f3defd56be33dba4866a695396d96c767ce63182","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"cf8446f4378dcab27b55ede1635c608ae6b8a5c8","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"f768ecb2fe3e9384777c1c115cd7409e9155edd7","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/index.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"34416a5792d0235caa8c0c7e59725f2df0fa614c","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_common/outline/index.styl","hash":"7782dfae7a0f8cd61b936fa8ac980440a7bbd3bb","modified":1648376345348},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"b9388016f8d9274703e77e306a1feaad1b7b9d6c","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"f51b6a4f06359ed56b2d10caa6f15362d3b3751d","modified":1648376345364},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"90f7d3baab061e860172b536c9edc38c7fd2ef5c","modified":1648376345364},{"_id":"themes/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"2db4462e9cb87b8aef3f50f850fed407de16da3e","modified":1648376345348},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"4a454bcadd9de7d73172abd3276943e8626657be","modified":1648376345364},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"82311a531e26ca5a6ad17cf14959da75d4ac6106","modified":1648376345364},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"00366a6bd1a66f99f845c5ebfc9e8cf56651b815","modified":1648376345364},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"fd89988442f380cba907752fe3f608e3498f8c93","modified":1648376345374},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"018b6a761e197086174c9f06b4d5ea21cc230951","modified":1648376345374},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"b1054313ca9419e76fea0451417c881616f50a38","modified":1648376345364},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"89bf3f6b82cb0fafbbd483431df8f450857c5a0b","modified":1648376345364},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"ec5d4e8ffe74722a092a69ace2f8dec7776466a8","modified":1648376345374},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1648376345374},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1648376345374},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"134272cb8096156c9e32fbbe085394633c7509cd","modified":1648376345374},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"9b2cba0c9aa5a64957294f7548c199db1f63f0f4","modified":1648376345374},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"1d29eca70fa686d895f8e98a283e4a159e40905a","modified":1648376345374},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"42bf453def88da82c842dca84e8f47087091f08e","modified":1648376345380},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"9f60d501808f67d151af437221d0dfacc27c180c","modified":1648376345374},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"7905f428b46d100ac5928875cb1e2b99fa86fc0b","modified":1648376345380},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5c3dd08c520a16ee49f85fa12b4935e725ef261","modified":1648376345380},{"_id":"themes/hexo-theme-next/source/js/third-party/analytics/growingio.js","hash":"f755e8537ccbbb0bd84c26923f320d4e206e7428","modified":1648376345400},{"_id":"themes/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","hash":"f9579a02599de063ccff336177ba964a2931a6e9","modified":1648376345399},{"_id":"themes/hexo-theme-next/source/js/third-party/chat/gitter.js","hash":"14b024c920a8b359777d79dd8e1a849387f8f3ad","modified":1648376345402},{"_id":"themes/hexo-theme-next/source/js/third-party/chat/chatra.js","hash":"72e0766752b78a723fb30e92d533a8b353104e2d","modified":1648376345401},{"_id":"themes/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","hash":"d77d4934d959e7125128754b568f1d041c3fbfff","modified":1648376345400},{"_id":"themes/hexo-theme-next/source/js/third-party/comments/disqus.js","hash":"5460de247c038d6cfbe774d7f8747f0a958d9017","modified":1648376345404},{"_id":"themes/hexo-theme-next/source/js/third-party/chat/tidio.js","hash":"77c231bcd64f1c09bd9989909e9fee703b65f47f","modified":1648376345402},{"_id":"themes/hexo-theme-next/source/js/third-party/comments/changyan.js","hash":"b4cb06fdf531292e2361398a98d75a4ca2b8473a","modified":1648376345403},{"_id":"themes/hexo-theme-next/source/js/third-party/comments/disqusjs.js","hash":"1c282d6c2151346d1f0aa95055d17abe77054ec9","modified":1648376345405},{"_id":"themes/hexo-theme-next/source/js/third-party/comments/gitalk.js","hash":"1e8509356fb027d948d118ab220d9631f4d482fa","modified":1648376345405},{"_id":"themes/hexo-theme-next/source/js/third-party/comments/isso.js","hash":"b9b9fd2f0e098a123b34a4932da912a9485ffe6c","modified":1648376345406},{"_id":"themes/hexo-theme-next/source/js/third-party/comments/livere.js","hash":"68892d74ef5fc308c6e7e6b4f190826d79f3055d","modified":1648376345406},{"_id":"themes/hexo-theme-next/source/js/third-party/comments/utterances.js","hash":"ec44d7f1c8b51b0aa3cccba099a78f3575ac828c","modified":1648376345407},{"_id":"themes/hexo-theme-next/source/js/third-party/math/katex.js","hash":"5c63ec71458b4fe0cd98fd4a04e11c3746764f11","modified":1648376345408},{"_id":"themes/hexo-theme-next/source/js/third-party/search/algolia-search.js","hash":"b27320fcbf5044d0fcb76a6d43593221954525da","modified":1648376345412},{"_id":"themes/hexo-theme-next/source/js/third-party/math/mathjax.js","hash":"d93556184b2c0aa1dbc4a6fb892d2f77b80d7d9f","modified":1648376345409},{"_id":"themes/hexo-theme-next/source/js/third-party/statistics/firestore.js","hash":"3272f3373fa7c3910852124bc5e43e90e3470ff8","modified":1648376345413},{"_id":"themes/hexo-theme-next/source/js/third-party/search/local-search.js","hash":"dc2b0e89aa32afc7f7a7e2d7a277dadb7f96e06d","modified":1648376345412},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/index.styl","hash":"df2fbd0ada00f37439b0de965c6f1c29d3c97429","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/js/third-party/tags/pdf.js","hash":"e109c2d6828f527f0289d5fa3bb02fce63ee6d93","modified":1648376345415},{"_id":"themes/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","hash":"6abdc209f4503d4efd676e18bc30ddea813b6ff9","modified":1648376345413},{"_id":"themes/hexo-theme-next/source/js/third-party/tags/mermaid.js","hash":"e9fffe2a14751e86aed5e84a5e96514413eac2dc","modified":1648376345414},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-followme.styl","hash":"791bc9befb0d4d06e3e517eccfe0bc3551a02a60","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-body.styl","hash":"7a34d020877273dcf11c25fa481409300efb8659","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-footer.styl","hash":"e53a5eb1d1771e284044bdb0bc0ed2de27923669","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"eebe3013a9a976011570dce2d04dfeae4c31d790","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"c34936a17c3d8af6c0988ac6746d7509dc0b50eb","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"69dff7cf231d01f85671758455726dd666664a73","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"fde10ce94e9ae21a03b60d41d532835b54abdcb1","modified":1648376345324},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"4d29b6ae7ed3dc44b10df851a4128b6441efa8be","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"80595d274f593b321c0b644a06f3165fe07b16f5","modified":1648376345324},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"9043d9bc2db35ca000c79258ef89fdb161dc43fb","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"0a779f955a0e25df0852e0731517dadb234aa181","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"091b8c763e43447d087c122a86538f290f83136a","modified":1648376345332},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/index.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1648376345332},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"56d719bcdcba3d725141c55bbd4b168f3942f912","modified":1648376345332},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/highlight/index.styl","hash":"ee05c1d00bc38397bd320128bbe15d05d9100039","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"a4003e1408844568cb5102a5a111046cb19b2d31","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/disqusjs.styl","hash":"c1e9edbfd1c3696b35d5452ae2e6d766f3fe91aa","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"fb165c1a0d990c5cf98b87773e0dc50410229b96","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/gitter.styl","hash":"7b36f776c41fbb744572c5de2c8d49b35656ec21","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/index.styl","hash":"0c4c5e39f8ac12febaa0f4ff7265151e139edad8","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/related-posts.styl","hash":"0527153aa821bdbdb84c7b47f60e3cefd95a742f","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"6b3680e0dbea8e14c1cec24ef63b7fae5e37f7ef","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"1e5776ad4c5c8bcf7596ac74dcabc30704b3f5a0","modified":1648376345334},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/utterances.styl","hash":"d28856f365a9373c4ae6fe1e5673d63df2dfd65f","modified":1648376345344},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tags/index.styl","hash":"e22fde6f1657d311d46f64d868c4491d535c8caa","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"8d9218980e185210ce034e9769ab639b9630fd88","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"531daf2612c6217950677a2d03924459ce57c291","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"49c26184580fde8a732899a4de5aae8662e289b8","modified":1648376345344},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7075dd32dd70da1e161e4bd14b46f1e8be62fa3c","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"2e9dc3b3546e19e9de18050ad04b1741841116bc","modified":1648376345364},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"77122986509a6b4968bae2729417b7016137534c","modified":1648376345364},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f71b2022094c5bc8c74b4ed049639f7262e0b182","modified":1648376345364},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"c7754dc6c866928b538f0863a05b96ec44b5e986","modified":1648376345364},{"_id":"themes/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"c8648c8ea3105556be0068d9fb2735261d0d94bc","modified":1648376345344},{"_id":"themes/hexo-theme-next/source/css/_common/outline/footer/index.styl","hash":"02b6d1a53f7a02c6b0929b11f3ab904b5b873a0e","modified":1648376345344},{"_id":"themes/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"05af22f3edc2383a3d97ec4c05e9ac43b014bead","modified":1648376345348},{"_id":"themes/hexo-theme-next/source/css/_common/outline/header/index.styl","hash":"67fc7a1eb59c8451eec34e572cbb2fd1424757bc","modified":1648376345348},{"_id":"themes/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"86b0925e968f35bbc76b473a861e8f9797f7580e","modified":1648376345348},{"_id":"themes/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"2db695204d39e4c7daa7b91585a0ea4b06b49f11","modified":1648376345348},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2c2bfbc34b6f19d262ae7c041474985e12f4f4ad","modified":1648376345348},{"_id":"themes/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"d9bc2b520636b9df7f946295cd430593df4118ff","modified":1648376345348},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/index.styl","hash":"9964a96f9a647cfb16b97679eced79d07e084e6d","modified":1648376345348},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"1c324d56ae83e96db2c4c6d63edd7ee51c936fc1","modified":1648376345348},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"d8a028f532d562e6a86bb3b9c7b992e4b6dbbb51","modified":1648376345348},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"57ed6770535ecb2e6485a0c87d4de6d6476368b9","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"63d8f5f169c2b1c969928fc79244c5fe89ee484e","modified":1648376345348},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"081345490271840855d1238b969dbf2e0a2bba8f","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"db4f3263b2b6551dd56bfdf33cceaf81661a3611","modified":1648376345354},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"6681ffe283f8a7e3c86310ef4f6ca1e499c1a19f","modified":1648376345354},{"_id":"source/files/HDFSAndP2PFileDistriSys.pdf","hash":"fd9638cc6ae01b6d5ceeb30948f6ff0581c8bdcf","modified":1641074664000},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"2de038def2cb91da143b14696366c14a66e0e569","modified":1648376345354},{"_id":"source/files/DFSOtherExamples.pdf","hash":"c3f59e9c72174c18d9bb6b0b03d44067aa2909d9","modified":1650005358298},{"_id":"source/images/other01NIVIDIAReflex3.png","hash":"77b3538f98d4adcb355d7476e961d3167d19dc17","modified":1639187702000},{"_id":"source/images/other01NIVIDIAReflex1.png","hash":"625c6ff233a7cb69dd7b81bcdedd1bc364f05337","modified":1639183920000},{"_id":"source/files/ComputerSecurity.pdf","hash":"e6eb372ac0b2ed21a2fceff79502f9be9d062c01","modified":1642497896000},{"_id":"source/files/RedBlackSearchTreeDel.pdf","hash":"dc0317ebce2e5b9d1b4c04f0e3555155519f83bf","modified":1649926060754},{"_id":"source/files/RedBlackSearchTree.pdf","hash":"bbc6be9a9b2cb5ec6c268bb8e6e1fed9260a15eb","modified":1649921098722},{"_id":"source/files/TwoTreeSearchTree.pdf","hash":"46fc15ecc99d75f331859c8e73be9b9fe41524c3","modified":1649918756207},{"_id":"source/files/DijkstraAlgoOfShortest.pdf","hash":"fd35f8bcd71df503f5dc6c51e1415c876814075a","modified":1650095018425},{"_id":"public/plugins/google-code-prettify/lang-aea.js","hash":"6a795a6049869e05b98fe851e72094276d3ae613","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-Splus.js","hash":"cf0eb1b7e60d2b5704901965578eeb8333196ff3","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-apollo.js","hash":"6a795a6049869e05b98fe851e72094276d3ae613","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-agc.js","hash":"6a795a6049869e05b98fe851e72094276d3ae613","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-cbm.js","hash":"efeefe1f0d1f20b66d2cb0635b8f0c7fcfe7ff0a","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-basic.js","hash":"efeefe1f0d1f20b66d2cb0635b8f0c7fcfe7ff0a","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-cl.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-clj.js","hash":"a2c893fc1b79d9c3aed59e22bcf3769bb5563b5c","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-dart.js","hash":"be57991fbb09bd187be3cb0218bd5e9c997eea5b","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-css.js","hash":"22160ffbcd219c018c3dbef745da29cc334c6e8c","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-el.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-erl.js","hash":"d3ba7d0376ff6f95f5785341653c24166d4ef8e4","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-erlang.js","hash":"d3ba7d0376ff6f95f5785341653c24166d4ef8e4","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-fs.js","hash":"fe6b2569654df7a1861bb2518a2ac443603d471f","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-exs.js","hash":"2bb479f04b548bfc183940a7ddd8c3a0a1afa4ff","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-ex.js","hash":"2bb479f04b548bfc183940a7ddd8c3a0a1afa4ff","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-go.js","hash":"640ffa4b3f9c5aee9414962645b9a7f0f49dd555","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-hs.js","hash":"3158902af4476578fc61eb9e47c679e663a77342","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-lassoscript.js","hash":"60ba20b8b45ae3bdc1cf86f3b33b61d3859e3706","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-kotlin.js","hash":"17877c550364c4e65c013d815da614291051c55a","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-lasso.js","hash":"60ba20b8b45ae3bdc1cf86f3b33b61d3859e3706","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-latex.js","hash":"57371d546cb8e1c105985a59ed135a1b97944d17","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-lgt.js","hash":"a8ca762427547d5968153b6afe1e3ee02520886a","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-lisp.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-llvm.js","hash":"91b28e339c9b32bfe61fc6ae6eba166936ee38fb","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-ll.js","hash":"91b28e339c9b32bfe61fc6ae6eba166936ee38fb","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-ls.js","hash":"60ba20b8b45ae3bdc1cf86f3b33b61d3859e3706","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-logtalk.js","hash":"a8ca762427547d5968153b6afe1e3ee02520886a","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-lsp.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-lua.js","hash":"60a3dccac2fe79b0e1c38dec6be79a6ae51883fa","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-matlab.js","hash":"94c8fd7c44194dd3b1a444a3fc7c2b7fd09d9d6a","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-ml.js","hash":"fe6b2569654df7a1861bb2518a2ac443603d471f","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-mumps.js","hash":"a6002126b8dfc84a167040a024aad9b6b4e406ee","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-n.js","hash":"65e144772759352d3b8c612219d5d817735cc7a0","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-nemerle.js","hash":"65e144772759352d3b8c612219d5d817735cc7a0","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-pascal.js","hash":"6630a2845b3a0951cbd4b2b8f69d538e0845a53e","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-proto.js","hash":"76ab0965b0e47de76cb5293ceafc7e5ca1588380","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-r.js","hash":"cf0eb1b7e60d2b5704901965578eeb8333196ff3","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-rd.js","hash":"f2c5bbaca8b6a00737dbdd30d26ea84a0c9db9bc","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-rust.js","hash":"daa26f076cddc6640685b9e8bff7e1e76d1c70f0","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-s.js","hash":"cf0eb1b7e60d2b5704901965578eeb8333196ff3","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-rkt.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-scala.js","hash":"cf07e43b333938964236f455826c335fc806aaa5","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-scm.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-sql.js","hash":"483cc0f4bd0773f6e7377f48b7a028d83790dd1b","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-ss.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-swift.js","hash":"e86ce3125d09494db6384123ba462fd2035bc0b9","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-tcl.js","hash":"38c918e9a43c8975074302305b8b8e5f30d513dc","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-tex.js","hash":"57371d546cb8e1c105985a59ed135a1b97944d17","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-vb.js","hash":"1f5344a5051aa3800193b8031dab4acbe3e341cb","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-vhd.js","hash":"09c27f0ced7244e8ece3ab043bf8aa3028cc2927","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-vbs.js","hash":"1f5344a5051aa3800193b8031dab4acbe3e341cb","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-wiki.js","hash":"c4090580e86c5040709e6b8fd63b661f978149a6","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-vhdl.js","hash":"09c27f0ced7244e8ece3ab043bf8aa3028cc2927","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-xq.js","hash":"52c4ad346f115881a250652f1d98f35826f4f239","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-xquery.js","hash":"52c4ad346f115881a250652f1d98f35826f4f239","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-yml.js","hash":"5aaea285d2e08556c0a754d637d912ed82734d8e","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/prettify.css","hash":"dc032dcd1ee5fff6a03959a962cc7dda4410c822","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/lang-yaml.js","hash":"5aaea285d2e08556c0a754d637d912ed82734d8e","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/prettify.js","hash":"38a0e547b123d32c9e61ae87b797b3b2f7929b7a","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/run_prettify.js","hash":"4f2ae0678e8257fe5444b50692eaa68321851646","modified":1650150815578},{"_id":"public/plugins/prettify/lang-Splus.js","hash":"cf0eb1b7e60d2b5704901965578eeb8333196ff3","modified":1650150815578},{"_id":"public/plugins/prettify/lang-agc.js","hash":"6a795a6049869e05b98fe851e72094276d3ae613","modified":1650150815578},{"_id":"public/plugins/prettify/lang-apollo.js","hash":"6a795a6049869e05b98fe851e72094276d3ae613","modified":1650150815578},{"_id":"public/plugins/prettify/lang-aea.js","hash":"6a795a6049869e05b98fe851e72094276d3ae613","modified":1650150815578},{"_id":"public/plugins/prettify/lang-basic.js","hash":"efeefe1f0d1f20b66d2cb0635b8f0c7fcfe7ff0a","modified":1650150815578},{"_id":"public/plugins/prettify/lang-cl.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1650150815578},{"_id":"public/plugins/prettify/lang-clj.js","hash":"a2c893fc1b79d9c3aed59e22bcf3769bb5563b5c","modified":1650150815578},{"_id":"public/plugins/prettify/lang-cbm.js","hash":"efeefe1f0d1f20b66d2cb0635b8f0c7fcfe7ff0a","modified":1650150815578},{"_id":"public/plugins/prettify/lang-css.js","hash":"22160ffbcd219c018c3dbef745da29cc334c6e8c","modified":1650150815578},{"_id":"public/plugins/prettify/lang-dart.js","hash":"be57991fbb09bd187be3cb0218bd5e9c997eea5b","modified":1650150815578},{"_id":"public/plugins/prettify/lang-erl.js","hash":"d3ba7d0376ff6f95f5785341653c24166d4ef8e4","modified":1650150815578},{"_id":"public/plugins/prettify/lang-el.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1650150815578},{"_id":"public/plugins/prettify/lang-erlang.js","hash":"d3ba7d0376ff6f95f5785341653c24166d4ef8e4","modified":1650150815578},{"_id":"public/plugins/prettify/lang-ex.js","hash":"2bb479f04b548bfc183940a7ddd8c3a0a1afa4ff","modified":1650150815578},{"_id":"public/plugins/prettify/lang-fs.js","hash":"fe6b2569654df7a1861bb2518a2ac443603d471f","modified":1650150815578},{"_id":"public/plugins/prettify/lang-exs.js","hash":"2bb479f04b548bfc183940a7ddd8c3a0a1afa4ff","modified":1650150815578},{"_id":"public/plugins/prettify/lang-go.js","hash":"640ffa4b3f9c5aee9414962645b9a7f0f49dd555","modified":1650150815578},{"_id":"public/plugins/prettify/lang-kotlin.js","hash":"17877c550364c4e65c013d815da614291051c55a","modified":1650150815578},{"_id":"public/plugins/prettify/lang-lassoscript.js","hash":"60ba20b8b45ae3bdc1cf86f3b33b61d3859e3706","modified":1650150815578},{"_id":"public/plugins/prettify/lang-lasso.js","hash":"60ba20b8b45ae3bdc1cf86f3b33b61d3859e3706","modified":1650150815578},{"_id":"public/plugins/prettify/lang-lgt.js","hash":"a8ca762427547d5968153b6afe1e3ee02520886a","modified":1650150815578},{"_id":"public/plugins/prettify/lang-hs.js","hash":"3158902af4476578fc61eb9e47c679e663a77342","modified":1650150815578},{"_id":"public/plugins/prettify/lang-latex.js","hash":"57371d546cb8e1c105985a59ed135a1b97944d17","modified":1650150815578},{"_id":"public/plugins/prettify/lang-lisp.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1650150815578},{"_id":"public/plugins/prettify/lang-llvm.js","hash":"91b28e339c9b32bfe61fc6ae6eba166936ee38fb","modified":1650150815578},{"_id":"public/plugins/prettify/lang-ll.js","hash":"91b28e339c9b32bfe61fc6ae6eba166936ee38fb","modified":1650150815578},{"_id":"public/plugins/prettify/lang-logtalk.js","hash":"a8ca762427547d5968153b6afe1e3ee02520886a","modified":1650150815578},{"_id":"public/plugins/prettify/lang-ls.js","hash":"60ba20b8b45ae3bdc1cf86f3b33b61d3859e3706","modified":1650150815578},{"_id":"public/plugins/prettify/lang-lsp.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1650150815578},{"_id":"public/plugins/prettify/lang-lua.js","hash":"60a3dccac2fe79b0e1c38dec6be79a6ae51883fa","modified":1650150815578},{"_id":"public/plugins/prettify/lang-ml.js","hash":"fe6b2569654df7a1861bb2518a2ac443603d471f","modified":1650150815578},{"_id":"public/plugins/prettify/lang-matlab.js","hash":"94c8fd7c44194dd3b1a444a3fc7c2b7fd09d9d6a","modified":1650150815578},{"_id":"public/plugins/prettify/lang-n.js","hash":"65e144772759352d3b8c612219d5d817735cc7a0","modified":1650150815578},{"_id":"public/plugins/prettify/lang-mumps.js","hash":"a6002126b8dfc84a167040a024aad9b6b4e406ee","modified":1650150815578},{"_id":"public/plugins/prettify/lang-nemerle.js","hash":"65e144772759352d3b8c612219d5d817735cc7a0","modified":1650150815578},{"_id":"public/plugins/prettify/lang-pascal.js","hash":"6630a2845b3a0951cbd4b2b8f69d538e0845a53e","modified":1650150815578},{"_id":"public/plugins/prettify/lang-proto.js","hash":"76ab0965b0e47de76cb5293ceafc7e5ca1588380","modified":1650150815578},{"_id":"public/plugins/prettify/lang-rd.js","hash":"f2c5bbaca8b6a00737dbdd30d26ea84a0c9db9bc","modified":1650150815578},{"_id":"public/plugins/prettify/lang-r.js","hash":"cf0eb1b7e60d2b5704901965578eeb8333196ff3","modified":1650150815578},{"_id":"public/plugins/prettify/lang-rkt.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1650150815578},{"_id":"public/plugins/prettify/lang-rust.js","hash":"daa26f076cddc6640685b9e8bff7e1e76d1c70f0","modified":1650150815578},{"_id":"public/plugins/prettify/lang-s.js","hash":"cf0eb1b7e60d2b5704901965578eeb8333196ff3","modified":1650150815578},{"_id":"public/plugins/prettify/lang-scala.js","hash":"cf07e43b333938964236f455826c335fc806aaa5","modified":1650150815578},{"_id":"public/plugins/prettify/lang-scm.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1650150815578},{"_id":"public/plugins/prettify/lang-sql.js","hash":"483cc0f4bd0773f6e7377f48b7a028d83790dd1b","modified":1650150815578},{"_id":"public/plugins/prettify/lang-swift.js","hash":"e86ce3125d09494db6384123ba462fd2035bc0b9","modified":1650150815578},{"_id":"public/plugins/prettify/lang-ss.js","hash":"a51313f66790f8de2f39a124b7595d9ff876df36","modified":1650150815578},{"_id":"public/plugins/prettify/lang-tcl.js","hash":"38c918e9a43c8975074302305b8b8e5f30d513dc","modified":1650150815578},{"_id":"public/plugins/prettify/lang-tex.js","hash":"57371d546cb8e1c105985a59ed135a1b97944d17","modified":1650150815578},{"_id":"public/plugins/prettify/lang-vbs.js","hash":"1f5344a5051aa3800193b8031dab4acbe3e341cb","modified":1650150815578},{"_id":"public/plugins/prettify/lang-vhd.js","hash":"09c27f0ced7244e8ece3ab043bf8aa3028cc2927","modified":1650150815578},{"_id":"public/plugins/prettify/lang-vb.js","hash":"1f5344a5051aa3800193b8031dab4acbe3e341cb","modified":1650150815578},{"_id":"public/plugins/prettify/lang-wiki.js","hash":"c4090580e86c5040709e6b8fd63b661f978149a6","modified":1650150815578},{"_id":"public/plugins/prettify/lang-vhdl.js","hash":"09c27f0ced7244e8ece3ab043bf8aa3028cc2927","modified":1650150815578},{"_id":"public/plugins/prettify/lang-xq.js","hash":"52c4ad346f115881a250652f1d98f35826f4f239","modified":1650150815578},{"_id":"public/plugins/prettify/lang-xquery.js","hash":"52c4ad346f115881a250652f1d98f35826f4f239","modified":1650150815578},{"_id":"public/plugins/prettify/lang-yml.js","hash":"5aaea285d2e08556c0a754d637d912ed82734d8e","modified":1650150815578},{"_id":"public/plugins/prettify/prettify.css","hash":"dc032dcd1ee5fff6a03959a962cc7dda4410c822","modified":1650150815578},{"_id":"public/plugins/prettify/prettify.js","hash":"38a0e547b123d32c9e61ae87b797b3b2f7929b7a","modified":1650150815578},{"_id":"public/plugins/prettify/run_prettify.js","hash":"4f2ae0678e8257fe5444b50692eaa68321851646","modified":1650150815578},{"_id":"public/plugins/prettify/lang-yaml.js","hash":"5aaea285d2e08556c0a754d637d912ed82734d8e","modified":1650150815578},{"_id":"public/plugins/prettify/skins/sunburst.css","hash":"fad26fe701faae75df9c953fbeaa28c7eedc12f0","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/skins/doxy.css","hash":"cc3f6d71ea63414f391474196f45b6eaa6a95369","modified":1650150815578},{"_id":"public/plugins/prettify/skins/doxy.css","hash":"cc3f6d71ea63414f391474196f45b6eaa6a95369","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/skins/sons-of-obsidian.css","hash":"e54ae8129555fab5dc165f2a523932d3eee586c4","modified":1650150815578},{"_id":"public/plugins/prettify/skins/sons-of-obsidian.css","hash":"e54ae8129555fab5dc165f2a523932d3eee586c4","modified":1650150815578},{"_id":"public/plugins/prettify/skins/desert.css","hash":"2663a198d1a399343e3ee10126b5e425991dedd5","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/skins/sunburst.css","hash":"fad26fe701faae75df9c953fbeaa28c7eedc12f0","modified":1650150815578},{"_id":"public/plugins/google-code-prettify/skins/desert.css","hash":"2663a198d1a399343e3ee10126b5e425991dedd5","modified":1650150815578},{"_id":"public/categories/index.html","hash":"df8e026c6438bde8ab2fd5ded10a2dcd0ea3701e","modified":1650150815578},{"_id":"public/tags/index.html","hash":"23fa1a17d8ca76594ffa4c3bec8224356436a6b2","modified":1650150815578},{"_id":"public/linux/webServer1/index.html","hash":"a876c2b7e531706fb777c67afce42cc334f40062","modified":1650150815578},{"_id":"public/db/mysql1/index.html","hash":"b1273cc2c7cd3cb69fab9db2e9b9998fc4294941","modified":1650150815578},{"_id":"public/db/redis1/index.html","hash":"30356709ffbce70402abe7432f0b64fadb0c360d","modified":1650150815578},{"_id":"public/lang/asm1/index.html","hash":"7150399162f475068183d3884b8fd72f7526fea6","modified":1650150815578},{"_id":"public/lang/go1/index.html","hash":"35395b946ff8fc1c24178cccd34772f080a904ad","modified":1650150815578},{"_id":"public/sci/sec1/index.html","hash":"858b9ecbd402cef03a3e3d3d6251e3929302433a","modified":1650150815578},{"_id":"public/other/intro2/index.html","hash":"b7741b4718c10066af7beec7cd424abe1c8c3416","modified":1650150815578},{"_id":"public/other/useless1/index.html","hash":"7150989131501b07287f269b4601f0a94ebe458f","modified":1650150815578},{"_id":"public/tags/exec/index.html","hash":"65c8ef755018ce97165bf4236c812b1be60b04b6","modified":1650150815578},{"_id":"public/tags/learn/index.html","hash":"58aed3817531064f326ec7c0eb78df69878dc932","modified":1650150815578},{"_id":"public/tags/mysql/index.html","hash":"dcbf3e81cdf06b26cb8ed7e50852f0362964fdc2","modified":1650150815578},{"_id":"public/tags/redis/index.html","hash":"17cd36bcb6318f625781a3aa7b7f8f5bc77dd39a","modified":1650150815578},{"_id":"public/tags/cpp/index.html","hash":"d17665baf5543ed0f9ca47056ceaf41cf15ae6cd","modified":1650150815578},{"_id":"public/tags/asm/index.html","hash":"5cbc380b58f4af19ecb15a89f19cb7c0cbaa049f","modified":1650150815578},{"_id":"public/tags/go/index.html","hash":"aa1d98235b0d1590a3849e12b2d1d03cb9a15d91","modified":1650150815578},{"_id":"public/tags/py/index.html","hash":"e8b88de115becf0be916c6db77c42541b6e6cc0f","modified":1650150815578},{"_id":"public/tags/webServer/index.html","hash":"b2412b9f5cb832a8f695d4c5c3a924ff30ccaaf8","modified":1650150815578},{"_id":"public/tags/intro/index.html","hash":"addfc7adb4e979bcdda1be2122c52f48a4aae35d","modified":1650150815578},{"_id":"public/tags/job/index.html","hash":"031d2acd83f0d2c22a032768d9dc3decb2bafc30","modified":1650150815578},{"_id":"public/tags/useless/index.html","hash":"53cbf1e9098f4cb3ba3b002b1990d32e3d4e9bec","modified":1650150815578},{"_id":"public/tags/net/index.html","hash":"1a8778c73bc412d1a026f46ad3abda84dcf1a13b","modified":1650150815578},{"_id":"public/tags/sec/index.html","hash":"9eb6b5f3c7c47bc2b8af9140b4204667a62e8d2e","modified":1650150815578},{"_id":"public/tags/git/index.html","hash":"8042829f0169061243366d42439cb16ec0e1be15","modified":1650150815578},{"_id":"public/tags/hexo/index.html","hash":"2c68e48c110edef3c75418900fd2ba1443f2ef52","modified":1650150815578},{"_id":"public/archives/page/4/index.html","hash":"37be08fd1a1c38b5c36f3a7e8b29ff9e1b262659","modified":1650150815578},{"_id":"public/archives/2019/index.html","hash":"cba38470463ea69fac6e4ae3a38454a129e51331","modified":1650150815578},{"_id":"public/archives/2019/09/index.html","hash":"00d15fae8a4f7bc43519fe26169888be18cbdc78","modified":1650150815578},{"_id":"public/archives/2020/index.html","hash":"9acac01b952a3d6560b56d3e9423498f114ad586","modified":1650150815578},{"_id":"public/archives/2020/01/index.html","hash":"03f44edccff5d9ccfca7e201fd66e1f8b124c35e","modified":1650150815578},{"_id":"public/archives/2021/index.html","hash":"9bb5cd0697b2f8db5fd44076b56a2adb30c305e2","modified":1650150815578},{"_id":"public/archives/2021/01/index.html","hash":"068655c0a39f3a04288eb175b6cb1d802a8b2e82","modified":1650150815578},{"_id":"public/archives/2021/02/index.html","hash":"084dc1d5d50b94040ade1612376dfb9a549c0a7d","modified":1650150815578},{"_id":"public/archives/2021/03/index.html","hash":"997a59a527d7b401b801ee8e6a2131fbe916682e","modified":1650150815578},{"_id":"public/archives/2021/12/index.html","hash":"f391b166326de3b1bf6a0e88f8d91de30a882356","modified":1650150815578},{"_id":"public/archives/2022/page/3/index.html","hash":"c14adec933a3139d60f781aeffd281c685eef85a","modified":1650150815578},{"_id":"public/archives/2022/01/index.html","hash":"641576983f1c0fabb19f353c0651b4aab8ed7c21","modified":1650150815578},{"_id":"public/archives/2022/02/index.html","hash":"737e6289f533b6ebebd3e699cc90862708753a0c","modified":1650150815578},{"_id":"public/archives/2022/03/page/2/index.html","hash":"2ab186f0c85cdccbfc7ebef8fc40a3c29d93fed5","modified":1650150815578},{"_id":"public/archives/2022/04/index.html","hash":"2a8c687dec2f8657f670623e2773b6cf255eb17a","modified":1650150815578},{"_id":"public/categories/algo/page/2/index.html","hash":"fb09f22ba5e5592eb0cb935bbd8fc7d4e298930f","modified":1650150815578},{"_id":"public/categories/db/index.html","hash":"dbb55013f08a84cd963dbf48e1058a9eee69296c","modified":1650150815578},{"_id":"public/categories/linux/index.html","hash":"4b9ddadb6c85b7e5e3a6f14ca43eebed266bcc41","modified":1650150815578},{"_id":"public/categories/lang/index.html","hash":"15ac2bb3bc3a280613bf022d2c3e94da6110f3a0","modified":1650150815578},{"_id":"public/categories/sci/index.html","hash":"86158c3add4faf22306841a33914d03a8fe434d7","modified":1650150815578},{"_id":"public/categories/other/index.html","hash":"bed1bedc7ce425fb98208b052a79b914795f36ee","modified":1650150815578},{"_id":"public/categories/tech/index.html","hash":"34bd5bddce1f7999fc1548f3136148e12b411382","modified":1650150815578},{"_id":"public/algo/algorithms5/index.html","hash":"f9018fec83f42fd4efbfb958c9c9054549b6cdc8","modified":1650150815578},{"_id":"public/algo/algorithms4/index.html","hash":"894801a39c0e2f6c859c77a17bcd6f09b6769278","modified":1650150815578},{"_id":"public/algo/algorithms3/index.html","hash":"506a471dd76e312ef2d580148fd1283540530c01","modified":1650150815578},{"_id":"public/algo/algorithms2/index.html","hash":"2b05690875a3a2e6480d74dbba9a222767dfc0b7","modified":1650150815578},{"_id":"public/algo/algorithms1/index.html","hash":"80a7bc0b95259a420129c87222faaa3e729c4717","modified":1650150815578},{"_id":"public/algo/algorithms0/index.html","hash":"b05c5ec9e1efd47f77ad14facf07401dc1c693e7","modified":1650150815578},{"_id":"public/tech/hexo3/index.html","hash":"e81db5aef278a4e51faecc45fee5e3a6103f4b97","modified":1650150815578},{"_id":"public/algo/leetcode3/index.html","hash":"18eccb120b71542c5ea25e501bae24a456064d1f","modified":1650150815578},{"_id":"public/algo/DP/index.html","hash":"b52c699bb833f2e840dda0291f89190fa16bb2c0","modified":1650150815578},{"_id":"public/lang/go2/index.html","hash":"14b23ba694c23368c92c2518d15b429fb3e39c5b","modified":1650150815578},{"_id":"public/lang/go3/index.html","hash":"91274eea89ec35b2cbc7aae57a1cd376bbd04572","modified":1650150815578},{"_id":"public/algo/tenSort/index.html","hash":"1edababc8aa5eaafde99d5fce869da3e7799d2c2","modified":1650150815578},{"_id":"public/tech/hexo2/index.html","hash":"9fa9e2cb6ead4f4299bf928e79081352fa6e74e0","modified":1650150815578},{"_id":"public/tech/hexo1/index.html","hash":"d5b4b5699814694a943a8b11128aca71941096b3","modified":1650150815578},{"_id":"public/other/job1/index.html","hash":"4cbcd7b50669f886bbcf5c8b8ed62255f567c837","modified":1650150815578},{"_id":"public/tech/git2/index.html","hash":"7416d35b0047b0789017ab99ffaaee9eee7f8f91","modified":1650150815578},{"_id":"public/algo/leetcode2/index.html","hash":"718efa7a47071cde7791d9d79f17c15c3262ea8a","modified":1650150815578},{"_id":"public/algo/leetcode1/index.html","hash":"debca01f52625af677cae9bc41d0b97a31b612af","modified":1650150815578},{"_id":"public/tech/git1/index.html","hash":"c5d5657289f246be0b73d7deb5a45f44477d6560","modified":1650150815578},{"_id":"public/other/intro1/index.html","hash":"7a27223ed598e0a32085a89284657f7ebfb36de3","modified":1650150815578},{"_id":"public/sci/net1/index.html","hash":"d5efead4a88fd61a2c97a747b78b47616d04f33b","modified":1650150815578},{"_id":"public/lang/py3/index.html","hash":"462938629700d2b7139f599b53fcafd5c237c89d","modified":1650150815578},{"_id":"public/lang/py2/index.html","hash":"d067f53571b6d14de5a9fbda6754bf12c0c1747d","modified":1650150815578},{"_id":"public/lang/cpp1/index.html","hash":"ff8f594ce733e656ec0467d9a78c990c95c62034","modified":1650150815578},{"_id":"public/lang/py1/index.html","hash":"cc91631a613df63b9f0f42801799ea21ec1c4110","modified":1650150815578},{"_id":"public/other/useless0/index.html","hash":"f734b803d58bc36982f5b62335266f9169d6c1cb","modified":1650150815578},{"_id":"public/archives/index.html","hash":"16d29dd0e1f83f3936390343ee60f6bdb80e46b1","modified":1650150815578},{"_id":"public/archives/page/2/index.html","hash":"8d8c4c5826525106218d7b223a74d7e5e42d6e88","modified":1650150815578},{"_id":"public/archives/page/3/index.html","hash":"5fe63f6228f445271d9b589ff80f8f7f23478259","modified":1650150815578},{"_id":"public/archives/2022/index.html","hash":"0ee5f8966d8f37cc5f5ebb02159dd29aa5fb5d97","modified":1650150815578},{"_id":"public/archives/2022/page/2/index.html","hash":"bff0bc2399a8a559dc4d245a0ccf4d2749799aa2","modified":1650150815578},{"_id":"public/archives/2022/03/index.html","hash":"5d306f268023679dd100ee9f0224c9a132e1d529","modified":1650150815578},{"_id":"public/categories/algo/index.html","hash":"ed840e29e40911f0c66cbfaa84823415e64256c8","modified":1650150815578},{"_id":"public/images/courgette.log","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1650150815578},{"_id":"public/index.html","hash":"9f3be6b997ebd3ad1d68c1ad2afe4240ab1bedfb","modified":1650150815578},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1650150815578},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1650150815578},{"_id":"public/images/avatar.jpg","hash":"c8addcf1e94604e3d2564fd2be0d513699511abe","modified":1650150815578},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1650150815578},{"_id":"public/images/avatar2.jpg","hash":"aa438473e6e40ea5cb7d50cdd10d6fb6ae267a81","modified":1650150815578},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1650150815578},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1650150815578},{"_id":"public/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1650150815578},{"_id":"public/images/favicon3/android-chrome-384x384.png","hash":"c348dbb90bbb400293d14a417ac36f5d771d0f24","modified":1650150815578},{"_id":"public/images/favicon3/android-chrome-192x192.png","hash":"83885b61b8e051530b2b8c72096fdab200ea630f","modified":1650150815578},{"_id":"public/images/favicon3/apple-touch-icon.png","hash":"608ff8af4a62b9e7e2a2e6c6274f7aa1e4aefffa","modified":1650150815578},{"_id":"public/images/favicon3/browserconfig.xml","hash":"974aea18bda5a95802c06b80126ab1d96d91d708","modified":1650150815578},{"_id":"public/images/favicon3/favicon-16x16.png","hash":"a7ee7b9319a3314dbec09634ae0d5b21609cca24","modified":1650150815578},{"_id":"public/images/favicon3/favicon-32x32.png","hash":"f980c1c5d2cef0fcc152d411e8f042c09b9cb624","modified":1650150815578},{"_id":"public/images/favicon3/favicon.ico","hash":"8d524bc0d9be53c3223b3aa9836821b8db081233","modified":1650150815578},{"_id":"public/images/favicon3/mstile-150x150.png","hash":"5deec6902a5681b0091cd92f4b3ca829f832c9a8","modified":1650150815578},{"_id":"public/images/favicon3/site.webmanifest","hash":"e1723dd9813b4f2df2da91f834ff644578649cc1","modified":1650150815578},{"_id":"public/images/favicon3/safari-pinned-tab.svg","hash":"c242db88eaa3ba4ffcadcf64f93676151029fd71","modified":1650150815578},{"_id":"public/images/01_nodejs_releases.png","hash":"042d28958abd4f576b6bbc1a6880d6d28e0d81e2","modified":1650150815578},{"_id":"public/images/OfficialAccountCode.jpg","hash":"1a9aa956db84759369d61d52ae35ced92669bcab","modified":1650150815578},{"_id":"public/images/algo-learn03Algorithms03Search1.png","hash":"3d2ec0842dbe58f3acf80f5c37504110feb573b8","modified":1650150815578},{"_id":"public/images/algo-learn03Algorithms03Search8.png","hash":"2f886e30066da25250e0bacfa7d9022ff2ad322b","modified":1650150815578},{"_id":"public/images/algo02Leetcode30daysApril122_1.png","hash":"13311c2fcfbe884076cd49c4002cbcf7f3c57150","modified":1650150815578},{"_id":"public/images/algo02Leetcode30daysApril122_2.png","hash":"ef13af6faf125e29fd3bb584214e18d5d96075d8","modified":1650150815578},{"_id":"public/images/other01NIVIDIAReflex2.jpeg","hash":"973bc73da605a481a51a2956f0e3c8f83c72620a","modified":1650150815578},{"_id":"public/images/other01NIVIDIAReflex4.png","hash":"b116279a0bc88c50e9256de7673c5870c1ac68e8","modified":1650150815578},{"_id":"public/images/other01NIVIDIAReflex6.png","hash":"5298a9ba632af0aebcb4e0c44e32835ddd8c5f61","modified":1650150815578},{"_id":"public/images/other01NIVIDIAReflex9.png","hash":"ce308b3b653a01718389f2188082a9c832ddaeda","modified":1650150815578},{"_id":"public/images/algo-learn03Algorithms03Search2.png","hash":"151dc42461ed9e77b01e0772d7c0606baafaacdd","modified":1650150815578},{"_id":"public/images/algo-learn03Algorithms03Search3.png","hash":"08e45b100c4a6c4727608e0bf674caa8bf3a7d7c","modified":1650150815578},{"_id":"public/images/algo-learn03Algorithms03Search5.png","hash":"dc56fb2a1be8a2d4e90d0f997ebd51cbab798560","modified":1650150815578},{"_id":"public/images/algo-learn03Algorithms03Search7.png","hash":"bed0b6b6dfac54f3feec198ff7468bea9c415dec","modified":1650150815578},{"_id":"public/images/algo-learn03Algorithms04Graph1.png","hash":"8c25ddf1282370e93e62546ef8ca3a695ccfcbc4","modified":1650150815578},{"_id":"public/images/algo-learn03Algorithms04Graph2.png","hash":"70c4a098ebfaf68ad234227f9c25e1cab837f7b1","modified":1650150815578},{"_id":"public/images/algo-learn03Algorithms05String1.png","hash":"7f82ccc0e9c5d29707808b5b666482520baf7a25","modified":1650150815578},{"_id":"public/images/algo-learn03Algorithms05String2.png","hash":"62a02f69a7bb4c697083bb96c12424bf83aea495","modified":1650150815578},{"_id":"public/images/other01NIVIDIAReflex5.png","hash":"8844c45a7f955ce32723b41b8605594f78c8c75b","modified":1650150815578},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1650150815578},{"_id":"public/css/noscript.css","hash":"54d14cd43dc297950a4a8d39ec9644dd5fc3499f","modified":1650150815578},{"_id":"public/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1650150815578},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1650150815578},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1650150815578},{"_id":"public/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":1650150815578},{"_id":"public/js/pjax.js","hash":"919f5281c4a04d11cfd94573ecf57b3dbabd3cc8","modified":1650150815578},{"_id":"public/js/next-boot.js","hash":"48497e2156a10155dc42311633a110c9685692c9","modified":1650150815578},{"_id":"public/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1650150815578},{"_id":"public/js/utils.js","hash":"e447160d342b1f93df5214b6a733441039ced439","modified":1650150815578},{"_id":"public/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1650150815578},{"_id":"public/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1650150815578},{"_id":"public/js/schemes/muse.js","hash":"9a836d2bcc3defe4bd1ee51f5f4eb7006ebdd41b","modified":1650150815578},{"_id":"public/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1650150815578},{"_id":"public/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":1650150815578},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1650150815578},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1650150815578},{"_id":"public/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1650150815578},{"_id":"public/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1650150815578},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1650150815578},{"_id":"public/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":1650150815578},{"_id":"public/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1650150815578},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"b6c58f098473b526d6a3cd35655caf34b77f7cff","modified":1650150815578},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1650150815578},{"_id":"public/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1650150815578},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1650150815578},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1650150815578},{"_id":"public/js/third-party/search/algolia-search.js","hash":"a8737ff19eeba48654b835129c9cebdf90f758c8","modified":1650150815578},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1650150815578},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1650150815578},{"_id":"public/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1650150815578},{"_id":"public/js/third-party/search/local-search.js","hash":"45c485f82258d246f37deb66884bd2643323ef3a","modified":1650150815578},{"_id":"public/js/third-party/statistics/firestore.js","hash":"411a72df581f5b21317dc28633c7993207eb9e1c","modified":1650150815578},{"_id":"public/js/third-party/tags/mermaid.js","hash":"f27d817b0c2138dd3215b1f46af0753f60a008f3","modified":1650150815578},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"5a928990856b8e456f0663cf3b6b406733672e39","modified":1650150815578},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1650150815578},{"_id":"public/css/main.css","hash":"12d1e9d763b181dad49927b8d36b2712f247b296","modified":1650150815578},{"_id":"public/images/algo-learn03Algorithms02Sorting1.png","hash":"f2d7c3642f26c21502f2bd659ceb168420eadae2","modified":1650150815578},{"_id":"public/images/algo-learn03Algorithms03Search4.png","hash":"9ef8851ff771b94c1481a63c7829f7318450fe84","modified":1650150815578},{"_id":"public/images/algo-learn03Algorithms03Search9.png","hash":"f621f1b8b23353b85610439a8510d62b88a89d49","modified":1650150815578},{"_id":"public/images/other01NIVIDIAReflex10.png","hash":"ade2642d1e354eec17b830068baa67f76f4ed4fa","modified":1650150815578},{"_id":"public/images/other01NIVIDIAReflex7.jpg","hash":"94476253c9d199bb323feacc90e0e70d6f6b6335","modified":1650150815578},{"_id":"public/images/other01NIVIDIAReflex8.png","hash":"9d74c66ac0976fb1fb991cc772d9fb1bc8726556","modified":1650150815578},{"_id":"public/images/algo-learn03Algorithms01Foundation1.png","hash":"8e12be83705a8c5a92bfe8d41a600442199b40dc","modified":1650150815578},{"_id":"public/images/algo-learn03Algorithms01Foundation2.png","hash":"e486c7a43a4c43a4cce60fabb7ed12d048a2aca3","modified":1650150815578},{"_id":"public/images/algo-learn03Algorithms03Search6.png","hash":"9bc458077c606be547794a1e83c98b5f9cca2c1e","modified":1650150815578},{"_id":"public/files/HDFSAndP2PFileDistriSys.pdf","hash":"fd9638cc6ae01b6d5ceeb30948f6ff0581c8bdcf","modified":1650150815578},{"_id":"public/files/DFSOtherExamples.pdf","hash":"c3f59e9c72174c18d9bb6b0b03d44067aa2909d9","modified":1650150815578},{"_id":"public/images/other01NIVIDIAReflex1.png","hash":"625c6ff233a7cb69dd7b81bcdedd1bc364f05337","modified":1650150815578},{"_id":"public/images/other01NIVIDIAReflex3.png","hash":"77b3538f98d4adcb355d7476e961d3167d19dc17","modified":1650150815578},{"_id":"public/files/ComputerSecurity.pdf","hash":"e6eb372ac0b2ed21a2fceff79502f9be9d062c01","modified":1650150815578},{"_id":"public/files/RedBlackSearchTreeDel.pdf","hash":"dc0317ebce2e5b9d1b4c04f0e3555155519f83bf","modified":1650150815578},{"_id":"public/files/RedBlackSearchTree.pdf","hash":"bbc6be9a9b2cb5ec6c268bb8e6e1fed9260a15eb","modified":1650150815578},{"_id":"public/files/TwoTreeSearchTree.pdf","hash":"46fc15ecc99d75f331859c8e73be9b9fe41524c3","modified":1650150815578},{"_id":"public/files/DijkstraAlgoOfShortest.pdf","hash":"fd35f8bcd71df503f5dc6c51e1415c876814075a","modified":1650150815578},{"_id":"source/_posts/linux-webSerber00Framework.md","hash":"492de21e1a5c3059eea29bba6d32457c7dede3a9","modified":1650150935326},{"_id":"source/_posts/linux-webServer00Framework.md","hash":"f5e21accbc73aac724eb7615ef38755860f14102","modified":1650152430676},{"_id":"source/_posts/linux-WebServer01LinuxProgStart.md","hash":"6e94ab278737ffa073c5ea88da2305ac789e9709","modified":1650152499260}],"Category":[{"name":"algo","_id":"cl22h70sn00045ossf8fg6azc"},{"name":"db","_id":"cl22h70tk001b5ossa4sb19cr"},{"name":"lang","_id":"cl22h70tt001w5ossdonx2lxj"},{"name":"linux","_id":"cl22h70u900335ossf3md3459"},{"name":"other","_id":"cl22h70ud003c5osscs5o4afk"},{"name":"sci","_id":"cl22h70uk00435oss9hz4ddof"},{"name":"tech","_id":"cl22h70un004h5oss7yzq3rmb"}],"Data":[],"Page":[{"title":"categories","date":"2022-03-27T07:35:07.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-03-27 15:35:07\ntype: \"categories\"\n---\n","updated":"2022-03-27T07:35:46.688Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cl22h70rz00005oss60x5293x","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2022-03-27T07:35:16.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-03-27 15:35:16\ntype: \"tags\"\n---\n","updated":"2022-03-27T07:36:26.904Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cl22h70si00025oss6dov4abd","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","source":"plugins/google-code-prettify/lang-Splus.js","raw":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","date":"2022-03-27T08:23:16.364Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-Splus.js","layout":"false","title":"","comments":1,"_id":"cl22h70ss00065ossh46t2vz6","content":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n"},{"_content":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","source":"plugins/google-code-prettify/lang-aea.js","raw":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","date":"2022-03-27T08:23:16.287Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-aea.js","layout":"false","title":"","comments":1,"_id":"cl22h70sv00085oss8dub8u6q","content":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n"},{"_content":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","source":"plugins/google-code-prettify/lang-apollo.js","raw":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","date":"2022-03-27T08:23:16.289Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-apollo.js","layout":"false","title":"","comments":1,"_id":"cl22h70sz000a5oss09bu3dlj","content":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n"},{"_content":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","source":"plugins/google-code-prettify/lang-agc.js","raw":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","date":"2022-03-27T08:23:16.287Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-agc.js","layout":"false","title":"","comments":1,"_id":"cl22h70t5000f5ossblb901za","content":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/,null,'\"'],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^REM[^\\r\\n]*/,null],[\"kwd\",/^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/,null],[\"pln\",/^[A-Z][A-Z0-9]?(?:\\$|%)?/i,null],[\"lit\",/^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i,\nnull,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$%\"]*/,null]]),[\"basic\",\"cbm\"]);\n","source":"plugins/google-code-prettify/lang-basic.js","raw":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/,null,'\"'],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^REM[^\\r\\n]*/,null],[\"kwd\",/^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/,null],[\"pln\",/^[A-Z][A-Z0-9]?(?:\\$|%)?/i,null],[\"lit\",/^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i,\nnull,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$%\"]*/,null]]),[\"basic\",\"cbm\"]);\n","date":"2022-03-27T08:23:16.290Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-basic.js","layout":"false","title":"","comments":1,"_id":"cl22h70t8000h5oss1ldd0n8n","content":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/,null,'\"'],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^REM[^\\r\\n]*/,null],[\"kwd\",/^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/,null],[\"pln\",/^[A-Z][A-Z0-9]?(?:\\$|%)?/i,null],[\"lit\",/^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i,\nnull,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$%\"]*/,null]]),[\"basic\",\"cbm\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/,null,'\"'],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^REM[^\\r\\n]*/,null],[\"kwd\",/^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/,null],[\"pln\",/^[A-Z][A-Z0-9]?(?:\\$|%)?/i,null],[\"lit\",/^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i,\nnull,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$%\"]*/,null]]),[\"basic\",\"cbm\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","source":"plugins/google-code-prettify/lang-cl.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","date":"2022-03-27T08:23:16.291Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-cl.js","layout":"false","title":"","comments":1,"_id":"cl22h70ta000n5oss6f5leey1","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n"},{"_content":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/,null,'\"'],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^REM[^\\r\\n]*/,null],[\"kwd\",/^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/,null],[\"pln\",/^[A-Z][A-Z0-9]?(?:\\$|%)?/i,null],[\"lit\",/^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i,\nnull,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$%\"]*/,null]]),[\"basic\",\"cbm\"]);\n","source":"plugins/google-code-prettify/lang-cbm.js","raw":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/,null,'\"'],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^REM[^\\r\\n]*/,null],[\"kwd\",/^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/,null],[\"pln\",/^[A-Z][A-Z0-9]?(?:\\$|%)?/i,null],[\"lit\",/^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i,\nnull,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$%\"]*/,null]]),[\"basic\",\"cbm\"]);\n","date":"2022-03-27T08:23:16.290Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-cbm.js","layout":"false","title":"","comments":1,"_id":"cl22h70tc000q5oss83bd2z89","content":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/,null,'\"'],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^REM[^\\r\\n]*/,null],[\"kwd\",/^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/,null],[\"pln\",/^[A-Z][A-Z0-9]?(?:\\$|%)?/i,null],[\"lit\",/^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i,\nnull,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$%\"]*/,null]]),[\"basic\",\"cbm\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/,null,'\"'],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^REM[^\\r\\n]*/,null],[\"kwd\",/^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/,null],[\"pln\",/^[A-Z][A-Z0-9]?(?:\\$|%)?/i,null],[\"lit\",/^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i,\nnull,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$%\"]*/,null]]),[\"basic\",\"cbm\"]);\n"},{"_content":"/*\n Copyright (C) 2011 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^[\\(\\{\\[]+/,null,\"([{\"],[\"clo\",/^[\\)\\}\\]]+/,null,\")]}\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:def|if|do|let|quote|var|fn|loop|recur|throw|try|monitor-enter|monitor-exit|defmacro|defn|defn-|macroexpand|macroexpand-1|for|doseq|dosync|dotimes|and|or|when|not|assert|doto|proxy|defstruct|first|rest|cons|defprotocol|deftype|defrecord|reify|defmulti|defmethod|meta|with-meta|ns|in-ns|create-ns|import|intern|refer|alias|namespace|resolve|ref|deref|refset|new|set!|memfn|to-array|into-array|aset|gen-class|reduce|map|filter|find|nil?|empty?|hash-map|hash-set|vec|vector|seq|flatten|reverse|assoc|dissoc|list|list?|disj|get|union|difference|intersection|extend|extend-type|extend-protocol|prn)\\b/,\nnull],[\"typ\",/^:[0-9a-zA-Z\\-]+/]]),[\"clj\"]);\n","source":"plugins/google-code-prettify/lang-clj.js","raw":"/*\n Copyright (C) 2011 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^[\\(\\{\\[]+/,null,\"([{\"],[\"clo\",/^[\\)\\}\\]]+/,null,\")]}\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:def|if|do|let|quote|var|fn|loop|recur|throw|try|monitor-enter|monitor-exit|defmacro|defn|defn-|macroexpand|macroexpand-1|for|doseq|dosync|dotimes|and|or|when|not|assert|doto|proxy|defstruct|first|rest|cons|defprotocol|deftype|defrecord|reify|defmulti|defmethod|meta|with-meta|ns|in-ns|create-ns|import|intern|refer|alias|namespace|resolve|ref|deref|refset|new|set!|memfn|to-array|into-array|aset|gen-class|reduce|map|filter|find|nil?|empty?|hash-map|hash-set|vec|vector|seq|flatten|reverse|assoc|dissoc|list|list?|disj|get|union|difference|intersection|extend|extend-type|extend-protocol|prn)\\b/,\nnull],[\"typ\",/^:[0-9a-zA-Z\\-]+/]]),[\"clj\"]);\n","date":"2022-03-27T08:23:16.316Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-clj.js","layout":"false","title":"","comments":1,"_id":"cl22h70te000v5oss0dhde63z","content":"/*\n Copyright (C) 2011 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^[\\(\\{\\[]+/,null,\"([{\"],[\"clo\",/^[\\)\\}\\]]+/,null,\")]}\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:def|if|do|let|quote|var|fn|loop|recur|throw|try|monitor-enter|monitor-exit|defmacro|defn|defn-|macroexpand|macroexpand-1|for|doseq|dosync|dotimes|and|or|when|not|assert|doto|proxy|defstruct|first|rest|cons|defprotocol|deftype|defrecord|reify|defmulti|defmethod|meta|with-meta|ns|in-ns|create-ns|import|intern|refer|alias|namespace|resolve|ref|deref|refset|new|set!|memfn|to-array|into-array|aset|gen-class|reduce|map|filter|find|nil?|empty?|hash-map|hash-set|vec|vector|seq|flatten|reverse|assoc|dissoc|list|list?|disj|get|union|difference|intersection|extend|extend-type|extend-protocol|prn)\\b/,\nnull],[\"typ\",/^:[0-9a-zA-Z\\-]+/]]),[\"clj\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n Copyright (C) 2011 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^[\\(\\{\\[]+/,null,\"([{\"],[\"clo\",/^[\\)\\}\\]]+/,null,\")]}\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:def|if|do|let|quote|var|fn|loop|recur|throw|try|monitor-enter|monitor-exit|defmacro|defn|defn-|macroexpand|macroexpand-1|for|doseq|dosync|dotimes|and|or|when|not|assert|doto|proxy|defstruct|first|rest|cons|defprotocol|deftype|defrecord|reify|defmulti|defmethod|meta|with-meta|ns|in-ns|create-ns|import|intern|refer|alias|namespace|resolve|ref|deref|refset|new|set!|memfn|to-array|into-array|aset|gen-class|reduce|map|filter|find|nil?|empty?|hash-map|hash-set|vec|vector|seq|flatten|reverse|assoc|dissoc|list|list?|disj|get|union|difference|intersection|extend|extend-type|extend-protocol|prn)\\b/,\nnull],[\"typ\",/^:[0-9a-zA-Z\\-]+/]]),[\"clj\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"com\",/^#!(?:.*)/],[\"kwd\",/^\\b(?:import|library|part of|part|as|show|hide)\\b/i],[\"com\",/^\\/\\/(?:.*)/],[\"com\",/^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//],[\"kwd\",/^\\b(?:class|interface)\\b/i],[\"kwd\",/^\\b(?:assert|async|await|break|case|catch|continue|default|do|else|finally|for|if|in|is|new|return|super|switch|sync|this|throw|try|while)\\b/i],[\"kwd\",/^\\b(?:abstract|const|extends|factory|final|get|implements|native|operator|set|static|typedef|var)\\b/i],\n[\"typ\",/^\\b(?:bool|double|Dynamic|int|num|Object|String|void)\\b/i],[\"kwd\",/^\\b(?:false|null|true)\\b/i],[\"str\",/^r?[\\']{3}[\\s|\\S]*?[^\\\\][\\']{3}/],[\"str\",/^r?[\\\"]{3}[\\s|\\S]*?[^\\\\][\\\"]{3}/],[\"str\",/^r?\\'(\\'|(?:[^\\n\\r\\f])*?[^\\\\]\\')/],[\"str\",/^r?\\\"(\\\"|(?:[^\\n\\r\\f])*?[^\\\\]\\\")/],[\"typ\",/^[A-Z]\\w*/],[\"pln\",/^[a-z_$][a-z0-9_]*/i],[\"pun\",/^[~!%^&*+=|?:<>/-]/],[\"lit\",/^\\b0x[0-9a-f]+/i],[\"lit\",/^\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i],[\"lit\",\n/^\\b\\.\\d+(?:e[+-]?\\d+)?/i],[\"pun\",/^[(){}\\[\\],.;]/]]),[\"dart\"]);\n","source":"plugins/google-code-prettify/lang-dart.js","raw":"/*\n\n Copyright (C) 2013 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"com\",/^#!(?:.*)/],[\"kwd\",/^\\b(?:import|library|part of|part|as|show|hide)\\b/i],[\"com\",/^\\/\\/(?:.*)/],[\"com\",/^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//],[\"kwd\",/^\\b(?:class|interface)\\b/i],[\"kwd\",/^\\b(?:assert|async|await|break|case|catch|continue|default|do|else|finally|for|if|in|is|new|return|super|switch|sync|this|throw|try|while)\\b/i],[\"kwd\",/^\\b(?:abstract|const|extends|factory|final|get|implements|native|operator|set|static|typedef|var)\\b/i],\n[\"typ\",/^\\b(?:bool|double|Dynamic|int|num|Object|String|void)\\b/i],[\"kwd\",/^\\b(?:false|null|true)\\b/i],[\"str\",/^r?[\\']{3}[\\s|\\S]*?[^\\\\][\\']{3}/],[\"str\",/^r?[\\\"]{3}[\\s|\\S]*?[^\\\\][\\\"]{3}/],[\"str\",/^r?\\'(\\'|(?:[^\\n\\r\\f])*?[^\\\\]\\')/],[\"str\",/^r?\\\"(\\\"|(?:[^\\n\\r\\f])*?[^\\\\]\\\")/],[\"typ\",/^[A-Z]\\w*/],[\"pln\",/^[a-z_$][a-z0-9_]*/i],[\"pun\",/^[~!%^&*+=|?:<>/-]/],[\"lit\",/^\\b0x[0-9a-f]+/i],[\"lit\",/^\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i],[\"lit\",\n/^\\b\\.\\d+(?:e[+-]?\\d+)?/i],[\"pun\",/^[(){}\\[\\],.;]/]]),[\"dart\"]);\n","date":"2022-03-27T08:23:16.318Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-dart.js","layout":"false","title":"","comments":1,"_id":"cl22h70tg000y5oss31j063pz","content":"/*\n\n Copyright (C) 2013 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"com\",/^#!(?:.*)/],[\"kwd\",/^\\b(?:import|library|part of|part|as|show|hide)\\b/i],[\"com\",/^\\/\\/(?:.*)/],[\"com\",/^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//],[\"kwd\",/^\\b(?:class|interface)\\b/i],[\"kwd\",/^\\b(?:assert|async|await|break|case|catch|continue|default|do|else|finally|for|if|in|is|new|return|super|switch|sync|this|throw|try|while)\\b/i],[\"kwd\",/^\\b(?:abstract|const|extends|factory|final|get|implements|native|operator|set|static|typedef|var)\\b/i],\n[\"typ\",/^\\b(?:bool|double|Dynamic|int|num|Object|String|void)\\b/i],[\"kwd\",/^\\b(?:false|null|true)\\b/i],[\"str\",/^r?[\\']{3}[\\s|\\S]*?[^\\\\][\\']{3}/],[\"str\",/^r?[\\\"]{3}[\\s|\\S]*?[^\\\\][\\\"]{3}/],[\"str\",/^r?\\'(\\'|(?:[^\\n\\r\\f])*?[^\\\\]\\')/],[\"str\",/^r?\\\"(\\\"|(?:[^\\n\\r\\f])*?[^\\\\]\\\")/],[\"typ\",/^[A-Z]\\w*/],[\"pln\",/^[a-z_$][a-z0-9_]*/i],[\"pun\",/^[~!%^&*+=|?:<>/-]/],[\"lit\",/^\\b0x[0-9a-f]+/i],[\"lit\",/^\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i],[\"lit\",\n/^\\b\\.\\d+(?:e[+-]?\\d+)?/i],[\"pun\",/^[(){}\\[\\],.;]/]]),[\"dart\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"com\",/^#!(?:.*)/],[\"kwd\",/^\\b(?:import|library|part of|part|as|show|hide)\\b/i],[\"com\",/^\\/\\/(?:.*)/],[\"com\",/^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//],[\"kwd\",/^\\b(?:class|interface)\\b/i],[\"kwd\",/^\\b(?:assert|async|await|break|case|catch|continue|default|do|else|finally|for|if|in|is|new|return|super|switch|sync|this|throw|try|while)\\b/i],[\"kwd\",/^\\b(?:abstract|const|extends|factory|final|get|implements|native|operator|set|static|typedef|var)\\b/i],\n[\"typ\",/^\\b(?:bool|double|Dynamic|int|num|Object|String|void)\\b/i],[\"kwd\",/^\\b(?:false|null|true)\\b/i],[\"str\",/^r?[\\']{3}[\\s|\\S]*?[^\\\\][\\']{3}/],[\"str\",/^r?[\\\"]{3}[\\s|\\S]*?[^\\\\][\\\"]{3}/],[\"str\",/^r?\\'(\\'|(?:[^\\n\\r\\f])*?[^\\\\]\\')/],[\"str\",/^r?\\\"(\\\"|(?:[^\\n\\r\\f])*?[^\\\\]\\\")/],[\"typ\",/^[A-Z]\\w*/],[\"pln\",/^[a-z_$][a-z0-9_]*/i],[\"pun\",/^[~!%^&*+=|?:<>/-]/],[\"lit\",/^\\b0x[0-9a-f]+/i],[\"lit\",/^\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i],[\"lit\",\n/^\\b\\.\\d+(?:e[+-]?\\d+)?/i],[\"pun\",/^[(){}\\[\\],.;]/]]),[\"dart\"]);\n"},{"_content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[ \\t\\r\\n\\f]+/,null,\" \\t\\r\\n\\f\"]],[[\"str\",/^\\\"(?:[^\\n\\r\\f\\\\\\\"]|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\\"/,null],[\"str\",/^\\'(?:[^\\n\\r\\f\\\\\\']|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\'/,null],[\"lang-css-str\",/^url\\(([^\\)\\\"\\']+)\\)/i],[\"kwd\",/^(?:url|rgb|\\!important|@import|@page|@media|@charset|inherit)(?=[^\\-\\w]|$)/i,null],[\"lang-css-kw\",/^(-?(?:[_a-z]|(?:\\\\[0-9a-f]+ ?))(?:[_a-z0-9\\-]|\\\\(?:\\\\[0-9a-f]+ ?))*)\\s*:/i],[\"com\",/^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//],\n[\"com\",/^(?:\\x3c!--|--\\x3e)/],[\"lit\",/^(?:\\d+|\\d*\\.\\d+)(?:%|[a-z]+)?/i],[\"lit\",/^#(?:[0-9a-f]{3}){1,2}\\b/i],[\"pln\",/^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i],[\"pun\",/^[^\\s\\w\\'\\\"]+/]]),[\"css\"]);PR.registerLangHandler(PR.createSimpleLexer([],[[\"kwd\",/^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i]]),[\"css-kw\"]);PR.registerLangHandler(PR.createSimpleLexer([],[[\"str\",/^[^\\)\\\"\\']+/]]),[\"css-str\"]);\n","source":"plugins/google-code-prettify/lang-css.js","raw":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[ \\t\\r\\n\\f]+/,null,\" \\t\\r\\n\\f\"]],[[\"str\",/^\\\"(?:[^\\n\\r\\f\\\\\\\"]|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\\"/,null],[\"str\",/^\\'(?:[^\\n\\r\\f\\\\\\']|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\'/,null],[\"lang-css-str\",/^url\\(([^\\)\\\"\\']+)\\)/i],[\"kwd\",/^(?:url|rgb|\\!important|@import|@page|@media|@charset|inherit)(?=[^\\-\\w]|$)/i,null],[\"lang-css-kw\",/^(-?(?:[_a-z]|(?:\\\\[0-9a-f]+ ?))(?:[_a-z0-9\\-]|\\\\(?:\\\\[0-9a-f]+ ?))*)\\s*:/i],[\"com\",/^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//],\n[\"com\",/^(?:\\x3c!--|--\\x3e)/],[\"lit\",/^(?:\\d+|\\d*\\.\\d+)(?:%|[a-z]+)?/i],[\"lit\",/^#(?:[0-9a-f]{3}){1,2}\\b/i],[\"pln\",/^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i],[\"pun\",/^[^\\s\\w\\'\\\"]+/]]),[\"css\"]);PR.registerLangHandler(PR.createSimpleLexer([],[[\"kwd\",/^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i]]),[\"css-kw\"]);PR.registerLangHandler(PR.createSimpleLexer([],[[\"str\",/^[^\\)\\\"\\']+/]]),[\"css-str\"]);\n","date":"2022-03-27T08:23:16.317Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-css.js","layout":"false","title":"","comments":1,"_id":"cl22h70th00135ossempwg504","content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[ \\t\\r\\n\\f]+/,null,\" \\t\\r\\n\\f\"]],[[\"str\",/^\\\"(?:[^\\n\\r\\f\\\\\\\"]|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\\"/,null],[\"str\",/^\\'(?:[^\\n\\r\\f\\\\\\']|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\'/,null],[\"lang-css-str\",/^url\\(([^\\)\\\"\\']+)\\)/i],[\"kwd\",/^(?:url|rgb|\\!important|@import|@page|@media|@charset|inherit)(?=[^\\-\\w]|$)/i,null],[\"lang-css-kw\",/^(-?(?:[_a-z]|(?:\\\\[0-9a-f]+ ?))(?:[_a-z0-9\\-]|\\\\(?:\\\\[0-9a-f]+ ?))*)\\s*:/i],[\"com\",/^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//],\n[\"com\",/^(?:\\x3c!--|--\\x3e)/],[\"lit\",/^(?:\\d+|\\d*\\.\\d+)(?:%|[a-z]+)?/i],[\"lit\",/^#(?:[0-9a-f]{3}){1,2}\\b/i],[\"pln\",/^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i],[\"pun\",/^[^\\s\\w\\'\\\"]+/]]),[\"css\"]);PR.registerLangHandler(PR.createSimpleLexer([],[[\"kwd\",/^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i]]),[\"css-kw\"]);PR.registerLangHandler(PR.createSimpleLexer([],[[\"str\",/^[^\\)\\\"\\']+/]]),[\"css-str\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[ \\t\\r\\n\\f]+/,null,\" \\t\\r\\n\\f\"]],[[\"str\",/^\\\"(?:[^\\n\\r\\f\\\\\\\"]|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\\"/,null],[\"str\",/^\\'(?:[^\\n\\r\\f\\\\\\']|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\'/,null],[\"lang-css-str\",/^url\\(([^\\)\\\"\\']+)\\)/i],[\"kwd\",/^(?:url|rgb|\\!important|@import|@page|@media|@charset|inherit)(?=[^\\-\\w]|$)/i,null],[\"lang-css-kw\",/^(-?(?:[_a-z]|(?:\\\\[0-9a-f]+ ?))(?:[_a-z0-9\\-]|\\\\(?:\\\\[0-9a-f]+ ?))*)\\s*:/i],[\"com\",/^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//],\n[\"com\",/^(?:\\x3c!--|--\\x3e)/],[\"lit\",/^(?:\\d+|\\d*\\.\\d+)(?:%|[a-z]+)?/i],[\"lit\",/^#(?:[0-9a-f]{3}){1,2}\\b/i],[\"pln\",/^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i],[\"pun\",/^[^\\s\\w\\'\\\"]+/]]),[\"css\"]);PR.registerLangHandler(PR.createSimpleLexer([],[[\"kwd\",/^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i]]),[\"css-kw\"]);PR.registerLangHandler(PR.createSimpleLexer([],[[\"str\",/^[^\\)\\\"\\']+/]]),[\"css-str\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","source":"plugins/google-code-prettify/lang-el.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","date":"2022-03-27T08:23:16.318Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-el.js","layout":"false","title":"","comments":1,"_id":"cl22h70ti00175oss3tscdewz","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n"},{"_content":"/*\n\n Copyright (C) 2013 Andrew Allen\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^\\?[^ \\t\\n({]+/,null,\"?\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\n]*/],[\"kwd\",/^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/],\n[\"kwd\",/^-[a-z_]+/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;]/]]),[\"erlang\",\"erl\"]);\n","source":"plugins/google-code-prettify/lang-erl.js","raw":"/*\n\n Copyright (C) 2013 Andrew Allen\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^\\?[^ \\t\\n({]+/,null,\"?\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\n]*/],[\"kwd\",/^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/],\n[\"kwd\",/^-[a-z_]+/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;]/]]),[\"erlang\",\"erl\"]);\n","date":"2022-03-27T08:23:16.319Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-erl.js","layout":"false","title":"","comments":1,"_id":"cl22h70tk001d5oss542693we","content":"/*\n\n Copyright (C) 2013 Andrew Allen\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^\\?[^ \\t\\n({]+/,null,\"?\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\n]*/],[\"kwd\",/^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/],\n[\"kwd\",/^-[a-z_]+/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;]/]]),[\"erlang\",\"erl\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Andrew Allen\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^\\?[^ \\t\\n({]+/,null,\"?\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\n]*/],[\"kwd\",/^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/],\n[\"kwd\",/^-[a-z_]+/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;]/]]),[\"erlang\",\"erl\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Andrew Allen\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^\\?[^ \\t\\n({]+/,null,\"?\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\n]*/],[\"kwd\",/^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/],\n[\"kwd\",/^-[a-z_]+/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;]/]]),[\"erlang\",\"erl\"]);\n","source":"plugins/google-code-prettify/lang-erlang.js","raw":"/*\n\n Copyright (C) 2013 Andrew Allen\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^\\?[^ \\t\\n({]+/,null,\"?\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\n]*/],[\"kwd\",/^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/],\n[\"kwd\",/^-[a-z_]+/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;]/]]),[\"erlang\",\"erl\"]);\n","date":"2022-03-27T08:23:16.320Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-erlang.js","layout":"false","title":"","comments":1,"_id":"cl22h70tl001h5oss1bolbt1r","content":"/*\n\n Copyright (C) 2013 Andrew Allen\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^\\?[^ \\t\\n({]+/,null,\"?\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\n]*/],[\"kwd\",/^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/],\n[\"kwd\",/^-[a-z_]+/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;]/]]),[\"erlang\",\"erl\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Andrew Allen\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^\\?[^ \\t\\n({]+/,null,\"?\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\n]*/],[\"kwd\",/^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/],\n[\"kwd\",/^-[a-z_]+/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;]/]]),[\"erlang\",\"erl\"]);\n"},{"_content":"/*\n\n Copyright (C) 2017 Jacek Kr??likowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#.*/,null,\"#\"],[\"lit\",/^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/,null,\"'\"],[\"atn\",/^@\\w+/,null,\"@\"],[\"pun\",/^[!%&()*+,\\-;<=>?\\[\\\\\\]^{|}]+/,null,\"!%&()*+,-;<=>?[\\\\]^{|}\"],[\"lit\",/^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/,null,\"0123456789\"]],[[\"atn\",/^iex(?:\\(\\d+\\))?> /],\n[\"pun\",/^::/],[\"lit\",/^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/],[\"atn\",/^(?:__(?:CALLER|ENV|MODULE|DIR)__)/],[\"kwd\",/^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/],[\"lit\",/^(?:true|false|nil)\\b/],[\"lit\",/^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/],[\"str\",/^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/],\n[\"str\",/^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/],[\"typ\",/^[A-Z]\\w*/],[\"com\",/^_\\w*/],[\"pln\",/^[$a-z]\\w*[\\!\\?]?/],[\"atv\",/^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i],[\"atv\",/^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i],[\"pun\",/^(?:\\.+|\\/|[:~])/]]),[\"ex\",\"exs\"]);\n","source":"plugins/google-code-prettify/lang-exs.js","raw":"/*\n\n Copyright (C) 2017 Jacek Kr??likowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#.*/,null,\"#\"],[\"lit\",/^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/,null,\"'\"],[\"atn\",/^@\\w+/,null,\"@\"],[\"pun\",/^[!%&()*+,\\-;<=>?\\[\\\\\\]^{|}]+/,null,\"!%&()*+,-;<=>?[\\\\]^{|}\"],[\"lit\",/^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/,null,\"0123456789\"]],[[\"atn\",/^iex(?:\\(\\d+\\))?> /],\n[\"pun\",/^::/],[\"lit\",/^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/],[\"atn\",/^(?:__(?:CALLER|ENV|MODULE|DIR)__)/],[\"kwd\",/^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/],[\"lit\",/^(?:true|false|nil)\\b/],[\"lit\",/^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/],[\"str\",/^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/],\n[\"str\",/^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/],[\"typ\",/^[A-Z]\\w*/],[\"com\",/^_\\w*/],[\"pln\",/^[$a-z]\\w*[\\!\\?]?/],[\"atv\",/^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i],[\"atv\",/^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i],[\"pun\",/^(?:\\.+|\\/|[:~])/]]),[\"ex\",\"exs\"]);\n","date":"2022-03-27T08:23:16.322Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-exs.js","layout":"false","title":"","comments":1,"_id":"cl22h70tp001l5osscmh149l5","content":"/*\n\n Copyright (C) 2017 Jacek Kr??likowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#.*/,null,\"#\"],[\"lit\",/^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/,null,\"'\"],[\"atn\",/^@\\w+/,null,\"@\"],[\"pun\",/^[!%&()*+,\\-;<=>?\\[\\\\\\]^{|}]+/,null,\"!%&()*+,-;<=>?[\\\\]^{|}\"],[\"lit\",/^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/,null,\"0123456789\"]],[[\"atn\",/^iex(?:\\(\\d+\\))?> /],\n[\"pun\",/^::/],[\"lit\",/^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/],[\"atn\",/^(?:__(?:CALLER|ENV|MODULE|DIR)__)/],[\"kwd\",/^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/],[\"lit\",/^(?:true|false|nil)\\b/],[\"lit\",/^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/],[\"str\",/^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/],\n[\"str\",/^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/],[\"typ\",/^[A-Z]\\w*/],[\"com\",/^_\\w*/],[\"pln\",/^[$a-z]\\w*[\\!\\?]?/],[\"atv\",/^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i],[\"atv\",/^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i],[\"pun\",/^(?:\\.+|\\/|[:~])/]]),[\"ex\",\"exs\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2017 Jacek Kr??likowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#.*/,null,\"#\"],[\"lit\",/^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/,null,\"'\"],[\"atn\",/^@\\w+/,null,\"@\"],[\"pun\",/^[!%&()*+,\\-;<=>?\\[\\\\\\]^{|}]+/,null,\"!%&()*+,-;<=>?[\\\\]^{|}\"],[\"lit\",/^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/,null,\"0123456789\"]],[[\"atn\",/^iex(?:\\(\\d+\\))?> /],\n[\"pun\",/^::/],[\"lit\",/^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/],[\"atn\",/^(?:__(?:CALLER|ENV|MODULE|DIR)__)/],[\"kwd\",/^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/],[\"lit\",/^(?:true|false|nil)\\b/],[\"lit\",/^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/],[\"str\",/^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/],\n[\"str\",/^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/],[\"typ\",/^[A-Z]\\w*/],[\"com\",/^_\\w*/],[\"pln\",/^[$a-z]\\w*[\\!\\?]?/],[\"atv\",/^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i],[\"atv\",/^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i],[\"pun\",/^(?:\\.+|\\/|[:~])/]]),[\"ex\",\"exs\"]);\n"},{"_content":"/*\n\n Copyright (C) 2017 Jacek Kr??likowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#.*/,null,\"#\"],[\"lit\",/^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/,null,\"'\"],[\"atn\",/^@\\w+/,null,\"@\"],[\"pun\",/^[!%&()*+,\\-;<=>?\\[\\\\\\]^{|}]+/,null,\"!%&()*+,-;<=>?[\\\\]^{|}\"],[\"lit\",/^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/,null,\"0123456789\"]],[[\"atn\",/^iex(?:\\(\\d+\\))?> /],\n[\"pun\",/^::/],[\"lit\",/^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/],[\"atn\",/^(?:__(?:CALLER|ENV|MODULE|DIR)__)/],[\"kwd\",/^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/],[\"lit\",/^(?:true|false|nil)\\b/],[\"lit\",/^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/],[\"str\",/^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/],\n[\"str\",/^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/],[\"typ\",/^[A-Z]\\w*/],[\"com\",/^_\\w*/],[\"pln\",/^[$a-z]\\w*[\\!\\?]?/],[\"atv\",/^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i],[\"atv\",/^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i],[\"pun\",/^(?:\\.+|\\/|[:~])/]]),[\"ex\",\"exs\"]);\n","source":"plugins/google-code-prettify/lang-ex.js","raw":"/*\n\n Copyright (C) 2017 Jacek Kr??likowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#.*/,null,\"#\"],[\"lit\",/^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/,null,\"'\"],[\"atn\",/^@\\w+/,null,\"@\"],[\"pun\",/^[!%&()*+,\\-;<=>?\\[\\\\\\]^{|}]+/,null,\"!%&()*+,-;<=>?[\\\\]^{|}\"],[\"lit\",/^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/,null,\"0123456789\"]],[[\"atn\",/^iex(?:\\(\\d+\\))?> /],\n[\"pun\",/^::/],[\"lit\",/^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/],[\"atn\",/^(?:__(?:CALLER|ENV|MODULE|DIR)__)/],[\"kwd\",/^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/],[\"lit\",/^(?:true|false|nil)\\b/],[\"lit\",/^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/],[\"str\",/^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/],\n[\"str\",/^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/],[\"typ\",/^[A-Z]\\w*/],[\"com\",/^_\\w*/],[\"pln\",/^[$a-z]\\w*[\\!\\?]?/],[\"atv\",/^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i],[\"atv\",/^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i],[\"pun\",/^(?:\\.+|\\/|[:~])/]]),[\"ex\",\"exs\"]);\n","date":"2022-03-27T08:23:16.321Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-ex.js","layout":"false","title":"","comments":1,"_id":"cl22h70tq001q5oss9mpth6hb","content":"/*\n\n Copyright (C) 2017 Jacek Kr??likowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#.*/,null,\"#\"],[\"lit\",/^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/,null,\"'\"],[\"atn\",/^@\\w+/,null,\"@\"],[\"pun\",/^[!%&()*+,\\-;<=>?\\[\\\\\\]^{|}]+/,null,\"!%&()*+,-;<=>?[\\\\]^{|}\"],[\"lit\",/^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/,null,\"0123456789\"]],[[\"atn\",/^iex(?:\\(\\d+\\))?> /],\n[\"pun\",/^::/],[\"lit\",/^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/],[\"atn\",/^(?:__(?:CALLER|ENV|MODULE|DIR)__)/],[\"kwd\",/^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/],[\"lit\",/^(?:true|false|nil)\\b/],[\"lit\",/^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/],[\"str\",/^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/],\n[\"str\",/^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/],[\"typ\",/^[A-Z]\\w*/],[\"com\",/^_\\w*/],[\"pln\",/^[$a-z]\\w*[\\!\\?]?/],[\"atv\",/^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i],[\"atv\",/^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i],[\"pun\",/^(?:\\.+|\\/|[:~])/]]),[\"ex\",\"exs\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2017 Jacek Kr??likowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#.*/,null,\"#\"],[\"lit\",/^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/,null,\"'\"],[\"atn\",/^@\\w+/,null,\"@\"],[\"pun\",/^[!%&()*+,\\-;<=>?\\[\\\\\\]^{|}]+/,null,\"!%&()*+,-;<=>?[\\\\]^{|}\"],[\"lit\",/^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/,null,\"0123456789\"]],[[\"atn\",/^iex(?:\\(\\d+\\))?> /],\n[\"pun\",/^::/],[\"lit\",/^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/],[\"atn\",/^(?:__(?:CALLER|ENV|MODULE|DIR)__)/],[\"kwd\",/^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/],[\"lit\",/^(?:true|false|nil)\\b/],[\"lit\",/^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/],[\"str\",/^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/],\n[\"str\",/^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/],[\"typ\",/^[A-Z]\\w*/],[\"com\",/^_\\w*/],[\"pln\",/^[$a-z]\\w*[\\!\\?]?/],[\"atv\",/^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i],[\"atv\",/^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i],[\"pun\",/^(?:\\.+|\\/|[:~])/]]),[\"ex\",\"exs\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i,null,\"#\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/],[\"kwd\",/^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/],\n[\"lit\",/^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i],[\"pun\",/^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/]]),[\"fs\",\"ml\"]);\n","source":"plugins/google-code-prettify/lang-fs.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i,null,\"#\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/],[\"kwd\",/^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/],\n[\"lit\",/^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i],[\"pun\",/^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/]]),[\"fs\",\"ml\"]);\n","date":"2022-03-27T08:23:16.323Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-fs.js","layout":"false","title":"","comments":1,"_id":"cl22h70ts001u5osscgzqe13i","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i,null,\"#\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/],[\"kwd\",/^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/],\n[\"lit\",/^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i],[\"pun\",/^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/]]),[\"fs\",\"ml\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i,null,\"#\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/],[\"kwd\",/^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/],\n[\"lit\",/^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i],[\"pun\",/^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/]]),[\"fs\",\"ml\"]);\n"},{"_content":"/*\n\n Copyright (C) 2010 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"pln\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])+(?:\\'|$)|`[^`]*(?:`|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\/)/],[\"pln\",/^(?:[^\\/\\\"\\'`]|\\/(?![\\/\\*]))+/i]]),[\"go\"]);\n","source":"plugins/google-code-prettify/lang-go.js","raw":"/*\n\n Copyright (C) 2010 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"pln\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])+(?:\\'|$)|`[^`]*(?:`|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\/)/],[\"pln\",/^(?:[^\\/\\\"\\'`]|\\/(?![\\/\\*]))+/i]]),[\"go\"]);\n","date":"2022-03-27T08:23:16.324Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-go.js","layout":"false","title":"","comments":1,"_id":"cl22h70tt001z5ossfwb8cc8i","content":"/*\n\n Copyright (C) 2010 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"pln\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])+(?:\\'|$)|`[^`]*(?:`|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\/)/],[\"pln\",/^(?:[^\\/\\\"\\'`]|\\/(?![\\/\\*]))+/i]]),[\"go\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2010 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"pln\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])+(?:\\'|$)|`[^`]*(?:`|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\/)/],[\"pln\",/^(?:[^\\/\\\"\\'`]|\\/(?![\\/\\*]))+/i]]),[\"go\"]);\n"},{"_content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])\\'?/,null,\"'\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^(?:(?:--+(?:[^\\r\\n\\x0C]*)?)|(?:\\{-(?:[^-]|-+[^-\\}])*-\\}))/],[\"kwd\",/^(?:case|class|data|default|deriving|do|else|if|import|in|infix|infixl|infixr|instance|let|module|newtype|of|then|type|where|_)(?=[^a-zA-Z0-9\\']|$)/,\nnull],[\"pln\",/^(?:[A-Z][\\w\\']*\\.)*[a-zA-Z][\\w\\']*/],[\"pun\",/^[^\\t\\n\\x0B\\x0C\\r a-zA-Z0-9\\'\\\"]+/]]),[\"hs\"]);\n","source":"plugins/google-code-prettify/lang-hs.js","raw":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])\\'?/,null,\"'\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^(?:(?:--+(?:[^\\r\\n\\x0C]*)?)|(?:\\{-(?:[^-]|-+[^-\\}])*-\\}))/],[\"kwd\",/^(?:case|class|data|default|deriving|do|else|if|import|in|infix|infixl|infixr|instance|let|module|newtype|of|then|type|where|_)(?=[^a-zA-Z0-9\\']|$)/,\nnull],[\"pln\",/^(?:[A-Z][\\w\\']*\\.)*[a-zA-Z][\\w\\']*/],[\"pun\",/^[^\\t\\n\\x0B\\x0C\\r a-zA-Z0-9\\'\\\"]+/]]),[\"hs\"]);\n","date":"2022-03-27T08:23:16.325Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-hs.js","layout":"false","title":"","comments":1,"_id":"cl22h70tw00225ossfisna6if","content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])\\'?/,null,\"'\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^(?:(?:--+(?:[^\\r\\n\\x0C]*)?)|(?:\\{-(?:[^-]|-+[^-\\}])*-\\}))/],[\"kwd\",/^(?:case|class|data|default|deriving|do|else|if|import|in|infix|infixl|infixr|instance|let|module|newtype|of|then|type|where|_)(?=[^a-zA-Z0-9\\']|$)/,\nnull],[\"pln\",/^(?:[A-Z][\\w\\']*\\.)*[a-zA-Z][\\w\\']*/],[\"pun\",/^[^\\t\\n\\x0B\\x0C\\r a-zA-Z0-9\\'\\\"]+/]]),[\"hs\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])\\'?/,null,\"'\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^(?:(?:--+(?:[^\\r\\n\\x0C]*)?)|(?:\\{-(?:[^-]|-+[^-\\}])*-\\}))/],[\"kwd\",/^(?:case|class|data|default|deriving|do|else|if|import|in|infix|infixl|infixr|instance|let|module|newtype|of|then|type|where|_)(?=[^a-zA-Z0-9\\']|$)/,\nnull],[\"pln\",/^(?:[A-Z][\\w\\']*\\.)*[a-zA-Z][\\w\\']*/],[\"pun\",/^[^\\t\\n\\x0B\\x0C\\r a-zA-Z0-9\\'\\\"]+/]]),[\"hs\"]);\n"},{"_content":"/*\n\n Copyright (C) 2017 Micha?? B??czkowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"pun\",/^[.!%&()*+,\\-;<=>?\\[\\\\\\]^{|}:]+/,null,\".!%&()*+,-;<=>?[\\\\]^{|}:\"]],[[\"kwd\",/^\\b(package|public|protected|private|open|abstract|constructor|final|override|import|for|while|as|typealias|get|set|((data|enum|annotation|sealed) )?class|this|super|val|var|fun|is|in|throw|return|break|continue|(companion )?object|if|try|else|do|when|init|interface|typeof)\\b/],[\"lit\",/^(?:true|false|null)\\b/],\n[\"lit\",/^(0[xX][0-9a-fA-F_]+L?|0[bB][0-1]+L?|[0-9_.]+([eE]-?[0-9]+)?[fFL]?)/],[\"typ\",/^(\\b[A-Z]+[a-z][a-zA-Z0-9_$@]*|`.*`)/,null],[\"com\",/^\\/\\/.*/],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],[\"str\",/'.'/],[\"str\",/^\"([^\"\\\\]|\\\\[\\s\\S])*\"/],[\"str\",/^\"{3}[\\s\\S]*?[^\\\\]\"{3}/],[\"lit\",/^@([a-zA-Z0-9_$@]*|`.*`)/],[\"lit\",/^[a-zA-Z0-9_]+@/]]),[\"kotlin\"]);\n","source":"plugins/google-code-prettify/lang-kotlin.js","raw":"/*\n\n Copyright (C) 2017 Micha?? B??czkowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"pun\",/^[.!%&()*+,\\-;<=>?\\[\\\\\\]^{|}:]+/,null,\".!%&()*+,-;<=>?[\\\\]^{|}:\"]],[[\"kwd\",/^\\b(package|public|protected|private|open|abstract|constructor|final|override|import|for|while|as|typealias|get|set|((data|enum|annotation|sealed) )?class|this|super|val|var|fun|is|in|throw|return|break|continue|(companion )?object|if|try|else|do|when|init|interface|typeof)\\b/],[\"lit\",/^(?:true|false|null)\\b/],\n[\"lit\",/^(0[xX][0-9a-fA-F_]+L?|0[bB][0-1]+L?|[0-9_.]+([eE]-?[0-9]+)?[fFL]?)/],[\"typ\",/^(\\b[A-Z]+[a-z][a-zA-Z0-9_$@]*|`.*`)/,null],[\"com\",/^\\/\\/.*/],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],[\"str\",/'.'/],[\"str\",/^\"([^\"\\\\]|\\\\[\\s\\S])*\"/],[\"str\",/^\"{3}[\\s\\S]*?[^\\\\]\"{3}/],[\"lit\",/^@([a-zA-Z0-9_$@]*|`.*`)/],[\"lit\",/^[a-zA-Z0-9_]+@/]]),[\"kotlin\"]);\n","date":"2022-03-27T08:23:16.325Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-kotlin.js","layout":"false","title":"","comments":1,"_id":"cl22h70ty00275ossc1yg1y2b","content":"/*\n\n Copyright (C) 2017 Micha?? B??czkowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"pun\",/^[.!%&()*+,\\-;<=>?\\[\\\\\\]^{|}:]+/,null,\".!%&()*+,-;<=>?[\\\\]^{|}:\"]],[[\"kwd\",/^\\b(package|public|protected|private|open|abstract|constructor|final|override|import|for|while|as|typealias|get|set|((data|enum|annotation|sealed) )?class|this|super|val|var|fun|is|in|throw|return|break|continue|(companion )?object|if|try|else|do|when|init|interface|typeof)\\b/],[\"lit\",/^(?:true|false|null)\\b/],\n[\"lit\",/^(0[xX][0-9a-fA-F_]+L?|0[bB][0-1]+L?|[0-9_.]+([eE]-?[0-9]+)?[fFL]?)/],[\"typ\",/^(\\b[A-Z]+[a-z][a-zA-Z0-9_$@]*|`.*`)/,null],[\"com\",/^\\/\\/.*/],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],[\"str\",/'.'/],[\"str\",/^\"([^\"\\\\]|\\\\[\\s\\S])*\"/],[\"str\",/^\"{3}[\\s\\S]*?[^\\\\]\"{3}/],[\"lit\",/^@([a-zA-Z0-9_$@]*|`.*`)/],[\"lit\",/^[a-zA-Z0-9_]+@/]]),[\"kotlin\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2017 Micha?? B??czkowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"pun\",/^[.!%&()*+,\\-;<=>?\\[\\\\\\]^{|}:]+/,null,\".!%&()*+,-;<=>?[\\\\]^{|}:\"]],[[\"kwd\",/^\\b(package|public|protected|private|open|abstract|constructor|final|override|import|for|while|as|typealias|get|set|((data|enum|annotation|sealed) )?class|this|super|val|var|fun|is|in|throw|return|break|continue|(companion )?object|if|try|else|do|when|init|interface|typeof)\\b/],[\"lit\",/^(?:true|false|null)\\b/],\n[\"lit\",/^(0[xX][0-9a-fA-F_]+L?|0[bB][0-1]+L?|[0-9_.]+([eE]-?[0-9]+)?[fFL]?)/],[\"typ\",/^(\\b[A-Z]+[a-z][a-zA-Z0-9_$@]*|`.*`)/,null],[\"com\",/^\\/\\/.*/],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],[\"str\",/'.'/],[\"str\",/^\"([^\"\\\\]|\\\\[\\s\\S])*\"/],[\"str\",/^\"{3}[\\s\\S]*?[^\\\\]\"{3}/],[\"lit\",/^@([a-zA-Z0-9_$@]*|`.*`)/],[\"lit\",/^[a-zA-Z0-9_]+@/]]),[\"kotlin\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","source":"plugins/google-code-prettify/lang-lassoscript.js","raw":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","date":"2022-03-27T08:23:16.328Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-lassoscript.js","layout":"false","title":"","comments":1,"_id":"cl22h70tz002a5oss8hb23h87","content":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","source":"plugins/google-code-prettify/lang-lasso.js","raw":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","date":"2022-03-27T08:23:16.327Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-lasso.js","layout":"false","title":"","comments":1,"_id":"cl22h70u1002f5osshayu1ful","content":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n"},{"_content":"/*\n\n Copyright (C) 2011 Martin S.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^\\\\./],[\"typ\",/^[$&]/],[\"lit\",/[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i],[\"pun\",/^[{}()\\[\\]=]+/]]),[\"latex\",\"tex\"]);\n","source":"plugins/google-code-prettify/lang-latex.js","raw":"/*\n\n Copyright (C) 2011 Martin S.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^\\\\./],[\"typ\",/^[$&]/],[\"lit\",/[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i],[\"pun\",/^[{}()\\[\\]=]+/]]),[\"latex\",\"tex\"]);\n","date":"2022-03-27T08:23:16.329Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-latex.js","layout":"false","title":"","comments":1,"_id":"cl22h70u3002j5oss0zcf4pck","content":"/*\n\n Copyright (C) 2011 Martin S.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^\\\\./],[\"typ\",/^[$&]/],[\"lit\",/[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i],[\"pun\",/^[{}()\\[\\]=]+/]]),[\"latex\",\"tex\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2011 Martin S.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^\\\\./],[\"typ\",/^[$&]/],[\"lit\",/[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i],[\"pun\",/^[{}()\\[\\]=]+/]]),[\"latex\",\"tex\"]);\n"},{"_content":"/*\n\n Copyright (C) 2014 Paulo Moura\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\r\\n]*/,null,\"%\"],[\"com\",/^\\/\\*[\\s\\S]*?\\*\\//],[\"kwd\",/^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/],\n[\"kwd\",/^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;{}:^<>=\\\\/+*?#!-]/]]),[\"logtalk\",\"lgt\"]);\n","source":"plugins/google-code-prettify/lang-lgt.js","raw":"/*\n\n Copyright (C) 2014 Paulo Moura\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\r\\n]*/,null,\"%\"],[\"com\",/^\\/\\*[\\s\\S]*?\\*\\//],[\"kwd\",/^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/],\n[\"kwd\",/^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;{}:^<>=\\\\/+*?#!-]/]]),[\"logtalk\",\"lgt\"]);\n","date":"2022-03-27T08:23:16.330Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-lgt.js","layout":"false","title":"","comments":1,"_id":"cl22h70u5002o5ossfm6lhr5y","content":"/*\n\n Copyright (C) 2014 Paulo Moura\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\r\\n]*/,null,\"%\"],[\"com\",/^\\/\\*[\\s\\S]*?\\*\\//],[\"kwd\",/^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/],\n[\"kwd\",/^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;{}:^<>=\\\\/+*?#!-]/]]),[\"logtalk\",\"lgt\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2014 Paulo Moura\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\r\\n]*/,null,\"%\"],[\"com\",/^\\/\\*[\\s\\S]*?\\*\\//],[\"kwd\",/^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/],\n[\"kwd\",/^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;{}:^<>=\\\\/+*?#!-]/]]),[\"logtalk\",\"lgt\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","source":"plugins/google-code-prettify/lang-lisp.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","date":"2022-03-27T08:23:16.332Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-lisp.js","layout":"false","title":"","comments":1,"_id":"cl22h70u6002s5oss1uxrenlf","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n"},{"_content":"/*\n\n Copyright (C) 2013 Nikhil Dabas\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"com\",/^;[^\\r\\n]*/,null,\";\"]],[[\"pln\",/^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/],[\"kwd\",/^[A-Za-z_][0-9A-Za-z_]*/,null],[\"lit\",/^\\d+\\.\\d+/],[\"lit\",/^(?:\\d+|0[xX][a-fA-F0-9]+)/],[\"pun\",/^[()\\[\\]{},=*<>:]|\\.\\.\\.$/]]),[\"llvm\",\"ll\"]);\n","source":"plugins/google-code-prettify/lang-llvm.js","raw":"/*\n\n Copyright (C) 2013 Nikhil Dabas\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"com\",/^;[^\\r\\n]*/,null,\";\"]],[[\"pln\",/^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/],[\"kwd\",/^[A-Za-z_][0-9A-Za-z_]*/,null],[\"lit\",/^\\d+\\.\\d+/],[\"lit\",/^(?:\\d+|0[xX][a-fA-F0-9]+)/],[\"pun\",/^[()\\[\\]{},=*<>:]|\\.\\.\\.$/]]),[\"llvm\",\"ll\"]);\n","date":"2022-03-27T08:23:16.334Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-llvm.js","layout":"false","title":"","comments":1,"_id":"cl22h70u7002x5oss4m9w1zug","content":"/*\n\n Copyright (C) 2013 Nikhil Dabas\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"com\",/^;[^\\r\\n]*/,null,\";\"]],[[\"pln\",/^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/],[\"kwd\",/^[A-Za-z_][0-9A-Za-z_]*/,null],[\"lit\",/^\\d+\\.\\d+/],[\"lit\",/^(?:\\d+|0[xX][a-fA-F0-9]+)/],[\"pun\",/^[()\\[\\]{},=*<>:]|\\.\\.\\.$/]]),[\"llvm\",\"ll\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Nikhil Dabas\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"com\",/^;[^\\r\\n]*/,null,\";\"]],[[\"pln\",/^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/],[\"kwd\",/^[A-Za-z_][0-9A-Za-z_]*/,null],[\"lit\",/^\\d+\\.\\d+/],[\"lit\",/^(?:\\d+|0[xX][a-fA-F0-9]+)/],[\"pun\",/^[()\\[\\]{},=*<>:]|\\.\\.\\.$/]]),[\"llvm\",\"ll\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Nikhil Dabas\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"com\",/^;[^\\r\\n]*/,null,\";\"]],[[\"pln\",/^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/],[\"kwd\",/^[A-Za-z_][0-9A-Za-z_]*/,null],[\"lit\",/^\\d+\\.\\d+/],[\"lit\",/^(?:\\d+|0[xX][a-fA-F0-9]+)/],[\"pun\",/^[()\\[\\]{},=*<>:]|\\.\\.\\.$/]]),[\"llvm\",\"ll\"]);\n","source":"plugins/google-code-prettify/lang-ll.js","raw":"/*\n\n Copyright (C) 2013 Nikhil Dabas\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"com\",/^;[^\\r\\n]*/,null,\";\"]],[[\"pln\",/^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/],[\"kwd\",/^[A-Za-z_][0-9A-Za-z_]*/,null],[\"lit\",/^\\d+\\.\\d+/],[\"lit\",/^(?:\\d+|0[xX][a-fA-F0-9]+)/],[\"pun\",/^[()\\[\\]{},=*<>:]|\\.\\.\\.$/]]),[\"llvm\",\"ll\"]);\n","date":"2022-03-27T08:23:16.333Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-ll.js","layout":"false","title":"","comments":1,"_id":"cl22h70u800305oss33ah0mo8","content":"/*\n\n Copyright (C) 2013 Nikhil Dabas\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"com\",/^;[^\\r\\n]*/,null,\";\"]],[[\"pln\",/^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/],[\"kwd\",/^[A-Za-z_][0-9A-Za-z_]*/,null],[\"lit\",/^\\d+\\.\\d+/],[\"lit\",/^(?:\\d+|0[xX][a-fA-F0-9]+)/],[\"pun\",/^[()\\[\\]{},=*<>:]|\\.\\.\\.$/]]),[\"llvm\",\"ll\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Nikhil Dabas\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"com\",/^;[^\\r\\n]*/,null,\";\"]],[[\"pln\",/^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/],[\"kwd\",/^[A-Za-z_][0-9A-Za-z_]*/,null],[\"lit\",/^\\d+\\.\\d+/],[\"lit\",/^(?:\\d+|0[xX][a-fA-F0-9]+)/],[\"pun\",/^[()\\[\\]{},=*<>:]|\\.\\.\\.$/]]),[\"llvm\",\"ll\"]);\n"},{"_content":"/*\n\n Copyright (C) 2014 Paulo Moura\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\r\\n]*/,null,\"%\"],[\"com\",/^\\/\\*[\\s\\S]*?\\*\\//],[\"kwd\",/^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/],\n[\"kwd\",/^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;{}:^<>=\\\\/+*?#!-]/]]),[\"logtalk\",\"lgt\"]);\n","source":"plugins/google-code-prettify/lang-logtalk.js","raw":"/*\n\n Copyright (C) 2014 Paulo Moura\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\r\\n]*/,null,\"%\"],[\"com\",/^\\/\\*[\\s\\S]*?\\*\\//],[\"kwd\",/^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/],\n[\"kwd\",/^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;{}:^<>=\\\\/+*?#!-]/]]),[\"logtalk\",\"lgt\"]);\n","date":"2022-03-27T08:23:16.335Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-logtalk.js","layout":"false","title":"","comments":1,"_id":"cl22h70ua00365oss3tzd66cm","content":"/*\n\n Copyright (C) 2014 Paulo Moura\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\r\\n]*/,null,\"%\"],[\"com\",/^\\/\\*[\\s\\S]*?\\*\\//],[\"kwd\",/^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/],\n[\"kwd\",/^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;{}:^<>=\\\\/+*?#!-]/]]),[\"logtalk\",\"lgt\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2014 Paulo Moura\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\r\\n]*/,null,\"%\"],[\"com\",/^\\/\\*[\\s\\S]*?\\*\\//],[\"kwd\",/^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/],\n[\"kwd\",/^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;{}:^<>=\\\\/+*?#!-]/]]),[\"logtalk\",\"lgt\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","source":"plugins/google-code-prettify/lang-ls.js","raw":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","date":"2022-03-27T08:23:16.338Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-ls.js","layout":"false","title":"","comments":1,"_id":"cl22h70ub00385oss6rwn2b1e","content":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","source":"plugins/google-code-prettify/lang-lsp.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","date":"2022-03-27T08:23:16.339Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-lsp.js","layout":"false","title":"","comments":1,"_id":"cl22h70ud003d5ossaam51cpf","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^--(?:\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)|[^\\r\\n]*)/],[\"str\",/^\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)/],[\"kwd\",/^(?:and|break|do|else|elseif|end|false|for|function|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,null],[\"lit\",/^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],\n[\"pln\",/^[a-z_]\\w*/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0][^\\w\\t\\n\\r \\xA0\\\"\\'\\-\\+=]*/]]),[\"lua\"]);\n","source":"plugins/google-code-prettify/lang-lua.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^--(?:\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)|[^\\r\\n]*)/],[\"str\",/^\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)/],[\"kwd\",/^(?:and|break|do|else|elseif|end|false|for|function|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,null],[\"lit\",/^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],\n[\"pln\",/^[a-z_]\\w*/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0][^\\w\\t\\n\\r \\xA0\\\"\\'\\-\\+=]*/]]),[\"lua\"]);\n","date":"2022-03-27T08:23:16.340Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-lua.js","layout":"false","title":"","comments":1,"_id":"cl22h70ue003g5oss37bi3wqp","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^--(?:\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)|[^\\r\\n]*)/],[\"str\",/^\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)/],[\"kwd\",/^(?:and|break|do|else|elseif|end|false|for|function|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,null],[\"lit\",/^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],\n[\"pln\",/^[a-z_]\\w*/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0][^\\w\\t\\n\\r \\xA0\\\"\\'\\-\\+=]*/]]),[\"lua\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^--(?:\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)|[^\\r\\n]*)/],[\"str\",/^\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)/],[\"kwd\",/^(?:and|break|do|else|elseif|end|false|for|function|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,null],[\"lit\",/^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],\n[\"pln\",/^[a-z_]\\w*/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0][^\\w\\t\\n\\r \\xA0\\\"\\'\\-\\+=]*/]]),[\"lua\"]);\n"},{"_content":"/*\n\n Copyright (c) 2013 by Amro <amroamroamro@gmail.com>\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\nvar a=window.PR,b=[[a.PR_PLAIN,/^[ \\t\\r\\n\\v\\f\\xA0]+/,null,\" \\t\\r\\n\\x0B\\f\\u00a0\"],[a.PR_COMMENT,/^%\\{[^%]*%+(?:[^\\}%][^%]*%+)*\\}/,null],[a.PR_COMMENT,/^%[^\\r\\n]*/,null,\"%\"],[\"syscmd\",/^![^\\r\\n]*/,null,\"!\"]],c=[[\"linecont\",/^\\.\\.\\.\\s*[\\r\\n]/,null],[\"err\",/^\\?\\?\\? [^\\r\\n]*/,null],[\"wrn\",/^Warning: [^\\r\\n]*/,null],[\"codeoutput\",/^>>\\s+/,null],[\"codeoutput\",/^octave:\\d+>\\s+/,null],[\"lang-matlab-operators\",/^((?:[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*|\\)|\\]|\\}|\\.)')/,null],[\"lang-matlab-identifiers\",\n/^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)(?!')/,null],[a.PR_STRING,/^'(?:[^']|'')*'/,null],[a.PR_LITERAL,/^[+\\-]?\\.?\\d+(?:\\.\\d*)?(?:[Ee][+\\-]?\\d+)?[ij]?/,null],[a.PR_TAG,/^(?:\\{|\\}|\\(|\\)|\\[|\\])/,null],[a.PR_PUNCTUATION,/^(?:<|>|=|~|@|&|;|,|:|!|\\-|\\+|\\*|\\^|\\.|\\||\\\\|\\/)/,null]],d=[[\"lang-matlab-identifiers\",/^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)/,null],[a.PR_TAG,/^(?:\\{|\\}|\\(|\\)|\\[|\\])/,null],[a.PR_PUNCTUATION,/^(?:<|>|=|~|@|&|;|,|:|!|\\-|\\+|\\*|\\^|\\.|\\||\\\\|\\/)/,null],[\"transpose\",\n/^'/,null]];\na.registerLangHandler(a.createSimpleLexer([],[[a.PR_KEYWORD,/^\\b(?:break|case|catch|classdef|continue|else|elseif|end|for|function|global|if|otherwise|parfor|persistent|return|spmd|switch|try|while)\\b/,null],[\"const\",/^\\b(?:true|false|inf|Inf|nan|NaN|eps|pi|ans|nargin|nargout|varargin|varargout)\\b/,null],[a.PR_TYPE,/^\\b(?:cell|struct|char|double|single|logical|u?int(?:8|16|32|64)|sparse)\\b/,null],[\"fun\",/^\\b(?:abs|accumarray|acos(?:d|h)?|acot(?:d|h)?|acsc(?:d|h)?|actxcontrol(?:list|select)?|actxGetRunningServer|actxserver|addlistener|addpath|addpref|addtodate|airy|align|alim|all|allchild|alpha|alphamap|amd|ancestor|and|angle|annotation|any|area|arrayfun|asec(?:d|h)?|asin(?:d|h)?|assert|assignin|atan(?:2|d|h)?|audiodevinfo|audioplayer|audiorecorder|aufinfo|auread|autumn|auwrite|avifile|aviinfo|aviread|axes|axis|balance|bar(?:3|3h|h)?|base2dec|beep|BeginInvoke|bench|bessel(?:h|i|j|k|y)|beta|betainc|betaincinv|betaln|bicg|bicgstab|bicgstabl|bin2dec|bitand|bitcmp|bitget|bitmax|bitnot|bitor|bitset|bitshift|bitxor|blanks|blkdiag|bone|box|brighten|brush|bsxfun|builddocsearchdb|builtin|bvp4c|bvp5c|bvpget|bvpinit|bvpset|bvpxtend|calendar|calllib|callSoapService|camdolly|cameratoolbar|camlight|camlookat|camorbit|campan|campos|camproj|camroll|camtarget|camup|camva|camzoom|cart2pol|cart2sph|cast|cat|caxis|cd|cdf2rdf|cdfepoch|cdfinfo|cdflib(?:.(?:close|closeVar|computeEpoch|computeEpoch16|create|createAttr|createVar|delete|deleteAttr|deleteAttrEntry|deleteAttrgEntry|deleteVar|deleteVarRecords|epoch16Breakdown|epochBreakdown|getAttrEntry|getAttrgEntry|getAttrMaxEntry|getAttrMaxgEntry|getAttrName|getAttrNum|getAttrScope|getCacheSize|getChecksum|getCompression|getCompressionCacheSize|getConstantNames|getConstantValue|getCopyright|getFileBackward|getFormat|getLibraryCopyright|getLibraryVersion|getMajority|getName|getNumAttrEntries|getNumAttrgEntries|getNumAttributes|getNumgAttributes|getReadOnlyMode|getStageCacheSize|getValidate|getVarAllocRecords|getVarBlockingFactor|getVarCacheSize|getVarCompression|getVarData|getVarMaxAllocRecNum|getVarMaxWrittenRecNum|getVarName|getVarNum|getVarNumRecsWritten|getVarPadValue|getVarRecordData|getVarReservePercent|getVarsMaxWrittenRecNum|getVarSparseRecords|getVersion|hyperGetVarData|hyperPutVarData|inquire|inquireAttr|inquireAttrEntry|inquireAttrgEntry|inquireVar|open|putAttrEntry|putAttrgEntry|putVarData|putVarRecordData|renameAttr|renameVar|setCacheSize|setChecksum|setCompression|setCompressionCacheSize|setFileBackward|setFormat|setMajority|setReadOnlyMode|setStageCacheSize|setValidate|setVarAllocBlockRecords|setVarBlockingFactor|setVarCacheSize|setVarCompression|setVarInitialRecs|setVarPadValue|SetVarReservePercent|setVarsCacheSize|setVarSparseRecords))?|cdfread|cdfwrite|ceil|cell2mat|cell2struct|celldisp|cellfun|cellplot|cellstr|cgs|checkcode|checkin|checkout|chol|cholinc|cholupdate|circshift|cla|clabel|class|clc|clear|clearvars|clf|clipboard|clock|close|closereq|cmopts|cmpermute|cmunique|colamd|colon|colorbar|colordef|colormap|colormapeditor|colperm|Combine|comet|comet3|commandhistory|commandwindow|compan|compass|complex|computer|cond|condeig|condest|coneplot|conj|containers.Map|contour(?:3|c|f|slice)?|contrast|conv|conv2|convhull|convhulln|convn|cool|copper|copyfile|copyobj|corrcoef|cos(?:d|h)?|cot(?:d|h)?|cov|cplxpair|cputime|createClassFromWsdl|createSoapMessage|cross|csc(?:d|h)?|csvread|csvwrite|ctranspose|cumprod|cumsum|cumtrapz|curl|customverctrl|cylinder|daqread|daspect|datacursormode|datatipinfo|date|datenum|datestr|datetick|datevec|dbclear|dbcont|dbdown|dblquad|dbmex|dbquit|dbstack|dbstatus|dbstep|dbstop|dbtype|dbup|dde23|ddeget|ddesd|ddeset|deal|deblank|dec2base|dec2bin|dec2hex|decic|deconv|del2|delaunay|delaunay3|delaunayn|DelaunayTri|delete|demo|depdir|depfun|det|detrend|deval|diag|dialog|diary|diff|diffuse|dir|disp|display|dither|divergence|dlmread|dlmwrite|dmperm|doc|docsearch|dos|dot|dragrect|drawnow|dsearch|dsearchn|dynamicprops|echo|echodemo|edit|eig|eigs|ellipj|ellipke|ellipsoid|empty|enableNETfromNetworkDrive|enableservice|EndInvoke|enumeration|eomday|eq|erf|erfc|erfcinv|erfcx|erfinv|error|errorbar|errordlg|etime|etree|etreeplot|eval|evalc|evalin|event.(?:EventData|listener|PropertyEvent|proplistener)|exifread|exist|exit|exp|expint|expm|expm1|export2wsdlg|eye|ezcontour|ezcontourf|ezmesh|ezmeshc|ezplot|ezplot3|ezpolar|ezsurf|ezsurfc|factor|factorial|fclose|feather|feature|feof|ferror|feval|fft|fft2|fftn|fftshift|fftw|fgetl|fgets|fieldnames|figure|figurepalette|fileattrib|filebrowser|filemarker|fileparts|fileread|filesep|fill|fill3|filter|filter2|find|findall|findfigs|findobj|findstr|finish|fitsdisp|fitsinfo|fitsread|fitswrite|fix|flag|flipdim|fliplr|flipud|floor|flow|fminbnd|fminsearch|fopen|format|fplot|fprintf|frame2im|fread|freqspace|frewind|fscanf|fseek|ftell|FTP|full|fullfile|func2str|functions|funm|fwrite|fzero|gallery|gamma|gammainc|gammaincinv|gammaln|gca|gcbf|gcbo|gcd|gcf|gco|ge|genpath|genvarname|get|getappdata|getenv|getfield|getframe|getpixelposition|getpref|ginput|gmres|gplot|grabcode|gradient|gray|graymon|grid|griddata(?:3|n)?|griddedInterpolant|gsvd|gt|gtext|guidata|guide|guihandles|gunzip|gzip|h5create|h5disp|h5info|h5read|h5readatt|h5write|h5writeatt|hadamard|handle|hankel|hdf|hdf5|hdf5info|hdf5read|hdf5write|hdfinfo|hdfread|hdftool|help|helpbrowser|helpdesk|helpdlg|helpwin|hess|hex2dec|hex2num|hgexport|hggroup|hgload|hgsave|hgsetget|hgtransform|hidden|hilb|hist|histc|hold|home|horzcat|hostid|hot|hsv|hsv2rgb|hypot|ichol|idivide|ifft|ifft2|ifftn|ifftshift|ilu|im2frame|im2java|imag|image|imagesc|imapprox|imfinfo|imformats|import|importdata|imread|imwrite|ind2rgb|ind2sub|inferiorto|info|inline|inmem|inpolygon|input|inputdlg|inputname|inputParser|inspect|instrcallback|instrfind|instrfindall|int2str|integral(?:2|3)?|interp(?:1|1q|2|3|ft|n)|interpstreamspeed|intersect|intmax|intmin|inv|invhilb|ipermute|isa|isappdata|iscell|iscellstr|ischar|iscolumn|isdir|isempty|isequal|isequaln|isequalwithequalnans|isfield|isfinite|isfloat|isglobal|ishandle|ishghandle|ishold|isinf|isinteger|isjava|iskeyword|isletter|islogical|ismac|ismatrix|ismember|ismethod|isnan|isnumeric|isobject|isocaps|isocolors|isonormals|isosurface|ispc|ispref|isprime|isprop|isreal|isrow|isscalar|issorted|isspace|issparse|isstr|isstrprop|isstruct|isstudent|isunix|isvarname|isvector|javaaddpath|javaArray|javachk|javaclasspath|javacomponent|javaMethod|javaMethodEDT|javaObject|javaObjectEDT|javarmpath|jet|keyboard|kron|lasterr|lasterror|lastwarn|lcm|ldivide|ldl|le|legend|legendre|length|libfunctions|libfunctionsview|libisloaded|libpointer|libstruct|license|light|lightangle|lighting|lin2mu|line|lines|linkaxes|linkdata|linkprop|linsolve|linspace|listdlg|listfonts|load|loadlibrary|loadobj|log|log10|log1p|log2|loglog|logm|logspace|lookfor|lower|ls|lscov|lsqnonneg|lsqr|lt|lu|luinc|magic|makehgtform|mat2cell|mat2str|material|matfile|matlab.io.MatFile|matlab.mixin.(?:Copyable|Heterogeneous(?:.getDefaultScalarElement)?)|matlabrc|matlabroot|max|maxNumCompThreads|mean|median|membrane|memmapfile|memory|menu|mesh|meshc|meshgrid|meshz|meta.(?:class(?:.fromName)?|DynamicProperty|EnumeratedValue|event|MetaData|method|package(?:.(?:fromName|getAllPackages))?|property)|metaclass|methods|methodsview|mex(?:.getCompilerConfigurations)?|MException|mexext|mfilename|min|minres|minus|mislocked|mkdir|mkpp|mldivide|mlint|mlintrpt|mlock|mmfileinfo|mmreader|mod|mode|more|move|movefile|movegui|movie|movie2avi|mpower|mrdivide|msgbox|mtimes|mu2lin|multibandread|multibandwrite|munlock|namelengthmax|nargchk|narginchk|nargoutchk|native2unicode|nccreate|ncdisp|nchoosek|ncinfo|ncread|ncreadatt|ncwrite|ncwriteatt|ncwriteschema|ndgrid|ndims|ne|NET(?:.(?:addAssembly|Assembly|convertArray|createArray|createGeneric|disableAutoRelease|enableAutoRelease|GenericClass|invokeGenericMethod|NetException|setStaticProperty))?|netcdf.(?:abort|close|copyAtt|create|defDim|defGrp|defVar|defVarChunking|defVarDeflate|defVarFill|defVarFletcher32|delAtt|endDef|getAtt|getChunkCache|getConstant|getConstantNames|getVar|inq|inqAtt|inqAttID|inqAttName|inqDim|inqDimID|inqDimIDs|inqFormat|inqGrpName|inqGrpNameFull|inqGrpParent|inqGrps|inqLibVers|inqNcid|inqUnlimDims|inqVar|inqVarChunking|inqVarDeflate|inqVarFill|inqVarFletcher32|inqVarID|inqVarIDs|open|putAtt|putVar|reDef|renameAtt|renameDim|renameVar|setChunkCache|setDefaultFormat|setFill|sync)|newplot|nextpow2|nnz|noanimate|nonzeros|norm|normest|not|notebook|now|nthroot|null|num2cell|num2hex|num2str|numel|nzmax|ode(?:113|15i|15s|23|23s|23t|23tb|45)|odeget|odeset|odextend|onCleanup|ones|open|openfig|opengl|openvar|optimget|optimset|or|ordeig|orderfields|ordqz|ordschur|orient|orth|pack|padecoef|pagesetupdlg|pan|pareto|parseSoapResponse|pascal|patch|path|path2rc|pathsep|pathtool|pause|pbaspect|pcg|pchip|pcode|pcolor|pdepe|pdeval|peaks|perl|perms|permute|pie|pink|pinv|planerot|playshow|plot|plot3|plotbrowser|plotedit|plotmatrix|plottools|plotyy|plus|pol2cart|polar|poly|polyarea|polyder|polyeig|polyfit|polyint|polyval|polyvalm|pow2|power|ppval|prefdir|preferences|primes|print|printdlg|printopt|printpreview|prod|profile|profsave|propedit|propertyeditor|psi|publish|PutCharArray|PutFullMatrix|PutWorkspaceData|pwd|qhull|qmr|qr|qrdelete|qrinsert|qrupdate|quad|quad2d|quadgk|quadl|quadv|questdlg|quit|quiver|quiver3|qz|rand|randi|randn|randperm|RandStream(?:.(?:create|getDefaultStream|getGlobalStream|list|setDefaultStream|setGlobalStream))?|rank|rat|rats|rbbox|rcond|rdivide|readasync|real|reallog|realmax|realmin|realpow|realsqrt|record|rectangle|rectint|recycle|reducepatch|reducevolume|refresh|refreshdata|regexp|regexpi|regexprep|regexptranslate|rehash|rem|Remove|RemoveAll|repmat|reset|reshape|residue|restoredefaultpath|rethrow|rgb2hsv|rgb2ind|rgbplot|ribbon|rmappdata|rmdir|rmfield|rmpath|rmpref|rng|roots|rose|rosser|rot90|rotate|rotate3d|round|rref|rsf2csf|run|save|saveas|saveobj|savepath|scatter|scatter3|schur|sec|secd|sech|selectmoveresize|semilogx|semilogy|sendmail|serial|set|setappdata|setdiff|setenv|setfield|setpixelposition|setpref|setstr|setxor|shading|shg|shiftdim|showplottool|shrinkfaces|sign|sin(?:d|h)?|size|slice|smooth3|snapnow|sort|sortrows|sound|soundsc|spalloc|spaugment|spconvert|spdiags|specular|speye|spfun|sph2cart|sphere|spinmap|spline|spones|spparms|sprand|sprandn|sprandsym|sprank|spring|sprintf|spy|sqrt|sqrtm|squeeze|ss2tf|sscanf|stairs|startup|std|stem|stem3|stopasync|str2double|str2func|str2mat|str2num|strcat|strcmp|strcmpi|stream2|stream3|streamline|streamparticles|streamribbon|streamslice|streamtube|strfind|strjust|strmatch|strncmp|strncmpi|strread|strrep|strtok|strtrim|struct2cell|structfun|strvcat|sub2ind|subplot|subsasgn|subsindex|subspace|subsref|substruct|subvolume|sum|summer|superclasses|superiorto|support|surf|surf2patch|surface|surfc|surfl|surfnorm|svd|svds|swapbytes|symamd|symbfact|symmlq|symrcm|symvar|system|tan(?:d|h)?|tar|tempdir|tempname|tetramesh|texlabel|text|textread|textscan|textwrap|tfqmr|throw|tic|Tiff(?:.(?:getTagNames|getVersion))?|timer|timerfind|timerfindall|times|timeseries|title|toc|todatenum|toeplitz|toolboxdir|trace|transpose|trapz|treelayout|treeplot|tril|trimesh|triplequad|triplot|TriRep|TriScatteredInterp|trisurf|triu|tscollection|tsearch|tsearchn|tstool|type|typecast|uibuttongroup|uicontextmenu|uicontrol|uigetdir|uigetfile|uigetpref|uiimport|uimenu|uiopen|uipanel|uipushtool|uiputfile|uiresume|uisave|uisetcolor|uisetfont|uisetpref|uistack|uitable|uitoggletool|uitoolbar|uiwait|uminus|undocheckout|unicode2native|union|unique|unix|unloadlibrary|unmesh|unmkpp|untar|unwrap|unzip|uplus|upper|urlread|urlwrite|usejava|userpath|validateattributes|validatestring|vander|var|vectorize|ver|verctrl|verLessThan|version|vertcat|VideoReader(?:.isPlatformSupported)?|VideoWriter(?:.getProfiles)?|view|viewmtx|visdiff|volumebounds|voronoi|voronoin|wait|waitbar|waitfor|waitforbuttonpress|warndlg|warning|waterfall|wavfinfo|wavplay|wavread|wavrecord|wavwrite|web|weekday|what|whatsnew|which|whitebg|who|whos|wilkinson|winopen|winqueryreg|winter|wk1finfo|wk1read|wk1write|workspace|xlabel|xlim|xlsfinfo|xlsread|xlswrite|xmlread|xmlwrite|xor|xslt|ylabel|ylim|zeros|zip|zlabel|zlim|zoom)\\b/,null],\n[\"fun_tbx\",/^\\b(?:addedvarplot|andrewsplot|anova(?:1|2|n)|ansaribradley|aoctool|barttest|bbdesign|beta(?:cdf|fit|inv|like|pdf|rnd|stat)|bino(?:cdf|fit|inv|pdf|rnd|stat)|biplot|bootci|bootstrp|boxplot|candexch|candgen|canoncorr|capability|capaplot|caseread|casewrite|categorical|ccdesign|cdfplot|chi2(?:cdf|gof|inv|pdf|rnd|stat)|cholcov|Classification(?:BaggedEnsemble|Discriminant(?:.(?:fit|make|template))?|Ensemble|KNN(?:.(?:fit|template))?|PartitionedEnsemble|PartitionedModel|Tree(?:.(?:fit|template))?)|classify|classregtree|cluster|clusterdata|cmdscale|combnk|Compact(?:Classification(?:Discriminant|Ensemble|Tree)|Regression(?:Ensemble|Tree)|TreeBagger)|confusionmat|controlchart|controlrules|cophenet|copula(?:cdf|fit|param|pdf|rnd|stat)|cordexch|corr|corrcov|coxphfit|createns|crosstab|crossval|cvpartition|datasample|dataset|daugment|dcovary|dendrogram|dfittool|disttool|dummyvar|dwtest|ecdf|ecdfhist|ev(?:cdf|fit|inv|like|pdf|rnd|stat)|ExhaustiveSearcher|exp(?:cdf|fit|inv|like|pdf|rnd|stat)|factoran|fcdf|ff2n|finv|fitdist|fitensemble|fpdf|fracfact|fracfactgen|friedman|frnd|fstat|fsurfht|fullfact|gagerr|gam(?:cdf|fit|inv|like|pdf|rnd|stat)|GeneralizedLinearModel(?:.fit)?|geo(?:cdf|inv|mean|pdf|rnd|stat)|gev(?:cdf|fit|inv|like|pdf|rnd|stat)|gline|glmfit|glmval|glyphplot|gmdistribution(?:.fit)?|gname|gp(?:cdf|fit|inv|like|pdf|rnd|stat)|gplotmatrix|grp2idx|grpstats|gscatter|haltonset|harmmean|hist3|histfit|hmm(?:decode|estimate|generate|train|viterbi)|hougen|hyge(?:cdf|inv|pdf|rnd|stat)|icdf|inconsistent|interactionplot|invpred|iqr|iwishrnd|jackknife|jbtest|johnsrnd|KDTreeSearcher|kmeans|knnsearch|kruskalwallis|ksdensity|kstest|kstest2|kurtosis|lasso|lassoglm|lassoPlot|leverage|lhsdesign|lhsnorm|lillietest|LinearModel(?:.fit)?|linhyptest|linkage|logn(?:cdf|fit|inv|like|pdf|rnd|stat)|lsline|mad|mahal|maineffectsplot|manova1|manovacluster|mdscale|mhsample|mle|mlecov|mnpdf|mnrfit|mnrnd|mnrval|moment|multcompare|multivarichart|mvn(?:cdf|pdf|rnd)|mvregress|mvregresslike|mvt(?:cdf|pdf|rnd)|NaiveBayes(?:.fit)?|nan(?:cov|max|mean|median|min|std|sum|var)|nbin(?:cdf|fit|inv|pdf|rnd|stat)|ncf(?:cdf|inv|pdf|rnd|stat)|nct(?:cdf|inv|pdf|rnd|stat)|ncx2(?:cdf|inv|pdf|rnd|stat)|NeighborSearcher|nlinfit|nlintool|nlmefit|nlmefitsa|nlparci|nlpredci|nnmf|nominal|NonLinearModel(?:.fit)?|norm(?:cdf|fit|inv|like|pdf|rnd|stat)|normplot|normspec|ordinal|outlierMeasure|parallelcoords|paretotails|partialcorr|pcacov|pcares|pdf|pdist|pdist2|pearsrnd|perfcurve|perms|piecewisedistribution|plsregress|poiss(?:cdf|fit|inv|pdf|rnd|tat)|polyconf|polytool|prctile|princomp|ProbDist(?:Kernel|Parametric|UnivKernel|UnivParam)?|probplot|procrustes|qqplot|qrandset|qrandstream|quantile|randg|random|randsample|randtool|range|rangesearch|ranksum|rayl(?:cdf|fit|inv|pdf|rnd|stat)|rcoplot|refcurve|refline|regress|Regression(?:BaggedEnsemble|Ensemble|PartitionedEnsemble|PartitionedModel|Tree(?:.(?:fit|template))?)|regstats|relieff|ridge|robustdemo|robustfit|rotatefactors|rowexch|rsmdemo|rstool|runstest|sampsizepwr|scatterhist|sequentialfs|signrank|signtest|silhouette|skewness|slicesample|sobolset|squareform|statget|statset|stepwise|stepwisefit|surfht|tabulate|tblread|tblwrite|tcdf|tdfread|tiedrank|tinv|tpdf|TreeBagger|treedisp|treefit|treeprune|treetest|treeval|trimmean|trnd|tstat|ttest|ttest2|unid(?:cdf|inv|pdf|rnd|stat)|unif(?:cdf|inv|it|pdf|rnd|stat)|vartest(?:2|n)?|wbl(?:cdf|fit|inv|like|pdf|rnd|stat)|wblplot|wishrnd|x2fx|xptread|zscore|ztest)\\b/,\nnull],[\"fun_tbx\",/^\\b(?:adapthisteq|analyze75info|analyze75read|applycform|applylut|axes2pix|bestblk|blockproc|bwarea|bwareaopen|bwboundaries|bwconncomp|bwconvhull|bwdist|bwdistgeodesic|bweuler|bwhitmiss|bwlabel|bwlabeln|bwmorph|bwpack|bwperim|bwselect|bwtraceboundary|bwulterode|bwunpack|checkerboard|col2im|colfilt|conndef|convmtx2|corner|cornermetric|corr2|cp2tform|cpcorr|cpselect|cpstruct2pairs|dct2|dctmtx|deconvblind|deconvlucy|deconvreg|deconvwnr|decorrstretch|demosaic|dicom(?:anon|dict|info|lookup|read|uid|write)|edge|edgetaper|entropy|entropyfilt|fan2para|fanbeam|findbounds|fliptform|freqz2|fsamp2|fspecial|ftrans2|fwind1|fwind2|getheight|getimage|getimagemodel|getline|getneighbors|getnhood|getpts|getrangefromclass|getrect|getsequence|gray2ind|graycomatrix|graycoprops|graydist|grayslice|graythresh|hdrread|hdrwrite|histeq|hough|houghlines|houghpeaks|iccfind|iccread|iccroot|iccwrite|idct2|ifanbeam|im2bw|im2col|im2double|im2int16|im2java2d|im2single|im2uint16|im2uint8|imabsdiff|imadd|imadjust|ImageAdapter|imageinfo|imagemodel|imapplymatrix|imattributes|imbothat|imclearborder|imclose|imcolormaptool|imcomplement|imcontour|imcontrast|imcrop|imdilate|imdisplayrange|imdistline|imdivide|imellipse|imerode|imextendedmax|imextendedmin|imfill|imfilter|imfindcircles|imfreehand|imfuse|imgca|imgcf|imgetfile|imhandles|imhist|imhmax|imhmin|imimposemin|imlincomb|imline|immagbox|immovie|immultiply|imnoise|imopen|imoverview|imoverviewpanel|impixel|impixelinfo|impixelinfoval|impixelregion|impixelregionpanel|implay|impoint|impoly|impositionrect|improfile|imputfile|impyramid|imreconstruct|imrect|imregconfig|imregionalmax|imregionalmin|imregister|imresize|imroi|imrotate|imsave|imscrollpanel|imshow|imshowpair|imsubtract|imtool|imtophat|imtransform|imview|ind2gray|ind2rgb|interfileinfo|interfileread|intlut|ippl|iptaddcallback|iptcheckconn|iptcheckhandle|iptcheckinput|iptcheckmap|iptchecknargin|iptcheckstrs|iptdemos|iptgetapi|iptGetPointerBehavior|iptgetpref|ipticondir|iptnum2ordinal|iptPointerManager|iptprefs|iptremovecallback|iptSetPointerBehavior|iptsetpref|iptwindowalign|iradon|isbw|isflat|isgray|isicc|isind|isnitf|isrgb|isrset|lab2double|lab2uint16|lab2uint8|label2rgb|labelmatrix|makecform|makeConstrainToRectFcn|makehdr|makelut|makeresampler|maketform|mat2gray|mean2|medfilt2|montage|nitfinfo|nitfread|nlfilter|normxcorr2|ntsc2rgb|openrset|ordfilt2|otf2psf|padarray|para2fan|phantom|poly2mask|psf2otf|qtdecomp|qtgetblk|qtsetblk|radon|rangefilt|reflect|regionprops|registration.metric.(?:MattesMutualInformation|MeanSquares)|registration.optimizer.(?:OnePlusOneEvolutionary|RegularStepGradientDescent)|rgb2gray|rgb2ntsc|rgb2ycbcr|roicolor|roifill|roifilt2|roipoly|rsetwrite|std2|stdfilt|strel|stretchlim|subimage|tformarray|tformfwd|tforminv|tonemap|translate|truesize|uintlut|viscircles|warp|watershed|whitepoint|wiener2|xyz2double|xyz2uint16|ycbcr2rgb)\\b/,\nnull],[\"fun_tbx\",/^\\b(?:bintprog|color|fgoalattain|fminbnd|fmincon|fminimax|fminsearch|fminunc|fseminf|fsolve|fzero|fzmult|gangstr|ktrlink|linprog|lsqcurvefit|lsqlin|lsqnonlin|lsqnonneg|optimget|optimset|optimtool|quadprog)\\b/,null],[\"ident\",/^[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*/,null]]),[\"matlab-identifiers\"]);a.registerLangHandler(a.createSimpleLexer([],d),[\"matlab-operators\"]);a.registerLangHandler(a.createSimpleLexer(b,c),[\"matlab\"]);\n","source":"plugins/google-code-prettify/lang-matlab.js","raw":"/*\n\n Copyright (c) 2013 by Amro <amroamroamro@gmail.com>\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\nvar a=window.PR,b=[[a.PR_PLAIN,/^[ \\t\\r\\n\\v\\f\\xA0]+/,null,\" \\t\\r\\n\\x0B\\f\\u00a0\"],[a.PR_COMMENT,/^%\\{[^%]*%+(?:[^\\}%][^%]*%+)*\\}/,null],[a.PR_COMMENT,/^%[^\\r\\n]*/,null,\"%\"],[\"syscmd\",/^![^\\r\\n]*/,null,\"!\"]],c=[[\"linecont\",/^\\.\\.\\.\\s*[\\r\\n]/,null],[\"err\",/^\\?\\?\\? [^\\r\\n]*/,null],[\"wrn\",/^Warning: [^\\r\\n]*/,null],[\"codeoutput\",/^>>\\s+/,null],[\"codeoutput\",/^octave:\\d+>\\s+/,null],[\"lang-matlab-operators\",/^((?:[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*|\\)|\\]|\\}|\\.)')/,null],[\"lang-matlab-identifiers\",\n/^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)(?!')/,null],[a.PR_STRING,/^'(?:[^']|'')*'/,null],[a.PR_LITERAL,/^[+\\-]?\\.?\\d+(?:\\.\\d*)?(?:[Ee][+\\-]?\\d+)?[ij]?/,null],[a.PR_TAG,/^(?:\\{|\\}|\\(|\\)|\\[|\\])/,null],[a.PR_PUNCTUATION,/^(?:<|>|=|~|@|&|;|,|:|!|\\-|\\+|\\*|\\^|\\.|\\||\\\\|\\/)/,null]],d=[[\"lang-matlab-identifiers\",/^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)/,null],[a.PR_TAG,/^(?:\\{|\\}|\\(|\\)|\\[|\\])/,null],[a.PR_PUNCTUATION,/^(?:<|>|=|~|@|&|;|,|:|!|\\-|\\+|\\*|\\^|\\.|\\||\\\\|\\/)/,null],[\"transpose\",\n/^'/,null]];\na.registerLangHandler(a.createSimpleLexer([],[[a.PR_KEYWORD,/^\\b(?:break|case|catch|classdef|continue|else|elseif|end|for|function|global|if|otherwise|parfor|persistent|return|spmd|switch|try|while)\\b/,null],[\"const\",/^\\b(?:true|false|inf|Inf|nan|NaN|eps|pi|ans|nargin|nargout|varargin|varargout)\\b/,null],[a.PR_TYPE,/^\\b(?:cell|struct|char|double|single|logical|u?int(?:8|16|32|64)|sparse)\\b/,null],[\"fun\",/^\\b(?:abs|accumarray|acos(?:d|h)?|acot(?:d|h)?|acsc(?:d|h)?|actxcontrol(?:list|select)?|actxGetRunningServer|actxserver|addlistener|addpath|addpref|addtodate|airy|align|alim|all|allchild|alpha|alphamap|amd|ancestor|and|angle|annotation|any|area|arrayfun|asec(?:d|h)?|asin(?:d|h)?|assert|assignin|atan(?:2|d|h)?|audiodevinfo|audioplayer|audiorecorder|aufinfo|auread|autumn|auwrite|avifile|aviinfo|aviread|axes|axis|balance|bar(?:3|3h|h)?|base2dec|beep|BeginInvoke|bench|bessel(?:h|i|j|k|y)|beta|betainc|betaincinv|betaln|bicg|bicgstab|bicgstabl|bin2dec|bitand|bitcmp|bitget|bitmax|bitnot|bitor|bitset|bitshift|bitxor|blanks|blkdiag|bone|box|brighten|brush|bsxfun|builddocsearchdb|builtin|bvp4c|bvp5c|bvpget|bvpinit|bvpset|bvpxtend|calendar|calllib|callSoapService|camdolly|cameratoolbar|camlight|camlookat|camorbit|campan|campos|camproj|camroll|camtarget|camup|camva|camzoom|cart2pol|cart2sph|cast|cat|caxis|cd|cdf2rdf|cdfepoch|cdfinfo|cdflib(?:.(?:close|closeVar|computeEpoch|computeEpoch16|create|createAttr|createVar|delete|deleteAttr|deleteAttrEntry|deleteAttrgEntry|deleteVar|deleteVarRecords|epoch16Breakdown|epochBreakdown|getAttrEntry|getAttrgEntry|getAttrMaxEntry|getAttrMaxgEntry|getAttrName|getAttrNum|getAttrScope|getCacheSize|getChecksum|getCompression|getCompressionCacheSize|getConstantNames|getConstantValue|getCopyright|getFileBackward|getFormat|getLibraryCopyright|getLibraryVersion|getMajority|getName|getNumAttrEntries|getNumAttrgEntries|getNumAttributes|getNumgAttributes|getReadOnlyMode|getStageCacheSize|getValidate|getVarAllocRecords|getVarBlockingFactor|getVarCacheSize|getVarCompression|getVarData|getVarMaxAllocRecNum|getVarMaxWrittenRecNum|getVarName|getVarNum|getVarNumRecsWritten|getVarPadValue|getVarRecordData|getVarReservePercent|getVarsMaxWrittenRecNum|getVarSparseRecords|getVersion|hyperGetVarData|hyperPutVarData|inquire|inquireAttr|inquireAttrEntry|inquireAttrgEntry|inquireVar|open|putAttrEntry|putAttrgEntry|putVarData|putVarRecordData|renameAttr|renameVar|setCacheSize|setChecksum|setCompression|setCompressionCacheSize|setFileBackward|setFormat|setMajority|setReadOnlyMode|setStageCacheSize|setValidate|setVarAllocBlockRecords|setVarBlockingFactor|setVarCacheSize|setVarCompression|setVarInitialRecs|setVarPadValue|SetVarReservePercent|setVarsCacheSize|setVarSparseRecords))?|cdfread|cdfwrite|ceil|cell2mat|cell2struct|celldisp|cellfun|cellplot|cellstr|cgs|checkcode|checkin|checkout|chol|cholinc|cholupdate|circshift|cla|clabel|class|clc|clear|clearvars|clf|clipboard|clock|close|closereq|cmopts|cmpermute|cmunique|colamd|colon|colorbar|colordef|colormap|colormapeditor|colperm|Combine|comet|comet3|commandhistory|commandwindow|compan|compass|complex|computer|cond|condeig|condest|coneplot|conj|containers.Map|contour(?:3|c|f|slice)?|contrast|conv|conv2|convhull|convhulln|convn|cool|copper|copyfile|copyobj|corrcoef|cos(?:d|h)?|cot(?:d|h)?|cov|cplxpair|cputime|createClassFromWsdl|createSoapMessage|cross|csc(?:d|h)?|csvread|csvwrite|ctranspose|cumprod|cumsum|cumtrapz|curl|customverctrl|cylinder|daqread|daspect|datacursormode|datatipinfo|date|datenum|datestr|datetick|datevec|dbclear|dbcont|dbdown|dblquad|dbmex|dbquit|dbstack|dbstatus|dbstep|dbstop|dbtype|dbup|dde23|ddeget|ddesd|ddeset|deal|deblank|dec2base|dec2bin|dec2hex|decic|deconv|del2|delaunay|delaunay3|delaunayn|DelaunayTri|delete|demo|depdir|depfun|det|detrend|deval|diag|dialog|diary|diff|diffuse|dir|disp|display|dither|divergence|dlmread|dlmwrite|dmperm|doc|docsearch|dos|dot|dragrect|drawnow|dsearch|dsearchn|dynamicprops|echo|echodemo|edit|eig|eigs|ellipj|ellipke|ellipsoid|empty|enableNETfromNetworkDrive|enableservice|EndInvoke|enumeration|eomday|eq|erf|erfc|erfcinv|erfcx|erfinv|error|errorbar|errordlg|etime|etree|etreeplot|eval|evalc|evalin|event.(?:EventData|listener|PropertyEvent|proplistener)|exifread|exist|exit|exp|expint|expm|expm1|export2wsdlg|eye|ezcontour|ezcontourf|ezmesh|ezmeshc|ezplot|ezplot3|ezpolar|ezsurf|ezsurfc|factor|factorial|fclose|feather|feature|feof|ferror|feval|fft|fft2|fftn|fftshift|fftw|fgetl|fgets|fieldnames|figure|figurepalette|fileattrib|filebrowser|filemarker|fileparts|fileread|filesep|fill|fill3|filter|filter2|find|findall|findfigs|findobj|findstr|finish|fitsdisp|fitsinfo|fitsread|fitswrite|fix|flag|flipdim|fliplr|flipud|floor|flow|fminbnd|fminsearch|fopen|format|fplot|fprintf|frame2im|fread|freqspace|frewind|fscanf|fseek|ftell|FTP|full|fullfile|func2str|functions|funm|fwrite|fzero|gallery|gamma|gammainc|gammaincinv|gammaln|gca|gcbf|gcbo|gcd|gcf|gco|ge|genpath|genvarname|get|getappdata|getenv|getfield|getframe|getpixelposition|getpref|ginput|gmres|gplot|grabcode|gradient|gray|graymon|grid|griddata(?:3|n)?|griddedInterpolant|gsvd|gt|gtext|guidata|guide|guihandles|gunzip|gzip|h5create|h5disp|h5info|h5read|h5readatt|h5write|h5writeatt|hadamard|handle|hankel|hdf|hdf5|hdf5info|hdf5read|hdf5write|hdfinfo|hdfread|hdftool|help|helpbrowser|helpdesk|helpdlg|helpwin|hess|hex2dec|hex2num|hgexport|hggroup|hgload|hgsave|hgsetget|hgtransform|hidden|hilb|hist|histc|hold|home|horzcat|hostid|hot|hsv|hsv2rgb|hypot|ichol|idivide|ifft|ifft2|ifftn|ifftshift|ilu|im2frame|im2java|imag|image|imagesc|imapprox|imfinfo|imformats|import|importdata|imread|imwrite|ind2rgb|ind2sub|inferiorto|info|inline|inmem|inpolygon|input|inputdlg|inputname|inputParser|inspect|instrcallback|instrfind|instrfindall|int2str|integral(?:2|3)?|interp(?:1|1q|2|3|ft|n)|interpstreamspeed|intersect|intmax|intmin|inv|invhilb|ipermute|isa|isappdata|iscell|iscellstr|ischar|iscolumn|isdir|isempty|isequal|isequaln|isequalwithequalnans|isfield|isfinite|isfloat|isglobal|ishandle|ishghandle|ishold|isinf|isinteger|isjava|iskeyword|isletter|islogical|ismac|ismatrix|ismember|ismethod|isnan|isnumeric|isobject|isocaps|isocolors|isonormals|isosurface|ispc|ispref|isprime|isprop|isreal|isrow|isscalar|issorted|isspace|issparse|isstr|isstrprop|isstruct|isstudent|isunix|isvarname|isvector|javaaddpath|javaArray|javachk|javaclasspath|javacomponent|javaMethod|javaMethodEDT|javaObject|javaObjectEDT|javarmpath|jet|keyboard|kron|lasterr|lasterror|lastwarn|lcm|ldivide|ldl|le|legend|legendre|length|libfunctions|libfunctionsview|libisloaded|libpointer|libstruct|license|light|lightangle|lighting|lin2mu|line|lines|linkaxes|linkdata|linkprop|linsolve|linspace|listdlg|listfonts|load|loadlibrary|loadobj|log|log10|log1p|log2|loglog|logm|logspace|lookfor|lower|ls|lscov|lsqnonneg|lsqr|lt|lu|luinc|magic|makehgtform|mat2cell|mat2str|material|matfile|matlab.io.MatFile|matlab.mixin.(?:Copyable|Heterogeneous(?:.getDefaultScalarElement)?)|matlabrc|matlabroot|max|maxNumCompThreads|mean|median|membrane|memmapfile|memory|menu|mesh|meshc|meshgrid|meshz|meta.(?:class(?:.fromName)?|DynamicProperty|EnumeratedValue|event|MetaData|method|package(?:.(?:fromName|getAllPackages))?|property)|metaclass|methods|methodsview|mex(?:.getCompilerConfigurations)?|MException|mexext|mfilename|min|minres|minus|mislocked|mkdir|mkpp|mldivide|mlint|mlintrpt|mlock|mmfileinfo|mmreader|mod|mode|more|move|movefile|movegui|movie|movie2avi|mpower|mrdivide|msgbox|mtimes|mu2lin|multibandread|multibandwrite|munlock|namelengthmax|nargchk|narginchk|nargoutchk|native2unicode|nccreate|ncdisp|nchoosek|ncinfo|ncread|ncreadatt|ncwrite|ncwriteatt|ncwriteschema|ndgrid|ndims|ne|NET(?:.(?:addAssembly|Assembly|convertArray|createArray|createGeneric|disableAutoRelease|enableAutoRelease|GenericClass|invokeGenericMethod|NetException|setStaticProperty))?|netcdf.(?:abort|close|copyAtt|create|defDim|defGrp|defVar|defVarChunking|defVarDeflate|defVarFill|defVarFletcher32|delAtt|endDef|getAtt|getChunkCache|getConstant|getConstantNames|getVar|inq|inqAtt|inqAttID|inqAttName|inqDim|inqDimID|inqDimIDs|inqFormat|inqGrpName|inqGrpNameFull|inqGrpParent|inqGrps|inqLibVers|inqNcid|inqUnlimDims|inqVar|inqVarChunking|inqVarDeflate|inqVarFill|inqVarFletcher32|inqVarID|inqVarIDs|open|putAtt|putVar|reDef|renameAtt|renameDim|renameVar|setChunkCache|setDefaultFormat|setFill|sync)|newplot|nextpow2|nnz|noanimate|nonzeros|norm|normest|not|notebook|now|nthroot|null|num2cell|num2hex|num2str|numel|nzmax|ode(?:113|15i|15s|23|23s|23t|23tb|45)|odeget|odeset|odextend|onCleanup|ones|open|openfig|opengl|openvar|optimget|optimset|or|ordeig|orderfields|ordqz|ordschur|orient|orth|pack|padecoef|pagesetupdlg|pan|pareto|parseSoapResponse|pascal|patch|path|path2rc|pathsep|pathtool|pause|pbaspect|pcg|pchip|pcode|pcolor|pdepe|pdeval|peaks|perl|perms|permute|pie|pink|pinv|planerot|playshow|plot|plot3|plotbrowser|plotedit|plotmatrix|plottools|plotyy|plus|pol2cart|polar|poly|polyarea|polyder|polyeig|polyfit|polyint|polyval|polyvalm|pow2|power|ppval|prefdir|preferences|primes|print|printdlg|printopt|printpreview|prod|profile|profsave|propedit|propertyeditor|psi|publish|PutCharArray|PutFullMatrix|PutWorkspaceData|pwd|qhull|qmr|qr|qrdelete|qrinsert|qrupdate|quad|quad2d|quadgk|quadl|quadv|questdlg|quit|quiver|quiver3|qz|rand|randi|randn|randperm|RandStream(?:.(?:create|getDefaultStream|getGlobalStream|list|setDefaultStream|setGlobalStream))?|rank|rat|rats|rbbox|rcond|rdivide|readasync|real|reallog|realmax|realmin|realpow|realsqrt|record|rectangle|rectint|recycle|reducepatch|reducevolume|refresh|refreshdata|regexp|regexpi|regexprep|regexptranslate|rehash|rem|Remove|RemoveAll|repmat|reset|reshape|residue|restoredefaultpath|rethrow|rgb2hsv|rgb2ind|rgbplot|ribbon|rmappdata|rmdir|rmfield|rmpath|rmpref|rng|roots|rose|rosser|rot90|rotate|rotate3d|round|rref|rsf2csf|run|save|saveas|saveobj|savepath|scatter|scatter3|schur|sec|secd|sech|selectmoveresize|semilogx|semilogy|sendmail|serial|set|setappdata|setdiff|setenv|setfield|setpixelposition|setpref|setstr|setxor|shading|shg|shiftdim|showplottool|shrinkfaces|sign|sin(?:d|h)?|size|slice|smooth3|snapnow|sort|sortrows|sound|soundsc|spalloc|spaugment|spconvert|spdiags|specular|speye|spfun|sph2cart|sphere|spinmap|spline|spones|spparms|sprand|sprandn|sprandsym|sprank|spring|sprintf|spy|sqrt|sqrtm|squeeze|ss2tf|sscanf|stairs|startup|std|stem|stem3|stopasync|str2double|str2func|str2mat|str2num|strcat|strcmp|strcmpi|stream2|stream3|streamline|streamparticles|streamribbon|streamslice|streamtube|strfind|strjust|strmatch|strncmp|strncmpi|strread|strrep|strtok|strtrim|struct2cell|structfun|strvcat|sub2ind|subplot|subsasgn|subsindex|subspace|subsref|substruct|subvolume|sum|summer|superclasses|superiorto|support|surf|surf2patch|surface|surfc|surfl|surfnorm|svd|svds|swapbytes|symamd|symbfact|symmlq|symrcm|symvar|system|tan(?:d|h)?|tar|tempdir|tempname|tetramesh|texlabel|text|textread|textscan|textwrap|tfqmr|throw|tic|Tiff(?:.(?:getTagNames|getVersion))?|timer|timerfind|timerfindall|times|timeseries|title|toc|todatenum|toeplitz|toolboxdir|trace|transpose|trapz|treelayout|treeplot|tril|trimesh|triplequad|triplot|TriRep|TriScatteredInterp|trisurf|triu|tscollection|tsearch|tsearchn|tstool|type|typecast|uibuttongroup|uicontextmenu|uicontrol|uigetdir|uigetfile|uigetpref|uiimport|uimenu|uiopen|uipanel|uipushtool|uiputfile|uiresume|uisave|uisetcolor|uisetfont|uisetpref|uistack|uitable|uitoggletool|uitoolbar|uiwait|uminus|undocheckout|unicode2native|union|unique|unix|unloadlibrary|unmesh|unmkpp|untar|unwrap|unzip|uplus|upper|urlread|urlwrite|usejava|userpath|validateattributes|validatestring|vander|var|vectorize|ver|verctrl|verLessThan|version|vertcat|VideoReader(?:.isPlatformSupported)?|VideoWriter(?:.getProfiles)?|view|viewmtx|visdiff|volumebounds|voronoi|voronoin|wait|waitbar|waitfor|waitforbuttonpress|warndlg|warning|waterfall|wavfinfo|wavplay|wavread|wavrecord|wavwrite|web|weekday|what|whatsnew|which|whitebg|who|whos|wilkinson|winopen|winqueryreg|winter|wk1finfo|wk1read|wk1write|workspace|xlabel|xlim|xlsfinfo|xlsread|xlswrite|xmlread|xmlwrite|xor|xslt|ylabel|ylim|zeros|zip|zlabel|zlim|zoom)\\b/,null],\n[\"fun_tbx\",/^\\b(?:addedvarplot|andrewsplot|anova(?:1|2|n)|ansaribradley|aoctool|barttest|bbdesign|beta(?:cdf|fit|inv|like|pdf|rnd|stat)|bino(?:cdf|fit|inv|pdf|rnd|stat)|biplot|bootci|bootstrp|boxplot|candexch|candgen|canoncorr|capability|capaplot|caseread|casewrite|categorical|ccdesign|cdfplot|chi2(?:cdf|gof|inv|pdf|rnd|stat)|cholcov|Classification(?:BaggedEnsemble|Discriminant(?:.(?:fit|make|template))?|Ensemble|KNN(?:.(?:fit|template))?|PartitionedEnsemble|PartitionedModel|Tree(?:.(?:fit|template))?)|classify|classregtree|cluster|clusterdata|cmdscale|combnk|Compact(?:Classification(?:Discriminant|Ensemble|Tree)|Regression(?:Ensemble|Tree)|TreeBagger)|confusionmat|controlchart|controlrules|cophenet|copula(?:cdf|fit|param|pdf|rnd|stat)|cordexch|corr|corrcov|coxphfit|createns|crosstab|crossval|cvpartition|datasample|dataset|daugment|dcovary|dendrogram|dfittool|disttool|dummyvar|dwtest|ecdf|ecdfhist|ev(?:cdf|fit|inv|like|pdf|rnd|stat)|ExhaustiveSearcher|exp(?:cdf|fit|inv|like|pdf|rnd|stat)|factoran|fcdf|ff2n|finv|fitdist|fitensemble|fpdf|fracfact|fracfactgen|friedman|frnd|fstat|fsurfht|fullfact|gagerr|gam(?:cdf|fit|inv|like|pdf|rnd|stat)|GeneralizedLinearModel(?:.fit)?|geo(?:cdf|inv|mean|pdf|rnd|stat)|gev(?:cdf|fit|inv|like|pdf|rnd|stat)|gline|glmfit|glmval|glyphplot|gmdistribution(?:.fit)?|gname|gp(?:cdf|fit|inv|like|pdf|rnd|stat)|gplotmatrix|grp2idx|grpstats|gscatter|haltonset|harmmean|hist3|histfit|hmm(?:decode|estimate|generate|train|viterbi)|hougen|hyge(?:cdf|inv|pdf|rnd|stat)|icdf|inconsistent|interactionplot|invpred|iqr|iwishrnd|jackknife|jbtest|johnsrnd|KDTreeSearcher|kmeans|knnsearch|kruskalwallis|ksdensity|kstest|kstest2|kurtosis|lasso|lassoglm|lassoPlot|leverage|lhsdesign|lhsnorm|lillietest|LinearModel(?:.fit)?|linhyptest|linkage|logn(?:cdf|fit|inv|like|pdf|rnd|stat)|lsline|mad|mahal|maineffectsplot|manova1|manovacluster|mdscale|mhsample|mle|mlecov|mnpdf|mnrfit|mnrnd|mnrval|moment|multcompare|multivarichart|mvn(?:cdf|pdf|rnd)|mvregress|mvregresslike|mvt(?:cdf|pdf|rnd)|NaiveBayes(?:.fit)?|nan(?:cov|max|mean|median|min|std|sum|var)|nbin(?:cdf|fit|inv|pdf|rnd|stat)|ncf(?:cdf|inv|pdf|rnd|stat)|nct(?:cdf|inv|pdf|rnd|stat)|ncx2(?:cdf|inv|pdf|rnd|stat)|NeighborSearcher|nlinfit|nlintool|nlmefit|nlmefitsa|nlparci|nlpredci|nnmf|nominal|NonLinearModel(?:.fit)?|norm(?:cdf|fit|inv|like|pdf|rnd|stat)|normplot|normspec|ordinal|outlierMeasure|parallelcoords|paretotails|partialcorr|pcacov|pcares|pdf|pdist|pdist2|pearsrnd|perfcurve|perms|piecewisedistribution|plsregress|poiss(?:cdf|fit|inv|pdf|rnd|tat)|polyconf|polytool|prctile|princomp|ProbDist(?:Kernel|Parametric|UnivKernel|UnivParam)?|probplot|procrustes|qqplot|qrandset|qrandstream|quantile|randg|random|randsample|randtool|range|rangesearch|ranksum|rayl(?:cdf|fit|inv|pdf|rnd|stat)|rcoplot|refcurve|refline|regress|Regression(?:BaggedEnsemble|Ensemble|PartitionedEnsemble|PartitionedModel|Tree(?:.(?:fit|template))?)|regstats|relieff|ridge|robustdemo|robustfit|rotatefactors|rowexch|rsmdemo|rstool|runstest|sampsizepwr|scatterhist|sequentialfs|signrank|signtest|silhouette|skewness|slicesample|sobolset|squareform|statget|statset|stepwise|stepwisefit|surfht|tabulate|tblread|tblwrite|tcdf|tdfread|tiedrank|tinv|tpdf|TreeBagger|treedisp|treefit|treeprune|treetest|treeval|trimmean|trnd|tstat|ttest|ttest2|unid(?:cdf|inv|pdf|rnd|stat)|unif(?:cdf|inv|it|pdf|rnd|stat)|vartest(?:2|n)?|wbl(?:cdf|fit|inv|like|pdf|rnd|stat)|wblplot|wishrnd|x2fx|xptread|zscore|ztest)\\b/,\nnull],[\"fun_tbx\",/^\\b(?:adapthisteq|analyze75info|analyze75read|applycform|applylut|axes2pix|bestblk|blockproc|bwarea|bwareaopen|bwboundaries|bwconncomp|bwconvhull|bwdist|bwdistgeodesic|bweuler|bwhitmiss|bwlabel|bwlabeln|bwmorph|bwpack|bwperim|bwselect|bwtraceboundary|bwulterode|bwunpack|checkerboard|col2im|colfilt|conndef|convmtx2|corner|cornermetric|corr2|cp2tform|cpcorr|cpselect|cpstruct2pairs|dct2|dctmtx|deconvblind|deconvlucy|deconvreg|deconvwnr|decorrstretch|demosaic|dicom(?:anon|dict|info|lookup|read|uid|write)|edge|edgetaper|entropy|entropyfilt|fan2para|fanbeam|findbounds|fliptform|freqz2|fsamp2|fspecial|ftrans2|fwind1|fwind2|getheight|getimage|getimagemodel|getline|getneighbors|getnhood|getpts|getrangefromclass|getrect|getsequence|gray2ind|graycomatrix|graycoprops|graydist|grayslice|graythresh|hdrread|hdrwrite|histeq|hough|houghlines|houghpeaks|iccfind|iccread|iccroot|iccwrite|idct2|ifanbeam|im2bw|im2col|im2double|im2int16|im2java2d|im2single|im2uint16|im2uint8|imabsdiff|imadd|imadjust|ImageAdapter|imageinfo|imagemodel|imapplymatrix|imattributes|imbothat|imclearborder|imclose|imcolormaptool|imcomplement|imcontour|imcontrast|imcrop|imdilate|imdisplayrange|imdistline|imdivide|imellipse|imerode|imextendedmax|imextendedmin|imfill|imfilter|imfindcircles|imfreehand|imfuse|imgca|imgcf|imgetfile|imhandles|imhist|imhmax|imhmin|imimposemin|imlincomb|imline|immagbox|immovie|immultiply|imnoise|imopen|imoverview|imoverviewpanel|impixel|impixelinfo|impixelinfoval|impixelregion|impixelregionpanel|implay|impoint|impoly|impositionrect|improfile|imputfile|impyramid|imreconstruct|imrect|imregconfig|imregionalmax|imregionalmin|imregister|imresize|imroi|imrotate|imsave|imscrollpanel|imshow|imshowpair|imsubtract|imtool|imtophat|imtransform|imview|ind2gray|ind2rgb|interfileinfo|interfileread|intlut|ippl|iptaddcallback|iptcheckconn|iptcheckhandle|iptcheckinput|iptcheckmap|iptchecknargin|iptcheckstrs|iptdemos|iptgetapi|iptGetPointerBehavior|iptgetpref|ipticondir|iptnum2ordinal|iptPointerManager|iptprefs|iptremovecallback|iptSetPointerBehavior|iptsetpref|iptwindowalign|iradon|isbw|isflat|isgray|isicc|isind|isnitf|isrgb|isrset|lab2double|lab2uint16|lab2uint8|label2rgb|labelmatrix|makecform|makeConstrainToRectFcn|makehdr|makelut|makeresampler|maketform|mat2gray|mean2|medfilt2|montage|nitfinfo|nitfread|nlfilter|normxcorr2|ntsc2rgb|openrset|ordfilt2|otf2psf|padarray|para2fan|phantom|poly2mask|psf2otf|qtdecomp|qtgetblk|qtsetblk|radon|rangefilt|reflect|regionprops|registration.metric.(?:MattesMutualInformation|MeanSquares)|registration.optimizer.(?:OnePlusOneEvolutionary|RegularStepGradientDescent)|rgb2gray|rgb2ntsc|rgb2ycbcr|roicolor|roifill|roifilt2|roipoly|rsetwrite|std2|stdfilt|strel|stretchlim|subimage|tformarray|tformfwd|tforminv|tonemap|translate|truesize|uintlut|viscircles|warp|watershed|whitepoint|wiener2|xyz2double|xyz2uint16|ycbcr2rgb)\\b/,\nnull],[\"fun_tbx\",/^\\b(?:bintprog|color|fgoalattain|fminbnd|fmincon|fminimax|fminsearch|fminunc|fseminf|fsolve|fzero|fzmult|gangstr|ktrlink|linprog|lsqcurvefit|lsqlin|lsqnonlin|lsqnonneg|optimget|optimset|optimtool|quadprog)\\b/,null],[\"ident\",/^[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*/,null]]),[\"matlab-identifiers\"]);a.registerLangHandler(a.createSimpleLexer([],d),[\"matlab-operators\"]);a.registerLangHandler(a.createSimpleLexer(b,c),[\"matlab\"]);\n","date":"2022-03-27T08:23:16.342Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-matlab.js","layout":"false","title":"","comments":1,"_id":"cl22h70uf003l5oss26seafv4","content":"/*\n\n Copyright (c) 2013 by Amro <amroamroamro@gmail.com>\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\nvar a=window.PR,b=[[a.PR_PLAIN,/^[ \\t\\r\\n\\v\\f\\xA0]+/,null,\" \\t\\r\\n\\x0B\\f\\u00a0\"],[a.PR_COMMENT,/^%\\{[^%]*%+(?:[^\\}%][^%]*%+)*\\}/,null],[a.PR_COMMENT,/^%[^\\r\\n]*/,null,\"%\"],[\"syscmd\",/^![^\\r\\n]*/,null,\"!\"]],c=[[\"linecont\",/^\\.\\.\\.\\s*[\\r\\n]/,null],[\"err\",/^\\?\\?\\? [^\\r\\n]*/,null],[\"wrn\",/^Warning: [^\\r\\n]*/,null],[\"codeoutput\",/^>>\\s+/,null],[\"codeoutput\",/^octave:\\d+>\\s+/,null],[\"lang-matlab-operators\",/^((?:[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*|\\)|\\]|\\}|\\.)')/,null],[\"lang-matlab-identifiers\",\n/^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)(?!')/,null],[a.PR_STRING,/^'(?:[^']|'')*'/,null],[a.PR_LITERAL,/^[+\\-]?\\.?\\d+(?:\\.\\d*)?(?:[Ee][+\\-]?\\d+)?[ij]?/,null],[a.PR_TAG,/^(?:\\{|\\}|\\(|\\)|\\[|\\])/,null],[a.PR_PUNCTUATION,/^(?:<|>|=|~|@|&|;|,|:|!|\\-|\\+|\\*|\\^|\\.|\\||\\\\|\\/)/,null]],d=[[\"lang-matlab-identifiers\",/^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)/,null],[a.PR_TAG,/^(?:\\{|\\}|\\(|\\)|\\[|\\])/,null],[a.PR_PUNCTUATION,/^(?:<|>|=|~|@|&|;|,|:|!|\\-|\\+|\\*|\\^|\\.|\\||\\\\|\\/)/,null],[\"transpose\",\n/^'/,null]];\na.registerLangHandler(a.createSimpleLexer([],[[a.PR_KEYWORD,/^\\b(?:break|case|catch|classdef|continue|else|elseif|end|for|function|global|if|otherwise|parfor|persistent|return|spmd|switch|try|while)\\b/,null],[\"const\",/^\\b(?:true|false|inf|Inf|nan|NaN|eps|pi|ans|nargin|nargout|varargin|varargout)\\b/,null],[a.PR_TYPE,/^\\b(?:cell|struct|char|double|single|logical|u?int(?:8|16|32|64)|sparse)\\b/,null],[\"fun\",/^\\b(?:abs|accumarray|acos(?:d|h)?|acot(?:d|h)?|acsc(?:d|h)?|actxcontrol(?:list|select)?|actxGetRunningServer|actxserver|addlistener|addpath|addpref|addtodate|airy|align|alim|all|allchild|alpha|alphamap|amd|ancestor|and|angle|annotation|any|area|arrayfun|asec(?:d|h)?|asin(?:d|h)?|assert|assignin|atan(?:2|d|h)?|audiodevinfo|audioplayer|audiorecorder|aufinfo|auread|autumn|auwrite|avifile|aviinfo|aviread|axes|axis|balance|bar(?:3|3h|h)?|base2dec|beep|BeginInvoke|bench|bessel(?:h|i|j|k|y)|beta|betainc|betaincinv|betaln|bicg|bicgstab|bicgstabl|bin2dec|bitand|bitcmp|bitget|bitmax|bitnot|bitor|bitset|bitshift|bitxor|blanks|blkdiag|bone|box|brighten|brush|bsxfun|builddocsearchdb|builtin|bvp4c|bvp5c|bvpget|bvpinit|bvpset|bvpxtend|calendar|calllib|callSoapService|camdolly|cameratoolbar|camlight|camlookat|camorbit|campan|campos|camproj|camroll|camtarget|camup|camva|camzoom|cart2pol|cart2sph|cast|cat|caxis|cd|cdf2rdf|cdfepoch|cdfinfo|cdflib(?:.(?:close|closeVar|computeEpoch|computeEpoch16|create|createAttr|createVar|delete|deleteAttr|deleteAttrEntry|deleteAttrgEntry|deleteVar|deleteVarRecords|epoch16Breakdown|epochBreakdown|getAttrEntry|getAttrgEntry|getAttrMaxEntry|getAttrMaxgEntry|getAttrName|getAttrNum|getAttrScope|getCacheSize|getChecksum|getCompression|getCompressionCacheSize|getConstantNames|getConstantValue|getCopyright|getFileBackward|getFormat|getLibraryCopyright|getLibraryVersion|getMajority|getName|getNumAttrEntries|getNumAttrgEntries|getNumAttributes|getNumgAttributes|getReadOnlyMode|getStageCacheSize|getValidate|getVarAllocRecords|getVarBlockingFactor|getVarCacheSize|getVarCompression|getVarData|getVarMaxAllocRecNum|getVarMaxWrittenRecNum|getVarName|getVarNum|getVarNumRecsWritten|getVarPadValue|getVarRecordData|getVarReservePercent|getVarsMaxWrittenRecNum|getVarSparseRecords|getVersion|hyperGetVarData|hyperPutVarData|inquire|inquireAttr|inquireAttrEntry|inquireAttrgEntry|inquireVar|open|putAttrEntry|putAttrgEntry|putVarData|putVarRecordData|renameAttr|renameVar|setCacheSize|setChecksum|setCompression|setCompressionCacheSize|setFileBackward|setFormat|setMajority|setReadOnlyMode|setStageCacheSize|setValidate|setVarAllocBlockRecords|setVarBlockingFactor|setVarCacheSize|setVarCompression|setVarInitialRecs|setVarPadValue|SetVarReservePercent|setVarsCacheSize|setVarSparseRecords))?|cdfread|cdfwrite|ceil|cell2mat|cell2struct|celldisp|cellfun|cellplot|cellstr|cgs|checkcode|checkin|checkout|chol|cholinc|cholupdate|circshift|cla|clabel|class|clc|clear|clearvars|clf|clipboard|clock|close|closereq|cmopts|cmpermute|cmunique|colamd|colon|colorbar|colordef|colormap|colormapeditor|colperm|Combine|comet|comet3|commandhistory|commandwindow|compan|compass|complex|computer|cond|condeig|condest|coneplot|conj|containers.Map|contour(?:3|c|f|slice)?|contrast|conv|conv2|convhull|convhulln|convn|cool|copper|copyfile|copyobj|corrcoef|cos(?:d|h)?|cot(?:d|h)?|cov|cplxpair|cputime|createClassFromWsdl|createSoapMessage|cross|csc(?:d|h)?|csvread|csvwrite|ctranspose|cumprod|cumsum|cumtrapz|curl|customverctrl|cylinder|daqread|daspect|datacursormode|datatipinfo|date|datenum|datestr|datetick|datevec|dbclear|dbcont|dbdown|dblquad|dbmex|dbquit|dbstack|dbstatus|dbstep|dbstop|dbtype|dbup|dde23|ddeget|ddesd|ddeset|deal|deblank|dec2base|dec2bin|dec2hex|decic|deconv|del2|delaunay|delaunay3|delaunayn|DelaunayTri|delete|demo|depdir|depfun|det|detrend|deval|diag|dialog|diary|diff|diffuse|dir|disp|display|dither|divergence|dlmread|dlmwrite|dmperm|doc|docsearch|dos|dot|dragrect|drawnow|dsearch|dsearchn|dynamicprops|echo|echodemo|edit|eig|eigs|ellipj|ellipke|ellipsoid|empty|enableNETfromNetworkDrive|enableservice|EndInvoke|enumeration|eomday|eq|erf|erfc|erfcinv|erfcx|erfinv|error|errorbar|errordlg|etime|etree|etreeplot|eval|evalc|evalin|event.(?:EventData|listener|PropertyEvent|proplistener)|exifread|exist|exit|exp|expint|expm|expm1|export2wsdlg|eye|ezcontour|ezcontourf|ezmesh|ezmeshc|ezplot|ezplot3|ezpolar|ezsurf|ezsurfc|factor|factorial|fclose|feather|feature|feof|ferror|feval|fft|fft2|fftn|fftshift|fftw|fgetl|fgets|fieldnames|figure|figurepalette|fileattrib|filebrowser|filemarker|fileparts|fileread|filesep|fill|fill3|filter|filter2|find|findall|findfigs|findobj|findstr|finish|fitsdisp|fitsinfo|fitsread|fitswrite|fix|flag|flipdim|fliplr|flipud|floor|flow|fminbnd|fminsearch|fopen|format|fplot|fprintf|frame2im|fread|freqspace|frewind|fscanf|fseek|ftell|FTP|full|fullfile|func2str|functions|funm|fwrite|fzero|gallery|gamma|gammainc|gammaincinv|gammaln|gca|gcbf|gcbo|gcd|gcf|gco|ge|genpath|genvarname|get|getappdata|getenv|getfield|getframe|getpixelposition|getpref|ginput|gmres|gplot|grabcode|gradient|gray|graymon|grid|griddata(?:3|n)?|griddedInterpolant|gsvd|gt|gtext|guidata|guide|guihandles|gunzip|gzip|h5create|h5disp|h5info|h5read|h5readatt|h5write|h5writeatt|hadamard|handle|hankel|hdf|hdf5|hdf5info|hdf5read|hdf5write|hdfinfo|hdfread|hdftool|help|helpbrowser|helpdesk|helpdlg|helpwin|hess|hex2dec|hex2num|hgexport|hggroup|hgload|hgsave|hgsetget|hgtransform|hidden|hilb|hist|histc|hold|home|horzcat|hostid|hot|hsv|hsv2rgb|hypot|ichol|idivide|ifft|ifft2|ifftn|ifftshift|ilu|im2frame|im2java|imag|image|imagesc|imapprox|imfinfo|imformats|import|importdata|imread|imwrite|ind2rgb|ind2sub|inferiorto|info|inline|inmem|inpolygon|input|inputdlg|inputname|inputParser|inspect|instrcallback|instrfind|instrfindall|int2str|integral(?:2|3)?|interp(?:1|1q|2|3|ft|n)|interpstreamspeed|intersect|intmax|intmin|inv|invhilb|ipermute|isa|isappdata|iscell|iscellstr|ischar|iscolumn|isdir|isempty|isequal|isequaln|isequalwithequalnans|isfield|isfinite|isfloat|isglobal|ishandle|ishghandle|ishold|isinf|isinteger|isjava|iskeyword|isletter|islogical|ismac|ismatrix|ismember|ismethod|isnan|isnumeric|isobject|isocaps|isocolors|isonormals|isosurface|ispc|ispref|isprime|isprop|isreal|isrow|isscalar|issorted|isspace|issparse|isstr|isstrprop|isstruct|isstudent|isunix|isvarname|isvector|javaaddpath|javaArray|javachk|javaclasspath|javacomponent|javaMethod|javaMethodEDT|javaObject|javaObjectEDT|javarmpath|jet|keyboard|kron|lasterr|lasterror|lastwarn|lcm|ldivide|ldl|le|legend|legendre|length|libfunctions|libfunctionsview|libisloaded|libpointer|libstruct|license|light|lightangle|lighting|lin2mu|line|lines|linkaxes|linkdata|linkprop|linsolve|linspace|listdlg|listfonts|load|loadlibrary|loadobj|log|log10|log1p|log2|loglog|logm|logspace|lookfor|lower|ls|lscov|lsqnonneg|lsqr|lt|lu|luinc|magic|makehgtform|mat2cell|mat2str|material|matfile|matlab.io.MatFile|matlab.mixin.(?:Copyable|Heterogeneous(?:.getDefaultScalarElement)?)|matlabrc|matlabroot|max|maxNumCompThreads|mean|median|membrane|memmapfile|memory|menu|mesh|meshc|meshgrid|meshz|meta.(?:class(?:.fromName)?|DynamicProperty|EnumeratedValue|event|MetaData|method|package(?:.(?:fromName|getAllPackages))?|property)|metaclass|methods|methodsview|mex(?:.getCompilerConfigurations)?|MException|mexext|mfilename|min|minres|minus|mislocked|mkdir|mkpp|mldivide|mlint|mlintrpt|mlock|mmfileinfo|mmreader|mod|mode|more|move|movefile|movegui|movie|movie2avi|mpower|mrdivide|msgbox|mtimes|mu2lin|multibandread|multibandwrite|munlock|namelengthmax|nargchk|narginchk|nargoutchk|native2unicode|nccreate|ncdisp|nchoosek|ncinfo|ncread|ncreadatt|ncwrite|ncwriteatt|ncwriteschema|ndgrid|ndims|ne|NET(?:.(?:addAssembly|Assembly|convertArray|createArray|createGeneric|disableAutoRelease|enableAutoRelease|GenericClass|invokeGenericMethod|NetException|setStaticProperty))?|netcdf.(?:abort|close|copyAtt|create|defDim|defGrp|defVar|defVarChunking|defVarDeflate|defVarFill|defVarFletcher32|delAtt|endDef|getAtt|getChunkCache|getConstant|getConstantNames|getVar|inq|inqAtt|inqAttID|inqAttName|inqDim|inqDimID|inqDimIDs|inqFormat|inqGrpName|inqGrpNameFull|inqGrpParent|inqGrps|inqLibVers|inqNcid|inqUnlimDims|inqVar|inqVarChunking|inqVarDeflate|inqVarFill|inqVarFletcher32|inqVarID|inqVarIDs|open|putAtt|putVar|reDef|renameAtt|renameDim|renameVar|setChunkCache|setDefaultFormat|setFill|sync)|newplot|nextpow2|nnz|noanimate|nonzeros|norm|normest|not|notebook|now|nthroot|null|num2cell|num2hex|num2str|numel|nzmax|ode(?:113|15i|15s|23|23s|23t|23tb|45)|odeget|odeset|odextend|onCleanup|ones|open|openfig|opengl|openvar|optimget|optimset|or|ordeig|orderfields|ordqz|ordschur|orient|orth|pack|padecoef|pagesetupdlg|pan|pareto|parseSoapResponse|pascal|patch|path|path2rc|pathsep|pathtool|pause|pbaspect|pcg|pchip|pcode|pcolor|pdepe|pdeval|peaks|perl|perms|permute|pie|pink|pinv|planerot|playshow|plot|plot3|plotbrowser|plotedit|plotmatrix|plottools|plotyy|plus|pol2cart|polar|poly|polyarea|polyder|polyeig|polyfit|polyint|polyval|polyvalm|pow2|power|ppval|prefdir|preferences|primes|print|printdlg|printopt|printpreview|prod|profile|profsave|propedit|propertyeditor|psi|publish|PutCharArray|PutFullMatrix|PutWorkspaceData|pwd|qhull|qmr|qr|qrdelete|qrinsert|qrupdate|quad|quad2d|quadgk|quadl|quadv|questdlg|quit|quiver|quiver3|qz|rand|randi|randn|randperm|RandStream(?:.(?:create|getDefaultStream|getGlobalStream|list|setDefaultStream|setGlobalStream))?|rank|rat|rats|rbbox|rcond|rdivide|readasync|real|reallog|realmax|realmin|realpow|realsqrt|record|rectangle|rectint|recycle|reducepatch|reducevolume|refresh|refreshdata|regexp|regexpi|regexprep|regexptranslate|rehash|rem|Remove|RemoveAll|repmat|reset|reshape|residue|restoredefaultpath|rethrow|rgb2hsv|rgb2ind|rgbplot|ribbon|rmappdata|rmdir|rmfield|rmpath|rmpref|rng|roots|rose|rosser|rot90|rotate|rotate3d|round|rref|rsf2csf|run|save|saveas|saveobj|savepath|scatter|scatter3|schur|sec|secd|sech|selectmoveresize|semilogx|semilogy|sendmail|serial|set|setappdata|setdiff|setenv|setfield|setpixelposition|setpref|setstr|setxor|shading|shg|shiftdim|showplottool|shrinkfaces|sign|sin(?:d|h)?|size|slice|smooth3|snapnow|sort|sortrows|sound|soundsc|spalloc|spaugment|spconvert|spdiags|specular|speye|spfun|sph2cart|sphere|spinmap|spline|spones|spparms|sprand|sprandn|sprandsym|sprank|spring|sprintf|spy|sqrt|sqrtm|squeeze|ss2tf|sscanf|stairs|startup|std|stem|stem3|stopasync|str2double|str2func|str2mat|str2num|strcat|strcmp|strcmpi|stream2|stream3|streamline|streamparticles|streamribbon|streamslice|streamtube|strfind|strjust|strmatch|strncmp|strncmpi|strread|strrep|strtok|strtrim|struct2cell|structfun|strvcat|sub2ind|subplot|subsasgn|subsindex|subspace|subsref|substruct|subvolume|sum|summer|superclasses|superiorto|support|surf|surf2patch|surface|surfc|surfl|surfnorm|svd|svds|swapbytes|symamd|symbfact|symmlq|symrcm|symvar|system|tan(?:d|h)?|tar|tempdir|tempname|tetramesh|texlabel|text|textread|textscan|textwrap|tfqmr|throw|tic|Tiff(?:.(?:getTagNames|getVersion))?|timer|timerfind|timerfindall|times|timeseries|title|toc|todatenum|toeplitz|toolboxdir|trace|transpose|trapz|treelayout|treeplot|tril|trimesh|triplequad|triplot|TriRep|TriScatteredInterp|trisurf|triu|tscollection|tsearch|tsearchn|tstool|type|typecast|uibuttongroup|uicontextmenu|uicontrol|uigetdir|uigetfile|uigetpref|uiimport|uimenu|uiopen|uipanel|uipushtool|uiputfile|uiresume|uisave|uisetcolor|uisetfont|uisetpref|uistack|uitable|uitoggletool|uitoolbar|uiwait|uminus|undocheckout|unicode2native|union|unique|unix|unloadlibrary|unmesh|unmkpp|untar|unwrap|unzip|uplus|upper|urlread|urlwrite|usejava|userpath|validateattributes|validatestring|vander|var|vectorize|ver|verctrl|verLessThan|version|vertcat|VideoReader(?:.isPlatformSupported)?|VideoWriter(?:.getProfiles)?|view|viewmtx|visdiff|volumebounds|voronoi|voronoin|wait|waitbar|waitfor|waitforbuttonpress|warndlg|warning|waterfall|wavfinfo|wavplay|wavread|wavrecord|wavwrite|web|weekday|what|whatsnew|which|whitebg|who|whos|wilkinson|winopen|winqueryreg|winter|wk1finfo|wk1read|wk1write|workspace|xlabel|xlim|xlsfinfo|xlsread|xlswrite|xmlread|xmlwrite|xor|xslt|ylabel|ylim|zeros|zip|zlabel|zlim|zoom)\\b/,null],\n[\"fun_tbx\",/^\\b(?:addedvarplot|andrewsplot|anova(?:1|2|n)|ansaribradley|aoctool|barttest|bbdesign|beta(?:cdf|fit|inv|like|pdf|rnd|stat)|bino(?:cdf|fit|inv|pdf|rnd|stat)|biplot|bootci|bootstrp|boxplot|candexch|candgen|canoncorr|capability|capaplot|caseread|casewrite|categorical|ccdesign|cdfplot|chi2(?:cdf|gof|inv|pdf|rnd|stat)|cholcov|Classification(?:BaggedEnsemble|Discriminant(?:.(?:fit|make|template))?|Ensemble|KNN(?:.(?:fit|template))?|PartitionedEnsemble|PartitionedModel|Tree(?:.(?:fit|template))?)|classify|classregtree|cluster|clusterdata|cmdscale|combnk|Compact(?:Classification(?:Discriminant|Ensemble|Tree)|Regression(?:Ensemble|Tree)|TreeBagger)|confusionmat|controlchart|controlrules|cophenet|copula(?:cdf|fit|param|pdf|rnd|stat)|cordexch|corr|corrcov|coxphfit|createns|crosstab|crossval|cvpartition|datasample|dataset|daugment|dcovary|dendrogram|dfittool|disttool|dummyvar|dwtest|ecdf|ecdfhist|ev(?:cdf|fit|inv|like|pdf|rnd|stat)|ExhaustiveSearcher|exp(?:cdf|fit|inv|like|pdf|rnd|stat)|factoran|fcdf|ff2n|finv|fitdist|fitensemble|fpdf|fracfact|fracfactgen|friedman|frnd|fstat|fsurfht|fullfact|gagerr|gam(?:cdf|fit|inv|like|pdf|rnd|stat)|GeneralizedLinearModel(?:.fit)?|geo(?:cdf|inv|mean|pdf|rnd|stat)|gev(?:cdf|fit|inv|like|pdf|rnd|stat)|gline|glmfit|glmval|glyphplot|gmdistribution(?:.fit)?|gname|gp(?:cdf|fit|inv|like|pdf|rnd|stat)|gplotmatrix|grp2idx|grpstats|gscatter|haltonset|harmmean|hist3|histfit|hmm(?:decode|estimate|generate|train|viterbi)|hougen|hyge(?:cdf|inv|pdf|rnd|stat)|icdf|inconsistent|interactionplot|invpred|iqr|iwishrnd|jackknife|jbtest|johnsrnd|KDTreeSearcher|kmeans|knnsearch|kruskalwallis|ksdensity|kstest|kstest2|kurtosis|lasso|lassoglm|lassoPlot|leverage|lhsdesign|lhsnorm|lillietest|LinearModel(?:.fit)?|linhyptest|linkage|logn(?:cdf|fit|inv|like|pdf|rnd|stat)|lsline|mad|mahal|maineffectsplot|manova1|manovacluster|mdscale|mhsample|mle|mlecov|mnpdf|mnrfit|mnrnd|mnrval|moment|multcompare|multivarichart|mvn(?:cdf|pdf|rnd)|mvregress|mvregresslike|mvt(?:cdf|pdf|rnd)|NaiveBayes(?:.fit)?|nan(?:cov|max|mean|median|min|std|sum|var)|nbin(?:cdf|fit|inv|pdf|rnd|stat)|ncf(?:cdf|inv|pdf|rnd|stat)|nct(?:cdf|inv|pdf|rnd|stat)|ncx2(?:cdf|inv|pdf|rnd|stat)|NeighborSearcher|nlinfit|nlintool|nlmefit|nlmefitsa|nlparci|nlpredci|nnmf|nominal|NonLinearModel(?:.fit)?|norm(?:cdf|fit|inv|like|pdf|rnd|stat)|normplot|normspec|ordinal|outlierMeasure|parallelcoords|paretotails|partialcorr|pcacov|pcares|pdf|pdist|pdist2|pearsrnd|perfcurve|perms|piecewisedistribution|plsregress|poiss(?:cdf|fit|inv|pdf|rnd|tat)|polyconf|polytool|prctile|princomp|ProbDist(?:Kernel|Parametric|UnivKernel|UnivParam)?|probplot|procrustes|qqplot|qrandset|qrandstream|quantile|randg|random|randsample|randtool|range|rangesearch|ranksum|rayl(?:cdf|fit|inv|pdf|rnd|stat)|rcoplot|refcurve|refline|regress|Regression(?:BaggedEnsemble|Ensemble|PartitionedEnsemble|PartitionedModel|Tree(?:.(?:fit|template))?)|regstats|relieff|ridge|robustdemo|robustfit|rotatefactors|rowexch|rsmdemo|rstool|runstest|sampsizepwr|scatterhist|sequentialfs|signrank|signtest|silhouette|skewness|slicesample|sobolset|squareform|statget|statset|stepwise|stepwisefit|surfht|tabulate|tblread|tblwrite|tcdf|tdfread|tiedrank|tinv|tpdf|TreeBagger|treedisp|treefit|treeprune|treetest|treeval|trimmean|trnd|tstat|ttest|ttest2|unid(?:cdf|inv|pdf|rnd|stat)|unif(?:cdf|inv|it|pdf|rnd|stat)|vartest(?:2|n)?|wbl(?:cdf|fit|inv|like|pdf|rnd|stat)|wblplot|wishrnd|x2fx|xptread|zscore|ztest)\\b/,\nnull],[\"fun_tbx\",/^\\b(?:adapthisteq|analyze75info|analyze75read|applycform|applylut|axes2pix|bestblk|blockproc|bwarea|bwareaopen|bwboundaries|bwconncomp|bwconvhull|bwdist|bwdistgeodesic|bweuler|bwhitmiss|bwlabel|bwlabeln|bwmorph|bwpack|bwperim|bwselect|bwtraceboundary|bwulterode|bwunpack|checkerboard|col2im|colfilt|conndef|convmtx2|corner|cornermetric|corr2|cp2tform|cpcorr|cpselect|cpstruct2pairs|dct2|dctmtx|deconvblind|deconvlucy|deconvreg|deconvwnr|decorrstretch|demosaic|dicom(?:anon|dict|info|lookup|read|uid|write)|edge|edgetaper|entropy|entropyfilt|fan2para|fanbeam|findbounds|fliptform|freqz2|fsamp2|fspecial|ftrans2|fwind1|fwind2|getheight|getimage|getimagemodel|getline|getneighbors|getnhood|getpts|getrangefromclass|getrect|getsequence|gray2ind|graycomatrix|graycoprops|graydist|grayslice|graythresh|hdrread|hdrwrite|histeq|hough|houghlines|houghpeaks|iccfind|iccread|iccroot|iccwrite|idct2|ifanbeam|im2bw|im2col|im2double|im2int16|im2java2d|im2single|im2uint16|im2uint8|imabsdiff|imadd|imadjust|ImageAdapter|imageinfo|imagemodel|imapplymatrix|imattributes|imbothat|imclearborder|imclose|imcolormaptool|imcomplement|imcontour|imcontrast|imcrop|imdilate|imdisplayrange|imdistline|imdivide|imellipse|imerode|imextendedmax|imextendedmin|imfill|imfilter|imfindcircles|imfreehand|imfuse|imgca|imgcf|imgetfile|imhandles|imhist|imhmax|imhmin|imimposemin|imlincomb|imline|immagbox|immovie|immultiply|imnoise|imopen|imoverview|imoverviewpanel|impixel|impixelinfo|impixelinfoval|impixelregion|impixelregionpanel|implay|impoint|impoly|impositionrect|improfile|imputfile|impyramid|imreconstruct|imrect|imregconfig|imregionalmax|imregionalmin|imregister|imresize|imroi|imrotate|imsave|imscrollpanel|imshow|imshowpair|imsubtract|imtool|imtophat|imtransform|imview|ind2gray|ind2rgb|interfileinfo|interfileread|intlut|ippl|iptaddcallback|iptcheckconn|iptcheckhandle|iptcheckinput|iptcheckmap|iptchecknargin|iptcheckstrs|iptdemos|iptgetapi|iptGetPointerBehavior|iptgetpref|ipticondir|iptnum2ordinal|iptPointerManager|iptprefs|iptremovecallback|iptSetPointerBehavior|iptsetpref|iptwindowalign|iradon|isbw|isflat|isgray|isicc|isind|isnitf|isrgb|isrset|lab2double|lab2uint16|lab2uint8|label2rgb|labelmatrix|makecform|makeConstrainToRectFcn|makehdr|makelut|makeresampler|maketform|mat2gray|mean2|medfilt2|montage|nitfinfo|nitfread|nlfilter|normxcorr2|ntsc2rgb|openrset|ordfilt2|otf2psf|padarray|para2fan|phantom|poly2mask|psf2otf|qtdecomp|qtgetblk|qtsetblk|radon|rangefilt|reflect|regionprops|registration.metric.(?:MattesMutualInformation|MeanSquares)|registration.optimizer.(?:OnePlusOneEvolutionary|RegularStepGradientDescent)|rgb2gray|rgb2ntsc|rgb2ycbcr|roicolor|roifill|roifilt2|roipoly|rsetwrite|std2|stdfilt|strel|stretchlim|subimage|tformarray|tformfwd|tforminv|tonemap|translate|truesize|uintlut|viscircles|warp|watershed|whitepoint|wiener2|xyz2double|xyz2uint16|ycbcr2rgb)\\b/,\nnull],[\"fun_tbx\",/^\\b(?:bintprog|color|fgoalattain|fminbnd|fmincon|fminimax|fminsearch|fminunc|fseminf|fsolve|fzero|fzmult|gangstr|ktrlink|linprog|lsqcurvefit|lsqlin|lsqnonlin|lsqnonneg|optimget|optimset|optimtool|quadprog)\\b/,null],[\"ident\",/^[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*/,null]]),[\"matlab-identifiers\"]);a.registerLangHandler(a.createSimpleLexer([],d),[\"matlab-operators\"]);a.registerLangHandler(a.createSimpleLexer(b,c),[\"matlab\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (c) 2013 by Amro <amroamroamro@gmail.com>\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\nvar a=window.PR,b=[[a.PR_PLAIN,/^[ \\t\\r\\n\\v\\f\\xA0]+/,null,\" \\t\\r\\n\\x0B\\f\\u00a0\"],[a.PR_COMMENT,/^%\\{[^%]*%+(?:[^\\}%][^%]*%+)*\\}/,null],[a.PR_COMMENT,/^%[^\\r\\n]*/,null,\"%\"],[\"syscmd\",/^![^\\r\\n]*/,null,\"!\"]],c=[[\"linecont\",/^\\.\\.\\.\\s*[\\r\\n]/,null],[\"err\",/^\\?\\?\\? [^\\r\\n]*/,null],[\"wrn\",/^Warning: [^\\r\\n]*/,null],[\"codeoutput\",/^>>\\s+/,null],[\"codeoutput\",/^octave:\\d+>\\s+/,null],[\"lang-matlab-operators\",/^((?:[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*|\\)|\\]|\\}|\\.)')/,null],[\"lang-matlab-identifiers\",\n/^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)(?!')/,null],[a.PR_STRING,/^'(?:[^']|'')*'/,null],[a.PR_LITERAL,/^[+\\-]?\\.?\\d+(?:\\.\\d*)?(?:[Ee][+\\-]?\\d+)?[ij]?/,null],[a.PR_TAG,/^(?:\\{|\\}|\\(|\\)|\\[|\\])/,null],[a.PR_PUNCTUATION,/^(?:<|>|=|~|@|&|;|,|:|!|\\-|\\+|\\*|\\^|\\.|\\||\\\\|\\/)/,null]],d=[[\"lang-matlab-identifiers\",/^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)/,null],[a.PR_TAG,/^(?:\\{|\\}|\\(|\\)|\\[|\\])/,null],[a.PR_PUNCTUATION,/^(?:<|>|=|~|@|&|;|,|:|!|\\-|\\+|\\*|\\^|\\.|\\||\\\\|\\/)/,null],[\"transpose\",\n/^'/,null]];\na.registerLangHandler(a.createSimpleLexer([],[[a.PR_KEYWORD,/^\\b(?:break|case|catch|classdef|continue|else|elseif|end|for|function|global|if|otherwise|parfor|persistent|return|spmd|switch|try|while)\\b/,null],[\"const\",/^\\b(?:true|false|inf|Inf|nan|NaN|eps|pi|ans|nargin|nargout|varargin|varargout)\\b/,null],[a.PR_TYPE,/^\\b(?:cell|struct|char|double|single|logical|u?int(?:8|16|32|64)|sparse)\\b/,null],[\"fun\",/^\\b(?:abs|accumarray|acos(?:d|h)?|acot(?:d|h)?|acsc(?:d|h)?|actxcontrol(?:list|select)?|actxGetRunningServer|actxserver|addlistener|addpath|addpref|addtodate|airy|align|alim|all|allchild|alpha|alphamap|amd|ancestor|and|angle|annotation|any|area|arrayfun|asec(?:d|h)?|asin(?:d|h)?|assert|assignin|atan(?:2|d|h)?|audiodevinfo|audioplayer|audiorecorder|aufinfo|auread|autumn|auwrite|avifile|aviinfo|aviread|axes|axis|balance|bar(?:3|3h|h)?|base2dec|beep|BeginInvoke|bench|bessel(?:h|i|j|k|y)|beta|betainc|betaincinv|betaln|bicg|bicgstab|bicgstabl|bin2dec|bitand|bitcmp|bitget|bitmax|bitnot|bitor|bitset|bitshift|bitxor|blanks|blkdiag|bone|box|brighten|brush|bsxfun|builddocsearchdb|builtin|bvp4c|bvp5c|bvpget|bvpinit|bvpset|bvpxtend|calendar|calllib|callSoapService|camdolly|cameratoolbar|camlight|camlookat|camorbit|campan|campos|camproj|camroll|camtarget|camup|camva|camzoom|cart2pol|cart2sph|cast|cat|caxis|cd|cdf2rdf|cdfepoch|cdfinfo|cdflib(?:.(?:close|closeVar|computeEpoch|computeEpoch16|create|createAttr|createVar|delete|deleteAttr|deleteAttrEntry|deleteAttrgEntry|deleteVar|deleteVarRecords|epoch16Breakdown|epochBreakdown|getAttrEntry|getAttrgEntry|getAttrMaxEntry|getAttrMaxgEntry|getAttrName|getAttrNum|getAttrScope|getCacheSize|getChecksum|getCompression|getCompressionCacheSize|getConstantNames|getConstantValue|getCopyright|getFileBackward|getFormat|getLibraryCopyright|getLibraryVersion|getMajority|getName|getNumAttrEntries|getNumAttrgEntries|getNumAttributes|getNumgAttributes|getReadOnlyMode|getStageCacheSize|getValidate|getVarAllocRecords|getVarBlockingFactor|getVarCacheSize|getVarCompression|getVarData|getVarMaxAllocRecNum|getVarMaxWrittenRecNum|getVarName|getVarNum|getVarNumRecsWritten|getVarPadValue|getVarRecordData|getVarReservePercent|getVarsMaxWrittenRecNum|getVarSparseRecords|getVersion|hyperGetVarData|hyperPutVarData|inquire|inquireAttr|inquireAttrEntry|inquireAttrgEntry|inquireVar|open|putAttrEntry|putAttrgEntry|putVarData|putVarRecordData|renameAttr|renameVar|setCacheSize|setChecksum|setCompression|setCompressionCacheSize|setFileBackward|setFormat|setMajority|setReadOnlyMode|setStageCacheSize|setValidate|setVarAllocBlockRecords|setVarBlockingFactor|setVarCacheSize|setVarCompression|setVarInitialRecs|setVarPadValue|SetVarReservePercent|setVarsCacheSize|setVarSparseRecords))?|cdfread|cdfwrite|ceil|cell2mat|cell2struct|celldisp|cellfun|cellplot|cellstr|cgs|checkcode|checkin|checkout|chol|cholinc|cholupdate|circshift|cla|clabel|class|clc|clear|clearvars|clf|clipboard|clock|close|closereq|cmopts|cmpermute|cmunique|colamd|colon|colorbar|colordef|colormap|colormapeditor|colperm|Combine|comet|comet3|commandhistory|commandwindow|compan|compass|complex|computer|cond|condeig|condest|coneplot|conj|containers.Map|contour(?:3|c|f|slice)?|contrast|conv|conv2|convhull|convhulln|convn|cool|copper|copyfile|copyobj|corrcoef|cos(?:d|h)?|cot(?:d|h)?|cov|cplxpair|cputime|createClassFromWsdl|createSoapMessage|cross|csc(?:d|h)?|csvread|csvwrite|ctranspose|cumprod|cumsum|cumtrapz|curl|customverctrl|cylinder|daqread|daspect|datacursormode|datatipinfo|date|datenum|datestr|datetick|datevec|dbclear|dbcont|dbdown|dblquad|dbmex|dbquit|dbstack|dbstatus|dbstep|dbstop|dbtype|dbup|dde23|ddeget|ddesd|ddeset|deal|deblank|dec2base|dec2bin|dec2hex|decic|deconv|del2|delaunay|delaunay3|delaunayn|DelaunayTri|delete|demo|depdir|depfun|det|detrend|deval|diag|dialog|diary|diff|diffuse|dir|disp|display|dither|divergence|dlmread|dlmwrite|dmperm|doc|docsearch|dos|dot|dragrect|drawnow|dsearch|dsearchn|dynamicprops|echo|echodemo|edit|eig|eigs|ellipj|ellipke|ellipsoid|empty|enableNETfromNetworkDrive|enableservice|EndInvoke|enumeration|eomday|eq|erf|erfc|erfcinv|erfcx|erfinv|error|errorbar|errordlg|etime|etree|etreeplot|eval|evalc|evalin|event.(?:EventData|listener|PropertyEvent|proplistener)|exifread|exist|exit|exp|expint|expm|expm1|export2wsdlg|eye|ezcontour|ezcontourf|ezmesh|ezmeshc|ezplot|ezplot3|ezpolar|ezsurf|ezsurfc|factor|factorial|fclose|feather|feature|feof|ferror|feval|fft|fft2|fftn|fftshift|fftw|fgetl|fgets|fieldnames|figure|figurepalette|fileattrib|filebrowser|filemarker|fileparts|fileread|filesep|fill|fill3|filter|filter2|find|findall|findfigs|findobj|findstr|finish|fitsdisp|fitsinfo|fitsread|fitswrite|fix|flag|flipdim|fliplr|flipud|floor|flow|fminbnd|fminsearch|fopen|format|fplot|fprintf|frame2im|fread|freqspace|frewind|fscanf|fseek|ftell|FTP|full|fullfile|func2str|functions|funm|fwrite|fzero|gallery|gamma|gammainc|gammaincinv|gammaln|gca|gcbf|gcbo|gcd|gcf|gco|ge|genpath|genvarname|get|getappdata|getenv|getfield|getframe|getpixelposition|getpref|ginput|gmres|gplot|grabcode|gradient|gray|graymon|grid|griddata(?:3|n)?|griddedInterpolant|gsvd|gt|gtext|guidata|guide|guihandles|gunzip|gzip|h5create|h5disp|h5info|h5read|h5readatt|h5write|h5writeatt|hadamard|handle|hankel|hdf|hdf5|hdf5info|hdf5read|hdf5write|hdfinfo|hdfread|hdftool|help|helpbrowser|helpdesk|helpdlg|helpwin|hess|hex2dec|hex2num|hgexport|hggroup|hgload|hgsave|hgsetget|hgtransform|hidden|hilb|hist|histc|hold|home|horzcat|hostid|hot|hsv|hsv2rgb|hypot|ichol|idivide|ifft|ifft2|ifftn|ifftshift|ilu|im2frame|im2java|imag|image|imagesc|imapprox|imfinfo|imformats|import|importdata|imread|imwrite|ind2rgb|ind2sub|inferiorto|info|inline|inmem|inpolygon|input|inputdlg|inputname|inputParser|inspect|instrcallback|instrfind|instrfindall|int2str|integral(?:2|3)?|interp(?:1|1q|2|3|ft|n)|interpstreamspeed|intersect|intmax|intmin|inv|invhilb|ipermute|isa|isappdata|iscell|iscellstr|ischar|iscolumn|isdir|isempty|isequal|isequaln|isequalwithequalnans|isfield|isfinite|isfloat|isglobal|ishandle|ishghandle|ishold|isinf|isinteger|isjava|iskeyword|isletter|islogical|ismac|ismatrix|ismember|ismethod|isnan|isnumeric|isobject|isocaps|isocolors|isonormals|isosurface|ispc|ispref|isprime|isprop|isreal|isrow|isscalar|issorted|isspace|issparse|isstr|isstrprop|isstruct|isstudent|isunix|isvarname|isvector|javaaddpath|javaArray|javachk|javaclasspath|javacomponent|javaMethod|javaMethodEDT|javaObject|javaObjectEDT|javarmpath|jet|keyboard|kron|lasterr|lasterror|lastwarn|lcm|ldivide|ldl|le|legend|legendre|length|libfunctions|libfunctionsview|libisloaded|libpointer|libstruct|license|light|lightangle|lighting|lin2mu|line|lines|linkaxes|linkdata|linkprop|linsolve|linspace|listdlg|listfonts|load|loadlibrary|loadobj|log|log10|log1p|log2|loglog|logm|logspace|lookfor|lower|ls|lscov|lsqnonneg|lsqr|lt|lu|luinc|magic|makehgtform|mat2cell|mat2str|material|matfile|matlab.io.MatFile|matlab.mixin.(?:Copyable|Heterogeneous(?:.getDefaultScalarElement)?)|matlabrc|matlabroot|max|maxNumCompThreads|mean|median|membrane|memmapfile|memory|menu|mesh|meshc|meshgrid|meshz|meta.(?:class(?:.fromName)?|DynamicProperty|EnumeratedValue|event|MetaData|method|package(?:.(?:fromName|getAllPackages))?|property)|metaclass|methods|methodsview|mex(?:.getCompilerConfigurations)?|MException|mexext|mfilename|min|minres|minus|mislocked|mkdir|mkpp|mldivide|mlint|mlintrpt|mlock|mmfileinfo|mmreader|mod|mode|more|move|movefile|movegui|movie|movie2avi|mpower|mrdivide|msgbox|mtimes|mu2lin|multibandread|multibandwrite|munlock|namelengthmax|nargchk|narginchk|nargoutchk|native2unicode|nccreate|ncdisp|nchoosek|ncinfo|ncread|ncreadatt|ncwrite|ncwriteatt|ncwriteschema|ndgrid|ndims|ne|NET(?:.(?:addAssembly|Assembly|convertArray|createArray|createGeneric|disableAutoRelease|enableAutoRelease|GenericClass|invokeGenericMethod|NetException|setStaticProperty))?|netcdf.(?:abort|close|copyAtt|create|defDim|defGrp|defVar|defVarChunking|defVarDeflate|defVarFill|defVarFletcher32|delAtt|endDef|getAtt|getChunkCache|getConstant|getConstantNames|getVar|inq|inqAtt|inqAttID|inqAttName|inqDim|inqDimID|inqDimIDs|inqFormat|inqGrpName|inqGrpNameFull|inqGrpParent|inqGrps|inqLibVers|inqNcid|inqUnlimDims|inqVar|inqVarChunking|inqVarDeflate|inqVarFill|inqVarFletcher32|inqVarID|inqVarIDs|open|putAtt|putVar|reDef|renameAtt|renameDim|renameVar|setChunkCache|setDefaultFormat|setFill|sync)|newplot|nextpow2|nnz|noanimate|nonzeros|norm|normest|not|notebook|now|nthroot|null|num2cell|num2hex|num2str|numel|nzmax|ode(?:113|15i|15s|23|23s|23t|23tb|45)|odeget|odeset|odextend|onCleanup|ones|open|openfig|opengl|openvar|optimget|optimset|or|ordeig|orderfields|ordqz|ordschur|orient|orth|pack|padecoef|pagesetupdlg|pan|pareto|parseSoapResponse|pascal|patch|path|path2rc|pathsep|pathtool|pause|pbaspect|pcg|pchip|pcode|pcolor|pdepe|pdeval|peaks|perl|perms|permute|pie|pink|pinv|planerot|playshow|plot|plot3|plotbrowser|plotedit|plotmatrix|plottools|plotyy|plus|pol2cart|polar|poly|polyarea|polyder|polyeig|polyfit|polyint|polyval|polyvalm|pow2|power|ppval|prefdir|preferences|primes|print|printdlg|printopt|printpreview|prod|profile|profsave|propedit|propertyeditor|psi|publish|PutCharArray|PutFullMatrix|PutWorkspaceData|pwd|qhull|qmr|qr|qrdelete|qrinsert|qrupdate|quad|quad2d|quadgk|quadl|quadv|questdlg|quit|quiver|quiver3|qz|rand|randi|randn|randperm|RandStream(?:.(?:create|getDefaultStream|getGlobalStream|list|setDefaultStream|setGlobalStream))?|rank|rat|rats|rbbox|rcond|rdivide|readasync|real|reallog|realmax|realmin|realpow|realsqrt|record|rectangle|rectint|recycle|reducepatch|reducevolume|refresh|refreshdata|regexp|regexpi|regexprep|regexptranslate|rehash|rem|Remove|RemoveAll|repmat|reset|reshape|residue|restoredefaultpath|rethrow|rgb2hsv|rgb2ind|rgbplot|ribbon|rmappdata|rmdir|rmfield|rmpath|rmpref|rng|roots|rose|rosser|rot90|rotate|rotate3d|round|rref|rsf2csf|run|save|saveas|saveobj|savepath|scatter|scatter3|schur|sec|secd|sech|selectmoveresize|semilogx|semilogy|sendmail|serial|set|setappdata|setdiff|setenv|setfield|setpixelposition|setpref|setstr|setxor|shading|shg|shiftdim|showplottool|shrinkfaces|sign|sin(?:d|h)?|size|slice|smooth3|snapnow|sort|sortrows|sound|soundsc|spalloc|spaugment|spconvert|spdiags|specular|speye|spfun|sph2cart|sphere|spinmap|spline|spones|spparms|sprand|sprandn|sprandsym|sprank|spring|sprintf|spy|sqrt|sqrtm|squeeze|ss2tf|sscanf|stairs|startup|std|stem|stem3|stopasync|str2double|str2func|str2mat|str2num|strcat|strcmp|strcmpi|stream2|stream3|streamline|streamparticles|streamribbon|streamslice|streamtube|strfind|strjust|strmatch|strncmp|strncmpi|strread|strrep|strtok|strtrim|struct2cell|structfun|strvcat|sub2ind|subplot|subsasgn|subsindex|subspace|subsref|substruct|subvolume|sum|summer|superclasses|superiorto|support|surf|surf2patch|surface|surfc|surfl|surfnorm|svd|svds|swapbytes|symamd|symbfact|symmlq|symrcm|symvar|system|tan(?:d|h)?|tar|tempdir|tempname|tetramesh|texlabel|text|textread|textscan|textwrap|tfqmr|throw|tic|Tiff(?:.(?:getTagNames|getVersion))?|timer|timerfind|timerfindall|times|timeseries|title|toc|todatenum|toeplitz|toolboxdir|trace|transpose|trapz|treelayout|treeplot|tril|trimesh|triplequad|triplot|TriRep|TriScatteredInterp|trisurf|triu|tscollection|tsearch|tsearchn|tstool|type|typecast|uibuttongroup|uicontextmenu|uicontrol|uigetdir|uigetfile|uigetpref|uiimport|uimenu|uiopen|uipanel|uipushtool|uiputfile|uiresume|uisave|uisetcolor|uisetfont|uisetpref|uistack|uitable|uitoggletool|uitoolbar|uiwait|uminus|undocheckout|unicode2native|union|unique|unix|unloadlibrary|unmesh|unmkpp|untar|unwrap|unzip|uplus|upper|urlread|urlwrite|usejava|userpath|validateattributes|validatestring|vander|var|vectorize|ver|verctrl|verLessThan|version|vertcat|VideoReader(?:.isPlatformSupported)?|VideoWriter(?:.getProfiles)?|view|viewmtx|visdiff|volumebounds|voronoi|voronoin|wait|waitbar|waitfor|waitforbuttonpress|warndlg|warning|waterfall|wavfinfo|wavplay|wavread|wavrecord|wavwrite|web|weekday|what|whatsnew|which|whitebg|who|whos|wilkinson|winopen|winqueryreg|winter|wk1finfo|wk1read|wk1write|workspace|xlabel|xlim|xlsfinfo|xlsread|xlswrite|xmlread|xmlwrite|xor|xslt|ylabel|ylim|zeros|zip|zlabel|zlim|zoom)\\b/,null],\n[\"fun_tbx\",/^\\b(?:addedvarplot|andrewsplot|anova(?:1|2|n)|ansaribradley|aoctool|barttest|bbdesign|beta(?:cdf|fit|inv|like|pdf|rnd|stat)|bino(?:cdf|fit|inv|pdf|rnd|stat)|biplot|bootci|bootstrp|boxplot|candexch|candgen|canoncorr|capability|capaplot|caseread|casewrite|categorical|ccdesign|cdfplot|chi2(?:cdf|gof|inv|pdf|rnd|stat)|cholcov|Classification(?:BaggedEnsemble|Discriminant(?:.(?:fit|make|template))?|Ensemble|KNN(?:.(?:fit|template))?|PartitionedEnsemble|PartitionedModel|Tree(?:.(?:fit|template))?)|classify|classregtree|cluster|clusterdata|cmdscale|combnk|Compact(?:Classification(?:Discriminant|Ensemble|Tree)|Regression(?:Ensemble|Tree)|TreeBagger)|confusionmat|controlchart|controlrules|cophenet|copula(?:cdf|fit|param|pdf|rnd|stat)|cordexch|corr|corrcov|coxphfit|createns|crosstab|crossval|cvpartition|datasample|dataset|daugment|dcovary|dendrogram|dfittool|disttool|dummyvar|dwtest|ecdf|ecdfhist|ev(?:cdf|fit|inv|like|pdf|rnd|stat)|ExhaustiveSearcher|exp(?:cdf|fit|inv|like|pdf|rnd|stat)|factoran|fcdf|ff2n|finv|fitdist|fitensemble|fpdf|fracfact|fracfactgen|friedman|frnd|fstat|fsurfht|fullfact|gagerr|gam(?:cdf|fit|inv|like|pdf|rnd|stat)|GeneralizedLinearModel(?:.fit)?|geo(?:cdf|inv|mean|pdf|rnd|stat)|gev(?:cdf|fit|inv|like|pdf|rnd|stat)|gline|glmfit|glmval|glyphplot|gmdistribution(?:.fit)?|gname|gp(?:cdf|fit|inv|like|pdf|rnd|stat)|gplotmatrix|grp2idx|grpstats|gscatter|haltonset|harmmean|hist3|histfit|hmm(?:decode|estimate|generate|train|viterbi)|hougen|hyge(?:cdf|inv|pdf|rnd|stat)|icdf|inconsistent|interactionplot|invpred|iqr|iwishrnd|jackknife|jbtest|johnsrnd|KDTreeSearcher|kmeans|knnsearch|kruskalwallis|ksdensity|kstest|kstest2|kurtosis|lasso|lassoglm|lassoPlot|leverage|lhsdesign|lhsnorm|lillietest|LinearModel(?:.fit)?|linhyptest|linkage|logn(?:cdf|fit|inv|like|pdf|rnd|stat)|lsline|mad|mahal|maineffectsplot|manova1|manovacluster|mdscale|mhsample|mle|mlecov|mnpdf|mnrfit|mnrnd|mnrval|moment|multcompare|multivarichart|mvn(?:cdf|pdf|rnd)|mvregress|mvregresslike|mvt(?:cdf|pdf|rnd)|NaiveBayes(?:.fit)?|nan(?:cov|max|mean|median|min|std|sum|var)|nbin(?:cdf|fit|inv|pdf|rnd|stat)|ncf(?:cdf|inv|pdf|rnd|stat)|nct(?:cdf|inv|pdf|rnd|stat)|ncx2(?:cdf|inv|pdf|rnd|stat)|NeighborSearcher|nlinfit|nlintool|nlmefit|nlmefitsa|nlparci|nlpredci|nnmf|nominal|NonLinearModel(?:.fit)?|norm(?:cdf|fit|inv|like|pdf|rnd|stat)|normplot|normspec|ordinal|outlierMeasure|parallelcoords|paretotails|partialcorr|pcacov|pcares|pdf|pdist|pdist2|pearsrnd|perfcurve|perms|piecewisedistribution|plsregress|poiss(?:cdf|fit|inv|pdf|rnd|tat)|polyconf|polytool|prctile|princomp|ProbDist(?:Kernel|Parametric|UnivKernel|UnivParam)?|probplot|procrustes|qqplot|qrandset|qrandstream|quantile|randg|random|randsample|randtool|range|rangesearch|ranksum|rayl(?:cdf|fit|inv|pdf|rnd|stat)|rcoplot|refcurve|refline|regress|Regression(?:BaggedEnsemble|Ensemble|PartitionedEnsemble|PartitionedModel|Tree(?:.(?:fit|template))?)|regstats|relieff|ridge|robustdemo|robustfit|rotatefactors|rowexch|rsmdemo|rstool|runstest|sampsizepwr|scatterhist|sequentialfs|signrank|signtest|silhouette|skewness|slicesample|sobolset|squareform|statget|statset|stepwise|stepwisefit|surfht|tabulate|tblread|tblwrite|tcdf|tdfread|tiedrank|tinv|tpdf|TreeBagger|treedisp|treefit|treeprune|treetest|treeval|trimmean|trnd|tstat|ttest|ttest2|unid(?:cdf|inv|pdf|rnd|stat)|unif(?:cdf|inv|it|pdf|rnd|stat)|vartest(?:2|n)?|wbl(?:cdf|fit|inv|like|pdf|rnd|stat)|wblplot|wishrnd|x2fx|xptread|zscore|ztest)\\b/,\nnull],[\"fun_tbx\",/^\\b(?:adapthisteq|analyze75info|analyze75read|applycform|applylut|axes2pix|bestblk|blockproc|bwarea|bwareaopen|bwboundaries|bwconncomp|bwconvhull|bwdist|bwdistgeodesic|bweuler|bwhitmiss|bwlabel|bwlabeln|bwmorph|bwpack|bwperim|bwselect|bwtraceboundary|bwulterode|bwunpack|checkerboard|col2im|colfilt|conndef|convmtx2|corner|cornermetric|corr2|cp2tform|cpcorr|cpselect|cpstruct2pairs|dct2|dctmtx|deconvblind|deconvlucy|deconvreg|deconvwnr|decorrstretch|demosaic|dicom(?:anon|dict|info|lookup|read|uid|write)|edge|edgetaper|entropy|entropyfilt|fan2para|fanbeam|findbounds|fliptform|freqz2|fsamp2|fspecial|ftrans2|fwind1|fwind2|getheight|getimage|getimagemodel|getline|getneighbors|getnhood|getpts|getrangefromclass|getrect|getsequence|gray2ind|graycomatrix|graycoprops|graydist|grayslice|graythresh|hdrread|hdrwrite|histeq|hough|houghlines|houghpeaks|iccfind|iccread|iccroot|iccwrite|idct2|ifanbeam|im2bw|im2col|im2double|im2int16|im2java2d|im2single|im2uint16|im2uint8|imabsdiff|imadd|imadjust|ImageAdapter|imageinfo|imagemodel|imapplymatrix|imattributes|imbothat|imclearborder|imclose|imcolormaptool|imcomplement|imcontour|imcontrast|imcrop|imdilate|imdisplayrange|imdistline|imdivide|imellipse|imerode|imextendedmax|imextendedmin|imfill|imfilter|imfindcircles|imfreehand|imfuse|imgca|imgcf|imgetfile|imhandles|imhist|imhmax|imhmin|imimposemin|imlincomb|imline|immagbox|immovie|immultiply|imnoise|imopen|imoverview|imoverviewpanel|impixel|impixelinfo|impixelinfoval|impixelregion|impixelregionpanel|implay|impoint|impoly|impositionrect|improfile|imputfile|impyramid|imreconstruct|imrect|imregconfig|imregionalmax|imregionalmin|imregister|imresize|imroi|imrotate|imsave|imscrollpanel|imshow|imshowpair|imsubtract|imtool|imtophat|imtransform|imview|ind2gray|ind2rgb|interfileinfo|interfileread|intlut|ippl|iptaddcallback|iptcheckconn|iptcheckhandle|iptcheckinput|iptcheckmap|iptchecknargin|iptcheckstrs|iptdemos|iptgetapi|iptGetPointerBehavior|iptgetpref|ipticondir|iptnum2ordinal|iptPointerManager|iptprefs|iptremovecallback|iptSetPointerBehavior|iptsetpref|iptwindowalign|iradon|isbw|isflat|isgray|isicc|isind|isnitf|isrgb|isrset|lab2double|lab2uint16|lab2uint8|label2rgb|labelmatrix|makecform|makeConstrainToRectFcn|makehdr|makelut|makeresampler|maketform|mat2gray|mean2|medfilt2|montage|nitfinfo|nitfread|nlfilter|normxcorr2|ntsc2rgb|openrset|ordfilt2|otf2psf|padarray|para2fan|phantom|poly2mask|psf2otf|qtdecomp|qtgetblk|qtsetblk|radon|rangefilt|reflect|regionprops|registration.metric.(?:MattesMutualInformation|MeanSquares)|registration.optimizer.(?:OnePlusOneEvolutionary|RegularStepGradientDescent)|rgb2gray|rgb2ntsc|rgb2ycbcr|roicolor|roifill|roifilt2|roipoly|rsetwrite|std2|stdfilt|strel|stretchlim|subimage|tformarray|tformfwd|tforminv|tonemap|translate|truesize|uintlut|viscircles|warp|watershed|whitepoint|wiener2|xyz2double|xyz2uint16|ycbcr2rgb)\\b/,\nnull],[\"fun_tbx\",/^\\b(?:bintprog|color|fgoalattain|fminbnd|fmincon|fminimax|fminsearch|fminunc|fseminf|fsolve|fzero|fzmult|gangstr|ktrlink|linprog|lsqcurvefit|lsqlin|lsqnonlin|lsqnonneg|optimget|optimset|optimtool|quadprog)\\b/,null],[\"ident\",/^[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*/,null]]),[\"matlab-identifiers\"]);a.registerLangHandler(a.createSimpleLexer([],d),[\"matlab-operators\"]);a.registerLangHandler(a.createSimpleLexer(b,c),[\"matlab\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i,null,\"#\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/],[\"kwd\",/^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/],\n[\"lit\",/^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i],[\"pun\",/^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/]]),[\"fs\",\"ml\"]);\n","source":"plugins/google-code-prettify/lang-ml.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i,null,\"#\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/],[\"kwd\",/^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/],\n[\"lit\",/^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i],[\"pun\",/^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/]]),[\"fs\",\"ml\"]);\n","date":"2022-03-27T08:23:16.348Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-ml.js","layout":"false","title":"","comments":1,"_id":"cl22h70ug003o5ossh78dfc7s","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i,null,\"#\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/],[\"kwd\",/^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/],\n[\"lit\",/^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i],[\"pun\",/^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/]]),[\"fs\",\"ml\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i,null,\"#\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/],[\"kwd\",/^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/],\n[\"lit\",/^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i],[\"pun\",/^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/]]),[\"fs\",\"ml\"]);\n"},{"_content":"/*\n\n Copyright (C) 2011 Kitware Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:[^\"]|\\\\.)*\")/,null,'\"']],[[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"dec\",/^(?:\\$(?:D|DEVICE|EC|ECODE|ES|ESTACK|ET|ETRAP|H|HOROLOG|I|IO|J|JOB|K|KEY|P|PRINCIPAL|Q|QUIT|ST|STACK|S|STORAGE|SY|SYSTEM|T|TEST|TL|TLEVEL|TR|TRESTART|X|Y|Z[A-Z]*|A|ASCII|C|CHAR|D|DATA|E|EXTRACT|F|FIND|FN|FNUMBER|G|GET|J|JUSTIFY|L|LENGTH|NA|NAME|O|ORDER|P|PIECE|QL|QLENGTH|QS|QSUBSCRIPT|Q|QUERY|R|RANDOM|RE|REVERSE|S|SELECT|ST|STACK|T|TEXT|TR|TRANSLATE|NaN))\\b/i,\nnull],[\"kwd\",/^(?:[^\\$]B|BREAK|C|CLOSE|D|DO|E|ELSE|F|FOR|G|GOTO|H|HALT|H|HANG|I|IF|J|JOB|K|KILL|L|LOCK|M|MERGE|N|NEW|O|OPEN|Q|QUIT|R|READ|S|SET|TC|TCOMMIT|TRE|TRESTART|TRO|TROLLBACK|TS|TSTART|U|USE|V|VIEW|W|WRITE|X|XECUTE)\\b/i,null],[\"lit\",/^[+-]?(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:E[+\\-]?\\d+)?)/i],[\"pln\",/^[a-z][a-zA-Z0-9]*/i],[\"pun\",/^[^\\w\\t\\n\\r\\xA0\\\"\\$;%\\^]|_/]]),[\"mumps\"]);\n","source":"plugins/google-code-prettify/lang-mumps.js","raw":"/*\n\n Copyright (C) 2011 Kitware Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:[^\"]|\\\\.)*\")/,null,'\"']],[[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"dec\",/^(?:\\$(?:D|DEVICE|EC|ECODE|ES|ESTACK|ET|ETRAP|H|HOROLOG|I|IO|J|JOB|K|KEY|P|PRINCIPAL|Q|QUIT|ST|STACK|S|STORAGE|SY|SYSTEM|T|TEST|TL|TLEVEL|TR|TRESTART|X|Y|Z[A-Z]*|A|ASCII|C|CHAR|D|DATA|E|EXTRACT|F|FIND|FN|FNUMBER|G|GET|J|JUSTIFY|L|LENGTH|NA|NAME|O|ORDER|P|PIECE|QL|QLENGTH|QS|QSUBSCRIPT|Q|QUERY|R|RANDOM|RE|REVERSE|S|SELECT|ST|STACK|T|TEXT|TR|TRANSLATE|NaN))\\b/i,\nnull],[\"kwd\",/^(?:[^\\$]B|BREAK|C|CLOSE|D|DO|E|ELSE|F|FOR|G|GOTO|H|HALT|H|HANG|I|IF|J|JOB|K|KILL|L|LOCK|M|MERGE|N|NEW|O|OPEN|Q|QUIT|R|READ|S|SET|TC|TCOMMIT|TRE|TRESTART|TRO|TROLLBACK|TS|TSTART|U|USE|V|VIEW|W|WRITE|X|XECUTE)\\b/i,null],[\"lit\",/^[+-]?(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:E[+\\-]?\\d+)?)/i],[\"pln\",/^[a-z][a-zA-Z0-9]*/i],[\"pun\",/^[^\\w\\t\\n\\r\\xA0\\\"\\$;%\\^]|_/]]),[\"mumps\"]);\n","date":"2022-03-27T08:23:16.349Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-mumps.js","layout":"false","title":"","comments":1,"_id":"cl22h70ui003t5oss5fxveq0f","content":"/*\n\n Copyright (C) 2011 Kitware Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:[^\"]|\\\\.)*\")/,null,'\"']],[[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"dec\",/^(?:\\$(?:D|DEVICE|EC|ECODE|ES|ESTACK|ET|ETRAP|H|HOROLOG|I|IO|J|JOB|K|KEY|P|PRINCIPAL|Q|QUIT|ST|STACK|S|STORAGE|SY|SYSTEM|T|TEST|TL|TLEVEL|TR|TRESTART|X|Y|Z[A-Z]*|A|ASCII|C|CHAR|D|DATA|E|EXTRACT|F|FIND|FN|FNUMBER|G|GET|J|JUSTIFY|L|LENGTH|NA|NAME|O|ORDER|P|PIECE|QL|QLENGTH|QS|QSUBSCRIPT|Q|QUERY|R|RANDOM|RE|REVERSE|S|SELECT|ST|STACK|T|TEXT|TR|TRANSLATE|NaN))\\b/i,\nnull],[\"kwd\",/^(?:[^\\$]B|BREAK|C|CLOSE|D|DO|E|ELSE|F|FOR|G|GOTO|H|HALT|H|HANG|I|IF|J|JOB|K|KILL|L|LOCK|M|MERGE|N|NEW|O|OPEN|Q|QUIT|R|READ|S|SET|TC|TCOMMIT|TRE|TRESTART|TRO|TROLLBACK|TS|TSTART|U|USE|V|VIEW|W|WRITE|X|XECUTE)\\b/i,null],[\"lit\",/^[+-]?(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:E[+\\-]?\\d+)?)/i],[\"pln\",/^[a-z][a-zA-Z0-9]*/i],[\"pun\",/^[^\\w\\t\\n\\r\\xA0\\\"\\$;%\\^]|_/]]),[\"mumps\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2011 Kitware Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:[^\"]|\\\\.)*\")/,null,'\"']],[[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"dec\",/^(?:\\$(?:D|DEVICE|EC|ECODE|ES|ESTACK|ET|ETRAP|H|HOROLOG|I|IO|J|JOB|K|KEY|P|PRINCIPAL|Q|QUIT|ST|STACK|S|STORAGE|SY|SYSTEM|T|TEST|TL|TLEVEL|TR|TRESTART|X|Y|Z[A-Z]*|A|ASCII|C|CHAR|D|DATA|E|EXTRACT|F|FIND|FN|FNUMBER|G|GET|J|JUSTIFY|L|LENGTH|NA|NAME|O|ORDER|P|PIECE|QL|QLENGTH|QS|QSUBSCRIPT|Q|QUERY|R|RANDOM|RE|REVERSE|S|SELECT|ST|STACK|T|TEXT|TR|TRANSLATE|NaN))\\b/i,\nnull],[\"kwd\",/^(?:[^\\$]B|BREAK|C|CLOSE|D|DO|E|ELSE|F|FOR|G|GOTO|H|HALT|H|HANG|I|IF|J|JOB|K|KILL|L|LOCK|M|MERGE|N|NEW|O|OPEN|Q|QUIT|R|READ|S|SET|TC|TCOMMIT|TRE|TRESTART|TRO|TROLLBACK|TS|TSTART|U|USE|V|VIEW|W|WRITE|X|XECUTE)\\b/i,null],[\"lit\",/^[+-]?(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:E[+\\-]?\\d+)?)/i],[\"pln\",/^[a-z][a-zA-Z0-9]*/i],[\"pun\",/^[^\\w\\t\\n\\r\\xA0\\\"\\$;%\\^]|_/]]),[\"mumps\"]);\n"},{"_content":"/*\n\n Copyright (C) 2011 Zimin A.V.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,'\"'],[\"com\",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null],[\"str\",/^<#(?:[^#>])*(?:#>|$)/,null],[\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,null],[\"com\",/^\\/\\/[^\\r\\n]*/,\nnull],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"kwd\",/^(?:abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield)\\b/,\nnull],[\"typ\",/^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/,null],[\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^@[A-Z]+[a-z][A-Za-z_$@0-9]*/,null],[\"pln\",/^'?[A-Za-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]]),[\"n\",\"nemerle\"]);\n","source":"plugins/google-code-prettify/lang-n.js","raw":"/*\n\n Copyright (C) 2011 Zimin A.V.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,'\"'],[\"com\",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null],[\"str\",/^<#(?:[^#>])*(?:#>|$)/,null],[\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,null],[\"com\",/^\\/\\/[^\\r\\n]*/,\nnull],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"kwd\",/^(?:abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield)\\b/,\nnull],[\"typ\",/^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/,null],[\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^@[A-Z]+[a-z][A-Za-z_$@0-9]*/,null],[\"pln\",/^'?[A-Za-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]]),[\"n\",\"nemerle\"]);\n","date":"2022-03-27T08:23:16.351Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-n.js","layout":"false","title":"","comments":1,"_id":"cl22h70ui003v5oss1sua9491","content":"/*\n\n Copyright (C) 2011 Zimin A.V.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,'\"'],[\"com\",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null],[\"str\",/^<#(?:[^#>])*(?:#>|$)/,null],[\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,null],[\"com\",/^\\/\\/[^\\r\\n]*/,\nnull],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"kwd\",/^(?:abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield)\\b/,\nnull],[\"typ\",/^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/,null],[\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^@[A-Z]+[a-z][A-Za-z_$@0-9]*/,null],[\"pln\",/^'?[A-Za-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]]),[\"n\",\"nemerle\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2011 Zimin A.V.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,'\"'],[\"com\",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null],[\"str\",/^<#(?:[^#>])*(?:#>|$)/,null],[\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,null],[\"com\",/^\\/\\/[^\\r\\n]*/,\nnull],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"kwd\",/^(?:abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield)\\b/,\nnull],[\"typ\",/^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/,null],[\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^@[A-Z]+[a-z][A-Za-z_$@0-9]*/,null],[\"pln\",/^'?[A-Za-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]]),[\"n\",\"nemerle\"]);\n"},{"_content":"/*\n\n Copyright (C) 2011 Zimin A.V.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,'\"'],[\"com\",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null],[\"str\",/^<#(?:[^#>])*(?:#>|$)/,null],[\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,null],[\"com\",/^\\/\\/[^\\r\\n]*/,\nnull],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"kwd\",/^(?:abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield)\\b/,\nnull],[\"typ\",/^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/,null],[\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^@[A-Z]+[a-z][A-Za-z_$@0-9]*/,null],[\"pln\",/^'?[A-Za-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]]),[\"n\",\"nemerle\"]);\n","source":"plugins/google-code-prettify/lang-nemerle.js","raw":"/*\n\n Copyright (C) 2011 Zimin A.V.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,'\"'],[\"com\",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null],[\"str\",/^<#(?:[^#>])*(?:#>|$)/,null],[\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,null],[\"com\",/^\\/\\/[^\\r\\n]*/,\nnull],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"kwd\",/^(?:abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield)\\b/,\nnull],[\"typ\",/^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/,null],[\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^@[A-Z]+[a-z][A-Za-z_$@0-9]*/,null],[\"pln\",/^'?[A-Za-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]]),[\"n\",\"nemerle\"]);\n","date":"2022-03-27T08:23:16.352Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-nemerle.js","layout":"false","title":"","comments":1,"_id":"cl22h70uj003z5oss49b3h6eb","content":"/*\n\n Copyright (C) 2011 Zimin A.V.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,'\"'],[\"com\",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null],[\"str\",/^<#(?:[^#>])*(?:#>|$)/,null],[\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,null],[\"com\",/^\\/\\/[^\\r\\n]*/,\nnull],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"kwd\",/^(?:abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield)\\b/,\nnull],[\"typ\",/^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/,null],[\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^@[A-Z]+[a-z][A-Za-z_$@0-9]*/,null],[\"pln\",/^'?[A-Za-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]]),[\"n\",\"nemerle\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2011 Zimin A.V.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,'\"'],[\"com\",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null],[\"str\",/^<#(?:[^#>])*(?:#>|$)/,null],[\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,null],[\"com\",/^\\/\\/[^\\r\\n]*/,\nnull],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"kwd\",/^(?:abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield)\\b/,\nnull],[\"typ\",/^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/,null],[\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^@[A-Z]+[a-z][A-Za-z_$@0-9]*/,null],[\"pln\",/^'?[A-Za-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]]),[\"n\",\"nemerle\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$))/,null,\"'\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^\\(\\*[\\s\\S]*?(?:\\*\\)|$)|^\\{[\\s\\S]*?(?:\\}|$)/,null],[\"kwd\",/^(?:ABSOLUTE|AND|ARRAY|ASM|ASSEMBLER|BEGIN|CASE|CONST|CONSTRUCTOR|DESTRUCTOR|DIV|DO|DOWNTO|ELSE|END|EXTERNAL|FOR|FORWARD|FUNCTION|GOTO|IF|IMPLEMENTATION|IN|INLINE|INTERFACE|INTERRUPT|LABEL|MOD|NOT|OBJECT|OF|OR|PACKED|PROCEDURE|PROGRAM|RECORD|REPEAT|SET|SHL|SHR|THEN|TO|TYPE|UNIT|UNTIL|USES|VAR|VIRTUAL|WHILE|WITH|XOR)\\b/i,\nnull],[\"lit\",/^(?:true|false|self|nil)/i,null],[\"pln\",/^[a-z][a-z0-9]*/i,null],[\"lit\",/^(?:\\$[a-f0-9]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\/]*/,null]]),[\"pascal\"]);\n","source":"plugins/google-code-prettify/lang-pascal.js","raw":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$))/,null,\"'\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^\\(\\*[\\s\\S]*?(?:\\*\\)|$)|^\\{[\\s\\S]*?(?:\\}|$)/,null],[\"kwd\",/^(?:ABSOLUTE|AND|ARRAY|ASM|ASSEMBLER|BEGIN|CASE|CONST|CONSTRUCTOR|DESTRUCTOR|DIV|DO|DOWNTO|ELSE|END|EXTERNAL|FOR|FORWARD|FUNCTION|GOTO|IF|IMPLEMENTATION|IN|INLINE|INTERFACE|INTERRUPT|LABEL|MOD|NOT|OBJECT|OF|OR|PACKED|PROCEDURE|PROGRAM|RECORD|REPEAT|SET|SHL|SHR|THEN|TO|TYPE|UNIT|UNTIL|USES|VAR|VIRTUAL|WHILE|WITH|XOR)\\b/i,\nnull],[\"lit\",/^(?:true|false|self|nil)/i,null],[\"pln\",/^[a-z][a-z0-9]*/i,null],[\"lit\",/^(?:\\$[a-f0-9]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\/]*/,null]]),[\"pascal\"]);\n","date":"2022-03-27T08:23:16.353Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-pascal.js","layout":"false","title":"","comments":1,"_id":"cl22h70uk00425oss299s1ceh","content":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$))/,null,\"'\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^\\(\\*[\\s\\S]*?(?:\\*\\)|$)|^\\{[\\s\\S]*?(?:\\}|$)/,null],[\"kwd\",/^(?:ABSOLUTE|AND|ARRAY|ASM|ASSEMBLER|BEGIN|CASE|CONST|CONSTRUCTOR|DESTRUCTOR|DIV|DO|DOWNTO|ELSE|END|EXTERNAL|FOR|FORWARD|FUNCTION|GOTO|IF|IMPLEMENTATION|IN|INLINE|INTERFACE|INTERRUPT|LABEL|MOD|NOT|OBJECT|OF|OR|PACKED|PROCEDURE|PROGRAM|RECORD|REPEAT|SET|SHL|SHR|THEN|TO|TYPE|UNIT|UNTIL|USES|VAR|VIRTUAL|WHILE|WITH|XOR)\\b/i,\nnull],[\"lit\",/^(?:true|false|self|nil)/i,null],[\"pln\",/^[a-z][a-z0-9]*/i,null],[\"lit\",/^(?:\\$[a-f0-9]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\/]*/,null]]),[\"pascal\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$))/,null,\"'\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^\\(\\*[\\s\\S]*?(?:\\*\\)|$)|^\\{[\\s\\S]*?(?:\\}|$)/,null],[\"kwd\",/^(?:ABSOLUTE|AND|ARRAY|ASM|ASSEMBLER|BEGIN|CASE|CONST|CONSTRUCTOR|DESTRUCTOR|DIV|DO|DOWNTO|ELSE|END|EXTERNAL|FOR|FORWARD|FUNCTION|GOTO|IF|IMPLEMENTATION|IN|INLINE|INTERFACE|INTERRUPT|LABEL|MOD|NOT|OBJECT|OF|OR|PACKED|PROCEDURE|PROGRAM|RECORD|REPEAT|SET|SHL|SHR|THEN|TO|TYPE|UNIT|UNTIL|USES|VAR|VIRTUAL|WHILE|WITH|XOR)\\b/i,\nnull],[\"lit\",/^(?:true|false|self|nil)/i,null],[\"pln\",/^[a-z][a-z0-9]*/i,null],[\"lit\",/^(?:\\$[a-f0-9]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\/]*/,null]]),[\"pascal\"]);\n"},{"_content":"/*\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.sourceDecorator({keywords:\"bytes,default,double,enum,extend,extensions,false,group,import,max,message,option,optional,package,repeated,required,returns,rpc,service,syntax,to,true\",types:/^(bool|(double|s?fixed|[su]?int)(32|64)|float|string)\\b/,cStyleComments:!0}),[\"proto\"]);\n","source":"plugins/google-code-prettify/lang-proto.js","raw":"/*\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.sourceDecorator({keywords:\"bytes,default,double,enum,extend,extensions,false,group,import,max,message,option,optional,package,repeated,required,returns,rpc,service,syntax,to,true\",types:/^(bool|(double|s?fixed|[su]?int)(32|64)|float|string)\\b/,cStyleComments:!0}),[\"proto\"]);\n","date":"2022-03-27T08:23:16.354Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-proto.js","layout":"false","title":"","comments":1,"_id":"cl22h70uk00465ossakx40ekc","content":"/*\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.sourceDecorator({keywords:\"bytes,default,double,enum,extend,extensions,false,group,import,max,message,option,optional,package,repeated,required,returns,rpc,service,syntax,to,true\",types:/^(bool|(double|s?fixed|[su]?int)(32|64)|float|string)\\b/,cStyleComments:!0}),[\"proto\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.sourceDecorator({keywords:\"bytes,default,double,enum,extend,extensions,false,group,import,max,message,option,optional,package,repeated,required,returns,rpc,service,syntax,to,true\",types:/^(bool|(double|s?fixed|[su]?int)(32|64)|float|string)\\b/,cStyleComments:!0}),[\"proto\"]);\n"},{"_content":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","source":"plugins/google-code-prettify/lang-r.js","raw":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","date":"2022-03-27T08:23:16.355Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-r.js","layout":"false","title":"","comments":1,"_id":"cl22h70ul00485oss8gu5fhan","content":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n"},{"_content":"/*\n\n Copyright (C) 2012 Jeffrey Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"lit\",/^\\\\(?:cr|l?dots|R|tab)\\b/],[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^#(?:ifn?def|endif)/],[\"pln\",/^\\\\[{}]/],[\"pun\",/^[{}()\\[\\]]+/]]),[\"Rd\",\"rd\"]);\n","source":"plugins/google-code-prettify/lang-rd.js","raw":"/*\n\n Copyright (C) 2012 Jeffrey Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"lit\",/^\\\\(?:cr|l?dots|R|tab)\\b/],[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^#(?:ifn?def|endif)/],[\"pln\",/^\\\\[{}]/],[\"pun\",/^[{}()\\[\\]]+/]]),[\"Rd\",\"rd\"]);\n","date":"2022-03-27T08:23:16.356Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-rd.js","layout":"false","title":"","comments":1,"_id":"cl22h70um004b5oss2skhg6oe","content":"/*\n\n Copyright (C) 2012 Jeffrey Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"lit\",/^\\\\(?:cr|l?dots|R|tab)\\b/],[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^#(?:ifn?def|endif)/],[\"pln\",/^\\\\[{}]/],[\"pun\",/^[{}()\\[\\]]+/]]),[\"Rd\",\"rd\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2012 Jeffrey Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"lit\",/^\\\\(?:cr|l?dots|R|tab)\\b/],[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^#(?:ifn?def|endif)/],[\"pln\",/^\\\\[{}]/],[\"pun\",/^[{}()\\[\\]]+/]]),[\"Rd\",\"rd\"]);\n"},{"_content":"/*\n\n Copyright (C) 2015 Chris Morgan\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([],[[\"pln\",/^[\\t\\n\\r \\xA0]+/],[\"com\",/^\\/\\/.*/],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],[\"str\",/^b\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}))*?\"/],[\"str\",/^\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}|u\\{\\[\\da-fA-F]{1,6}\\}))*?\"/],[\"str\",/^b?r(#*)\\\"[\\s\\S]*?\\\"\\1/],[\"str\",/^b'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}))'/],[\"str\",/^'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{1,6}\\}))'/],[\"tag\",/^'\\w+?\\b/],[\"kwd\",/^(?:match|if|else|as|break|box|continue|extern|fn|for|in|if|impl|let|loop|pub|return|super|unsafe|where|while|use|mod|trait|struct|enum|type|move|mut|ref|static|const|crate)\\b/],\n[\"kwd\",/^(?:alignof|become|do|offsetof|priv|pure|sizeof|typeof|unsized|yield|abstract|virtual|final|override|macro)\\b/],[\"typ\",/^(?:[iu](8|16|32|64|128|size)|char|bool|f32|f64|str|Self)\\b/],[\"typ\",/^(?:Copy|Send|Sized|Sync|Drop|Fn|FnMut|FnOnce|Box|ToOwned|Clone|PartialEq|PartialOrd|Eq|Ord|AsRef|AsMut|Into|From|Default|Iterator|Extend|IntoIterator|DoubleEndedIterator|ExactSizeIterator|Option|Some|None|Result|Ok|Err|SliceConcatExt|String|ToString|Vec)\\b/],[\"lit\",/^(self|true|false|null)\\b/],\n[\"lit\",/^\\d[0-9_]*(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0x[a-fA-F0-9_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0o[0-7_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0b[01_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^\\d[0-9_]*\\.(?![^\\s\\d.])/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)(?:[eE][+-]?[0-9_]+)?(?:f32|f64)?/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)(?:f32|f64)?/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)?(?:f32|f64)/],\n[\"atn\",/^[a-z_]\\w*!/i],[\"pln\",/^[a-z_]\\w*/i],[\"atv\",/^#!?\\[[\\s\\S]*?\\]/],[\"pun\",/^[+\\-/*=^&|!<>%[\\](){}?:.,;]/],[\"pln\",/./]]),[\"rust\"]);\n","source":"plugins/google-code-prettify/lang-rust.js","raw":"/*\n\n Copyright (C) 2015 Chris Morgan\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([],[[\"pln\",/^[\\t\\n\\r \\xA0]+/],[\"com\",/^\\/\\/.*/],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],[\"str\",/^b\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}))*?\"/],[\"str\",/^\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}|u\\{\\[\\da-fA-F]{1,6}\\}))*?\"/],[\"str\",/^b?r(#*)\\\"[\\s\\S]*?\\\"\\1/],[\"str\",/^b'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}))'/],[\"str\",/^'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{1,6}\\}))'/],[\"tag\",/^'\\w+?\\b/],[\"kwd\",/^(?:match|if|else|as|break|box|continue|extern|fn|for|in|if|impl|let|loop|pub|return|super|unsafe|where|while|use|mod|trait|struct|enum|type|move|mut|ref|static|const|crate)\\b/],\n[\"kwd\",/^(?:alignof|become|do|offsetof|priv|pure|sizeof|typeof|unsized|yield|abstract|virtual|final|override|macro)\\b/],[\"typ\",/^(?:[iu](8|16|32|64|128|size)|char|bool|f32|f64|str|Self)\\b/],[\"typ\",/^(?:Copy|Send|Sized|Sync|Drop|Fn|FnMut|FnOnce|Box|ToOwned|Clone|PartialEq|PartialOrd|Eq|Ord|AsRef|AsMut|Into|From|Default|Iterator|Extend|IntoIterator|DoubleEndedIterator|ExactSizeIterator|Option|Some|None|Result|Ok|Err|SliceConcatExt|String|ToString|Vec)\\b/],[\"lit\",/^(self|true|false|null)\\b/],\n[\"lit\",/^\\d[0-9_]*(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0x[a-fA-F0-9_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0o[0-7_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0b[01_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^\\d[0-9_]*\\.(?![^\\s\\d.])/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)(?:[eE][+-]?[0-9_]+)?(?:f32|f64)?/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)(?:f32|f64)?/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)?(?:f32|f64)/],\n[\"atn\",/^[a-z_]\\w*!/i],[\"pln\",/^[a-z_]\\w*/i],[\"atv\",/^#!?\\[[\\s\\S]*?\\]/],[\"pun\",/^[+\\-/*=^&|!<>%[\\](){}?:.,;]/],[\"pln\",/./]]),[\"rust\"]);\n","date":"2022-03-27T08:23:16.360Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-rust.js","layout":"false","title":"","comments":1,"_id":"cl22h70um004e5ossgf1renyd","content":"/*\n\n Copyright (C) 2015 Chris Morgan\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([],[[\"pln\",/^[\\t\\n\\r \\xA0]+/],[\"com\",/^\\/\\/.*/],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],[\"str\",/^b\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}))*?\"/],[\"str\",/^\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}|u\\{\\[\\da-fA-F]{1,6}\\}))*?\"/],[\"str\",/^b?r(#*)\\\"[\\s\\S]*?\\\"\\1/],[\"str\",/^b'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}))'/],[\"str\",/^'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{1,6}\\}))'/],[\"tag\",/^'\\w+?\\b/],[\"kwd\",/^(?:match|if|else|as|break|box|continue|extern|fn|for|in|if|impl|let|loop|pub|return|super|unsafe|where|while|use|mod|trait|struct|enum|type|move|mut|ref|static|const|crate)\\b/],\n[\"kwd\",/^(?:alignof|become|do|offsetof|priv|pure|sizeof|typeof|unsized|yield|abstract|virtual|final|override|macro)\\b/],[\"typ\",/^(?:[iu](8|16|32|64|128|size)|char|bool|f32|f64|str|Self)\\b/],[\"typ\",/^(?:Copy|Send|Sized|Sync|Drop|Fn|FnMut|FnOnce|Box|ToOwned|Clone|PartialEq|PartialOrd|Eq|Ord|AsRef|AsMut|Into|From|Default|Iterator|Extend|IntoIterator|DoubleEndedIterator|ExactSizeIterator|Option|Some|None|Result|Ok|Err|SliceConcatExt|String|ToString|Vec)\\b/],[\"lit\",/^(self|true|false|null)\\b/],\n[\"lit\",/^\\d[0-9_]*(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0x[a-fA-F0-9_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0o[0-7_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0b[01_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^\\d[0-9_]*\\.(?![^\\s\\d.])/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)(?:[eE][+-]?[0-9_]+)?(?:f32|f64)?/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)(?:f32|f64)?/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)?(?:f32|f64)/],\n[\"atn\",/^[a-z_]\\w*!/i],[\"pln\",/^[a-z_]\\w*/i],[\"atv\",/^#!?\\[[\\s\\S]*?\\]/],[\"pun\",/^[+\\-/*=^&|!<>%[\\](){}?:.,;]/],[\"pln\",/./]]),[\"rust\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2015 Chris Morgan\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([],[[\"pln\",/^[\\t\\n\\r \\xA0]+/],[\"com\",/^\\/\\/.*/],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],[\"str\",/^b\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}))*?\"/],[\"str\",/^\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}|u\\{\\[\\da-fA-F]{1,6}\\}))*?\"/],[\"str\",/^b?r(#*)\\\"[\\s\\S]*?\\\"\\1/],[\"str\",/^b'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}))'/],[\"str\",/^'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{1,6}\\}))'/],[\"tag\",/^'\\w+?\\b/],[\"kwd\",/^(?:match|if|else|as|break|box|continue|extern|fn|for|in|if|impl|let|loop|pub|return|super|unsafe|where|while|use|mod|trait|struct|enum|type|move|mut|ref|static|const|crate)\\b/],\n[\"kwd\",/^(?:alignof|become|do|offsetof|priv|pure|sizeof|typeof|unsized|yield|abstract|virtual|final|override|macro)\\b/],[\"typ\",/^(?:[iu](8|16|32|64|128|size)|char|bool|f32|f64|str|Self)\\b/],[\"typ\",/^(?:Copy|Send|Sized|Sync|Drop|Fn|FnMut|FnOnce|Box|ToOwned|Clone|PartialEq|PartialOrd|Eq|Ord|AsRef|AsMut|Into|From|Default|Iterator|Extend|IntoIterator|DoubleEndedIterator|ExactSizeIterator|Option|Some|None|Result|Ok|Err|SliceConcatExt|String|ToString|Vec)\\b/],[\"lit\",/^(self|true|false|null)\\b/],\n[\"lit\",/^\\d[0-9_]*(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0x[a-fA-F0-9_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0o[0-7_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0b[01_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^\\d[0-9_]*\\.(?![^\\s\\d.])/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)(?:[eE][+-]?[0-9_]+)?(?:f32|f64)?/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)(?:f32|f64)?/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)?(?:f32|f64)/],\n[\"atn\",/^[a-z_]\\w*!/i],[\"pln\",/^[a-z_]\\w*/i],[\"atv\",/^#!?\\[[\\s\\S]*?\\]/],[\"pun\",/^[+\\-/*=^&|!<>%[\\](){}?:.,;]/],[\"pln\",/./]]),[\"rust\"]);\n"},{"_content":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","source":"plugins/google-code-prettify/lang-s.js","raw":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","date":"2022-03-27T08:23:16.361Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-s.js","layout":"false","title":"","comments":1,"_id":"cl22h70un004g5osse7yzg455","content":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","source":"plugins/google-code-prettify/lang-rkt.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","date":"2022-03-27T08:23:16.359Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-rkt.js","layout":"false","title":"","comments":1,"_id":"cl22h70uo004k5oss8fii5rwp","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n"},{"_content":"/*\n\n Copyright (C) 2010 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:(?:\"\"(?:\"\"?(?!\")|[^\\\\\"]|\\\\.)*\"{0,3})|(?:[^\"\\r\\n\\\\]|\\\\.)*\"?))/,null,'\"'],[\"lit\",/^`(?:[^\\r\\n\\\\`]|\\\\.)*`?/,null,\"`\"],[\"pun\",/^[!#%&()*+,\\-:;<=>?@\\[\\\\\\]^{|}~]+/,null,\"!#%&()*+,-:;<=>?@[\\\\]^{|}~\"]],[[\"str\",/^'(?:[^\\r\\n\\\\']|\\\\(?:'|[^\\r\\n']+))'/],[\"lit\",/^'[a-zA-Z_$][\\w$]*(?!['$\\w])/],[\"kwd\",/^(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|object|override|package|private|protected|requires|return|sealed|super|throw|trait|try|type|val|var|while|with|yield)\\b/],\n[\"lit\",/^(?:true|false|null|this)\\b/],[\"lit\",/^(?:(?:0(?:[0-7]+|X[0-9A-F]+))L?|(?:(?:0|[1-9][0-9]*)(?:(?:\\.[0-9]+)?(?:E[+\\-]?[0-9]+)?F?|L?))|\\\\.[0-9]+(?:E[+\\-]?[0-9]+)?F?)/i],[\"typ\",/^[$_]*[A-Z][_$A-Z0-9]*[a-z][\\w$]*/],[\"pln\",/^[$a-zA-Z_][\\w$]*/],[\"com\",/^\\/(?:\\/.*|\\*(?:\\/|\\**[^*/])*(?:\\*+\\/?)?)/],[\"pun\",/^(?:\\.+|\\/)/]]),[\"scala\"]);\n","source":"plugins/google-code-prettify/lang-scala.js","raw":"/*\n\n Copyright (C) 2010 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:(?:\"\"(?:\"\"?(?!\")|[^\\\\\"]|\\\\.)*\"{0,3})|(?:[^\"\\r\\n\\\\]|\\\\.)*\"?))/,null,'\"'],[\"lit\",/^`(?:[^\\r\\n\\\\`]|\\\\.)*`?/,null,\"`\"],[\"pun\",/^[!#%&()*+,\\-:;<=>?@\\[\\\\\\]^{|}~]+/,null,\"!#%&()*+,-:;<=>?@[\\\\]^{|}~\"]],[[\"str\",/^'(?:[^\\r\\n\\\\']|\\\\(?:'|[^\\r\\n']+))'/],[\"lit\",/^'[a-zA-Z_$][\\w$]*(?!['$\\w])/],[\"kwd\",/^(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|object|override|package|private|protected|requires|return|sealed|super|throw|trait|try|type|val|var|while|with|yield)\\b/],\n[\"lit\",/^(?:true|false|null|this)\\b/],[\"lit\",/^(?:(?:0(?:[0-7]+|X[0-9A-F]+))L?|(?:(?:0|[1-9][0-9]*)(?:(?:\\.[0-9]+)?(?:E[+\\-]?[0-9]+)?F?|L?))|\\\\.[0-9]+(?:E[+\\-]?[0-9]+)?F?)/i],[\"typ\",/^[$_]*[A-Z][_$A-Z0-9]*[a-z][\\w$]*/],[\"pln\",/^[$a-zA-Z_][\\w$]*/],[\"com\",/^\\/(?:\\/.*|\\*(?:\\/|\\**[^*/])*(?:\\*+\\/?)?)/],[\"pun\",/^(?:\\.+|\\/)/]]),[\"scala\"]);\n","date":"2022-03-27T08:23:16.362Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-scala.js","layout":"false","title":"","comments":1,"_id":"cl22h70uo004l5ossg2sgfewy","content":"/*\n\n Copyright (C) 2010 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:(?:\"\"(?:\"\"?(?!\")|[^\\\\\"]|\\\\.)*\"{0,3})|(?:[^\"\\r\\n\\\\]|\\\\.)*\"?))/,null,'\"'],[\"lit\",/^`(?:[^\\r\\n\\\\`]|\\\\.)*`?/,null,\"`\"],[\"pun\",/^[!#%&()*+,\\-:;<=>?@\\[\\\\\\]^{|}~]+/,null,\"!#%&()*+,-:;<=>?@[\\\\]^{|}~\"]],[[\"str\",/^'(?:[^\\r\\n\\\\']|\\\\(?:'|[^\\r\\n']+))'/],[\"lit\",/^'[a-zA-Z_$][\\w$]*(?!['$\\w])/],[\"kwd\",/^(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|object|override|package|private|protected|requires|return|sealed|super|throw|trait|try|type|val|var|while|with|yield)\\b/],\n[\"lit\",/^(?:true|false|null|this)\\b/],[\"lit\",/^(?:(?:0(?:[0-7]+|X[0-9A-F]+))L?|(?:(?:0|[1-9][0-9]*)(?:(?:\\.[0-9]+)?(?:E[+\\-]?[0-9]+)?F?|L?))|\\\\.[0-9]+(?:E[+\\-]?[0-9]+)?F?)/i],[\"typ\",/^[$_]*[A-Z][_$A-Z0-9]*[a-z][\\w$]*/],[\"pln\",/^[$a-zA-Z_][\\w$]*/],[\"com\",/^\\/(?:\\/.*|\\*(?:\\/|\\**[^*/])*(?:\\*+\\/?)?)/],[\"pun\",/^(?:\\.+|\\/)/]]),[\"scala\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2010 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:(?:\"\"(?:\"\"?(?!\")|[^\\\\\"]|\\\\.)*\"{0,3})|(?:[^\"\\r\\n\\\\]|\\\\.)*\"?))/,null,'\"'],[\"lit\",/^`(?:[^\\r\\n\\\\`]|\\\\.)*`?/,null,\"`\"],[\"pun\",/^[!#%&()*+,\\-:;<=>?@\\[\\\\\\]^{|}~]+/,null,\"!#%&()*+,-:;<=>?@[\\\\]^{|}~\"]],[[\"str\",/^'(?:[^\\r\\n\\\\']|\\\\(?:'|[^\\r\\n']+))'/],[\"lit\",/^'[a-zA-Z_$][\\w$]*(?!['$\\w])/],[\"kwd\",/^(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|object|override|package|private|protected|requires|return|sealed|super|throw|trait|try|type|val|var|while|with|yield)\\b/],\n[\"lit\",/^(?:true|false|null|this)\\b/],[\"lit\",/^(?:(?:0(?:[0-7]+|X[0-9A-F]+))L?|(?:(?:0|[1-9][0-9]*)(?:(?:\\.[0-9]+)?(?:E[+\\-]?[0-9]+)?F?|L?))|\\\\.[0-9]+(?:E[+\\-]?[0-9]+)?F?)/i],[\"typ\",/^[$_]*[A-Z][_$A-Z0-9]*[a-z][\\w$]*/],[\"pln\",/^[$a-zA-Z_][\\w$]*/],[\"com\",/^\\/(?:\\/.*|\\*(?:\\/|\\**[^*/])*(?:\\*+\\/?)?)/],[\"pun\",/^(?:\\.+|\\/)/]]),[\"scala\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","source":"plugins/google-code-prettify/lang-scm.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","date":"2022-03-27T08:23:16.363Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-scm.js","layout":"false","title":"","comments":1,"_id":"cl22h70up004q5oss8uoe7gp3","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:[^\\\"\\\\]|\\\\.)*\"|'(?:[^\\'\\\\]|\\\\.)*')/,null,\"\\\"'\"]],[[\"com\",/^(?:--[^\\r\\n]*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))/],[\"kwd\",/^(?:ADD|ALL|ALTER|AND|ANY|APPLY|AS|ASC|AUTHORIZATION|BACKUP|BEGIN|BETWEEN|BREAK|BROWSE|BULK|BY|CASCADE|CASE|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COMMIT|COMPUTE|CONNECT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT|CURRENT_DATE|CURRENT_TIME|CURRENT_TIMESTAMP|CURRENT_USER|CURSOR|DATABASE|DBCC|DEALLOCATE|DECLARE|DEFAULT|DELETE|DENY|DESC|DISK|DISTINCT|DISTRIBUTED|DOUBLE|DROP|DUMMY|DUMP|ELSE|END|ERRLVL|ESCAPE|EXCEPT|EXEC|EXECUTE|EXISTS|EXIT|FETCH|FILE|FILLFACTOR|FOLLOWING|FOR|FOREIGN|FREETEXT|FREETEXTTABLE|FROM|FULL|FUNCTION|GOTO|GRANT|GROUP|HAVING|HOLDLOCK|IDENTITY|IDENTITYCOL|IDENTITY_INSERT|IF|IN|INDEX|INNER|INSERT|INTERSECT|INTO|IS|JOIN|KEY|KILL|LEFT|LIKE|LINENO|LOAD|MATCH|MATCHED|MERGE|NATURAL|NATIONAL|NOCHECK|NONCLUSTERED|NOCYCLE|NOT|NULL|NULLIF|OF|OFF|OFFSETS|ON|OPEN|OPENDATASOURCE|OPENQUERY|OPENROWSET|OPENXML|OPTION|OR|ORDER|OUTER|OVER|PARTITION|PERCENT|PIVOT|PLAN|PRECEDING|PRECISION|PRIMARY|PRINT|PROC|PROCEDURE|PUBLIC|RAISERROR|READ|READTEXT|RECONFIGURE|REFERENCES|REPLICATION|RESTORE|RESTRICT|RETURN|REVOKE|RIGHT|ROLLBACK|ROWCOUNT|ROWGUIDCOL|ROWS?|RULE|SAVE|SCHEMA|SELECT|SESSION_USER|SET|SETUSER|SHUTDOWN|SOME|START|STATISTICS|SYSTEM_USER|TABLE|TEXTSIZE|THEN|TO|TOP|TRAN|TRANSACTION|TRIGGER|TRUNCATE|TSEQUAL|UNBOUNDED|UNION|UNIQUE|UNPIVOT|UPDATE|UPDATETEXT|USE|USER|USING|VALUES|VARYING|VIEW|WAITFOR|WHEN|WHERE|WHILE|WITH|WITHIN|WRITETEXT|XML)(?=[^\\w-]|$)/i,\nnull],[\"lit\",/^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^[a-z_][\\w-]*/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0+\\-\\\"\\']*/]]),[\"sql\"]);\n","source":"plugins/google-code-prettify/lang-sql.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:[^\\\"\\\\]|\\\\.)*\"|'(?:[^\\'\\\\]|\\\\.)*')/,null,\"\\\"'\"]],[[\"com\",/^(?:--[^\\r\\n]*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))/],[\"kwd\",/^(?:ADD|ALL|ALTER|AND|ANY|APPLY|AS|ASC|AUTHORIZATION|BACKUP|BEGIN|BETWEEN|BREAK|BROWSE|BULK|BY|CASCADE|CASE|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COMMIT|COMPUTE|CONNECT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT|CURRENT_DATE|CURRENT_TIME|CURRENT_TIMESTAMP|CURRENT_USER|CURSOR|DATABASE|DBCC|DEALLOCATE|DECLARE|DEFAULT|DELETE|DENY|DESC|DISK|DISTINCT|DISTRIBUTED|DOUBLE|DROP|DUMMY|DUMP|ELSE|END|ERRLVL|ESCAPE|EXCEPT|EXEC|EXECUTE|EXISTS|EXIT|FETCH|FILE|FILLFACTOR|FOLLOWING|FOR|FOREIGN|FREETEXT|FREETEXTTABLE|FROM|FULL|FUNCTION|GOTO|GRANT|GROUP|HAVING|HOLDLOCK|IDENTITY|IDENTITYCOL|IDENTITY_INSERT|IF|IN|INDEX|INNER|INSERT|INTERSECT|INTO|IS|JOIN|KEY|KILL|LEFT|LIKE|LINENO|LOAD|MATCH|MATCHED|MERGE|NATURAL|NATIONAL|NOCHECK|NONCLUSTERED|NOCYCLE|NOT|NULL|NULLIF|OF|OFF|OFFSETS|ON|OPEN|OPENDATASOURCE|OPENQUERY|OPENROWSET|OPENXML|OPTION|OR|ORDER|OUTER|OVER|PARTITION|PERCENT|PIVOT|PLAN|PRECEDING|PRECISION|PRIMARY|PRINT|PROC|PROCEDURE|PUBLIC|RAISERROR|READ|READTEXT|RECONFIGURE|REFERENCES|REPLICATION|RESTORE|RESTRICT|RETURN|REVOKE|RIGHT|ROLLBACK|ROWCOUNT|ROWGUIDCOL|ROWS?|RULE|SAVE|SCHEMA|SELECT|SESSION_USER|SET|SETUSER|SHUTDOWN|SOME|START|STATISTICS|SYSTEM_USER|TABLE|TEXTSIZE|THEN|TO|TOP|TRAN|TRANSACTION|TRIGGER|TRUNCATE|TSEQUAL|UNBOUNDED|UNION|UNIQUE|UNPIVOT|UPDATE|UPDATETEXT|USE|USER|USING|VALUES|VARYING|VIEW|WAITFOR|WHEN|WHERE|WHILE|WITH|WITHIN|WRITETEXT|XML)(?=[^\\w-]|$)/i,\nnull],[\"lit\",/^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^[a-z_][\\w-]*/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0+\\-\\\"\\']*/]]),[\"sql\"]);\n","date":"2022-03-27T08:23:16.365Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-sql.js","layout":"false","title":"","comments":1,"_id":"cl22h70up004r5ossbsg51oml","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:[^\\\"\\\\]|\\\\.)*\"|'(?:[^\\'\\\\]|\\\\.)*')/,null,\"\\\"'\"]],[[\"com\",/^(?:--[^\\r\\n]*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))/],[\"kwd\",/^(?:ADD|ALL|ALTER|AND|ANY|APPLY|AS|ASC|AUTHORIZATION|BACKUP|BEGIN|BETWEEN|BREAK|BROWSE|BULK|BY|CASCADE|CASE|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COMMIT|COMPUTE|CONNECT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT|CURRENT_DATE|CURRENT_TIME|CURRENT_TIMESTAMP|CURRENT_USER|CURSOR|DATABASE|DBCC|DEALLOCATE|DECLARE|DEFAULT|DELETE|DENY|DESC|DISK|DISTINCT|DISTRIBUTED|DOUBLE|DROP|DUMMY|DUMP|ELSE|END|ERRLVL|ESCAPE|EXCEPT|EXEC|EXECUTE|EXISTS|EXIT|FETCH|FILE|FILLFACTOR|FOLLOWING|FOR|FOREIGN|FREETEXT|FREETEXTTABLE|FROM|FULL|FUNCTION|GOTO|GRANT|GROUP|HAVING|HOLDLOCK|IDENTITY|IDENTITYCOL|IDENTITY_INSERT|IF|IN|INDEX|INNER|INSERT|INTERSECT|INTO|IS|JOIN|KEY|KILL|LEFT|LIKE|LINENO|LOAD|MATCH|MATCHED|MERGE|NATURAL|NATIONAL|NOCHECK|NONCLUSTERED|NOCYCLE|NOT|NULL|NULLIF|OF|OFF|OFFSETS|ON|OPEN|OPENDATASOURCE|OPENQUERY|OPENROWSET|OPENXML|OPTION|OR|ORDER|OUTER|OVER|PARTITION|PERCENT|PIVOT|PLAN|PRECEDING|PRECISION|PRIMARY|PRINT|PROC|PROCEDURE|PUBLIC|RAISERROR|READ|READTEXT|RECONFIGURE|REFERENCES|REPLICATION|RESTORE|RESTRICT|RETURN|REVOKE|RIGHT|ROLLBACK|ROWCOUNT|ROWGUIDCOL|ROWS?|RULE|SAVE|SCHEMA|SELECT|SESSION_USER|SET|SETUSER|SHUTDOWN|SOME|START|STATISTICS|SYSTEM_USER|TABLE|TEXTSIZE|THEN|TO|TOP|TRAN|TRANSACTION|TRIGGER|TRUNCATE|TSEQUAL|UNBOUNDED|UNION|UNIQUE|UNPIVOT|UPDATE|UPDATETEXT|USE|USER|USING|VALUES|VARYING|VIEW|WAITFOR|WHEN|WHERE|WHILE|WITH|WITHIN|WRITETEXT|XML)(?=[^\\w-]|$)/i,\nnull],[\"lit\",/^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^[a-z_][\\w-]*/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0+\\-\\\"\\']*/]]),[\"sql\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:[^\\\"\\\\]|\\\\.)*\"|'(?:[^\\'\\\\]|\\\\.)*')/,null,\"\\\"'\"]],[[\"com\",/^(?:--[^\\r\\n]*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))/],[\"kwd\",/^(?:ADD|ALL|ALTER|AND|ANY|APPLY|AS|ASC|AUTHORIZATION|BACKUP|BEGIN|BETWEEN|BREAK|BROWSE|BULK|BY|CASCADE|CASE|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COMMIT|COMPUTE|CONNECT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT|CURRENT_DATE|CURRENT_TIME|CURRENT_TIMESTAMP|CURRENT_USER|CURSOR|DATABASE|DBCC|DEALLOCATE|DECLARE|DEFAULT|DELETE|DENY|DESC|DISK|DISTINCT|DISTRIBUTED|DOUBLE|DROP|DUMMY|DUMP|ELSE|END|ERRLVL|ESCAPE|EXCEPT|EXEC|EXECUTE|EXISTS|EXIT|FETCH|FILE|FILLFACTOR|FOLLOWING|FOR|FOREIGN|FREETEXT|FREETEXTTABLE|FROM|FULL|FUNCTION|GOTO|GRANT|GROUP|HAVING|HOLDLOCK|IDENTITY|IDENTITYCOL|IDENTITY_INSERT|IF|IN|INDEX|INNER|INSERT|INTERSECT|INTO|IS|JOIN|KEY|KILL|LEFT|LIKE|LINENO|LOAD|MATCH|MATCHED|MERGE|NATURAL|NATIONAL|NOCHECK|NONCLUSTERED|NOCYCLE|NOT|NULL|NULLIF|OF|OFF|OFFSETS|ON|OPEN|OPENDATASOURCE|OPENQUERY|OPENROWSET|OPENXML|OPTION|OR|ORDER|OUTER|OVER|PARTITION|PERCENT|PIVOT|PLAN|PRECEDING|PRECISION|PRIMARY|PRINT|PROC|PROCEDURE|PUBLIC|RAISERROR|READ|READTEXT|RECONFIGURE|REFERENCES|REPLICATION|RESTORE|RESTRICT|RETURN|REVOKE|RIGHT|ROLLBACK|ROWCOUNT|ROWGUIDCOL|ROWS?|RULE|SAVE|SCHEMA|SELECT|SESSION_USER|SET|SETUSER|SHUTDOWN|SOME|START|STATISTICS|SYSTEM_USER|TABLE|TEXTSIZE|THEN|TO|TOP|TRAN|TRANSACTION|TRIGGER|TRUNCATE|TSEQUAL|UNBOUNDED|UNION|UNIQUE|UNPIVOT|UPDATE|UPDATETEXT|USE|USER|USING|VALUES|VARYING|VIEW|WAITFOR|WHEN|WHERE|WHILE|WITH|WITHIN|WRITETEXT|XML)(?=[^\\w-]|$)/i,\nnull],[\"lit\",/^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^[a-z_][\\w-]*/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0+\\-\\\"\\']*/]]),[\"sql\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","source":"plugins/google-code-prettify/lang-ss.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","date":"2022-03-27T08:23:16.366Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-ss.js","layout":"false","title":"","comments":1,"_id":"cl22h70uq004v5ossbkn8da0y","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n"},{"_content":"/*\n\n Copyright (C) 2015 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[ \\n\\r\\t\\v\\f\\0]+/,null,\" \\n\\r\\t\\v\\f\\x00\"],[\"str\",/^\"(?:[^\"\\\\]|(?:\\\\.)|(?:\\\\\\((?:[^\"\\\\)]|\\\\.)*\\)))*\"/,null,'\"']],[[\"lit\",/^(?:(?:0x[\\da-fA-F][\\da-fA-F_]*\\.[\\da-fA-F][\\da-fA-F_]*[pP]?)|(?:\\d[\\d_]*\\.\\d[\\d_]*[eE]?))[+-]?\\d[\\d_]*/,null],[\"lit\",/^-?(?:(?:0(?:(?:b[01][01_]*)|(?:o[0-7][0-7_]*)|(?:x[\\da-fA-F][\\da-fA-F_]*)))|(?:\\d[\\d_]*))/,null],[\"lit\",/^(?:_|Any|true|false|nil)\\b/,null],[\"kwd\",/^\\b(?:__COLUMN__|__FILE__|__FUNCTION__|__LINE__|#available|#colorLiteral|#column|#else|#elseif|#endif|#file|#fileLiteral|#function|#if|#imageLiteral|#line|#selector|#sourceLocation|arch|arm|arm64|associatedtype|associativity|as|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|dynamicType|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|import|indirect|infix|init|inout|internal|i386|if|in|iOS|iOSApplicationExtension|is|lazy|left|let|mutating|none|nonmutating|open|operator|optional|OSX|OSXApplicationExtension|override|postfix|precedence|prefix|private|protocol|Protocol|public|repeat|required|rethrows|return|right|safe|Self|self|set|static|struct|subscript|super|switch|throw|throws|try|Type|typealias|unowned|unsafe|var|weak|watchOS|where|while|willSet|x86_64)\\b/,\nnull],[\"com\",/^\\/\\/.*?[\\n\\r]/,null],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"pun\",/^<<=|<=|<<|>>=|>=|>>|===|==|\\.\\.\\.|&&=|\\.\\.<|!==|!=|&=|~=|~|\\(|\\)|\\[|\\]|{|}|@|#|;|\\.|,|:|\\|\\|=|\\?\\?|\\|\\||&&|&\\*|&\\+|&-|&=|\\+=|-=|\\/=|\\*=|\\^=|%=|\\|=|->|`|==|\\+\\+|--|\\/|\\+|!|\\*|%|<|>|&|\\||\\^|\\?|=|-|_/,null],[\"typ\",/^\\b(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null]]),[\"swift\"]);\n","source":"plugins/google-code-prettify/lang-swift.js","raw":"/*\n\n Copyright (C) 2015 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[ \\n\\r\\t\\v\\f\\0]+/,null,\" \\n\\r\\t\\v\\f\\x00\"],[\"str\",/^\"(?:[^\"\\\\]|(?:\\\\.)|(?:\\\\\\((?:[^\"\\\\)]|\\\\.)*\\)))*\"/,null,'\"']],[[\"lit\",/^(?:(?:0x[\\da-fA-F][\\da-fA-F_]*\\.[\\da-fA-F][\\da-fA-F_]*[pP]?)|(?:\\d[\\d_]*\\.\\d[\\d_]*[eE]?))[+-]?\\d[\\d_]*/,null],[\"lit\",/^-?(?:(?:0(?:(?:b[01][01_]*)|(?:o[0-7][0-7_]*)|(?:x[\\da-fA-F][\\da-fA-F_]*)))|(?:\\d[\\d_]*))/,null],[\"lit\",/^(?:_|Any|true|false|nil)\\b/,null],[\"kwd\",/^\\b(?:__COLUMN__|__FILE__|__FUNCTION__|__LINE__|#available|#colorLiteral|#column|#else|#elseif|#endif|#file|#fileLiteral|#function|#if|#imageLiteral|#line|#selector|#sourceLocation|arch|arm|arm64|associatedtype|associativity|as|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|dynamicType|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|import|indirect|infix|init|inout|internal|i386|if|in|iOS|iOSApplicationExtension|is|lazy|left|let|mutating|none|nonmutating|open|operator|optional|OSX|OSXApplicationExtension|override|postfix|precedence|prefix|private|protocol|Protocol|public|repeat|required|rethrows|return|right|safe|Self|self|set|static|struct|subscript|super|switch|throw|throws|try|Type|typealias|unowned|unsafe|var|weak|watchOS|where|while|willSet|x86_64)\\b/,\nnull],[\"com\",/^\\/\\/.*?[\\n\\r]/,null],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"pun\",/^<<=|<=|<<|>>=|>=|>>|===|==|\\.\\.\\.|&&=|\\.\\.<|!==|!=|&=|~=|~|\\(|\\)|\\[|\\]|{|}|@|#|;|\\.|,|:|\\|\\|=|\\?\\?|\\|\\||&&|&\\*|&\\+|&-|&=|\\+=|-=|\\/=|\\*=|\\^=|%=|\\|=|->|`|==|\\+\\+|--|\\/|\\+|!|\\*|%|<|>|&|\\||\\^|\\?|=|-|_/,null],[\"typ\",/^\\b(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null]]),[\"swift\"]);\n","date":"2022-03-27T08:23:16.368Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-swift.js","layout":"false","title":"","comments":1,"_id":"cl22h70us004x5ossavc32y7b","content":"/*\n\n Copyright (C) 2015 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[ \\n\\r\\t\\v\\f\\0]+/,null,\" \\n\\r\\t\\v\\f\\x00\"],[\"str\",/^\"(?:[^\"\\\\]|(?:\\\\.)|(?:\\\\\\((?:[^\"\\\\)]|\\\\.)*\\)))*\"/,null,'\"']],[[\"lit\",/^(?:(?:0x[\\da-fA-F][\\da-fA-F_]*\\.[\\da-fA-F][\\da-fA-F_]*[pP]?)|(?:\\d[\\d_]*\\.\\d[\\d_]*[eE]?))[+-]?\\d[\\d_]*/,null],[\"lit\",/^-?(?:(?:0(?:(?:b[01][01_]*)|(?:o[0-7][0-7_]*)|(?:x[\\da-fA-F][\\da-fA-F_]*)))|(?:\\d[\\d_]*))/,null],[\"lit\",/^(?:_|Any|true|false|nil)\\b/,null],[\"kwd\",/^\\b(?:__COLUMN__|__FILE__|__FUNCTION__|__LINE__|#available|#colorLiteral|#column|#else|#elseif|#endif|#file|#fileLiteral|#function|#if|#imageLiteral|#line|#selector|#sourceLocation|arch|arm|arm64|associatedtype|associativity|as|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|dynamicType|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|import|indirect|infix|init|inout|internal|i386|if|in|iOS|iOSApplicationExtension|is|lazy|left|let|mutating|none|nonmutating|open|operator|optional|OSX|OSXApplicationExtension|override|postfix|precedence|prefix|private|protocol|Protocol|public|repeat|required|rethrows|return|right|safe|Self|self|set|static|struct|subscript|super|switch|throw|throws|try|Type|typealias|unowned|unsafe|var|weak|watchOS|where|while|willSet|x86_64)\\b/,\nnull],[\"com\",/^\\/\\/.*?[\\n\\r]/,null],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"pun\",/^<<=|<=|<<|>>=|>=|>>|===|==|\\.\\.\\.|&&=|\\.\\.<|!==|!=|&=|~=|~|\\(|\\)|\\[|\\]|{|}|@|#|;|\\.|,|:|\\|\\|=|\\?\\?|\\|\\||&&|&\\*|&\\+|&-|&=|\\+=|-=|\\/=|\\*=|\\^=|%=|\\|=|->|`|==|\\+\\+|--|\\/|\\+|!|\\*|%|<|>|&|\\||\\^|\\?|=|-|_/,null],[\"typ\",/^\\b(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null]]),[\"swift\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2015 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[ \\n\\r\\t\\v\\f\\0]+/,null,\" \\n\\r\\t\\v\\f\\x00\"],[\"str\",/^\"(?:[^\"\\\\]|(?:\\\\.)|(?:\\\\\\((?:[^\"\\\\)]|\\\\.)*\\)))*\"/,null,'\"']],[[\"lit\",/^(?:(?:0x[\\da-fA-F][\\da-fA-F_]*\\.[\\da-fA-F][\\da-fA-F_]*[pP]?)|(?:\\d[\\d_]*\\.\\d[\\d_]*[eE]?))[+-]?\\d[\\d_]*/,null],[\"lit\",/^-?(?:(?:0(?:(?:b[01][01_]*)|(?:o[0-7][0-7_]*)|(?:x[\\da-fA-F][\\da-fA-F_]*)))|(?:\\d[\\d_]*))/,null],[\"lit\",/^(?:_|Any|true|false|nil)\\b/,null],[\"kwd\",/^\\b(?:__COLUMN__|__FILE__|__FUNCTION__|__LINE__|#available|#colorLiteral|#column|#else|#elseif|#endif|#file|#fileLiteral|#function|#if|#imageLiteral|#line|#selector|#sourceLocation|arch|arm|arm64|associatedtype|associativity|as|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|dynamicType|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|import|indirect|infix|init|inout|internal|i386|if|in|iOS|iOSApplicationExtension|is|lazy|left|let|mutating|none|nonmutating|open|operator|optional|OSX|OSXApplicationExtension|override|postfix|precedence|prefix|private|protocol|Protocol|public|repeat|required|rethrows|return|right|safe|Self|self|set|static|struct|subscript|super|switch|throw|throws|try|Type|typealias|unowned|unsafe|var|weak|watchOS|where|while|willSet|x86_64)\\b/,\nnull],[\"com\",/^\\/\\/.*?[\\n\\r]/,null],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"pun\",/^<<=|<=|<<|>>=|>=|>>|===|==|\\.\\.\\.|&&=|\\.\\.<|!==|!=|&=|~=|~|\\(|\\)|\\[|\\]|{|}|@|#|;|\\.|,|:|\\|\\|=|\\?\\?|\\|\\||&&|&\\*|&\\+|&-|&=|\\+=|-=|\\/=|\\*=|\\^=|%=|\\|=|->|`|==|\\+\\+|--|\\/|\\+|!|\\*|%|<|>|&|\\||\\^|\\?|=|-|_/,null],[\"typ\",/^\\b(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null]]),[\"swift\"]);\n"},{"_content":"/*\n\n Copyright (C) 2012 Pyrios\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\{+/,null,\"{\"],[\"clo\",/^\\}+/,null,\"}\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:after|append|apply|array|break|case|catch|continue|error|eval|exec|exit|expr|for|foreach|if|incr|info|proc|return|set|switch|trace|uplevel|upvar|while)\\b/,null],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],\n[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"tcl\"]);\n","source":"plugins/google-code-prettify/lang-tcl.js","raw":"/*\n\n Copyright (C) 2012 Pyrios\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\{+/,null,\"{\"],[\"clo\",/^\\}+/,null,\"}\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:after|append|apply|array|break|case|catch|continue|error|eval|exec|exit|expr|for|foreach|if|incr|info|proc|return|set|switch|trace|uplevel|upvar|while)\\b/,null],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],\n[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"tcl\"]);\n","date":"2022-03-27T08:23:16.369Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-tcl.js","layout":"false","title":"","comments":1,"_id":"cl22h70ut00515ossaxza8xye","content":"/*\n\n Copyright (C) 2012 Pyrios\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\{+/,null,\"{\"],[\"clo\",/^\\}+/,null,\"}\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:after|append|apply|array|break|case|catch|continue|error|eval|exec|exit|expr|for|foreach|if|incr|info|proc|return|set|switch|trace|uplevel|upvar|while)\\b/,null],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],\n[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"tcl\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2012 Pyrios\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\{+/,null,\"{\"],[\"clo\",/^\\}+/,null,\"}\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:after|append|apply|array|break|case|catch|continue|error|eval|exec|exit|expr|for|foreach|if|incr|info|proc|return|set|switch|trace|uplevel|upvar|while)\\b/,null],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],\n[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"tcl\"]);\n"},{"_content":"/*\n\n Copyright (C) 2011 Martin S.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^\\\\./],[\"typ\",/^[$&]/],[\"lit\",/[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i],[\"pun\",/^[{}()\\[\\]=]+/]]),[\"latex\",\"tex\"]);\n","source":"plugins/google-code-prettify/lang-tex.js","raw":"/*\n\n Copyright (C) 2011 Martin S.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^\\\\./],[\"typ\",/^[$&]/],[\"lit\",/[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i],[\"pun\",/^[{}()\\[\\]=]+/]]),[\"latex\",\"tex\"]);\n","date":"2022-03-27T08:23:16.369Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-tex.js","layout":"false","title":"","comments":1,"_id":"cl22h70uu00535oss4jnofrbf","content":"/*\n\n Copyright (C) 2011 Martin S.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^\\\\./],[\"typ\",/^[$&]/],[\"lit\",/[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i],[\"pun\",/^[{}()\\[\\]=]+/]]),[\"latex\",\"tex\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2011 Martin S.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^\\\\./],[\"typ\",/^[$&]/],[\"lit\",/[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i],[\"pun\",/^[{}()\\[\\]=]+/]]),[\"latex\",\"tex\"]);\n"},{"_content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0\\u2028\\u2029]+/,null,\"\\t\\n\\r \\u00a0\\u2028\\u2029\"],[\"str\",/^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i,null,'\"\\u201c\\u201d'],[\"com\",/^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/,null,\"'\\u2018\\u2019\"]],[[\"kwd\",/^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i,\nnull],[\"com\",/^REM\\b[^\\r\\n\\u2028\\u2029]*/i],[\"lit\",/^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i],[\"pln\",/^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i],[\"pun\",/^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/],[\"pun\",/^(?:\\[|\\])/]]),[\"vb\",\n\"vbs\"]);\n","source":"plugins/google-code-prettify/lang-vb.js","raw":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0\\u2028\\u2029]+/,null,\"\\t\\n\\r \\u00a0\\u2028\\u2029\"],[\"str\",/^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i,null,'\"\\u201c\\u201d'],[\"com\",/^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/,null,\"'\\u2018\\u2019\"]],[[\"kwd\",/^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i,\nnull],[\"com\",/^REM\\b[^\\r\\n\\u2028\\u2029]*/i],[\"lit\",/^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i],[\"pln\",/^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i],[\"pun\",/^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/],[\"pun\",/^(?:\\[|\\])/]]),[\"vb\",\n\"vbs\"]);\n","date":"2022-03-27T08:23:16.371Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-vb.js","layout":"false","title":"","comments":1,"_id":"cl22h70uv00575oss6jkabbj8","content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0\\u2028\\u2029]+/,null,\"\\t\\n\\r \\u00a0\\u2028\\u2029\"],[\"str\",/^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i,null,'\"\\u201c\\u201d'],[\"com\",/^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/,null,\"'\\u2018\\u2019\"]],[[\"kwd\",/^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i,\nnull],[\"com\",/^REM\\b[^\\r\\n\\u2028\\u2029]*/i],[\"lit\",/^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i],[\"pln\",/^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i],[\"pun\",/^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/],[\"pun\",/^(?:\\[|\\])/]]),[\"vb\",\n\"vbs\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0\\u2028\\u2029]+/,null,\"\\t\\n\\r \\u00a0\\u2028\\u2029\"],[\"str\",/^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i,null,'\"\\u201c\\u201d'],[\"com\",/^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/,null,\"'\\u2018\\u2019\"]],[[\"kwd\",/^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i,\nnull],[\"com\",/^REM\\b[^\\r\\n\\u2028\\u2029]*/i],[\"lit\",/^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i],[\"pln\",/^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i],[\"pun\",/^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/],[\"pun\",/^(?:\\[|\\])/]]),[\"vb\",\n\"vbs\"]);\n"},{"_content":"/*\n\n Copyright (C) 2010 benoit@ryder.fr\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"str\",/^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i],[\"com\",/^--[^\\r\\n]*/],[\"kwd\",/^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i,\nnull],[\"typ\",/^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i,null],[\"typ\",/^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i,null],[\"lit\",/^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i],\n[\"pln\",/^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/]]),[\"vhdl\",\"vhd\"]);\n","source":"plugins/google-code-prettify/lang-vhd.js","raw":"/*\n\n Copyright (C) 2010 benoit@ryder.fr\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"str\",/^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i],[\"com\",/^--[^\\r\\n]*/],[\"kwd\",/^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i,\nnull],[\"typ\",/^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i,null],[\"typ\",/^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i,null],[\"lit\",/^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i],\n[\"pln\",/^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/]]),[\"vhdl\",\"vhd\"]);\n","date":"2022-03-27T08:23:16.373Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-vhd.js","layout":"false","title":"","comments":1,"_id":"cl22h70uv00595ossb4am8224","content":"/*\n\n Copyright (C) 2010 benoit@ryder.fr\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"str\",/^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i],[\"com\",/^--[^\\r\\n]*/],[\"kwd\",/^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i,\nnull],[\"typ\",/^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i,null],[\"typ\",/^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i,null],[\"lit\",/^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i],\n[\"pln\",/^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/]]),[\"vhdl\",\"vhd\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2010 benoit@ryder.fr\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"str\",/^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i],[\"com\",/^--[^\\r\\n]*/],[\"kwd\",/^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i,\nnull],[\"typ\",/^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i,null],[\"typ\",/^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i,null],[\"lit\",/^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i],\n[\"pln\",/^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/]]),[\"vhdl\",\"vhd\"]);\n"},{"_content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0\\u2028\\u2029]+/,null,\"\\t\\n\\r \\u00a0\\u2028\\u2029\"],[\"str\",/^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i,null,'\"\\u201c\\u201d'],[\"com\",/^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/,null,\"'\\u2018\\u2019\"]],[[\"kwd\",/^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i,\nnull],[\"com\",/^REM\\b[^\\r\\n\\u2028\\u2029]*/i],[\"lit\",/^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i],[\"pln\",/^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i],[\"pun\",/^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/],[\"pun\",/^(?:\\[|\\])/]]),[\"vb\",\n\"vbs\"]);\n","source":"plugins/google-code-prettify/lang-vbs.js","raw":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0\\u2028\\u2029]+/,null,\"\\t\\n\\r \\u00a0\\u2028\\u2029\"],[\"str\",/^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i,null,'\"\\u201c\\u201d'],[\"com\",/^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/,null,\"'\\u2018\\u2019\"]],[[\"kwd\",/^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i,\nnull],[\"com\",/^REM\\b[^\\r\\n\\u2028\\u2029]*/i],[\"lit\",/^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i],[\"pln\",/^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i],[\"pun\",/^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/],[\"pun\",/^(?:\\[|\\])/]]),[\"vb\",\n\"vbs\"]);\n","date":"2022-03-27T08:23:16.372Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-vbs.js","layout":"false","title":"","comments":1,"_id":"cl22h70uw005c5osshxygfh7m","content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0\\u2028\\u2029]+/,null,\"\\t\\n\\r \\u00a0\\u2028\\u2029\"],[\"str\",/^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i,null,'\"\\u201c\\u201d'],[\"com\",/^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/,null,\"'\\u2018\\u2019\"]],[[\"kwd\",/^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i,\nnull],[\"com\",/^REM\\b[^\\r\\n\\u2028\\u2029]*/i],[\"lit\",/^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i],[\"pln\",/^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i],[\"pun\",/^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/],[\"pun\",/^(?:\\[|\\])/]]),[\"vb\",\n\"vbs\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0\\u2028\\u2029]+/,null,\"\\t\\n\\r \\u00a0\\u2028\\u2029\"],[\"str\",/^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i,null,'\"\\u201c\\u201d'],[\"com\",/^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/,null,\"'\\u2018\\u2019\"]],[[\"kwd\",/^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i,\nnull],[\"com\",/^REM\\b[^\\r\\n\\u2028\\u2029]*/i],[\"lit\",/^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i],[\"pln\",/^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i],[\"pun\",/^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/],[\"pun\",/^(?:\\[|\\])/]]),[\"vb\",\n\"vbs\"]);\n"},{"_content":"/*\n\n Copyright (C) 2010 benoit@ryder.fr\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"str\",/^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i],[\"com\",/^--[^\\r\\n]*/],[\"kwd\",/^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i,\nnull],[\"typ\",/^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i,null],[\"typ\",/^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i,null],[\"lit\",/^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i],\n[\"pln\",/^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/]]),[\"vhdl\",\"vhd\"]);\n","source":"plugins/google-code-prettify/lang-vhdl.js","raw":"/*\n\n Copyright (C) 2010 benoit@ryder.fr\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"str\",/^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i],[\"com\",/^--[^\\r\\n]*/],[\"kwd\",/^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i,\nnull],[\"typ\",/^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i,null],[\"typ\",/^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i,null],[\"lit\",/^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i],\n[\"pln\",/^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/]]),[\"vhdl\",\"vhd\"]);\n","date":"2022-03-27T08:23:16.374Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-vhdl.js","layout":"false","title":"","comments":1,"_id":"cl22h70uw005e5oss9lp6huhp","content":"/*\n\n Copyright (C) 2010 benoit@ryder.fr\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"str\",/^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i],[\"com\",/^--[^\\r\\n]*/],[\"kwd\",/^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i,\nnull],[\"typ\",/^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i,null],[\"typ\",/^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i,null],[\"lit\",/^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i],\n[\"pln\",/^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/]]),[\"vhdl\",\"vhd\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2010 benoit@ryder.fr\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"str\",/^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i],[\"com\",/^--[^\\r\\n]*/],[\"kwd\",/^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i,\nnull],[\"typ\",/^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i,null],[\"typ\",/^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i,null],[\"lit\",/^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i],\n[\"pln\",/^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/]]),[\"vhdl\",\"vhd\"]);\n"},{"_content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t \\xA0a-gi-z0-9]+/,null,\"\\t \\u00a0abcdefgijklmnopqrstuvwxyz0123456789\"],[\"pun\",/^[=*~\\^\\[\\]]+/,null,\"=*~^[]\"]],[[\"lang-wiki.meta\",/(?:^^|\\r\\n?|\\n)(#[a-z]+)\\b/],[\"lit\",/^(?:[A-Z][a-z][a-z0-9]+[A-Z][a-z][a-zA-Z0-9]+)\\b/],[\"lang-\",/^\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/],[\"lang-\",/^`([^\\r\\n`]+)`/],[\"str\",/^https?:\\/\\/[^\\/?#\\s]*(?:\\/[^?#\\s]*)?(?:\\?[^#\\s]*)?(?:#\\S*)?/i],[\"pln\",/^(?:\\r\\n|[\\s\\S])[^#=*~^A-Zh\\{`\\[\\r\\n]*/]]),[\"wiki\"]);\nPR.registerLangHandler(PR.createSimpleLexer([[\"kwd\",/^#[a-z]+/i,null,\"#\"]],[]),[\"wiki.meta\"]);\n","source":"plugins/google-code-prettify/lang-wiki.js","raw":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t \\xA0a-gi-z0-9]+/,null,\"\\t \\u00a0abcdefgijklmnopqrstuvwxyz0123456789\"],[\"pun\",/^[=*~\\^\\[\\]]+/,null,\"=*~^[]\"]],[[\"lang-wiki.meta\",/(?:^^|\\r\\n?|\\n)(#[a-z]+)\\b/],[\"lit\",/^(?:[A-Z][a-z][a-z0-9]+[A-Z][a-z][a-zA-Z0-9]+)\\b/],[\"lang-\",/^\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/],[\"lang-\",/^`([^\\r\\n`]+)`/],[\"str\",/^https?:\\/\\/[^\\/?#\\s]*(?:\\/[^?#\\s]*)?(?:\\?[^#\\s]*)?(?:#\\S*)?/i],[\"pln\",/^(?:\\r\\n|[\\s\\S])[^#=*~^A-Zh\\{`\\[\\r\\n]*/]]),[\"wiki\"]);\nPR.registerLangHandler(PR.createSimpleLexer([[\"kwd\",/^#[a-z]+/i,null,\"#\"]],[]),[\"wiki.meta\"]);\n","date":"2022-03-27T08:23:16.375Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-wiki.js","layout":"false","title":"","comments":1,"_id":"cl22h70ux005g5ossasae0hta","content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t \\xA0a-gi-z0-9]+/,null,\"\\t \\u00a0abcdefgijklmnopqrstuvwxyz0123456789\"],[\"pun\",/^[=*~\\^\\[\\]]+/,null,\"=*~^[]\"]],[[\"lang-wiki.meta\",/(?:^^|\\r\\n?|\\n)(#[a-z]+)\\b/],[\"lit\",/^(?:[A-Z][a-z][a-z0-9]+[A-Z][a-z][a-zA-Z0-9]+)\\b/],[\"lang-\",/^\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/],[\"lang-\",/^`([^\\r\\n`]+)`/],[\"str\",/^https?:\\/\\/[^\\/?#\\s]*(?:\\/[^?#\\s]*)?(?:\\?[^#\\s]*)?(?:#\\S*)?/i],[\"pln\",/^(?:\\r\\n|[\\s\\S])[^#=*~^A-Zh\\{`\\[\\r\\n]*/]]),[\"wiki\"]);\nPR.registerLangHandler(PR.createSimpleLexer([[\"kwd\",/^#[a-z]+/i,null,\"#\"]],[]),[\"wiki.meta\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t \\xA0a-gi-z0-9]+/,null,\"\\t \\u00a0abcdefgijklmnopqrstuvwxyz0123456789\"],[\"pun\",/^[=*~\\^\\[\\]]+/,null,\"=*~^[]\"]],[[\"lang-wiki.meta\",/(?:^^|\\r\\n?|\\n)(#[a-z]+)\\b/],[\"lit\",/^(?:[A-Z][a-z][a-z0-9]+[A-Z][a-z][a-zA-Z0-9]+)\\b/],[\"lang-\",/^\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/],[\"lang-\",/^`([^\\r\\n`]+)`/],[\"str\",/^https?:\\/\\/[^\\/?#\\s]*(?:\\/[^?#\\s]*)?(?:\\?[^#\\s]*)?(?:#\\S*)?/i],[\"pln\",/^(?:\\r\\n|[\\s\\S])[^#=*~^A-Zh\\{`\\[\\r\\n]*/]]),[\"wiki\"]);\nPR.registerLangHandler(PR.createSimpleLexer([[\"kwd\",/^#[a-z]+/i,null,\"#\"]],[]),[\"wiki.meta\"]);\n"},{"_content":"/*\n\n Copyright (C) 2011 Patrick Wied\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"var pln\",/^\\$[A-Za-z0-9_\\-]+/,null,\"$\"]],[[\"pln\",/^[\\s=][<>][\\s=]/],[\"lit\",/^\\@[\\w-]+/],[\"tag\",/^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"com\",/^\\(:[\\s\\S]*?:\\)/],[\"pln\",/^[\\/\\{\\};,\\[\\]\\(\\)]$/],[\"str\",/^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"],[\"kwd\",/^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/],\n[\"typ\",/^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/,null],[\"fun pln\",/^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/],\n[\"pln\",/^[A-Za-z0-9_\\-\\:]+/],[\"pln\",/^[\\t\\n\\r \\xA0]+/]]),[\"xq\",\"xquery\"]);\n","source":"plugins/google-code-prettify/lang-xq.js","raw":"/*\n\n Copyright (C) 2011 Patrick Wied\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"var pln\",/^\\$[A-Za-z0-9_\\-]+/,null,\"$\"]],[[\"pln\",/^[\\s=][<>][\\s=]/],[\"lit\",/^\\@[\\w-]+/],[\"tag\",/^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"com\",/^\\(:[\\s\\S]*?:\\)/],[\"pln\",/^[\\/\\{\\};,\\[\\]\\(\\)]$/],[\"str\",/^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"],[\"kwd\",/^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/],\n[\"typ\",/^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/,null],[\"fun pln\",/^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/],\n[\"pln\",/^[A-Za-z0-9_\\-\\:]+/],[\"pln\",/^[\\t\\n\\r \\xA0]+/]]),[\"xq\",\"xquery\"]);\n","date":"2022-03-27T08:23:16.376Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-xq.js","layout":"false","title":"","comments":1,"_id":"cl22h70uy005j5ossaab01e6h","content":"/*\n\n Copyright (C) 2011 Patrick Wied\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"var pln\",/^\\$[A-Za-z0-9_\\-]+/,null,\"$\"]],[[\"pln\",/^[\\s=][<>][\\s=]/],[\"lit\",/^\\@[\\w-]+/],[\"tag\",/^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"com\",/^\\(:[\\s\\S]*?:\\)/],[\"pln\",/^[\\/\\{\\};,\\[\\]\\(\\)]$/],[\"str\",/^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"],[\"kwd\",/^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/],\n[\"typ\",/^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/,null],[\"fun pln\",/^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/],\n[\"pln\",/^[A-Za-z0-9_\\-\\:]+/],[\"pln\",/^[\\t\\n\\r \\xA0]+/]]),[\"xq\",\"xquery\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2011 Patrick Wied\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"var pln\",/^\\$[A-Za-z0-9_\\-]+/,null,\"$\"]],[[\"pln\",/^[\\s=][<>][\\s=]/],[\"lit\",/^\\@[\\w-]+/],[\"tag\",/^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"com\",/^\\(:[\\s\\S]*?:\\)/],[\"pln\",/^[\\/\\{\\};,\\[\\]\\(\\)]$/],[\"str\",/^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"],[\"kwd\",/^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/],\n[\"typ\",/^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/,null],[\"fun pln\",/^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/],\n[\"pln\",/^[A-Za-z0-9_\\-\\:]+/],[\"pln\",/^[\\t\\n\\r \\xA0]+/]]),[\"xq\",\"xquery\"]);\n"},{"_content":"/*\n\n Copyright (C) 2011 Patrick Wied\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"var pln\",/^\\$[A-Za-z0-9_\\-]+/,null,\"$\"]],[[\"pln\",/^[\\s=][<>][\\s=]/],[\"lit\",/^\\@[\\w-]+/],[\"tag\",/^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"com\",/^\\(:[\\s\\S]*?:\\)/],[\"pln\",/^[\\/\\{\\};,\\[\\]\\(\\)]$/],[\"str\",/^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"],[\"kwd\",/^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/],\n[\"typ\",/^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/,null],[\"fun pln\",/^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/],\n[\"pln\",/^[A-Za-z0-9_\\-\\:]+/],[\"pln\",/^[\\t\\n\\r \\xA0]+/]]),[\"xq\",\"xquery\"]);\n","source":"plugins/google-code-prettify/lang-xquery.js","raw":"/*\n\n Copyright (C) 2011 Patrick Wied\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"var pln\",/^\\$[A-Za-z0-9_\\-]+/,null,\"$\"]],[[\"pln\",/^[\\s=][<>][\\s=]/],[\"lit\",/^\\@[\\w-]+/],[\"tag\",/^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"com\",/^\\(:[\\s\\S]*?:\\)/],[\"pln\",/^[\\/\\{\\};,\\[\\]\\(\\)]$/],[\"str\",/^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"],[\"kwd\",/^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/],\n[\"typ\",/^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/,null],[\"fun pln\",/^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/],\n[\"pln\",/^[A-Za-z0-9_\\-\\:]+/],[\"pln\",/^[\\t\\n\\r \\xA0]+/]]),[\"xq\",\"xquery\"]);\n","date":"2022-03-27T08:23:16.377Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-xquery.js","layout":"false","title":"","comments":1,"_id":"cl22h70uy005k5oss2npm1wxl","content":"/*\n\n Copyright (C) 2011 Patrick Wied\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"var pln\",/^\\$[A-Za-z0-9_\\-]+/,null,\"$\"]],[[\"pln\",/^[\\s=][<>][\\s=]/],[\"lit\",/^\\@[\\w-]+/],[\"tag\",/^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"com\",/^\\(:[\\s\\S]*?:\\)/],[\"pln\",/^[\\/\\{\\};,\\[\\]\\(\\)]$/],[\"str\",/^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"],[\"kwd\",/^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/],\n[\"typ\",/^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/,null],[\"fun pln\",/^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/],\n[\"pln\",/^[A-Za-z0-9_\\-\\:]+/],[\"pln\",/^[\\t\\n\\r \\xA0]+/]]),[\"xq\",\"xquery\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2011 Patrick Wied\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"var pln\",/^\\$[A-Za-z0-9_\\-]+/,null,\"$\"]],[[\"pln\",/^[\\s=][<>][\\s=]/],[\"lit\",/^\\@[\\w-]+/],[\"tag\",/^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"com\",/^\\(:[\\s\\S]*?:\\)/],[\"pln\",/^[\\/\\{\\};,\\[\\]\\(\\)]$/],[\"str\",/^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"],[\"kwd\",/^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/],\n[\"typ\",/^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/,null],[\"fun pln\",/^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/],\n[\"pln\",/^[A-Za-z0-9_\\-\\:]+/],[\"pln\",/^[\\t\\n\\r \\xA0]+/]]),[\"xq\",\"xquery\"]);\n"},{"_content":"/*\n\n Copyright (C) 2015 ribrdb @ code.google.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pun\",/^[:|>?]+/,null,\":|>?\"],[\"dec\",/^%(?:YAML|TAG)[^#\\r\\n]+/,null,\"%\"],[\"typ\",/^[&]\\S+/,null,\"&\"],[\"typ\",/^!\\S*/,null,\"!\"],[\"str\",/^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/,null,'\"'],[\"str\",/^'(?:[^']|'')*(?:'|$)/,null,\"'\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\t\\r\\n\"]],[[\"dec\",/^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/],[\"pun\",/^-/],[\"kwd\",/^[\\w-]+:[ \\r\\n]/],[\"pln\",\n/^\\w+/]]),[\"yaml\",\"yml\"]);\n","source":"plugins/google-code-prettify/lang-yml.js","raw":"/*\n\n Copyright (C) 2015 ribrdb @ code.google.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pun\",/^[:|>?]+/,null,\":|>?\"],[\"dec\",/^%(?:YAML|TAG)[^#\\r\\n]+/,null,\"%\"],[\"typ\",/^[&]\\S+/,null,\"&\"],[\"typ\",/^!\\S*/,null,\"!\"],[\"str\",/^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/,null,'\"'],[\"str\",/^'(?:[^']|'')*(?:'|$)/,null,\"'\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\t\\r\\n\"]],[[\"dec\",/^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/],[\"pun\",/^-/],[\"kwd\",/^[\\w-]+:[ \\r\\n]/],[\"pln\",\n/^\\w+/]]),[\"yaml\",\"yml\"]);\n","date":"2022-03-27T08:23:16.379Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-yml.js","layout":"false","title":"","comments":1,"_id":"cl22h70uy005m5oss0fcxaja3","content":"/*\n\n Copyright (C) 2015 ribrdb @ code.google.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pun\",/^[:|>?]+/,null,\":|>?\"],[\"dec\",/^%(?:YAML|TAG)[^#\\r\\n]+/,null,\"%\"],[\"typ\",/^[&]\\S+/,null,\"&\"],[\"typ\",/^!\\S*/,null,\"!\"],[\"str\",/^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/,null,'\"'],[\"str\",/^'(?:[^']|'')*(?:'|$)/,null,\"'\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\t\\r\\n\"]],[[\"dec\",/^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/],[\"pun\",/^-/],[\"kwd\",/^[\\w-]+:[ \\r\\n]/],[\"pln\",\n/^\\w+/]]),[\"yaml\",\"yml\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2015 ribrdb @ code.google.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pun\",/^[:|>?]+/,null,\":|>?\"],[\"dec\",/^%(?:YAML|TAG)[^#\\r\\n]+/,null,\"%\"],[\"typ\",/^[&]\\S+/,null,\"&\"],[\"typ\",/^!\\S*/,null,\"!\"],[\"str\",/^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/,null,'\"'],[\"str\",/^'(?:[^']|'')*(?:'|$)/,null,\"'\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\t\\r\\n\"]],[[\"dec\",/^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/],[\"pun\",/^-/],[\"kwd\",/^[\\w-]+:[ \\r\\n]/],[\"pln\",\n/^\\w+/]]),[\"yaml\",\"yml\"]);\n"},{"_content":"/*\n\n Copyright (C) 2015 ribrdb @ code.google.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pun\",/^[:|>?]+/,null,\":|>?\"],[\"dec\",/^%(?:YAML|TAG)[^#\\r\\n]+/,null,\"%\"],[\"typ\",/^[&]\\S+/,null,\"&\"],[\"typ\",/^!\\S*/,null,\"!\"],[\"str\",/^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/,null,'\"'],[\"str\",/^'(?:[^']|'')*(?:'|$)/,null,\"'\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\t\\r\\n\"]],[[\"dec\",/^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/],[\"pun\",/^-/],[\"kwd\",/^[\\w-]+:[ \\r\\n]/],[\"pln\",\n/^\\w+/]]),[\"yaml\",\"yml\"]);\n","source":"plugins/google-code-prettify/lang-yaml.js","raw":"/*\n\n Copyright (C) 2015 ribrdb @ code.google.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pun\",/^[:|>?]+/,null,\":|>?\"],[\"dec\",/^%(?:YAML|TAG)[^#\\r\\n]+/,null,\"%\"],[\"typ\",/^[&]\\S+/,null,\"&\"],[\"typ\",/^!\\S*/,null,\"!\"],[\"str\",/^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/,null,'\"'],[\"str\",/^'(?:[^']|'')*(?:'|$)/,null,\"'\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\t\\r\\n\"]],[[\"dec\",/^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/],[\"pun\",/^-/],[\"kwd\",/^[\\w-]+:[ \\r\\n]/],[\"pln\",\n/^\\w+/]]),[\"yaml\",\"yml\"]);\n","date":"2022-03-27T08:23:16.378Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/lang-yaml.js","layout":"false","title":"","comments":1,"_id":"cl22h70uz005o5oss8f42fqjy","content":"/*\n\n Copyright (C) 2015 ribrdb @ code.google.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pun\",/^[:|>?]+/,null,\":|>?\"],[\"dec\",/^%(?:YAML|TAG)[^#\\r\\n]+/,null,\"%\"],[\"typ\",/^[&]\\S+/,null,\"&\"],[\"typ\",/^!\\S*/,null,\"!\"],[\"str\",/^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/,null,'\"'],[\"str\",/^'(?:[^']|'')*(?:'|$)/,null,\"'\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\t\\r\\n\"]],[[\"dec\",/^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/],[\"pun\",/^-/],[\"kwd\",/^[\\w-]+:[ \\r\\n]/],[\"pln\",\n/^\\w+/]]),[\"yaml\",\"yml\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2015 ribrdb @ code.google.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pun\",/^[:|>?]+/,null,\":|>?\"],[\"dec\",/^%(?:YAML|TAG)[^#\\r\\n]+/,null,\"%\"],[\"typ\",/^[&]\\S+/,null,\"&\"],[\"typ\",/^!\\S*/,null,\"!\"],[\"str\",/^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/,null,'\"'],[\"str\",/^'(?:[^']|'')*(?:'|$)/,null,\"'\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\t\\r\\n\"]],[[\"dec\",/^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/],[\"pun\",/^-/],[\"kwd\",/^[\\w-]+:[ \\r\\n]/],[\"pln\",\n/^\\w+/]]),[\"yaml\",\"yml\"]);\n"},{"_content":".pln{color:#000}@media screen{.str{color:#080}.kwd{color:#008}.com{color:#800}.typ{color:#606}.lit{color:#066}.clo,.opn,.pun{color:#660}.tag{color:#008}.atn{color:#606}.atv{color:#080}.dec,.var{color:#606}.fun{color:red}}@media print,projection{.kwd,.tag,.typ{font-weight:700}.str{color:#060}.kwd{color:#006}.com{color:#600;font-style:italic}.typ{color:#404}.lit{color:#044}.clo,.opn,.pun{color:#440}.tag{color:#006}.atn{color:#404}.atv{color:#060}}pre.prettyprint{padding:2px;border:1px solid #888}ol.linenums{margin-top:0;margin-bottom:0}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}li.L1,li.L3,li.L5,li.L7,li.L9{background:#eee}","source":"plugins/google-code-prettify/prettify.css","raw":".pln{color:#000}@media screen{.str{color:#080}.kwd{color:#008}.com{color:#800}.typ{color:#606}.lit{color:#066}.clo,.opn,.pun{color:#660}.tag{color:#008}.atn{color:#606}.atv{color:#080}.dec,.var{color:#606}.fun{color:red}}@media print,projection{.kwd,.tag,.typ{font-weight:700}.str{color:#060}.kwd{color:#006}.com{color:#600;font-style:italic}.typ{color:#404}.lit{color:#044}.clo,.opn,.pun{color:#440}.tag{color:#006}.atn{color:#404}.atv{color:#060}}pre.prettyprint{padding:2px;border:1px solid #888}ol.linenums{margin-top:0;margin-bottom:0}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}li.L1,li.L3,li.L5,li.L7,li.L9{background:#eee}","date":"2022-03-27T08:23:16.384Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/prettify.css","layout":"false","title":"","comments":1,"_id":"cl22h70uz005q5ossch0d7uf0","content":".pln{color:#000}@media screen{.str{color:#080}.kwd{color:#008}.com{color:#800}.typ{color:#606}.lit{color:#066}.clo,.opn,.pun{color:#660}.tag{color:#008}.atn{color:#606}.atv{color:#080}.dec,.var{color:#606}.fun{color:red}}@media print,projection{.kwd,.tag,.typ{font-weight:700}.str{color:#060}.kwd{color:#006}.com{color:#600;font-style:italic}.typ{color:#404}.lit{color:#044}.clo,.opn,.pun{color:#440}.tag{color:#006}.atn{color:#404}.atv{color:#060}}pre.prettyprint{padding:2px;border:1px solid #888}ol.linenums{margin-top:0;margin-bottom:0}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}li.L1,li.L3,li.L5,li.L7,li.L9{background:#eee}","site":{"data":{}},"excerpt":"","more":".pln{color:#000}@media screen{.str{color:#080}.kwd{color:#008}.com{color:#800}.typ{color:#606}.lit{color:#066}.clo,.opn,.pun{color:#660}.tag{color:#008}.atn{color:#606}.atv{color:#080}.dec,.var{color:#606}.fun{color:red}}@media print,projection{.kwd,.tag,.typ{font-weight:700}.str{color:#060}.kwd{color:#006}.com{color:#600;font-style:italic}.typ{color:#404}.lit{color:#044}.clo,.opn,.pun{color:#440}.tag{color:#006}.atn{color:#404}.atv{color:#060}}pre.prettyprint{padding:2px;border:1px solid #888}ol.linenums{margin-top:0;margin-bottom:0}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}li.L1,li.L3,li.L5,li.L7,li.L9{background:#eee}"},{"_content":"!function(){/*\n\n Copyright (C) 2013 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n(function(){function aa(g){function r(){try{L.doScroll(\"left\")}catch(ba){k.setTimeout(r,50);return}x(\"poll\")}function x(r){if(\"readystatechange\"!=r.type||\"complete\"==z.readyState)(\"load\"==r.type?k:z)[B](n+r.type,x,!1),!l&&(l=!0)&&g.call(k,r.type||r)}var X=z.addEventListener,l=!1,E=!0,v=X?\"addEventListener\":\"attachEvent\",B=X?\"removeEventListener\":\"detachEvent\",n=X?\"\":\"on\";if(\"complete\"==z.readyState)g.call(k,\"lazy\");else{if(z.createEventObject&&L.doScroll){try{E=!k.frameElement}catch(ba){}E&&r()}z[v](n+\n\"DOMContentLoaded\",x,!1);z[v](n+\"readystatechange\",x,!1);k[v](n+\"load\",x,!1)}}function T(){U&&aa(function(){var g=M.length;ca(g?function(){for(var r=0;r<g;++r)(function(g){k.setTimeout(function(){k.exports[M[g]].apply(k,arguments)},0)})(r)}:void 0)})}for(var k=window,z=document,L=z.documentElement,N=z.head||z.getElementsByTagName(\"head\")[0]||L,B=\"\",F=z.getElementsByTagName(\"script\"),l=F.length;0<=--l;){var O=F[l],Y=O.src.match(/^[^?#]*\\/run_prettify\\.js(\\?[^#]*)?(?:#.*)?$/);if(Y){B=Y[1]||\"\";O.parentNode.removeChild(O);\nbreak}}var U=!0,H=[],P=[],M=[];B.replace(/[?&]([^&=]+)=([^&]+)/g,function(g,r,x){x=decodeURIComponent(x);r=decodeURIComponent(r);\"autorun\"==r?U=!/^[0fn]/i.test(x):\"lang\"==r?H.push(x):\"skin\"==r?P.push(x):\"callback\"==r&&M.push(x)});l=0;for(B=H.length;l<B;++l)(function(){var g=z.createElement(\"script\");g.onload=g.onerror=g.onreadystatechange=function(){!g||g.readyState&&!/loaded|complete/.test(g.readyState)||(g.onerror=g.onload=g.onreadystatechange=null,--S,S||k.setTimeout(T,0),g.parentNode&&g.parentNode.removeChild(g),\ng=null)};g.type=\"text/javascript\";g.src=\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/lang-\"+encodeURIComponent(H[l])+\".js\";N.insertBefore(g,N.firstChild)})(H[l]);for(var S=H.length,F=[],l=0,B=P.length;l<B;++l)F.push(\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/skins/\"+encodeURIComponent(P[l])+\".css\");F.push(\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/prettify.css\");(function(g){function r(l){if(l!==x){var k=z.createElement(\"link\");k.rel=\"stylesheet\";\nk.type=\"text/css\";l+1<x&&(k.error=k.onerror=function(){r(l+1)});k.href=g[l];N.appendChild(k)}}var x=g.length;r(0)})(F);var ca=function(){\"undefined\"!==typeof window&&(window.PR_SHOULD_USE_CONTINUATION=!0);var g;(function(){function r(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=k[c])?a:\"0\"<=c&&\"7\">=c?parseInt(e.substring(1),8):\"u\"===c||\"x\"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function f(e){if(32>e)return(16>e?\"\\\\x0\":\"\\\\x\")+e.toString(16);e=String.fromCharCode(e);\nreturn\"\\\\\"===e||\"-\"===e||\"]\"===e||\"^\"===e?\"\\\\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));e=[];var a=\"^\"===c[0],b=[\"[\"];a&&b.push(\"^\");for(var a=a?1:0,h=c.length;a<h;++a){var m=c[a];if(/\\\\[bdsw]/i.test(m))b.push(m);else{var m=d(m),p;a+2<h&&\"-\"===c[a+1]?(p=d(c[a+2]),a+=2):p=m;e.push([m,p]);65>p||122<m||(65>p||90<m||e.push([Math.max(65,m)|32,Math.min(p,90)|32]),97>p||122<m||\ne.push([Math.max(97,m)&-33,Math.min(p,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];h=[];for(a=0;a<e.length;++a)m=e[a],m[0]<=h[1]+1?h[1]=Math.max(h[1],m[1]):c.push(h=m);for(a=0;a<c.length;++a)m=c[a],b.push(f(m[0])),m[1]>m[0]&&(m[1]+1>m[0]&&b.push(\"-\"),b.push(f(m[1])));b.push(\"]\");return b.join(\"\")}function g(e){for(var a=e.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\n\"g\")),b=a.length,d=[],h=0,m=0;h<b;++h){var p=a[h];\"(\"===p?++m:\"\\\\\"===p.charAt(0)&&(p=+p.substring(1))&&(p<=m?d[p]=-1:a[h]=f(p))}for(h=1;h<d.length;++h)-1===d[h]&&(d[h]=++r);for(m=h=0;h<b;++h)p=a[h],\"(\"===p?(++m,d[m]||(a[h]=\"(?:\")):\"\\\\\"===p.charAt(0)&&(p=+p.substring(1))&&p<=m&&(a[h]=\"\\\\\"+d[p]);for(h=0;h<b;++h)\"^\"===a[h]&&\"^\"!==a[h+1]&&(a[h]=\"\");if(e.ignoreCase&&A)for(h=0;h<b;++h)p=a[h],e=p.charAt(0),2<=p.length&&\"[\"===e?a[h]=c(p):\"\\\\\"!==e&&(a[h]=p.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);\nreturn\"[\"+String.fromCharCode(a&-33,a|32)+\"]\"}));return a.join(\"\")}for(var r=0,A=!1,q=!1,I=0,b=a.length;I<b;++I){var t=a[I];if(t.ignoreCase)q=!0;else if(/[a-z]/i.test(t.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\"\"))){A=!0;q=!1;break}}for(var k={b:8,t:9,n:10,v:11,f:12,r:13},u=[],I=0,b=a.length;I<b;++I){t=a[I];if(t.global||t.multiline)throw Error(\"\"+t);u.push(\"(?:\"+g(t)+\")\")}return new RegExp(u.join(\"|\"),q?\"gi\":\"g\")}function l(a,d){function f(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=\na.firstChild;b;b=b.nextSibling)f(b);b=a.nodeName.toLowerCase();if(\"br\"===b||\"li\"===b)g[q]=\"\\n\",A[q<<1]=r++,A[q++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\\r\\n?/g,\"\\n\"):b.replace(/[ \\t\\r\\n]+/g,\" \"),g[q]=b,A[q<<1]=r,r+=b.length,A[q++<<1|1]=a)}var c=/(?:^|\\s)nocode(?:\\s|$)/,g=[],r=0,A=[],q=0;f(a);return{a:g.join(\"\").replace(/\\n$/,\"\"),c:A}}function k(a,d,f,c,g){f&&(a={h:a,l:1,j:null,m:null,a:f,c:null,i:d,g:null},c(a),g.push.apply(g,a.g))}function z(a){for(var d=void 0,f=a.firstChild;f;f=\nf.nextSibling)var c=f.nodeType,d=1===c?d?a:f:3===c?S.test(f.nodeValue)?a:d:d;return d===a?void 0:d}function E(a,d){function f(a){for(var q=a.i,r=a.h,b=[q,\"pln\"],t=0,A=a.a.match(g)||[],u={},e=0,l=A.length;e<l;++e){var D=A[e],w=u[D],h=void 0,m;if(\"string\"===typeof w)m=!1;else{var p=c[D.charAt(0)];if(p)h=D.match(p[1]),w=p[0];else{for(m=0;m<n;++m)if(p=d[m],h=D.match(p[1])){w=p[0];break}h||(w=\"pln\")}!(m=5<=w.length&&\"lang-\"===w.substring(0,5))||h&&\"string\"===typeof h[1]||(m=!1,w=\"src\");m||(u[D]=w)}p=t;\nt+=D.length;if(m){m=h[1];var C=D.indexOf(m),G=C+m.length;h[2]&&(G=D.length-h[2].length,C=G-m.length);w=w.substring(5);k(r,q+p,D.substring(0,C),f,b);k(r,q+p+C,m,F(w,m),b);k(r,q+p+G,D.substring(G),f,b)}else b.push(q+p,w)}a.g=b}var c={},g;(function(){for(var f=a.concat(d),q=[],k={},b=0,t=f.length;b<t;++b){var n=f[b],u=n[3];if(u)for(var e=u.length;0<=--e;)c[u.charAt(e)]=n;n=n[1];u=\"\"+n;k.hasOwnProperty(u)||(q.push(n),k[u]=null)}q.push(/[\\0-\\uffff]/);g=r(q)})();var n=d.length;return f}function v(a){var d=\n[],f=[];a.tripleQuotedStrings?d.push([\"str\",/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,null,\"'\\\"\"]):a.multiLineStrings?d.push([\"str\",/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):d.push([\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);a.verbatimStrings&&\nf.push([\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push([\"com\",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,\"#\"]):d.push([\"com\",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"]),f.push([\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,null])):d.push([\"com\",/^#[^\\r\\n]*/,null,\"#\"]));a.cStyleComments&&(f.push([\"com\",/^\\/\\/[^\\r\\n]*/,null]),f.push([\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\nnull]));if(c=a.regexLiterals){var g=(c=1<c?\"\":\"\\n\\r\")?\".\":\"[\\\\S\\\\s]\";f.push([\"lang-regex\",RegExp(\"^(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*(\"+(\"/(?=[^/*\"+c+\"])(?:[^/\\\\x5B\\\\x5C\"+c+\"]|\\\\x5C\"+g+\"|\\\\x5B(?:[^\\\\x5C\\\\x5D\"+c+\"]|\\\\x5C\"+g+\")*(?:\\\\x5D|$))+/\")+\")\")])}(c=a.types)&&f.push([\"typ\",c]);c=(\"\"+a.keywords).replace(/^ | $/g,\"\");c.length&&f.push([\"kwd\",\nnew RegExp(\"^(?:\"+c.replace(/[\\s,]+/g,\"|\")+\")\\\\b\"),null]);d.push([\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);c=\"^.[^\\\\s\\\\w.$@'\\\"`/\\\\\\\\]*\";a.regexLiterals&&(c+=\"(?!s*/)\");f.push([\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null],[\"pln\",/^[a-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pln\",/^\\\\[\\s\\S]?/,null],[\"pun\",new RegExp(c),null]);return E(d,f)}function B(a,d,f){function c(a){var b=\na.nodeType;if(1==b&&!r.test(a.className))if(\"br\"===a.nodeName.toLowerCase())g(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&f){var e=a.nodeValue,d=e.match(n);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+d[0].length))&&a.parentNode.insertBefore(q.createTextNode(e),a.nextSibling),g(a),b||a.parentNode.removeChild(a))}}function g(a){function c(a,b){var e=b?a.cloneNode(!1):a,p=a.parentNode;if(p){var p=c(p,1),d=a.nextSibling;\np.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,p.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var r=/(?:^|\\s)nocode(?:\\s|$)/,n=/\\r\\n?|\\n/,q=a.ownerDocument,k=q.createElement(\"li\");a.firstChild;)k.appendChild(a.firstChild);for(var b=[k],t=0;t<b.length;++t)c(b[t]);d===(d|0)&&b[0].setAttribute(\"value\",d);var l=q.createElement(\"ol\");l.className=\"linenums\";d=Math.max(0,d-1|0)||0;for(var t=\n0,u=b.length;t<u;++t)k=b[t],k.className=\"L\"+(t+d)%10,k.firstChild||k.appendChild(q.createTextNode(\"\\u00a0\")),l.appendChild(k);a.appendChild(l)}function n(a,d){for(var f=d.length;0<=--f;){var c=d[f];V.hasOwnProperty(c)?Q.console&&console.warn(\"cannot override language handler %s\",c):V[c]=a}}function F(a,d){a&&V.hasOwnProperty(a)||(a=/^\\s*</.test(d)?\"default-markup\":\"default-code\");return V[a]}function H(a){var d=a.j;try{var f=l(a.h,a.l),c=f.a;a.a=c;a.c=f.c;a.i=0;F(d,c)(a);var g=/\\bMSIE\\s(\\d+)/.exec(navigator.userAgent),\ng=g&&8>=+g[1],d=/\\n/g,r=a.a,k=r.length,f=0,q=a.c,n=q.length,c=0,b=a.g,t=b.length,v=0;b[t]=k;var u,e;for(e=u=0;e<t;)b[e]!==b[e+2]?(b[u++]=b[e++],b[u++]=b[e++]):e+=2;t=u;for(e=u=0;e<t;){for(var x=b[e],z=b[e+1],w=e+2;w+2<=t&&b[w+1]===z;)w+=2;b[u++]=x;b[u++]=z;e=w}b.length=u;var h=a.h;a=\"\";h&&(a=h.style.display,h.style.display=\"none\");try{for(;c<n;){var m=q[c+2]||k,p=b[v+2]||k,w=Math.min(m,p),C=q[c+1],G;if(1!==C.nodeType&&(G=r.substring(f,w))){g&&(G=G.replace(d,\"\\r\"));C.nodeValue=G;var Z=C.ownerDocument,\nW=Z.createElement(\"span\");W.className=b[v+1];var B=C.parentNode;B.replaceChild(W,C);W.appendChild(C);f<m&&(q[c+1]=C=Z.createTextNode(r.substring(w,m)),B.insertBefore(C,W.nextSibling))}f=w;f>=m&&(c+=2);f>=p&&(v+=2)}}finally{h&&(h.style.display=a)}}catch(y){Q.console&&console.log(y&&y.stack||y)}}var Q=\"undefined\"!==typeof window?window:{},J=[\"break,continue,do,else,for,if,return,while\"],K=[[J,\"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"],\n\"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof\"],R=[K,\"alignas,alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where\"],L=[K,\"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient\"],\nM=[K,\"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,internal,into,is,join,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,value,var,virtual,where,yield\"],K=[K,\"abstract,async,await,constructor,debugger,enum,eval,export,from,function,get,import,implements,instanceof,interface,let,null,of,set,undefined,var,with,yield,Infinity,NaN\"],\nN=[J,\"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None\"],O=[J,\"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END\"],J=[J,\"case,done,elif,esac,eval,fi,function,in,local,set,then,until\"],P=/^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/,\nS=/\\S/,T=v({keywords:[R,M,L,K,\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",N,O,J],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),V={};n(T,[\"default-code\"]);n(E([],[[\"pln\",/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[\"com\",/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[\"pun\",/^(?:<[%?]|[%?]>)/],[\"lang-\",\n/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),\"default-markup htm html mxml xhtml xml xsl\".split(\" \"));n(E([[\"pln\",/^[\\s]+/,null,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],\n[\"pun\",/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);n(E([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);n(v({keywords:R,hashComments:!0,cStyleComments:!0,types:P}),\"c cc cpp cxx cyc m\".split(\" \"));n(v({keywords:\"null,true,false\"}),[\"json\"]);n(v({keywords:M,hashComments:!0,cStyleComments:!0,\nverbatimStrings:!0,types:P}),[\"cs\"]);n(v({keywords:L,cStyleComments:!0}),[\"java\"]);n(v({keywords:J,hashComments:!0,multiLineStrings:!0}),[\"bash\",\"bsh\",\"csh\",\"sh\"]);n(v({keywords:N,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),[\"cv\",\"py\",\"python\"]);n(v({keywords:\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",hashComments:!0,multiLineStrings:!0,regexLiterals:2}),\n[\"perl\",\"pl\",\"pm\"]);n(v({keywords:O,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),[\"rb\",\"ruby\"]);n(v({keywords:K,cStyleComments:!0,regexLiterals:!0}),[\"javascript\",\"js\",\"ts\",\"typescript\"]);n(v({keywords:\"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes\",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),[\"coffee\"]);n(E([],[[\"str\",/^[\\s\\S]+/]]),\n[\"regex\"]);var U=Q.PR={createSimpleLexer:E,registerLangHandler:n,sourceDecorator:v,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:\"com\",PR_DECLARATION:\"dec\",PR_KEYWORD:\"kwd\",PR_LITERAL:\"lit\",PR_NOCODE:\"nocode\",PR_PLAIN:\"pln\",PR_PUNCTUATION:\"pun\",PR_SOURCE:\"src\",PR_STRING:\"str\",PR_TAG:\"tag\",PR_TYPE:\"typ\",prettyPrintOne:function(a,d,f){f=f||!1;d=d||null;var c=document.createElement(\"div\");c.innerHTML=\"<pre>\"+a+\"</pre>\";c=c.firstChild;f&&B(c,f,!0);H({j:d,m:f,h:c,l:1,a:null,i:null,c:null,g:null});\nreturn c.innerHTML},prettyPrint:g=function(a,d){function f(){for(var c=Q.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;t<r.length&&b.now()<c;t++){for(var d=r[t],k=h,n=d;n=n.previousSibling;){var q=n.nodeType,l=(7===q||8===q)&&n.nodeValue;if(l?!/^\\??prettify\\b/.test(l):3!==q||/\\S/.test(n.nodeValue))break;if(l){k={};l.replace(/\\b(\\w+)=([\\w:.%+-]+)/g,function(a,b,c){k[b]=c});break}}n=d.className;if((k!==h||u.test(n))&&!e.test(n)){q=!1;for(l=d.parentNode;l;l=l.parentNode)if(w.test(l.tagName)&&l.className&&\nu.test(l.className)){q=!0;break}if(!q){d.className+=\" prettyprinted\";q=k.lang;if(!q){var q=n.match(v),A;!q&&(A=z(d))&&D.test(A.tagName)&&(q=A.className.match(v));q&&(q=q[1])}if(x.test(d.tagName))l=1;else var l=d.currentStyle,y=g.defaultView,l=(l=l?l.whiteSpace:y&&y.getComputedStyle?y.getComputedStyle(d,null).getPropertyValue(\"white-space\"):0)&&\"pre\"===l.substring(0,3);y=k.linenums;(y=\"true\"===y||+y)||(y=(y=n.match(/\\blinenums\\b(?::(\\d+))?/))?y[1]&&y[1].length?+y[1]:!0:!1);y&&B(d,y,l);H({j:q,h:d,m:y,\nl:l,a:null,i:null,c:null,g:null})}}}t<r.length?Q.setTimeout(f,250):\"function\"===typeof a&&a()}for(var c=d||document.body,g=c.ownerDocument||document,c=[c.getElementsByTagName(\"pre\"),c.getElementsByTagName(\"code\"),c.getElementsByTagName(\"xmp\")],r=[],k=0;k<c.length;++k)for(var n=0,l=c[k].length;n<l;++n)r.push(c[k][n]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var t=0,v=/\\blang(?:uage)?-([\\w.]+)(?!\\S)/,u=/\\bprettyprint\\b/,e=/\\bprettyprinted\\b/,x=/pre|xmp/i,D=/^code$/i,w=/^(?:pre|code|xmp)$/i,\nh={};f()}},R=Q.define;\"function\"===typeof R&&R.amd&&R(\"google-code-prettify\",[],function(){return U})})();return g}();S||k.setTimeout(T,0)})();}()\n","source":"plugins/google-code-prettify/run_prettify.js","raw":"!function(){/*\n\n Copyright (C) 2013 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n(function(){function aa(g){function r(){try{L.doScroll(\"left\")}catch(ba){k.setTimeout(r,50);return}x(\"poll\")}function x(r){if(\"readystatechange\"!=r.type||\"complete\"==z.readyState)(\"load\"==r.type?k:z)[B](n+r.type,x,!1),!l&&(l=!0)&&g.call(k,r.type||r)}var X=z.addEventListener,l=!1,E=!0,v=X?\"addEventListener\":\"attachEvent\",B=X?\"removeEventListener\":\"detachEvent\",n=X?\"\":\"on\";if(\"complete\"==z.readyState)g.call(k,\"lazy\");else{if(z.createEventObject&&L.doScroll){try{E=!k.frameElement}catch(ba){}E&&r()}z[v](n+\n\"DOMContentLoaded\",x,!1);z[v](n+\"readystatechange\",x,!1);k[v](n+\"load\",x,!1)}}function T(){U&&aa(function(){var g=M.length;ca(g?function(){for(var r=0;r<g;++r)(function(g){k.setTimeout(function(){k.exports[M[g]].apply(k,arguments)},0)})(r)}:void 0)})}for(var k=window,z=document,L=z.documentElement,N=z.head||z.getElementsByTagName(\"head\")[0]||L,B=\"\",F=z.getElementsByTagName(\"script\"),l=F.length;0<=--l;){var O=F[l],Y=O.src.match(/^[^?#]*\\/run_prettify\\.js(\\?[^#]*)?(?:#.*)?$/);if(Y){B=Y[1]||\"\";O.parentNode.removeChild(O);\nbreak}}var U=!0,H=[],P=[],M=[];B.replace(/[?&]([^&=]+)=([^&]+)/g,function(g,r,x){x=decodeURIComponent(x);r=decodeURIComponent(r);\"autorun\"==r?U=!/^[0fn]/i.test(x):\"lang\"==r?H.push(x):\"skin\"==r?P.push(x):\"callback\"==r&&M.push(x)});l=0;for(B=H.length;l<B;++l)(function(){var g=z.createElement(\"script\");g.onload=g.onerror=g.onreadystatechange=function(){!g||g.readyState&&!/loaded|complete/.test(g.readyState)||(g.onerror=g.onload=g.onreadystatechange=null,--S,S||k.setTimeout(T,0),g.parentNode&&g.parentNode.removeChild(g),\ng=null)};g.type=\"text/javascript\";g.src=\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/lang-\"+encodeURIComponent(H[l])+\".js\";N.insertBefore(g,N.firstChild)})(H[l]);for(var S=H.length,F=[],l=0,B=P.length;l<B;++l)F.push(\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/skins/\"+encodeURIComponent(P[l])+\".css\");F.push(\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/prettify.css\");(function(g){function r(l){if(l!==x){var k=z.createElement(\"link\");k.rel=\"stylesheet\";\nk.type=\"text/css\";l+1<x&&(k.error=k.onerror=function(){r(l+1)});k.href=g[l];N.appendChild(k)}}var x=g.length;r(0)})(F);var ca=function(){\"undefined\"!==typeof window&&(window.PR_SHOULD_USE_CONTINUATION=!0);var g;(function(){function r(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=k[c])?a:\"0\"<=c&&\"7\">=c?parseInt(e.substring(1),8):\"u\"===c||\"x\"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function f(e){if(32>e)return(16>e?\"\\\\x0\":\"\\\\x\")+e.toString(16);e=String.fromCharCode(e);\nreturn\"\\\\\"===e||\"-\"===e||\"]\"===e||\"^\"===e?\"\\\\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));e=[];var a=\"^\"===c[0],b=[\"[\"];a&&b.push(\"^\");for(var a=a?1:0,h=c.length;a<h;++a){var m=c[a];if(/\\\\[bdsw]/i.test(m))b.push(m);else{var m=d(m),p;a+2<h&&\"-\"===c[a+1]?(p=d(c[a+2]),a+=2):p=m;e.push([m,p]);65>p||122<m||(65>p||90<m||e.push([Math.max(65,m)|32,Math.min(p,90)|32]),97>p||122<m||\ne.push([Math.max(97,m)&-33,Math.min(p,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];h=[];for(a=0;a<e.length;++a)m=e[a],m[0]<=h[1]+1?h[1]=Math.max(h[1],m[1]):c.push(h=m);for(a=0;a<c.length;++a)m=c[a],b.push(f(m[0])),m[1]>m[0]&&(m[1]+1>m[0]&&b.push(\"-\"),b.push(f(m[1])));b.push(\"]\");return b.join(\"\")}function g(e){for(var a=e.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\n\"g\")),b=a.length,d=[],h=0,m=0;h<b;++h){var p=a[h];\"(\"===p?++m:\"\\\\\"===p.charAt(0)&&(p=+p.substring(1))&&(p<=m?d[p]=-1:a[h]=f(p))}for(h=1;h<d.length;++h)-1===d[h]&&(d[h]=++r);for(m=h=0;h<b;++h)p=a[h],\"(\"===p?(++m,d[m]||(a[h]=\"(?:\")):\"\\\\\"===p.charAt(0)&&(p=+p.substring(1))&&p<=m&&(a[h]=\"\\\\\"+d[p]);for(h=0;h<b;++h)\"^\"===a[h]&&\"^\"!==a[h+1]&&(a[h]=\"\");if(e.ignoreCase&&A)for(h=0;h<b;++h)p=a[h],e=p.charAt(0),2<=p.length&&\"[\"===e?a[h]=c(p):\"\\\\\"!==e&&(a[h]=p.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);\nreturn\"[\"+String.fromCharCode(a&-33,a|32)+\"]\"}));return a.join(\"\")}for(var r=0,A=!1,q=!1,I=0,b=a.length;I<b;++I){var t=a[I];if(t.ignoreCase)q=!0;else if(/[a-z]/i.test(t.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\"\"))){A=!0;q=!1;break}}for(var k={b:8,t:9,n:10,v:11,f:12,r:13},u=[],I=0,b=a.length;I<b;++I){t=a[I];if(t.global||t.multiline)throw Error(\"\"+t);u.push(\"(?:\"+g(t)+\")\")}return new RegExp(u.join(\"|\"),q?\"gi\":\"g\")}function l(a,d){function f(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=\na.firstChild;b;b=b.nextSibling)f(b);b=a.nodeName.toLowerCase();if(\"br\"===b||\"li\"===b)g[q]=\"\\n\",A[q<<1]=r++,A[q++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\\r\\n?/g,\"\\n\"):b.replace(/[ \\t\\r\\n]+/g,\" \"),g[q]=b,A[q<<1]=r,r+=b.length,A[q++<<1|1]=a)}var c=/(?:^|\\s)nocode(?:\\s|$)/,g=[],r=0,A=[],q=0;f(a);return{a:g.join(\"\").replace(/\\n$/,\"\"),c:A}}function k(a,d,f,c,g){f&&(a={h:a,l:1,j:null,m:null,a:f,c:null,i:d,g:null},c(a),g.push.apply(g,a.g))}function z(a){for(var d=void 0,f=a.firstChild;f;f=\nf.nextSibling)var c=f.nodeType,d=1===c?d?a:f:3===c?S.test(f.nodeValue)?a:d:d;return d===a?void 0:d}function E(a,d){function f(a){for(var q=a.i,r=a.h,b=[q,\"pln\"],t=0,A=a.a.match(g)||[],u={},e=0,l=A.length;e<l;++e){var D=A[e],w=u[D],h=void 0,m;if(\"string\"===typeof w)m=!1;else{var p=c[D.charAt(0)];if(p)h=D.match(p[1]),w=p[0];else{for(m=0;m<n;++m)if(p=d[m],h=D.match(p[1])){w=p[0];break}h||(w=\"pln\")}!(m=5<=w.length&&\"lang-\"===w.substring(0,5))||h&&\"string\"===typeof h[1]||(m=!1,w=\"src\");m||(u[D]=w)}p=t;\nt+=D.length;if(m){m=h[1];var C=D.indexOf(m),G=C+m.length;h[2]&&(G=D.length-h[2].length,C=G-m.length);w=w.substring(5);k(r,q+p,D.substring(0,C),f,b);k(r,q+p+C,m,F(w,m),b);k(r,q+p+G,D.substring(G),f,b)}else b.push(q+p,w)}a.g=b}var c={},g;(function(){for(var f=a.concat(d),q=[],k={},b=0,t=f.length;b<t;++b){var n=f[b],u=n[3];if(u)for(var e=u.length;0<=--e;)c[u.charAt(e)]=n;n=n[1];u=\"\"+n;k.hasOwnProperty(u)||(q.push(n),k[u]=null)}q.push(/[\\0-\\uffff]/);g=r(q)})();var n=d.length;return f}function v(a){var d=\n[],f=[];a.tripleQuotedStrings?d.push([\"str\",/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,null,\"'\\\"\"]):a.multiLineStrings?d.push([\"str\",/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):d.push([\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);a.verbatimStrings&&\nf.push([\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push([\"com\",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,\"#\"]):d.push([\"com\",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"]),f.push([\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,null])):d.push([\"com\",/^#[^\\r\\n]*/,null,\"#\"]));a.cStyleComments&&(f.push([\"com\",/^\\/\\/[^\\r\\n]*/,null]),f.push([\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\nnull]));if(c=a.regexLiterals){var g=(c=1<c?\"\":\"\\n\\r\")?\".\":\"[\\\\S\\\\s]\";f.push([\"lang-regex\",RegExp(\"^(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*(\"+(\"/(?=[^/*\"+c+\"])(?:[^/\\\\x5B\\\\x5C\"+c+\"]|\\\\x5C\"+g+\"|\\\\x5B(?:[^\\\\x5C\\\\x5D\"+c+\"]|\\\\x5C\"+g+\")*(?:\\\\x5D|$))+/\")+\")\")])}(c=a.types)&&f.push([\"typ\",c]);c=(\"\"+a.keywords).replace(/^ | $/g,\"\");c.length&&f.push([\"kwd\",\nnew RegExp(\"^(?:\"+c.replace(/[\\s,]+/g,\"|\")+\")\\\\b\"),null]);d.push([\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);c=\"^.[^\\\\s\\\\w.$@'\\\"`/\\\\\\\\]*\";a.regexLiterals&&(c+=\"(?!s*/)\");f.push([\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null],[\"pln\",/^[a-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pln\",/^\\\\[\\s\\S]?/,null],[\"pun\",new RegExp(c),null]);return E(d,f)}function B(a,d,f){function c(a){var b=\na.nodeType;if(1==b&&!r.test(a.className))if(\"br\"===a.nodeName.toLowerCase())g(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&f){var e=a.nodeValue,d=e.match(n);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+d[0].length))&&a.parentNode.insertBefore(q.createTextNode(e),a.nextSibling),g(a),b||a.parentNode.removeChild(a))}}function g(a){function c(a,b){var e=b?a.cloneNode(!1):a,p=a.parentNode;if(p){var p=c(p,1),d=a.nextSibling;\np.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,p.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var r=/(?:^|\\s)nocode(?:\\s|$)/,n=/\\r\\n?|\\n/,q=a.ownerDocument,k=q.createElement(\"li\");a.firstChild;)k.appendChild(a.firstChild);for(var b=[k],t=0;t<b.length;++t)c(b[t]);d===(d|0)&&b[0].setAttribute(\"value\",d);var l=q.createElement(\"ol\");l.className=\"linenums\";d=Math.max(0,d-1|0)||0;for(var t=\n0,u=b.length;t<u;++t)k=b[t],k.className=\"L\"+(t+d)%10,k.firstChild||k.appendChild(q.createTextNode(\"\\u00a0\")),l.appendChild(k);a.appendChild(l)}function n(a,d){for(var f=d.length;0<=--f;){var c=d[f];V.hasOwnProperty(c)?Q.console&&console.warn(\"cannot override language handler %s\",c):V[c]=a}}function F(a,d){a&&V.hasOwnProperty(a)||(a=/^\\s*</.test(d)?\"default-markup\":\"default-code\");return V[a]}function H(a){var d=a.j;try{var f=l(a.h,a.l),c=f.a;a.a=c;a.c=f.c;a.i=0;F(d,c)(a);var g=/\\bMSIE\\s(\\d+)/.exec(navigator.userAgent),\ng=g&&8>=+g[1],d=/\\n/g,r=a.a,k=r.length,f=0,q=a.c,n=q.length,c=0,b=a.g,t=b.length,v=0;b[t]=k;var u,e;for(e=u=0;e<t;)b[e]!==b[e+2]?(b[u++]=b[e++],b[u++]=b[e++]):e+=2;t=u;for(e=u=0;e<t;){for(var x=b[e],z=b[e+1],w=e+2;w+2<=t&&b[w+1]===z;)w+=2;b[u++]=x;b[u++]=z;e=w}b.length=u;var h=a.h;a=\"\";h&&(a=h.style.display,h.style.display=\"none\");try{for(;c<n;){var m=q[c+2]||k,p=b[v+2]||k,w=Math.min(m,p),C=q[c+1],G;if(1!==C.nodeType&&(G=r.substring(f,w))){g&&(G=G.replace(d,\"\\r\"));C.nodeValue=G;var Z=C.ownerDocument,\nW=Z.createElement(\"span\");W.className=b[v+1];var B=C.parentNode;B.replaceChild(W,C);W.appendChild(C);f<m&&(q[c+1]=C=Z.createTextNode(r.substring(w,m)),B.insertBefore(C,W.nextSibling))}f=w;f>=m&&(c+=2);f>=p&&(v+=2)}}finally{h&&(h.style.display=a)}}catch(y){Q.console&&console.log(y&&y.stack||y)}}var Q=\"undefined\"!==typeof window?window:{},J=[\"break,continue,do,else,for,if,return,while\"],K=[[J,\"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"],\n\"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof\"],R=[K,\"alignas,alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where\"],L=[K,\"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient\"],\nM=[K,\"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,internal,into,is,join,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,value,var,virtual,where,yield\"],K=[K,\"abstract,async,await,constructor,debugger,enum,eval,export,from,function,get,import,implements,instanceof,interface,let,null,of,set,undefined,var,with,yield,Infinity,NaN\"],\nN=[J,\"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None\"],O=[J,\"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END\"],J=[J,\"case,done,elif,esac,eval,fi,function,in,local,set,then,until\"],P=/^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/,\nS=/\\S/,T=v({keywords:[R,M,L,K,\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",N,O,J],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),V={};n(T,[\"default-code\"]);n(E([],[[\"pln\",/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[\"com\",/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[\"pun\",/^(?:<[%?]|[%?]>)/],[\"lang-\",\n/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),\"default-markup htm html mxml xhtml xml xsl\".split(\" \"));n(E([[\"pln\",/^[\\s]+/,null,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],\n[\"pun\",/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);n(E([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);n(v({keywords:R,hashComments:!0,cStyleComments:!0,types:P}),\"c cc cpp cxx cyc m\".split(\" \"));n(v({keywords:\"null,true,false\"}),[\"json\"]);n(v({keywords:M,hashComments:!0,cStyleComments:!0,\nverbatimStrings:!0,types:P}),[\"cs\"]);n(v({keywords:L,cStyleComments:!0}),[\"java\"]);n(v({keywords:J,hashComments:!0,multiLineStrings:!0}),[\"bash\",\"bsh\",\"csh\",\"sh\"]);n(v({keywords:N,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),[\"cv\",\"py\",\"python\"]);n(v({keywords:\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",hashComments:!0,multiLineStrings:!0,regexLiterals:2}),\n[\"perl\",\"pl\",\"pm\"]);n(v({keywords:O,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),[\"rb\",\"ruby\"]);n(v({keywords:K,cStyleComments:!0,regexLiterals:!0}),[\"javascript\",\"js\",\"ts\",\"typescript\"]);n(v({keywords:\"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes\",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),[\"coffee\"]);n(E([],[[\"str\",/^[\\s\\S]+/]]),\n[\"regex\"]);var U=Q.PR={createSimpleLexer:E,registerLangHandler:n,sourceDecorator:v,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:\"com\",PR_DECLARATION:\"dec\",PR_KEYWORD:\"kwd\",PR_LITERAL:\"lit\",PR_NOCODE:\"nocode\",PR_PLAIN:\"pln\",PR_PUNCTUATION:\"pun\",PR_SOURCE:\"src\",PR_STRING:\"str\",PR_TAG:\"tag\",PR_TYPE:\"typ\",prettyPrintOne:function(a,d,f){f=f||!1;d=d||null;var c=document.createElement(\"div\");c.innerHTML=\"<pre>\"+a+\"</pre>\";c=c.firstChild;f&&B(c,f,!0);H({j:d,m:f,h:c,l:1,a:null,i:null,c:null,g:null});\nreturn c.innerHTML},prettyPrint:g=function(a,d){function f(){for(var c=Q.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;t<r.length&&b.now()<c;t++){for(var d=r[t],k=h,n=d;n=n.previousSibling;){var q=n.nodeType,l=(7===q||8===q)&&n.nodeValue;if(l?!/^\\??prettify\\b/.test(l):3!==q||/\\S/.test(n.nodeValue))break;if(l){k={};l.replace(/\\b(\\w+)=([\\w:.%+-]+)/g,function(a,b,c){k[b]=c});break}}n=d.className;if((k!==h||u.test(n))&&!e.test(n)){q=!1;for(l=d.parentNode;l;l=l.parentNode)if(w.test(l.tagName)&&l.className&&\nu.test(l.className)){q=!0;break}if(!q){d.className+=\" prettyprinted\";q=k.lang;if(!q){var q=n.match(v),A;!q&&(A=z(d))&&D.test(A.tagName)&&(q=A.className.match(v));q&&(q=q[1])}if(x.test(d.tagName))l=1;else var l=d.currentStyle,y=g.defaultView,l=(l=l?l.whiteSpace:y&&y.getComputedStyle?y.getComputedStyle(d,null).getPropertyValue(\"white-space\"):0)&&\"pre\"===l.substring(0,3);y=k.linenums;(y=\"true\"===y||+y)||(y=(y=n.match(/\\blinenums\\b(?::(\\d+))?/))?y[1]&&y[1].length?+y[1]:!0:!1);y&&B(d,y,l);H({j:q,h:d,m:y,\nl:l,a:null,i:null,c:null,g:null})}}}t<r.length?Q.setTimeout(f,250):\"function\"===typeof a&&a()}for(var c=d||document.body,g=c.ownerDocument||document,c=[c.getElementsByTagName(\"pre\"),c.getElementsByTagName(\"code\"),c.getElementsByTagName(\"xmp\")],r=[],k=0;k<c.length;++k)for(var n=0,l=c[k].length;n<l;++n)r.push(c[k][n]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var t=0,v=/\\blang(?:uage)?-([\\w.]+)(?!\\S)/,u=/\\bprettyprint\\b/,e=/\\bprettyprinted\\b/,x=/pre|xmp/i,D=/^code$/i,w=/^(?:pre|code|xmp)$/i,\nh={};f()}},R=Q.define;\"function\"===typeof R&&R.amd&&R(\"google-code-prettify\",[],function(){return U})})();return g}();S||k.setTimeout(T,0)})();}()\n","date":"2022-03-27T08:23:16.383Z","updated":"2018-12-17T07:44:02.000Z","path":"plugins/google-code-prettify/run_prettify.js","layout":"false","title":"","comments":1,"_id":"cl22h70v0005s5oss89cw960d","content":"!function(){/*\n\n Copyright (C) 2013 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n(function(){function aa(g){function r(){try{L.doScroll(\"left\")}catch(ba){k.setTimeout(r,50);return}x(\"poll\")}function x(r){if(\"readystatechange\"!=r.type||\"complete\"==z.readyState)(\"load\"==r.type?k:z)[B](n+r.type,x,!1),!l&&(l=!0)&&g.call(k,r.type||r)}var X=z.addEventListener,l=!1,E=!0,v=X?\"addEventListener\":\"attachEvent\",B=X?\"removeEventListener\":\"detachEvent\",n=X?\"\":\"on\";if(\"complete\"==z.readyState)g.call(k,\"lazy\");else{if(z.createEventObject&&L.doScroll){try{E=!k.frameElement}catch(ba){}E&&r()}z[v](n+\n\"DOMContentLoaded\",x,!1);z[v](n+\"readystatechange\",x,!1);k[v](n+\"load\",x,!1)}}function T(){U&&aa(function(){var g=M.length;ca(g?function(){for(var r=0;r<g;++r)(function(g){k.setTimeout(function(){k.exports[M[g]].apply(k,arguments)},0)})(r)}:void 0)})}for(var k=window,z=document,L=z.documentElement,N=z.head||z.getElementsByTagName(\"head\")[0]||L,B=\"\",F=z.getElementsByTagName(\"script\"),l=F.length;0<=--l;){var O=F[l],Y=O.src.match(/^[^?#]*\\/run_prettify\\.js(\\?[^#]*)?(?:#.*)?$/);if(Y){B=Y[1]||\"\";O.parentNode.removeChild(O);\nbreak}}var U=!0,H=[],P=[],M=[];B.replace(/[?&]([^&=]+)=([^&]+)/g,function(g,r,x){x=decodeURIComponent(x);r=decodeURIComponent(r);\"autorun\"==r?U=!/^[0fn]/i.test(x):\"lang\"==r?H.push(x):\"skin\"==r?P.push(x):\"callback\"==r&&M.push(x)});l=0;for(B=H.length;l<B;++l)(function(){var g=z.createElement(\"script\");g.onload=g.onerror=g.onreadystatechange=function(){!g||g.readyState&&!/loaded|complete/.test(g.readyState)||(g.onerror=g.onload=g.onreadystatechange=null,--S,S||k.setTimeout(T,0),g.parentNode&&g.parentNode.removeChild(g),\ng=null)};g.type=\"text/javascript\";g.src=\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/lang-\"+encodeURIComponent(H[l])+\".js\";N.insertBefore(g,N.firstChild)})(H[l]);for(var S=H.length,F=[],l=0,B=P.length;l<B;++l)F.push(\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/skins/\"+encodeURIComponent(P[l])+\".css\");F.push(\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/prettify.css\");(function(g){function r(l){if(l!==x){var k=z.createElement(\"link\");k.rel=\"stylesheet\";\nk.type=\"text/css\";l+1<x&&(k.error=k.onerror=function(){r(l+1)});k.href=g[l];N.appendChild(k)}}var x=g.length;r(0)})(F);var ca=function(){\"undefined\"!==typeof window&&(window.PR_SHOULD_USE_CONTINUATION=!0);var g;(function(){function r(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=k[c])?a:\"0\"<=c&&\"7\">=c?parseInt(e.substring(1),8):\"u\"===c||\"x\"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function f(e){if(32>e)return(16>e?\"\\\\x0\":\"\\\\x\")+e.toString(16);e=String.fromCharCode(e);\nreturn\"\\\\\"===e||\"-\"===e||\"]\"===e||\"^\"===e?\"\\\\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));e=[];var a=\"^\"===c[0],b=[\"[\"];a&&b.push(\"^\");for(var a=a?1:0,h=c.length;a<h;++a){var m=c[a];if(/\\\\[bdsw]/i.test(m))b.push(m);else{var m=d(m),p;a+2<h&&\"-\"===c[a+1]?(p=d(c[a+2]),a+=2):p=m;e.push([m,p]);65>p||122<m||(65>p||90<m||e.push([Math.max(65,m)|32,Math.min(p,90)|32]),97>p||122<m||\ne.push([Math.max(97,m)&-33,Math.min(p,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];h=[];for(a=0;a<e.length;++a)m=e[a],m[0]<=h[1]+1?h[1]=Math.max(h[1],m[1]):c.push(h=m);for(a=0;a<c.length;++a)m=c[a],b.push(f(m[0])),m[1]>m[0]&&(m[1]+1>m[0]&&b.push(\"-\"),b.push(f(m[1])));b.push(\"]\");return b.join(\"\")}function g(e){for(var a=e.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\n\"g\")),b=a.length,d=[],h=0,m=0;h<b;++h){var p=a[h];\"(\"===p?++m:\"\\\\\"===p.charAt(0)&&(p=+p.substring(1))&&(p<=m?d[p]=-1:a[h]=f(p))}for(h=1;h<d.length;++h)-1===d[h]&&(d[h]=++r);for(m=h=0;h<b;++h)p=a[h],\"(\"===p?(++m,d[m]||(a[h]=\"(?:\")):\"\\\\\"===p.charAt(0)&&(p=+p.substring(1))&&p<=m&&(a[h]=\"\\\\\"+d[p]);for(h=0;h<b;++h)\"^\"===a[h]&&\"^\"!==a[h+1]&&(a[h]=\"\");if(e.ignoreCase&&A)for(h=0;h<b;++h)p=a[h],e=p.charAt(0),2<=p.length&&\"[\"===e?a[h]=c(p):\"\\\\\"!==e&&(a[h]=p.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);\nreturn\"[\"+String.fromCharCode(a&-33,a|32)+\"]\"}));return a.join(\"\")}for(var r=0,A=!1,q=!1,I=0,b=a.length;I<b;++I){var t=a[I];if(t.ignoreCase)q=!0;else if(/[a-z]/i.test(t.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\"\"))){A=!0;q=!1;break}}for(var k={b:8,t:9,n:10,v:11,f:12,r:13},u=[],I=0,b=a.length;I<b;++I){t=a[I];if(t.global||t.multiline)throw Error(\"\"+t);u.push(\"(?:\"+g(t)+\")\")}return new RegExp(u.join(\"|\"),q?\"gi\":\"g\")}function l(a,d){function f(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=\na.firstChild;b;b=b.nextSibling)f(b);b=a.nodeName.toLowerCase();if(\"br\"===b||\"li\"===b)g[q]=\"\\n\",A[q<<1]=r++,A[q++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\\r\\n?/g,\"\\n\"):b.replace(/[ \\t\\r\\n]+/g,\" \"),g[q]=b,A[q<<1]=r,r+=b.length,A[q++<<1|1]=a)}var c=/(?:^|\\s)nocode(?:\\s|$)/,g=[],r=0,A=[],q=0;f(a);return{a:g.join(\"\").replace(/\\n$/,\"\"),c:A}}function k(a,d,f,c,g){f&&(a={h:a,l:1,j:null,m:null,a:f,c:null,i:d,g:null},c(a),g.push.apply(g,a.g))}function z(a){for(var d=void 0,f=a.firstChild;f;f=\nf.nextSibling)var c=f.nodeType,d=1===c?d?a:f:3===c?S.test(f.nodeValue)?a:d:d;return d===a?void 0:d}function E(a,d){function f(a){for(var q=a.i,r=a.h,b=[q,\"pln\"],t=0,A=a.a.match(g)||[],u={},e=0,l=A.length;e<l;++e){var D=A[e],w=u[D],h=void 0,m;if(\"string\"===typeof w)m=!1;else{var p=c[D.charAt(0)];if(p)h=D.match(p[1]),w=p[0];else{for(m=0;m<n;++m)if(p=d[m],h=D.match(p[1])){w=p[0];break}h||(w=\"pln\")}!(m=5<=w.length&&\"lang-\"===w.substring(0,5))||h&&\"string\"===typeof h[1]||(m=!1,w=\"src\");m||(u[D]=w)}p=t;\nt+=D.length;if(m){m=h[1];var C=D.indexOf(m),G=C+m.length;h[2]&&(G=D.length-h[2].length,C=G-m.length);w=w.substring(5);k(r,q+p,D.substring(0,C),f,b);k(r,q+p+C,m,F(w,m),b);k(r,q+p+G,D.substring(G),f,b)}else b.push(q+p,w)}a.g=b}var c={},g;(function(){for(var f=a.concat(d),q=[],k={},b=0,t=f.length;b<t;++b){var n=f[b],u=n[3];if(u)for(var e=u.length;0<=--e;)c[u.charAt(e)]=n;n=n[1];u=\"\"+n;k.hasOwnProperty(u)||(q.push(n),k[u]=null)}q.push(/[\\0-\\uffff]/);g=r(q)})();var n=d.length;return f}function v(a){var d=\n[],f=[];a.tripleQuotedStrings?d.push([\"str\",/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,null,\"'\\\"\"]):a.multiLineStrings?d.push([\"str\",/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):d.push([\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);a.verbatimStrings&&\nf.push([\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push([\"com\",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,\"#\"]):d.push([\"com\",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"]),f.push([\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,null])):d.push([\"com\",/^#[^\\r\\n]*/,null,\"#\"]));a.cStyleComments&&(f.push([\"com\",/^\\/\\/[^\\r\\n]*/,null]),f.push([\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\nnull]));if(c=a.regexLiterals){var g=(c=1<c?\"\":\"\\n\\r\")?\".\":\"[\\\\S\\\\s]\";f.push([\"lang-regex\",RegExp(\"^(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*(\"+(\"/(?=[^/*\"+c+\"])(?:[^/\\\\x5B\\\\x5C\"+c+\"]|\\\\x5C\"+g+\"|\\\\x5B(?:[^\\\\x5C\\\\x5D\"+c+\"]|\\\\x5C\"+g+\")*(?:\\\\x5D|$))+/\")+\")\")])}(c=a.types)&&f.push([\"typ\",c]);c=(\"\"+a.keywords).replace(/^ | $/g,\"\");c.length&&f.push([\"kwd\",\nnew RegExp(\"^(?:\"+c.replace(/[\\s,]+/g,\"|\")+\")\\\\b\"),null]);d.push([\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);c=\"^.[^\\\\s\\\\w.$@'\\\"`/\\\\\\\\]*\";a.regexLiterals&&(c+=\"(?!s*/)\");f.push([\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null],[\"pln\",/^[a-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pln\",/^\\\\[\\s\\S]?/,null],[\"pun\",new RegExp(c),null]);return E(d,f)}function B(a,d,f){function c(a){var b=\na.nodeType;if(1==b&&!r.test(a.className))if(\"br\"===a.nodeName.toLowerCase())g(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&f){var e=a.nodeValue,d=e.match(n);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+d[0].length))&&a.parentNode.insertBefore(q.createTextNode(e),a.nextSibling),g(a),b||a.parentNode.removeChild(a))}}function g(a){function c(a,b){var e=b?a.cloneNode(!1):a,p=a.parentNode;if(p){var p=c(p,1),d=a.nextSibling;\np.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,p.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var r=/(?:^|\\s)nocode(?:\\s|$)/,n=/\\r\\n?|\\n/,q=a.ownerDocument,k=q.createElement(\"li\");a.firstChild;)k.appendChild(a.firstChild);for(var b=[k],t=0;t<b.length;++t)c(b[t]);d===(d|0)&&b[0].setAttribute(\"value\",d);var l=q.createElement(\"ol\");l.className=\"linenums\";d=Math.max(0,d-1|0)||0;for(var t=\n0,u=b.length;t<u;++t)k=b[t],k.className=\"L\"+(t+d)%10,k.firstChild||k.appendChild(q.createTextNode(\"\\u00a0\")),l.appendChild(k);a.appendChild(l)}function n(a,d){for(var f=d.length;0<=--f;){var c=d[f];V.hasOwnProperty(c)?Q.console&&console.warn(\"cannot override language handler %s\",c):V[c]=a}}function F(a,d){a&&V.hasOwnProperty(a)||(a=/^\\s*</.test(d)?\"default-markup\":\"default-code\");return V[a]}function H(a){var d=a.j;try{var f=l(a.h,a.l),c=f.a;a.a=c;a.c=f.c;a.i=0;F(d,c)(a);var g=/\\bMSIE\\s(\\d+)/.exec(navigator.userAgent),\ng=g&&8>=+g[1],d=/\\n/g,r=a.a,k=r.length,f=0,q=a.c,n=q.length,c=0,b=a.g,t=b.length,v=0;b[t]=k;var u,e;for(e=u=0;e<t;)b[e]!==b[e+2]?(b[u++]=b[e++],b[u++]=b[e++]):e+=2;t=u;for(e=u=0;e<t;){for(var x=b[e],z=b[e+1],w=e+2;w+2<=t&&b[w+1]===z;)w+=2;b[u++]=x;b[u++]=z;e=w}b.length=u;var h=a.h;a=\"\";h&&(a=h.style.display,h.style.display=\"none\");try{for(;c<n;){var m=q[c+2]||k,p=b[v+2]||k,w=Math.min(m,p),C=q[c+1],G;if(1!==C.nodeType&&(G=r.substring(f,w))){g&&(G=G.replace(d,\"\\r\"));C.nodeValue=G;var Z=C.ownerDocument,\nW=Z.createElement(\"span\");W.className=b[v+1];var B=C.parentNode;B.replaceChild(W,C);W.appendChild(C);f<m&&(q[c+1]=C=Z.createTextNode(r.substring(w,m)),B.insertBefore(C,W.nextSibling))}f=w;f>=m&&(c+=2);f>=p&&(v+=2)}}finally{h&&(h.style.display=a)}}catch(y){Q.console&&console.log(y&&y.stack||y)}}var Q=\"undefined\"!==typeof window?window:{},J=[\"break,continue,do,else,for,if,return,while\"],K=[[J,\"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"],\n\"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof\"],R=[K,\"alignas,alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where\"],L=[K,\"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient\"],\nM=[K,\"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,internal,into,is,join,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,value,var,virtual,where,yield\"],K=[K,\"abstract,async,await,constructor,debugger,enum,eval,export,from,function,get,import,implements,instanceof,interface,let,null,of,set,undefined,var,with,yield,Infinity,NaN\"],\nN=[J,\"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None\"],O=[J,\"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END\"],J=[J,\"case,done,elif,esac,eval,fi,function,in,local,set,then,until\"],P=/^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/,\nS=/\\S/,T=v({keywords:[R,M,L,K,\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",N,O,J],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),V={};n(T,[\"default-code\"]);n(E([],[[\"pln\",/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[\"com\",/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[\"pun\",/^(?:<[%?]|[%?]>)/],[\"lang-\",\n/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),\"default-markup htm html mxml xhtml xml xsl\".split(\" \"));n(E([[\"pln\",/^[\\s]+/,null,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],\n[\"pun\",/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);n(E([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);n(v({keywords:R,hashComments:!0,cStyleComments:!0,types:P}),\"c cc cpp cxx cyc m\".split(\" \"));n(v({keywords:\"null,true,false\"}),[\"json\"]);n(v({keywords:M,hashComments:!0,cStyleComments:!0,\nverbatimStrings:!0,types:P}),[\"cs\"]);n(v({keywords:L,cStyleComments:!0}),[\"java\"]);n(v({keywords:J,hashComments:!0,multiLineStrings:!0}),[\"bash\",\"bsh\",\"csh\",\"sh\"]);n(v({keywords:N,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),[\"cv\",\"py\",\"python\"]);n(v({keywords:\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",hashComments:!0,multiLineStrings:!0,regexLiterals:2}),\n[\"perl\",\"pl\",\"pm\"]);n(v({keywords:O,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),[\"rb\",\"ruby\"]);n(v({keywords:K,cStyleComments:!0,regexLiterals:!0}),[\"javascript\",\"js\",\"ts\",\"typescript\"]);n(v({keywords:\"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes\",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),[\"coffee\"]);n(E([],[[\"str\",/^[\\s\\S]+/]]),\n[\"regex\"]);var U=Q.PR={createSimpleLexer:E,registerLangHandler:n,sourceDecorator:v,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:\"com\",PR_DECLARATION:\"dec\",PR_KEYWORD:\"kwd\",PR_LITERAL:\"lit\",PR_NOCODE:\"nocode\",PR_PLAIN:\"pln\",PR_PUNCTUATION:\"pun\",PR_SOURCE:\"src\",PR_STRING:\"str\",PR_TAG:\"tag\",PR_TYPE:\"typ\",prettyPrintOne:function(a,d,f){f=f||!1;d=d||null;var c=document.createElement(\"div\");c.innerHTML=\"<pre>\"+a+\"</pre>\";c=c.firstChild;f&&B(c,f,!0);H({j:d,m:f,h:c,l:1,a:null,i:null,c:null,g:null});\nreturn c.innerHTML},prettyPrint:g=function(a,d){function f(){for(var c=Q.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;t<r.length&&b.now()<c;t++){for(var d=r[t],k=h,n=d;n=n.previousSibling;){var q=n.nodeType,l=(7===q||8===q)&&n.nodeValue;if(l?!/^\\??prettify\\b/.test(l):3!==q||/\\S/.test(n.nodeValue))break;if(l){k={};l.replace(/\\b(\\w+)=([\\w:.%+-]+)/g,function(a,b,c){k[b]=c});break}}n=d.className;if((k!==h||u.test(n))&&!e.test(n)){q=!1;for(l=d.parentNode;l;l=l.parentNode)if(w.test(l.tagName)&&l.className&&\nu.test(l.className)){q=!0;break}if(!q){d.className+=\" prettyprinted\";q=k.lang;if(!q){var q=n.match(v),A;!q&&(A=z(d))&&D.test(A.tagName)&&(q=A.className.match(v));q&&(q=q[1])}if(x.test(d.tagName))l=1;else var l=d.currentStyle,y=g.defaultView,l=(l=l?l.whiteSpace:y&&y.getComputedStyle?y.getComputedStyle(d,null).getPropertyValue(\"white-space\"):0)&&\"pre\"===l.substring(0,3);y=k.linenums;(y=\"true\"===y||+y)||(y=(y=n.match(/\\blinenums\\b(?::(\\d+))?/))?y[1]&&y[1].length?+y[1]:!0:!1);y&&B(d,y,l);H({j:q,h:d,m:y,\nl:l,a:null,i:null,c:null,g:null})}}}t<r.length?Q.setTimeout(f,250):\"function\"===typeof a&&a()}for(var c=d||document.body,g=c.ownerDocument||document,c=[c.getElementsByTagName(\"pre\"),c.getElementsByTagName(\"code\"),c.getElementsByTagName(\"xmp\")],r=[],k=0;k<c.length;++k)for(var n=0,l=c[k].length;n<l;++n)r.push(c[k][n]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var t=0,v=/\\blang(?:uage)?-([\\w.]+)(?!\\S)/,u=/\\bprettyprint\\b/,e=/\\bprettyprinted\\b/,x=/pre|xmp/i,D=/^code$/i,w=/^(?:pre|code|xmp)$/i,\nh={};f()}},R=Q.define;\"function\"===typeof R&&R.amd&&R(\"google-code-prettify\",[],function(){return U})})();return g}();S||k.setTimeout(T,0)})();}()\n","site":{"data":{}},"excerpt":"","more":"!function(){/*\n\n Copyright (C) 2013 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n(function(){function aa(g){function r(){try{L.doScroll(\"left\")}catch(ba){k.setTimeout(r,50);return}x(\"poll\")}function x(r){if(\"readystatechange\"!=r.type||\"complete\"==z.readyState)(\"load\"==r.type?k:z)[B](n+r.type,x,!1),!l&&(l=!0)&&g.call(k,r.type||r)}var X=z.addEventListener,l=!1,E=!0,v=X?\"addEventListener\":\"attachEvent\",B=X?\"removeEventListener\":\"detachEvent\",n=X?\"\":\"on\";if(\"complete\"==z.readyState)g.call(k,\"lazy\");else{if(z.createEventObject&&L.doScroll){try{E=!k.frameElement}catch(ba){}E&&r()}z[v](n+\n\"DOMContentLoaded\",x,!1);z[v](n+\"readystatechange\",x,!1);k[v](n+\"load\",x,!1)}}function T(){U&&aa(function(){var g=M.length;ca(g?function(){for(var r=0;r<g;++r)(function(g){k.setTimeout(function(){k.exports[M[g]].apply(k,arguments)},0)})(r)}:void 0)})}for(var k=window,z=document,L=z.documentElement,N=z.head||z.getElementsByTagName(\"head\")[0]||L,B=\"\",F=z.getElementsByTagName(\"script\"),l=F.length;0<=--l;){var O=F[l],Y=O.src.match(/^[^?#]*\\/run_prettify\\.js(\\?[^#]*)?(?:#.*)?$/);if(Y){B=Y[1]||\"\";O.parentNode.removeChild(O);\nbreak}}var U=!0,H=[],P=[],M=[];B.replace(/[?&]([^&=]+)=([^&]+)/g,function(g,r,x){x=decodeURIComponent(x);r=decodeURIComponent(r);\"autorun\"==r?U=!/^[0fn]/i.test(x):\"lang\"==r?H.push(x):\"skin\"==r?P.push(x):\"callback\"==r&&M.push(x)});l=0;for(B=H.length;l<B;++l)(function(){var g=z.createElement(\"script\");g.onload=g.onerror=g.onreadystatechange=function(){!g||g.readyState&&!/loaded|complete/.test(g.readyState)||(g.onerror=g.onload=g.onreadystatechange=null,--S,S||k.setTimeout(T,0),g.parentNode&&g.parentNode.removeChild(g),\ng=null)};g.type=\"text/javascript\";g.src=\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/lang-\"+encodeURIComponent(H[l])+\".js\";N.insertBefore(g,N.firstChild)})(H[l]);for(var S=H.length,F=[],l=0,B=P.length;l<B;++l)F.push(\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/skins/\"+encodeURIComponent(P[l])+\".css\");F.push(\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/prettify.css\");(function(g){function r(l){if(l!==x){var k=z.createElement(\"link\");k.rel=\"stylesheet\";\nk.type=\"text/css\";l+1<x&&(k.error=k.onerror=function(){r(l+1)});k.href=g[l];N.appendChild(k)}}var x=g.length;r(0)})(F);var ca=function(){\"undefined\"!==typeof window&&(window.PR_SHOULD_USE_CONTINUATION=!0);var g;(function(){function r(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=k[c])?a:\"0\"<=c&&\"7\">=c?parseInt(e.substring(1),8):\"u\"===c||\"x\"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function f(e){if(32>e)return(16>e?\"\\\\x0\":\"\\\\x\")+e.toString(16);e=String.fromCharCode(e);\nreturn\"\\\\\"===e||\"-\"===e||\"]\"===e||\"^\"===e?\"\\\\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));e=[];var a=\"^\"===c[0],b=[\"[\"];a&&b.push(\"^\");for(var a=a?1:0,h=c.length;a<h;++a){var m=c[a];if(/\\\\[bdsw]/i.test(m))b.push(m);else{var m=d(m),p;a+2<h&&\"-\"===c[a+1]?(p=d(c[a+2]),a+=2):p=m;e.push([m,p]);65>p||122<m||(65>p||90<m||e.push([Math.max(65,m)|32,Math.min(p,90)|32]),97>p||122<m||\ne.push([Math.max(97,m)&-33,Math.min(p,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];h=[];for(a=0;a<e.length;++a)m=e[a],m[0]<=h[1]+1?h[1]=Math.max(h[1],m[1]):c.push(h=m);for(a=0;a<c.length;++a)m=c[a],b.push(f(m[0])),m[1]>m[0]&&(m[1]+1>m[0]&&b.push(\"-\"),b.push(f(m[1])));b.push(\"]\");return b.join(\"\")}function g(e){for(var a=e.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\n\"g\")),b=a.length,d=[],h=0,m=0;h<b;++h){var p=a[h];\"(\"===p?++m:\"\\\\\"===p.charAt(0)&&(p=+p.substring(1))&&(p<=m?d[p]=-1:a[h]=f(p))}for(h=1;h<d.length;++h)-1===d[h]&&(d[h]=++r);for(m=h=0;h<b;++h)p=a[h],\"(\"===p?(++m,d[m]||(a[h]=\"(?:\")):\"\\\\\"===p.charAt(0)&&(p=+p.substring(1))&&p<=m&&(a[h]=\"\\\\\"+d[p]);for(h=0;h<b;++h)\"^\"===a[h]&&\"^\"!==a[h+1]&&(a[h]=\"\");if(e.ignoreCase&&A)for(h=0;h<b;++h)p=a[h],e=p.charAt(0),2<=p.length&&\"[\"===e?a[h]=c(p):\"\\\\\"!==e&&(a[h]=p.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);\nreturn\"[\"+String.fromCharCode(a&-33,a|32)+\"]\"}));return a.join(\"\")}for(var r=0,A=!1,q=!1,I=0,b=a.length;I<b;++I){var t=a[I];if(t.ignoreCase)q=!0;else if(/[a-z]/i.test(t.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\"\"))){A=!0;q=!1;break}}for(var k={b:8,t:9,n:10,v:11,f:12,r:13},u=[],I=0,b=a.length;I<b;++I){t=a[I];if(t.global||t.multiline)throw Error(\"\"+t);u.push(\"(?:\"+g(t)+\")\")}return new RegExp(u.join(\"|\"),q?\"gi\":\"g\")}function l(a,d){function f(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=\na.firstChild;b;b=b.nextSibling)f(b);b=a.nodeName.toLowerCase();if(\"br\"===b||\"li\"===b)g[q]=\"\\n\",A[q<<1]=r++,A[q++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\\r\\n?/g,\"\\n\"):b.replace(/[ \\t\\r\\n]+/g,\" \"),g[q]=b,A[q<<1]=r,r+=b.length,A[q++<<1|1]=a)}var c=/(?:^|\\s)nocode(?:\\s|$)/,g=[],r=0,A=[],q=0;f(a);return{a:g.join(\"\").replace(/\\n$/,\"\"),c:A}}function k(a,d,f,c,g){f&&(a={h:a,l:1,j:null,m:null,a:f,c:null,i:d,g:null},c(a),g.push.apply(g,a.g))}function z(a){for(var d=void 0,f=a.firstChild;f;f=\nf.nextSibling)var c=f.nodeType,d=1===c?d?a:f:3===c?S.test(f.nodeValue)?a:d:d;return d===a?void 0:d}function E(a,d){function f(a){for(var q=a.i,r=a.h,b=[q,\"pln\"],t=0,A=a.a.match(g)||[],u={},e=0,l=A.length;e<l;++e){var D=A[e],w=u[D],h=void 0,m;if(\"string\"===typeof w)m=!1;else{var p=c[D.charAt(0)];if(p)h=D.match(p[1]),w=p[0];else{for(m=0;m<n;++m)if(p=d[m],h=D.match(p[1])){w=p[0];break}h||(w=\"pln\")}!(m=5<=w.length&&\"lang-\"===w.substring(0,5))||h&&\"string\"===typeof h[1]||(m=!1,w=\"src\");m||(u[D]=w)}p=t;\nt+=D.length;if(m){m=h[1];var C=D.indexOf(m),G=C+m.length;h[2]&&(G=D.length-h[2].length,C=G-m.length);w=w.substring(5);k(r,q+p,D.substring(0,C),f,b);k(r,q+p+C,m,F(w,m),b);k(r,q+p+G,D.substring(G),f,b)}else b.push(q+p,w)}a.g=b}var c={},g;(function(){for(var f=a.concat(d),q=[],k={},b=0,t=f.length;b<t;++b){var n=f[b],u=n[3];if(u)for(var e=u.length;0<=--e;)c[u.charAt(e)]=n;n=n[1];u=\"\"+n;k.hasOwnProperty(u)||(q.push(n),k[u]=null)}q.push(/[\\0-\\uffff]/);g=r(q)})();var n=d.length;return f}function v(a){var d=\n[],f=[];a.tripleQuotedStrings?d.push([\"str\",/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,null,\"'\\\"\"]):a.multiLineStrings?d.push([\"str\",/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):d.push([\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);a.verbatimStrings&&\nf.push([\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push([\"com\",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,\"#\"]):d.push([\"com\",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"]),f.push([\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,null])):d.push([\"com\",/^#[^\\r\\n]*/,null,\"#\"]));a.cStyleComments&&(f.push([\"com\",/^\\/\\/[^\\r\\n]*/,null]),f.push([\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\nnull]));if(c=a.regexLiterals){var g=(c=1<c?\"\":\"\\n\\r\")?\".\":\"[\\\\S\\\\s]\";f.push([\"lang-regex\",RegExp(\"^(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*(\"+(\"/(?=[^/*\"+c+\"])(?:[^/\\\\x5B\\\\x5C\"+c+\"]|\\\\x5C\"+g+\"|\\\\x5B(?:[^\\\\x5C\\\\x5D\"+c+\"]|\\\\x5C\"+g+\")*(?:\\\\x5D|$))+/\")+\")\")])}(c=a.types)&&f.push([\"typ\",c]);c=(\"\"+a.keywords).replace(/^ | $/g,\"\");c.length&&f.push([\"kwd\",\nnew RegExp(\"^(?:\"+c.replace(/[\\s,]+/g,\"|\")+\")\\\\b\"),null]);d.push([\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);c=\"^.[^\\\\s\\\\w.$@'\\\"`/\\\\\\\\]*\";a.regexLiterals&&(c+=\"(?!s*/)\");f.push([\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null],[\"pln\",/^[a-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pln\",/^\\\\[\\s\\S]?/,null],[\"pun\",new RegExp(c),null]);return E(d,f)}function B(a,d,f){function c(a){var b=\na.nodeType;if(1==b&&!r.test(a.className))if(\"br\"===a.nodeName.toLowerCase())g(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&f){var e=a.nodeValue,d=e.match(n);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+d[0].length))&&a.parentNode.insertBefore(q.createTextNode(e),a.nextSibling),g(a),b||a.parentNode.removeChild(a))}}function g(a){function c(a,b){var e=b?a.cloneNode(!1):a,p=a.parentNode;if(p){var p=c(p,1),d=a.nextSibling;\np.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,p.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var r=/(?:^|\\s)nocode(?:\\s|$)/,n=/\\r\\n?|\\n/,q=a.ownerDocument,k=q.createElement(\"li\");a.firstChild;)k.appendChild(a.firstChild);for(var b=[k],t=0;t<b.length;++t)c(b[t]);d===(d|0)&&b[0].setAttribute(\"value\",d);var l=q.createElement(\"ol\");l.className=\"linenums\";d=Math.max(0,d-1|0)||0;for(var t=\n0,u=b.length;t<u;++t)k=b[t],k.className=\"L\"+(t+d)%10,k.firstChild||k.appendChild(q.createTextNode(\"\\u00a0\")),l.appendChild(k);a.appendChild(l)}function n(a,d){for(var f=d.length;0<=--f;){var c=d[f];V.hasOwnProperty(c)?Q.console&&console.warn(\"cannot override language handler %s\",c):V[c]=a}}function F(a,d){a&&V.hasOwnProperty(a)||(a=/^\\s*</.test(d)?\"default-markup\":\"default-code\");return V[a]}function H(a){var d=a.j;try{var f=l(a.h,a.l),c=f.a;a.a=c;a.c=f.c;a.i=0;F(d,c)(a);var g=/\\bMSIE\\s(\\d+)/.exec(navigator.userAgent),\ng=g&&8>=+g[1],d=/\\n/g,r=a.a,k=r.length,f=0,q=a.c,n=q.length,c=0,b=a.g,t=b.length,v=0;b[t]=k;var u,e;for(e=u=0;e<t;)b[e]!==b[e+2]?(b[u++]=b[e++],b[u++]=b[e++]):e+=2;t=u;for(e=u=0;e<t;){for(var x=b[e],z=b[e+1],w=e+2;w+2<=t&&b[w+1]===z;)w+=2;b[u++]=x;b[u++]=z;e=w}b.length=u;var h=a.h;a=\"\";h&&(a=h.style.display,h.style.display=\"none\");try{for(;c<n;){var m=q[c+2]||k,p=b[v+2]||k,w=Math.min(m,p),C=q[c+1],G;if(1!==C.nodeType&&(G=r.substring(f,w))){g&&(G=G.replace(d,\"\\r\"));C.nodeValue=G;var Z=C.ownerDocument,\nW=Z.createElement(\"span\");W.className=b[v+1];var B=C.parentNode;B.replaceChild(W,C);W.appendChild(C);f<m&&(q[c+1]=C=Z.createTextNode(r.substring(w,m)),B.insertBefore(C,W.nextSibling))}f=w;f>=m&&(c+=2);f>=p&&(v+=2)}}finally{h&&(h.style.display=a)}}catch(y){Q.console&&console.log(y&&y.stack||y)}}var Q=\"undefined\"!==typeof window?window:{},J=[\"break,continue,do,else,for,if,return,while\"],K=[[J,\"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"],\n\"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof\"],R=[K,\"alignas,alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where\"],L=[K,\"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient\"],\nM=[K,\"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,internal,into,is,join,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,value,var,virtual,where,yield\"],K=[K,\"abstract,async,await,constructor,debugger,enum,eval,export,from,function,get,import,implements,instanceof,interface,let,null,of,set,undefined,var,with,yield,Infinity,NaN\"],\nN=[J,\"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None\"],O=[J,\"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END\"],J=[J,\"case,done,elif,esac,eval,fi,function,in,local,set,then,until\"],P=/^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/,\nS=/\\S/,T=v({keywords:[R,M,L,K,\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",N,O,J],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),V={};n(T,[\"default-code\"]);n(E([],[[\"pln\",/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[\"com\",/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[\"pun\",/^(?:<[%?]|[%?]>)/],[\"lang-\",\n/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),\"default-markup htm html mxml xhtml xml xsl\".split(\" \"));n(E([[\"pln\",/^[\\s]+/,null,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],\n[\"pun\",/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);n(E([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);n(v({keywords:R,hashComments:!0,cStyleComments:!0,types:P}),\"c cc cpp cxx cyc m\".split(\" \"));n(v({keywords:\"null,true,false\"}),[\"json\"]);n(v({keywords:M,hashComments:!0,cStyleComments:!0,\nverbatimStrings:!0,types:P}),[\"cs\"]);n(v({keywords:L,cStyleComments:!0}),[\"java\"]);n(v({keywords:J,hashComments:!0,multiLineStrings:!0}),[\"bash\",\"bsh\",\"csh\",\"sh\"]);n(v({keywords:N,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),[\"cv\",\"py\",\"python\"]);n(v({keywords:\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",hashComments:!0,multiLineStrings:!0,regexLiterals:2}),\n[\"perl\",\"pl\",\"pm\"]);n(v({keywords:O,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),[\"rb\",\"ruby\"]);n(v({keywords:K,cStyleComments:!0,regexLiterals:!0}),[\"javascript\",\"js\",\"ts\",\"typescript\"]);n(v({keywords:\"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes\",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),[\"coffee\"]);n(E([],[[\"str\",/^[\\s\\S]+/]]),\n[\"regex\"]);var U=Q.PR={createSimpleLexer:E,registerLangHandler:n,sourceDecorator:v,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:\"com\",PR_DECLARATION:\"dec\",PR_KEYWORD:\"kwd\",PR_LITERAL:\"lit\",PR_NOCODE:\"nocode\",PR_PLAIN:\"pln\",PR_PUNCTUATION:\"pun\",PR_SOURCE:\"src\",PR_STRING:\"str\",PR_TAG:\"tag\",PR_TYPE:\"typ\",prettyPrintOne:function(a,d,f){f=f||!1;d=d||null;var c=document.createElement(\"div\");c.innerHTML=\"<pre>\"+a+\"</pre>\";c=c.firstChild;f&&B(c,f,!0);H({j:d,m:f,h:c,l:1,a:null,i:null,c:null,g:null});\nreturn c.innerHTML},prettyPrint:g=function(a,d){function f(){for(var c=Q.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;t<r.length&&b.now()<c;t++){for(var d=r[t],k=h,n=d;n=n.previousSibling;){var q=n.nodeType,l=(7===q||8===q)&&n.nodeValue;if(l?!/^\\??prettify\\b/.test(l):3!==q||/\\S/.test(n.nodeValue))break;if(l){k={};l.replace(/\\b(\\w+)=([\\w:.%+-]+)/g,function(a,b,c){k[b]=c});break}}n=d.className;if((k!==h||u.test(n))&&!e.test(n)){q=!1;for(l=d.parentNode;l;l=l.parentNode)if(w.test(l.tagName)&&l.className&&\nu.test(l.className)){q=!0;break}if(!q){d.className+=\" prettyprinted\";q=k.lang;if(!q){var q=n.match(v),A;!q&&(A=z(d))&&D.test(A.tagName)&&(q=A.className.match(v));q&&(q=q[1])}if(x.test(d.tagName))l=1;else var l=d.currentStyle,y=g.defaultView,l=(l=l?l.whiteSpace:y&&y.getComputedStyle?y.getComputedStyle(d,null).getPropertyValue(\"white-space\"):0)&&\"pre\"===l.substring(0,3);y=k.linenums;(y=\"true\"===y||+y)||(y=(y=n.match(/\\blinenums\\b(?::(\\d+))?/))?y[1]&&y[1].length?+y[1]:!0:!1);y&&B(d,y,l);H({j:q,h:d,m:y,\nl:l,a:null,i:null,c:null,g:null})}}}t<r.length?Q.setTimeout(f,250):\"function\"===typeof a&&a()}for(var c=d||document.body,g=c.ownerDocument||document,c=[c.getElementsByTagName(\"pre\"),c.getElementsByTagName(\"code\"),c.getElementsByTagName(\"xmp\")],r=[],k=0;k<c.length;++k)for(var n=0,l=c[k].length;n<l;++n)r.push(c[k][n]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var t=0,v=/\\blang(?:uage)?-([\\w.]+)(?!\\S)/,u=/\\bprettyprint\\b/,e=/\\bprettyprinted\\b/,x=/pre|xmp/i,D=/^code$/i,w=/^(?:pre|code|xmp)$/i,\nh={};f()}},R=Q.define;\"function\"===typeof R&&R.amd&&R(\"google-code-prettify\",[],function(){return U})})();return g}();S||k.setTimeout(T,0)})();}()\n"},{"_content":"!function(){/*\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\"undefined\"!==typeof window&&(window.PR_SHOULD_USE_CONTINUATION=!0);\n(function(){function T(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=w[c])?a:\"0\"<=c&&\"7\">=c?parseInt(e.substring(1),8):\"u\"===c||\"x\"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function f(e){if(32>e)return(16>e?\"\\\\x0\":\"\\\\x\")+e.toString(16);e=String.fromCharCode(e);return\"\\\\\"===e||\"-\"===e||\"]\"===e||\"^\"===e?\"\\\\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));\ne=[];var a=\"^\"===c[0],b=[\"[\"];a&&b.push(\"^\");for(var a=a?1:0,g=c.length;a<g;++a){var h=c[a];if(/\\\\[bdsw]/i.test(h))b.push(h);else{var h=d(h),k;a+2<g&&\"-\"===c[a+1]?(k=d(c[a+2]),a+=2):k=h;e.push([h,k]);65>k||122<h||(65>k||90<h||e.push([Math.max(65,h)|32,Math.min(k,90)|32]),97>k||122<h||e.push([Math.max(97,h)&-33,Math.min(k,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];g=[];for(a=0;a<e.length;++a)h=e[a],h[0]<=g[1]+1?g[1]=Math.max(g[1],h[1]):c.push(g=h);for(a=0;a<c.length;++a)h=\nc[a],b.push(f(h[0])),h[1]>h[0]&&(h[1]+1>h[0]&&b.push(\"-\"),b.push(f(h[1])));b.push(\"]\");return b.join(\"\")}function m(e){for(var a=e.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\"g\")),b=a.length,d=[],g=0,h=0;g<b;++g){var k=a[g];\"(\"===k?++h:\"\\\\\"===k.charAt(0)&&(k=+k.substring(1))&&(k<=h?d[k]=-1:a[g]=f(k))}for(g=1;g<d.length;++g)-1===d[g]&&(d[g]=++E);for(h=g=0;g<b;++g)k=a[g],\n\"(\"===k?(++h,d[h]||(a[g]=\"(?:\")):\"\\\\\"===k.charAt(0)&&(k=+k.substring(1))&&k<=h&&(a[g]=\"\\\\\"+d[k]);for(g=0;g<b;++g)\"^\"===a[g]&&\"^\"!==a[g+1]&&(a[g]=\"\");if(e.ignoreCase&&q)for(g=0;g<b;++g)k=a[g],e=k.charAt(0),2<=k.length&&\"[\"===e?a[g]=c(k):\"\\\\\"!==e&&(a[g]=k.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);return\"[\"+String.fromCharCode(a&-33,a|32)+\"]\"}));return a.join(\"\")}for(var E=0,q=!1,l=!1,n=0,b=a.length;n<b;++n){var p=a[n];if(p.ignoreCase)l=!0;else if(/[a-z]/i.test(p.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\n\"\"))){q=!0;l=!1;break}}for(var w={b:8,t:9,n:10,v:11,f:12,r:13},r=[],n=0,b=a.length;n<b;++n){p=a[n];if(p.global||p.multiline)throw Error(\"\"+p);r.push(\"(?:\"+m(p)+\")\")}return new RegExp(r.join(\"|\"),l?\"gi\":\"g\")}function U(a,d){function f(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=a.firstChild;b;b=b.nextSibling)f(b);b=a.nodeName.toLowerCase();if(\"br\"===b||\"li\"===b)m[l]=\"\\n\",q[l<<1]=E++,q[l++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\\r\\n?/g,\"\\n\"):b.replace(/[ \\t\\r\\n]+/g,\n\" \"),m[l]=b,q[l<<1]=E,E+=b.length,q[l++<<1|1]=a)}var c=/(?:^|\\s)nocode(?:\\s|$)/,m=[],E=0,q=[],l=0;f(a);return{a:m.join(\"\").replace(/\\n$/,\"\"),c:q}}function J(a,d,f,c,m){f&&(a={h:a,l:1,j:null,m:null,a:f,c:null,i:d,g:null},c(a),m.push.apply(m,a.g))}function V(a){for(var d=void 0,f=a.firstChild;f;f=f.nextSibling)var c=f.nodeType,d=1===c?d?a:f:3===c?W.test(f.nodeValue)?a:d:d;return d===a?void 0:d}function G(a,d){function f(a){for(var l=a.i,n=a.h,b=[l,\"pln\"],p=0,q=a.a.match(m)||[],r={},e=0,t=q.length;e<\nt;++e){var z=q[e],v=r[z],g=void 0,h;if(\"string\"===typeof v)h=!1;else{var k=c[z.charAt(0)];if(k)g=z.match(k[1]),v=k[0];else{for(h=0;h<E;++h)if(k=d[h],g=z.match(k[1])){v=k[0];break}g||(v=\"pln\")}!(h=5<=v.length&&\"lang-\"===v.substring(0,5))||g&&\"string\"===typeof g[1]||(h=!1,v=\"src\");h||(r[z]=v)}k=p;p+=z.length;if(h){h=g[1];var A=z.indexOf(h),C=A+h.length;g[2]&&(C=z.length-g[2].length,A=C-h.length);v=v.substring(5);J(n,l+k,z.substring(0,A),f,b);J(n,l+k+A,h,K(v,h),b);J(n,l+k+C,z.substring(C),f,b)}else b.push(l+\nk,v)}a.g=b}var c={},m;(function(){for(var f=a.concat(d),l=[],n={},b=0,p=f.length;b<p;++b){var w=f[b],r=w[3];if(r)for(var e=r.length;0<=--e;)c[r.charAt(e)]=w;w=w[1];r=\"\"+w;n.hasOwnProperty(r)||(l.push(w),n[r]=null)}l.push(/[\\0-\\uffff]/);m=T(l)})();var E=d.length;return f}function x(a){var d=[],f=[];a.tripleQuotedStrings?d.push([\"str\",/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,\nnull,\"'\\\"\"]):a.multiLineStrings?d.push([\"str\",/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):d.push([\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);a.verbatimStrings&&f.push([\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push([\"com\",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,\"#\"]):d.push([\"com\",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,\nnull,\"#\"]),f.push([\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,null])):d.push([\"com\",/^#[^\\r\\n]*/,null,\"#\"]));a.cStyleComments&&(f.push([\"com\",/^\\/\\/[^\\r\\n]*/,null]),f.push([\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null]));if(c=a.regexLiterals){var m=(c=1<c?\"\":\"\\n\\r\")?\".\":\"[\\\\S\\\\s]\";f.push([\"lang-regex\",RegExp(\"^(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*(\"+\n(\"/(?=[^/*\"+c+\"])(?:[^/\\\\x5B\\\\x5C\"+c+\"]|\\\\x5C\"+m+\"|\\\\x5B(?:[^\\\\x5C\\\\x5D\"+c+\"]|\\\\x5C\"+m+\")*(?:\\\\x5D|$))+/\")+\")\")])}(c=a.types)&&f.push([\"typ\",c]);c=(\"\"+a.keywords).replace(/^ | $/g,\"\");c.length&&f.push([\"kwd\",new RegExp(\"^(?:\"+c.replace(/[\\s,]+/g,\"|\")+\")\\\\b\"),null]);d.push([\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);c=\"^.[^\\\\s\\\\w.$@'\\\"`/\\\\\\\\]*\";a.regexLiterals&&(c+=\"(?!s*/)\");f.push([\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null],[\"pln\",/^[a-z_$][a-z_$@0-9]*/i,\nnull],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pln\",/^\\\\[\\s\\S]?/,null],[\"pun\",new RegExp(c),null]);return G(d,f)}function L(a,d,f){function c(a){var b=a.nodeType;if(1==b&&!t.test(a.className))if(\"br\"===a.nodeName.toLowerCase())m(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&f){var e=a.nodeValue,d=e.match(q);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+\nd[0].length))&&a.parentNode.insertBefore(l.createTextNode(e),a.nextSibling),m(a),b||a.parentNode.removeChild(a))}}function m(a){function c(a,b){var e=b?a.cloneNode(!1):a,k=a.parentNode;if(k){var k=c(k,1),d=a.nextSibling;k.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,k.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var t=/(?:^|\\s)nocode(?:\\s|$)/,q=/\\r\\n?|\\n/,l=a.ownerDocument,n=l.createElement(\"li\");a.firstChild;)n.appendChild(a.firstChild);\nfor(var b=[n],p=0;p<b.length;++p)c(b[p]);d===(d|0)&&b[0].setAttribute(\"value\",d);var w=l.createElement(\"ol\");w.className=\"linenums\";d=Math.max(0,d-1|0)||0;for(var p=0,r=b.length;p<r;++p)n=b[p],n.className=\"L\"+(p+d)%10,n.firstChild||n.appendChild(l.createTextNode(\"\\u00a0\")),w.appendChild(n);a.appendChild(w)}function t(a,d){for(var f=d.length;0<=--f;){var c=d[f];I.hasOwnProperty(c)?D.console&&console.warn(\"cannot override language handler %s\",c):I[c]=a}}function K(a,d){a&&I.hasOwnProperty(a)||(a=/^\\s*</.test(d)?\n\"default-markup\":\"default-code\");return I[a]}function M(a){var d=a.j;try{var f=U(a.h,a.l),c=f.a;a.a=c;a.c=f.c;a.i=0;K(d,c)(a);var m=/\\bMSIE\\s(\\d+)/.exec(navigator.userAgent),m=m&&8>=+m[1],d=/\\n/g,t=a.a,q=t.length,f=0,l=a.c,n=l.length,c=0,b=a.g,p=b.length,w=0;b[p]=q;var r,e;for(e=r=0;e<p;)b[e]!==b[e+2]?(b[r++]=b[e++],b[r++]=b[e++]):e+=2;p=r;for(e=r=0;e<p;){for(var x=b[e],z=b[e+1],v=e+2;v+2<=p&&b[v+1]===z;)v+=2;b[r++]=x;b[r++]=z;e=v}b.length=r;var g=a.h;a=\"\";g&&(a=g.style.display,g.style.display=\"none\");\ntry{for(;c<n;){var h=l[c+2]||q,k=b[w+2]||q,v=Math.min(h,k),A=l[c+1],C;if(1!==A.nodeType&&(C=t.substring(f,v))){m&&(C=C.replace(d,\"\\r\"));A.nodeValue=C;var N=A.ownerDocument,u=N.createElement(\"span\");u.className=b[w+1];var B=A.parentNode;B.replaceChild(u,A);u.appendChild(A);f<h&&(l[c+1]=A=N.createTextNode(t.substring(v,h)),B.insertBefore(A,u.nextSibling))}f=v;f>=h&&(c+=2);f>=k&&(w+=2)}}finally{g&&(g.style.display=a)}}catch(y){D.console&&console.log(y&&y.stack||y)}}var D=\"undefined\"!==typeof window?\nwindow:{},B=[\"break,continue,do,else,for,if,return,while\"],F=[[B,\"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"],\"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof\"],H=[F,\"alignas,alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where\"],\nO=[F,\"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient\"],P=[F,\"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,internal,into,is,join,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,value,var,virtual,where,yield\"],\nF=[F,\"abstract,async,await,constructor,debugger,enum,eval,export,from,function,get,import,implements,instanceof,interface,let,null,of,set,undefined,var,with,yield,Infinity,NaN\"],Q=[B,\"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None\"],R=[B,\"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END\"],\nB=[B,\"case,done,elif,esac,eval,fi,function,in,local,set,then,until\"],S=/^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/,W=/\\S/,X=x({keywords:[H,P,O,F,\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",Q,R,B],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),\nI={};t(X,[\"default-code\"]);t(G([],[[\"pln\",/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[\"com\",/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[\"pun\",/^(?:<[%?]|[%?]>)/],[\"lang-\",/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),\"default-markup htm html mxml xhtml xml xsl\".split(\" \"));t(G([[\"pln\",/^[\\s]+/,\nnull,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],[\"pun\",/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);\nt(G([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);t(x({keywords:H,hashComments:!0,cStyleComments:!0,types:S}),\"c cc cpp cxx cyc m\".split(\" \"));t(x({keywords:\"null,true,false\"}),[\"json\"]);t(x({keywords:P,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:S}),[\"cs\"]);t(x({keywords:O,cStyleComments:!0}),[\"java\"]);t(x({keywords:B,hashComments:!0,multiLineStrings:!0}),[\"bash\",\"bsh\",\"csh\",\"sh\"]);t(x({keywords:Q,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),[\"cv\",\"py\",\"python\"]);t(x({keywords:\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",\nhashComments:!0,multiLineStrings:!0,regexLiterals:2}),[\"perl\",\"pl\",\"pm\"]);t(x({keywords:R,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),[\"rb\",\"ruby\"]);t(x({keywords:F,cStyleComments:!0,regexLiterals:!0}),[\"javascript\",\"js\",\"ts\",\"typescript\"]);t(x({keywords:\"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes\",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,\nregexLiterals:!0}),[\"coffee\"]);t(G([],[[\"str\",/^[\\s\\S]+/]]),[\"regex\"]);var Y=D.PR={createSimpleLexer:G,registerLangHandler:t,sourceDecorator:x,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:\"com\",PR_DECLARATION:\"dec\",PR_KEYWORD:\"kwd\",PR_LITERAL:\"lit\",PR_NOCODE:\"nocode\",PR_PLAIN:\"pln\",PR_PUNCTUATION:\"pun\",PR_SOURCE:\"src\",PR_STRING:\"str\",PR_TAG:\"tag\",PR_TYPE:\"typ\",prettyPrintOne:D.prettyPrintOne=function(a,d,f){f=f||!1;d=d||null;var c=document.createElement(\"div\");c.innerHTML=\"<pre>\"+a+\"</pre>\";\nc=c.firstChild;f&&L(c,f,!0);M({j:d,m:f,h:c,l:1,a:null,i:null,c:null,g:null});return c.innerHTML},prettyPrint:D.prettyPrint=function(a,d){function f(){for(var c=D.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;p<x.length&&b.now()<c;p++){for(var d=x[p],l=g,n=d;n=n.previousSibling;){var m=n.nodeType,u=(7===m||8===m)&&n.nodeValue;if(u?!/^\\??prettify\\b/.test(u):3!==m||/\\S/.test(n.nodeValue))break;if(u){l={};u.replace(/\\b(\\w+)=([\\w:.%+-]+)/g,function(a,b,c){l[b]=c});break}}n=d.className;if((l!==g||r.test(n))&&\n!e.test(n)){m=!1;for(u=d.parentNode;u;u=u.parentNode)if(v.test(u.tagName)&&u.className&&r.test(u.className)){m=!0;break}if(!m){d.className+=\" prettyprinted\";m=l.lang;if(!m){var m=n.match(w),q;!m&&(q=V(d))&&z.test(q.tagName)&&(m=q.className.match(w));m&&(m=m[1])}if(B.test(d.tagName))u=1;else var u=d.currentStyle,y=t.defaultView,u=(u=u?u.whiteSpace:y&&y.getComputedStyle?y.getComputedStyle(d,null).getPropertyValue(\"white-space\"):0)&&\"pre\"===u.substring(0,3);y=l.linenums;(y=\"true\"===y||+y)||(y=(y=n.match(/\\blinenums\\b(?::(\\d+))?/))?\ny[1]&&y[1].length?+y[1]:!0:!1);y&&L(d,y,u);M({j:m,h:d,m:y,l:u,a:null,i:null,c:null,g:null})}}}p<x.length?D.setTimeout(f,250):\"function\"===typeof a&&a()}for(var c=d||document.body,t=c.ownerDocument||document,c=[c.getElementsByTagName(\"pre\"),c.getElementsByTagName(\"code\"),c.getElementsByTagName(\"xmp\")],x=[],q=0;q<c.length;++q)for(var l=0,n=c[q].length;l<n;++l)x.push(c[q][l]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var p=0,w=/\\blang(?:uage)?-([\\w.]+)(?!\\S)/,r=/\\bprettyprint\\b/,\ne=/\\bprettyprinted\\b/,B=/pre|xmp/i,z=/^code$/i,v=/^(?:pre|code|xmp)$/i,g={};f()}},H=D.define;\"function\"===typeof H&&H.amd&&H(\"google-code-prettify\",[],function(){return Y})})();}()\n","source":"plugins/google-code-prettify/prettify.js","raw":"!function(){/*\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\"undefined\"!==typeof window&&(window.PR_SHOULD_USE_CONTINUATION=!0);\n(function(){function T(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=w[c])?a:\"0\"<=c&&\"7\">=c?parseInt(e.substring(1),8):\"u\"===c||\"x\"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function f(e){if(32>e)return(16>e?\"\\\\x0\":\"\\\\x\")+e.toString(16);e=String.fromCharCode(e);return\"\\\\\"===e||\"-\"===e||\"]\"===e||\"^\"===e?\"\\\\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));\ne=[];var a=\"^\"===c[0],b=[\"[\"];a&&b.push(\"^\");for(var a=a?1:0,g=c.length;a<g;++a){var h=c[a];if(/\\\\[bdsw]/i.test(h))b.push(h);else{var h=d(h),k;a+2<g&&\"-\"===c[a+1]?(k=d(c[a+2]),a+=2):k=h;e.push([h,k]);65>k||122<h||(65>k||90<h||e.push([Math.max(65,h)|32,Math.min(k,90)|32]),97>k||122<h||e.push([Math.max(97,h)&-33,Math.min(k,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];g=[];for(a=0;a<e.length;++a)h=e[a],h[0]<=g[1]+1?g[1]=Math.max(g[1],h[1]):c.push(g=h);for(a=0;a<c.length;++a)h=\nc[a],b.push(f(h[0])),h[1]>h[0]&&(h[1]+1>h[0]&&b.push(\"-\"),b.push(f(h[1])));b.push(\"]\");return b.join(\"\")}function m(e){for(var a=e.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\"g\")),b=a.length,d=[],g=0,h=0;g<b;++g){var k=a[g];\"(\"===k?++h:\"\\\\\"===k.charAt(0)&&(k=+k.substring(1))&&(k<=h?d[k]=-1:a[g]=f(k))}for(g=1;g<d.length;++g)-1===d[g]&&(d[g]=++E);for(h=g=0;g<b;++g)k=a[g],\n\"(\"===k?(++h,d[h]||(a[g]=\"(?:\")):\"\\\\\"===k.charAt(0)&&(k=+k.substring(1))&&k<=h&&(a[g]=\"\\\\\"+d[k]);for(g=0;g<b;++g)\"^\"===a[g]&&\"^\"!==a[g+1]&&(a[g]=\"\");if(e.ignoreCase&&q)for(g=0;g<b;++g)k=a[g],e=k.charAt(0),2<=k.length&&\"[\"===e?a[g]=c(k):\"\\\\\"!==e&&(a[g]=k.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);return\"[\"+String.fromCharCode(a&-33,a|32)+\"]\"}));return a.join(\"\")}for(var E=0,q=!1,l=!1,n=0,b=a.length;n<b;++n){var p=a[n];if(p.ignoreCase)l=!0;else if(/[a-z]/i.test(p.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\n\"\"))){q=!0;l=!1;break}}for(var w={b:8,t:9,n:10,v:11,f:12,r:13},r=[],n=0,b=a.length;n<b;++n){p=a[n];if(p.global||p.multiline)throw Error(\"\"+p);r.push(\"(?:\"+m(p)+\")\")}return new RegExp(r.join(\"|\"),l?\"gi\":\"g\")}function U(a,d){function f(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=a.firstChild;b;b=b.nextSibling)f(b);b=a.nodeName.toLowerCase();if(\"br\"===b||\"li\"===b)m[l]=\"\\n\",q[l<<1]=E++,q[l++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\\r\\n?/g,\"\\n\"):b.replace(/[ \\t\\r\\n]+/g,\n\" \"),m[l]=b,q[l<<1]=E,E+=b.length,q[l++<<1|1]=a)}var c=/(?:^|\\s)nocode(?:\\s|$)/,m=[],E=0,q=[],l=0;f(a);return{a:m.join(\"\").replace(/\\n$/,\"\"),c:q}}function J(a,d,f,c,m){f&&(a={h:a,l:1,j:null,m:null,a:f,c:null,i:d,g:null},c(a),m.push.apply(m,a.g))}function V(a){for(var d=void 0,f=a.firstChild;f;f=f.nextSibling)var c=f.nodeType,d=1===c?d?a:f:3===c?W.test(f.nodeValue)?a:d:d;return d===a?void 0:d}function G(a,d){function f(a){for(var l=a.i,n=a.h,b=[l,\"pln\"],p=0,q=a.a.match(m)||[],r={},e=0,t=q.length;e<\nt;++e){var z=q[e],v=r[z],g=void 0,h;if(\"string\"===typeof v)h=!1;else{var k=c[z.charAt(0)];if(k)g=z.match(k[1]),v=k[0];else{for(h=0;h<E;++h)if(k=d[h],g=z.match(k[1])){v=k[0];break}g||(v=\"pln\")}!(h=5<=v.length&&\"lang-\"===v.substring(0,5))||g&&\"string\"===typeof g[1]||(h=!1,v=\"src\");h||(r[z]=v)}k=p;p+=z.length;if(h){h=g[1];var A=z.indexOf(h),C=A+h.length;g[2]&&(C=z.length-g[2].length,A=C-h.length);v=v.substring(5);J(n,l+k,z.substring(0,A),f,b);J(n,l+k+A,h,K(v,h),b);J(n,l+k+C,z.substring(C),f,b)}else b.push(l+\nk,v)}a.g=b}var c={},m;(function(){for(var f=a.concat(d),l=[],n={},b=0,p=f.length;b<p;++b){var w=f[b],r=w[3];if(r)for(var e=r.length;0<=--e;)c[r.charAt(e)]=w;w=w[1];r=\"\"+w;n.hasOwnProperty(r)||(l.push(w),n[r]=null)}l.push(/[\\0-\\uffff]/);m=T(l)})();var E=d.length;return f}function x(a){var d=[],f=[];a.tripleQuotedStrings?d.push([\"str\",/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,\nnull,\"'\\\"\"]):a.multiLineStrings?d.push([\"str\",/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):d.push([\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);a.verbatimStrings&&f.push([\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push([\"com\",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,\"#\"]):d.push([\"com\",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,\nnull,\"#\"]),f.push([\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,null])):d.push([\"com\",/^#[^\\r\\n]*/,null,\"#\"]));a.cStyleComments&&(f.push([\"com\",/^\\/\\/[^\\r\\n]*/,null]),f.push([\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null]));if(c=a.regexLiterals){var m=(c=1<c?\"\":\"\\n\\r\")?\".\":\"[\\\\S\\\\s]\";f.push([\"lang-regex\",RegExp(\"^(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*(\"+\n(\"/(?=[^/*\"+c+\"])(?:[^/\\\\x5B\\\\x5C\"+c+\"]|\\\\x5C\"+m+\"|\\\\x5B(?:[^\\\\x5C\\\\x5D\"+c+\"]|\\\\x5C\"+m+\")*(?:\\\\x5D|$))+/\")+\")\")])}(c=a.types)&&f.push([\"typ\",c]);c=(\"\"+a.keywords).replace(/^ | $/g,\"\");c.length&&f.push([\"kwd\",new RegExp(\"^(?:\"+c.replace(/[\\s,]+/g,\"|\")+\")\\\\b\"),null]);d.push([\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);c=\"^.[^\\\\s\\\\w.$@'\\\"`/\\\\\\\\]*\";a.regexLiterals&&(c+=\"(?!s*/)\");f.push([\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null],[\"pln\",/^[a-z_$][a-z_$@0-9]*/i,\nnull],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pln\",/^\\\\[\\s\\S]?/,null],[\"pun\",new RegExp(c),null]);return G(d,f)}function L(a,d,f){function c(a){var b=a.nodeType;if(1==b&&!t.test(a.className))if(\"br\"===a.nodeName.toLowerCase())m(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&f){var e=a.nodeValue,d=e.match(q);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+\nd[0].length))&&a.parentNode.insertBefore(l.createTextNode(e),a.nextSibling),m(a),b||a.parentNode.removeChild(a))}}function m(a){function c(a,b){var e=b?a.cloneNode(!1):a,k=a.parentNode;if(k){var k=c(k,1),d=a.nextSibling;k.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,k.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var t=/(?:^|\\s)nocode(?:\\s|$)/,q=/\\r\\n?|\\n/,l=a.ownerDocument,n=l.createElement(\"li\");a.firstChild;)n.appendChild(a.firstChild);\nfor(var b=[n],p=0;p<b.length;++p)c(b[p]);d===(d|0)&&b[0].setAttribute(\"value\",d);var w=l.createElement(\"ol\");w.className=\"linenums\";d=Math.max(0,d-1|0)||0;for(var p=0,r=b.length;p<r;++p)n=b[p],n.className=\"L\"+(p+d)%10,n.firstChild||n.appendChild(l.createTextNode(\"\\u00a0\")),w.appendChild(n);a.appendChild(w)}function t(a,d){for(var f=d.length;0<=--f;){var c=d[f];I.hasOwnProperty(c)?D.console&&console.warn(\"cannot override language handler %s\",c):I[c]=a}}function K(a,d){a&&I.hasOwnProperty(a)||(a=/^\\s*</.test(d)?\n\"default-markup\":\"default-code\");return I[a]}function M(a){var d=a.j;try{var f=U(a.h,a.l),c=f.a;a.a=c;a.c=f.c;a.i=0;K(d,c)(a);var m=/\\bMSIE\\s(\\d+)/.exec(navigator.userAgent),m=m&&8>=+m[1],d=/\\n/g,t=a.a,q=t.length,f=0,l=a.c,n=l.length,c=0,b=a.g,p=b.length,w=0;b[p]=q;var r,e;for(e=r=0;e<p;)b[e]!==b[e+2]?(b[r++]=b[e++],b[r++]=b[e++]):e+=2;p=r;for(e=r=0;e<p;){for(var x=b[e],z=b[e+1],v=e+2;v+2<=p&&b[v+1]===z;)v+=2;b[r++]=x;b[r++]=z;e=v}b.length=r;var g=a.h;a=\"\";g&&(a=g.style.display,g.style.display=\"none\");\ntry{for(;c<n;){var h=l[c+2]||q,k=b[w+2]||q,v=Math.min(h,k),A=l[c+1],C;if(1!==A.nodeType&&(C=t.substring(f,v))){m&&(C=C.replace(d,\"\\r\"));A.nodeValue=C;var N=A.ownerDocument,u=N.createElement(\"span\");u.className=b[w+1];var B=A.parentNode;B.replaceChild(u,A);u.appendChild(A);f<h&&(l[c+1]=A=N.createTextNode(t.substring(v,h)),B.insertBefore(A,u.nextSibling))}f=v;f>=h&&(c+=2);f>=k&&(w+=2)}}finally{g&&(g.style.display=a)}}catch(y){D.console&&console.log(y&&y.stack||y)}}var D=\"undefined\"!==typeof window?\nwindow:{},B=[\"break,continue,do,else,for,if,return,while\"],F=[[B,\"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"],\"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof\"],H=[F,\"alignas,alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where\"],\nO=[F,\"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient\"],P=[F,\"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,internal,into,is,join,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,value,var,virtual,where,yield\"],\nF=[F,\"abstract,async,await,constructor,debugger,enum,eval,export,from,function,get,import,implements,instanceof,interface,let,null,of,set,undefined,var,with,yield,Infinity,NaN\"],Q=[B,\"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None\"],R=[B,\"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END\"],\nB=[B,\"case,done,elif,esac,eval,fi,function,in,local,set,then,until\"],S=/^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/,W=/\\S/,X=x({keywords:[H,P,O,F,\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",Q,R,B],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),\nI={};t(X,[\"default-code\"]);t(G([],[[\"pln\",/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[\"com\",/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[\"pun\",/^(?:<[%?]|[%?]>)/],[\"lang-\",/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),\"default-markup htm html mxml xhtml xml xsl\".split(\" \"));t(G([[\"pln\",/^[\\s]+/,\nnull,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],[\"pun\",/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);\nt(G([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);t(x({keywords:H,hashComments:!0,cStyleComments:!0,types:S}),\"c cc cpp cxx cyc m\".split(\" \"));t(x({keywords:\"null,true,false\"}),[\"json\"]);t(x({keywords:P,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:S}),[\"cs\"]);t(x({keywords:O,cStyleComments:!0}),[\"java\"]);t(x({keywords:B,hashComments:!0,multiLineStrings:!0}),[\"bash\",\"bsh\",\"csh\",\"sh\"]);t(x({keywords:Q,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),[\"cv\",\"py\",\"python\"]);t(x({keywords:\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",\nhashComments:!0,multiLineStrings:!0,regexLiterals:2}),[\"perl\",\"pl\",\"pm\"]);t(x({keywords:R,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),[\"rb\",\"ruby\"]);t(x({keywords:F,cStyleComments:!0,regexLiterals:!0}),[\"javascript\",\"js\",\"ts\",\"typescript\"]);t(x({keywords:\"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes\",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,\nregexLiterals:!0}),[\"coffee\"]);t(G([],[[\"str\",/^[\\s\\S]+/]]),[\"regex\"]);var Y=D.PR={createSimpleLexer:G,registerLangHandler:t,sourceDecorator:x,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:\"com\",PR_DECLARATION:\"dec\",PR_KEYWORD:\"kwd\",PR_LITERAL:\"lit\",PR_NOCODE:\"nocode\",PR_PLAIN:\"pln\",PR_PUNCTUATION:\"pun\",PR_SOURCE:\"src\",PR_STRING:\"str\",PR_TAG:\"tag\",PR_TYPE:\"typ\",prettyPrintOne:D.prettyPrintOne=function(a,d,f){f=f||!1;d=d||null;var c=document.createElement(\"div\");c.innerHTML=\"<pre>\"+a+\"</pre>\";\nc=c.firstChild;f&&L(c,f,!0);M({j:d,m:f,h:c,l:1,a:null,i:null,c:null,g:null});return c.innerHTML},prettyPrint:D.prettyPrint=function(a,d){function f(){for(var c=D.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;p<x.length&&b.now()<c;p++){for(var d=x[p],l=g,n=d;n=n.previousSibling;){var m=n.nodeType,u=(7===m||8===m)&&n.nodeValue;if(u?!/^\\??prettify\\b/.test(u):3!==m||/\\S/.test(n.nodeValue))break;if(u){l={};u.replace(/\\b(\\w+)=([\\w:.%+-]+)/g,function(a,b,c){l[b]=c});break}}n=d.className;if((l!==g||r.test(n))&&\n!e.test(n)){m=!1;for(u=d.parentNode;u;u=u.parentNode)if(v.test(u.tagName)&&u.className&&r.test(u.className)){m=!0;break}if(!m){d.className+=\" prettyprinted\";m=l.lang;if(!m){var m=n.match(w),q;!m&&(q=V(d))&&z.test(q.tagName)&&(m=q.className.match(w));m&&(m=m[1])}if(B.test(d.tagName))u=1;else var u=d.currentStyle,y=t.defaultView,u=(u=u?u.whiteSpace:y&&y.getComputedStyle?y.getComputedStyle(d,null).getPropertyValue(\"white-space\"):0)&&\"pre\"===u.substring(0,3);y=l.linenums;(y=\"true\"===y||+y)||(y=(y=n.match(/\\blinenums\\b(?::(\\d+))?/))?\ny[1]&&y[1].length?+y[1]:!0:!1);y&&L(d,y,u);M({j:m,h:d,m:y,l:u,a:null,i:null,c:null,g:null})}}}p<x.length?D.setTimeout(f,250):\"function\"===typeof a&&a()}for(var c=d||document.body,t=c.ownerDocument||document,c=[c.getElementsByTagName(\"pre\"),c.getElementsByTagName(\"code\"),c.getElementsByTagName(\"xmp\")],x=[],q=0;q<c.length;++q)for(var l=0,n=c[q].length;l<n;++l)x.push(c[q][l]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var p=0,w=/\\blang(?:uage)?-([\\w.]+)(?!\\S)/,r=/\\bprettyprint\\b/,\ne=/\\bprettyprinted\\b/,B=/pre|xmp/i,z=/^code$/i,v=/^(?:pre|code|xmp)$/i,g={};f()}},H=D.define;\"function\"===typeof H&&H.amd&&H(\"google-code-prettify\",[],function(){return Y})})();}()\n","date":"2022-03-27T08:23:16.380Z","updated":"2018-12-17T07:43:56.000Z","path":"plugins/google-code-prettify/prettify.js","layout":"false","title":"","comments":1,"_id":"cl22h70v0005u5osshgwdfisc","content":"!function(){/*\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\"undefined\"!==typeof window&&(window.PR_SHOULD_USE_CONTINUATION=!0);\n(function(){function T(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=w[c])?a:\"0\"<=c&&\"7\">=c?parseInt(e.substring(1),8):\"u\"===c||\"x\"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function f(e){if(32>e)return(16>e?\"\\\\x0\":\"\\\\x\")+e.toString(16);e=String.fromCharCode(e);return\"\\\\\"===e||\"-\"===e||\"]\"===e||\"^\"===e?\"\\\\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));\ne=[];var a=\"^\"===c[0],b=[\"[\"];a&&b.push(\"^\");for(var a=a?1:0,g=c.length;a<g;++a){var h=c[a];if(/\\\\[bdsw]/i.test(h))b.push(h);else{var h=d(h),k;a+2<g&&\"-\"===c[a+1]?(k=d(c[a+2]),a+=2):k=h;e.push([h,k]);65>k||122<h||(65>k||90<h||e.push([Math.max(65,h)|32,Math.min(k,90)|32]),97>k||122<h||e.push([Math.max(97,h)&-33,Math.min(k,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];g=[];for(a=0;a<e.length;++a)h=e[a],h[0]<=g[1]+1?g[1]=Math.max(g[1],h[1]):c.push(g=h);for(a=0;a<c.length;++a)h=\nc[a],b.push(f(h[0])),h[1]>h[0]&&(h[1]+1>h[0]&&b.push(\"-\"),b.push(f(h[1])));b.push(\"]\");return b.join(\"\")}function m(e){for(var a=e.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\"g\")),b=a.length,d=[],g=0,h=0;g<b;++g){var k=a[g];\"(\"===k?++h:\"\\\\\"===k.charAt(0)&&(k=+k.substring(1))&&(k<=h?d[k]=-1:a[g]=f(k))}for(g=1;g<d.length;++g)-1===d[g]&&(d[g]=++E);for(h=g=0;g<b;++g)k=a[g],\n\"(\"===k?(++h,d[h]||(a[g]=\"(?:\")):\"\\\\\"===k.charAt(0)&&(k=+k.substring(1))&&k<=h&&(a[g]=\"\\\\\"+d[k]);for(g=0;g<b;++g)\"^\"===a[g]&&\"^\"!==a[g+1]&&(a[g]=\"\");if(e.ignoreCase&&q)for(g=0;g<b;++g)k=a[g],e=k.charAt(0),2<=k.length&&\"[\"===e?a[g]=c(k):\"\\\\\"!==e&&(a[g]=k.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);return\"[\"+String.fromCharCode(a&-33,a|32)+\"]\"}));return a.join(\"\")}for(var E=0,q=!1,l=!1,n=0,b=a.length;n<b;++n){var p=a[n];if(p.ignoreCase)l=!0;else if(/[a-z]/i.test(p.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\n\"\"))){q=!0;l=!1;break}}for(var w={b:8,t:9,n:10,v:11,f:12,r:13},r=[],n=0,b=a.length;n<b;++n){p=a[n];if(p.global||p.multiline)throw Error(\"\"+p);r.push(\"(?:\"+m(p)+\")\")}return new RegExp(r.join(\"|\"),l?\"gi\":\"g\")}function U(a,d){function f(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=a.firstChild;b;b=b.nextSibling)f(b);b=a.nodeName.toLowerCase();if(\"br\"===b||\"li\"===b)m[l]=\"\\n\",q[l<<1]=E++,q[l++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\\r\\n?/g,\"\\n\"):b.replace(/[ \\t\\r\\n]+/g,\n\" \"),m[l]=b,q[l<<1]=E,E+=b.length,q[l++<<1|1]=a)}var c=/(?:^|\\s)nocode(?:\\s|$)/,m=[],E=0,q=[],l=0;f(a);return{a:m.join(\"\").replace(/\\n$/,\"\"),c:q}}function J(a,d,f,c,m){f&&(a={h:a,l:1,j:null,m:null,a:f,c:null,i:d,g:null},c(a),m.push.apply(m,a.g))}function V(a){for(var d=void 0,f=a.firstChild;f;f=f.nextSibling)var c=f.nodeType,d=1===c?d?a:f:3===c?W.test(f.nodeValue)?a:d:d;return d===a?void 0:d}function G(a,d){function f(a){for(var l=a.i,n=a.h,b=[l,\"pln\"],p=0,q=a.a.match(m)||[],r={},e=0,t=q.length;e<\nt;++e){var z=q[e],v=r[z],g=void 0,h;if(\"string\"===typeof v)h=!1;else{var k=c[z.charAt(0)];if(k)g=z.match(k[1]),v=k[0];else{for(h=0;h<E;++h)if(k=d[h],g=z.match(k[1])){v=k[0];break}g||(v=\"pln\")}!(h=5<=v.length&&\"lang-\"===v.substring(0,5))||g&&\"string\"===typeof g[1]||(h=!1,v=\"src\");h||(r[z]=v)}k=p;p+=z.length;if(h){h=g[1];var A=z.indexOf(h),C=A+h.length;g[2]&&(C=z.length-g[2].length,A=C-h.length);v=v.substring(5);J(n,l+k,z.substring(0,A),f,b);J(n,l+k+A,h,K(v,h),b);J(n,l+k+C,z.substring(C),f,b)}else b.push(l+\nk,v)}a.g=b}var c={},m;(function(){for(var f=a.concat(d),l=[],n={},b=0,p=f.length;b<p;++b){var w=f[b],r=w[3];if(r)for(var e=r.length;0<=--e;)c[r.charAt(e)]=w;w=w[1];r=\"\"+w;n.hasOwnProperty(r)||(l.push(w),n[r]=null)}l.push(/[\\0-\\uffff]/);m=T(l)})();var E=d.length;return f}function x(a){var d=[],f=[];a.tripleQuotedStrings?d.push([\"str\",/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,\nnull,\"'\\\"\"]):a.multiLineStrings?d.push([\"str\",/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):d.push([\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);a.verbatimStrings&&f.push([\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push([\"com\",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,\"#\"]):d.push([\"com\",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,\nnull,\"#\"]),f.push([\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,null])):d.push([\"com\",/^#[^\\r\\n]*/,null,\"#\"]));a.cStyleComments&&(f.push([\"com\",/^\\/\\/[^\\r\\n]*/,null]),f.push([\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null]));if(c=a.regexLiterals){var m=(c=1<c?\"\":\"\\n\\r\")?\".\":\"[\\\\S\\\\s]\";f.push([\"lang-regex\",RegExp(\"^(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*(\"+\n(\"/(?=[^/*\"+c+\"])(?:[^/\\\\x5B\\\\x5C\"+c+\"]|\\\\x5C\"+m+\"|\\\\x5B(?:[^\\\\x5C\\\\x5D\"+c+\"]|\\\\x5C\"+m+\")*(?:\\\\x5D|$))+/\")+\")\")])}(c=a.types)&&f.push([\"typ\",c]);c=(\"\"+a.keywords).replace(/^ | $/g,\"\");c.length&&f.push([\"kwd\",new RegExp(\"^(?:\"+c.replace(/[\\s,]+/g,\"|\")+\")\\\\b\"),null]);d.push([\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);c=\"^.[^\\\\s\\\\w.$@'\\\"`/\\\\\\\\]*\";a.regexLiterals&&(c+=\"(?!s*/)\");f.push([\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null],[\"pln\",/^[a-z_$][a-z_$@0-9]*/i,\nnull],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pln\",/^\\\\[\\s\\S]?/,null],[\"pun\",new RegExp(c),null]);return G(d,f)}function L(a,d,f){function c(a){var b=a.nodeType;if(1==b&&!t.test(a.className))if(\"br\"===a.nodeName.toLowerCase())m(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&f){var e=a.nodeValue,d=e.match(q);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+\nd[0].length))&&a.parentNode.insertBefore(l.createTextNode(e),a.nextSibling),m(a),b||a.parentNode.removeChild(a))}}function m(a){function c(a,b){var e=b?a.cloneNode(!1):a,k=a.parentNode;if(k){var k=c(k,1),d=a.nextSibling;k.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,k.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var t=/(?:^|\\s)nocode(?:\\s|$)/,q=/\\r\\n?|\\n/,l=a.ownerDocument,n=l.createElement(\"li\");a.firstChild;)n.appendChild(a.firstChild);\nfor(var b=[n],p=0;p<b.length;++p)c(b[p]);d===(d|0)&&b[0].setAttribute(\"value\",d);var w=l.createElement(\"ol\");w.className=\"linenums\";d=Math.max(0,d-1|0)||0;for(var p=0,r=b.length;p<r;++p)n=b[p],n.className=\"L\"+(p+d)%10,n.firstChild||n.appendChild(l.createTextNode(\"\\u00a0\")),w.appendChild(n);a.appendChild(w)}function t(a,d){for(var f=d.length;0<=--f;){var c=d[f];I.hasOwnProperty(c)?D.console&&console.warn(\"cannot override language handler %s\",c):I[c]=a}}function K(a,d){a&&I.hasOwnProperty(a)||(a=/^\\s*</.test(d)?\n\"default-markup\":\"default-code\");return I[a]}function M(a){var d=a.j;try{var f=U(a.h,a.l),c=f.a;a.a=c;a.c=f.c;a.i=0;K(d,c)(a);var m=/\\bMSIE\\s(\\d+)/.exec(navigator.userAgent),m=m&&8>=+m[1],d=/\\n/g,t=a.a,q=t.length,f=0,l=a.c,n=l.length,c=0,b=a.g,p=b.length,w=0;b[p]=q;var r,e;for(e=r=0;e<p;)b[e]!==b[e+2]?(b[r++]=b[e++],b[r++]=b[e++]):e+=2;p=r;for(e=r=0;e<p;){for(var x=b[e],z=b[e+1],v=e+2;v+2<=p&&b[v+1]===z;)v+=2;b[r++]=x;b[r++]=z;e=v}b.length=r;var g=a.h;a=\"\";g&&(a=g.style.display,g.style.display=\"none\");\ntry{for(;c<n;){var h=l[c+2]||q,k=b[w+2]||q,v=Math.min(h,k),A=l[c+1],C;if(1!==A.nodeType&&(C=t.substring(f,v))){m&&(C=C.replace(d,\"\\r\"));A.nodeValue=C;var N=A.ownerDocument,u=N.createElement(\"span\");u.className=b[w+1];var B=A.parentNode;B.replaceChild(u,A);u.appendChild(A);f<h&&(l[c+1]=A=N.createTextNode(t.substring(v,h)),B.insertBefore(A,u.nextSibling))}f=v;f>=h&&(c+=2);f>=k&&(w+=2)}}finally{g&&(g.style.display=a)}}catch(y){D.console&&console.log(y&&y.stack||y)}}var D=\"undefined\"!==typeof window?\nwindow:{},B=[\"break,continue,do,else,for,if,return,while\"],F=[[B,\"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"],\"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof\"],H=[F,\"alignas,alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where\"],\nO=[F,\"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient\"],P=[F,\"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,internal,into,is,join,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,value,var,virtual,where,yield\"],\nF=[F,\"abstract,async,await,constructor,debugger,enum,eval,export,from,function,get,import,implements,instanceof,interface,let,null,of,set,undefined,var,with,yield,Infinity,NaN\"],Q=[B,\"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None\"],R=[B,\"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END\"],\nB=[B,\"case,done,elif,esac,eval,fi,function,in,local,set,then,until\"],S=/^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/,W=/\\S/,X=x({keywords:[H,P,O,F,\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",Q,R,B],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),\nI={};t(X,[\"default-code\"]);t(G([],[[\"pln\",/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[\"com\",/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[\"pun\",/^(?:<[%?]|[%?]>)/],[\"lang-\",/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),\"default-markup htm html mxml xhtml xml xsl\".split(\" \"));t(G([[\"pln\",/^[\\s]+/,\nnull,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],[\"pun\",/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);\nt(G([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);t(x({keywords:H,hashComments:!0,cStyleComments:!0,types:S}),\"c cc cpp cxx cyc m\".split(\" \"));t(x({keywords:\"null,true,false\"}),[\"json\"]);t(x({keywords:P,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:S}),[\"cs\"]);t(x({keywords:O,cStyleComments:!0}),[\"java\"]);t(x({keywords:B,hashComments:!0,multiLineStrings:!0}),[\"bash\",\"bsh\",\"csh\",\"sh\"]);t(x({keywords:Q,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),[\"cv\",\"py\",\"python\"]);t(x({keywords:\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",\nhashComments:!0,multiLineStrings:!0,regexLiterals:2}),[\"perl\",\"pl\",\"pm\"]);t(x({keywords:R,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),[\"rb\",\"ruby\"]);t(x({keywords:F,cStyleComments:!0,regexLiterals:!0}),[\"javascript\",\"js\",\"ts\",\"typescript\"]);t(x({keywords:\"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes\",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,\nregexLiterals:!0}),[\"coffee\"]);t(G([],[[\"str\",/^[\\s\\S]+/]]),[\"regex\"]);var Y=D.PR={createSimpleLexer:G,registerLangHandler:t,sourceDecorator:x,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:\"com\",PR_DECLARATION:\"dec\",PR_KEYWORD:\"kwd\",PR_LITERAL:\"lit\",PR_NOCODE:\"nocode\",PR_PLAIN:\"pln\",PR_PUNCTUATION:\"pun\",PR_SOURCE:\"src\",PR_STRING:\"str\",PR_TAG:\"tag\",PR_TYPE:\"typ\",prettyPrintOne:D.prettyPrintOne=function(a,d,f){f=f||!1;d=d||null;var c=document.createElement(\"div\");c.innerHTML=\"<pre>\"+a+\"</pre>\";\nc=c.firstChild;f&&L(c,f,!0);M({j:d,m:f,h:c,l:1,a:null,i:null,c:null,g:null});return c.innerHTML},prettyPrint:D.prettyPrint=function(a,d){function f(){for(var c=D.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;p<x.length&&b.now()<c;p++){for(var d=x[p],l=g,n=d;n=n.previousSibling;){var m=n.nodeType,u=(7===m||8===m)&&n.nodeValue;if(u?!/^\\??prettify\\b/.test(u):3!==m||/\\S/.test(n.nodeValue))break;if(u){l={};u.replace(/\\b(\\w+)=([\\w:.%+-]+)/g,function(a,b,c){l[b]=c});break}}n=d.className;if((l!==g||r.test(n))&&\n!e.test(n)){m=!1;for(u=d.parentNode;u;u=u.parentNode)if(v.test(u.tagName)&&u.className&&r.test(u.className)){m=!0;break}if(!m){d.className+=\" prettyprinted\";m=l.lang;if(!m){var m=n.match(w),q;!m&&(q=V(d))&&z.test(q.tagName)&&(m=q.className.match(w));m&&(m=m[1])}if(B.test(d.tagName))u=1;else var u=d.currentStyle,y=t.defaultView,u=(u=u?u.whiteSpace:y&&y.getComputedStyle?y.getComputedStyle(d,null).getPropertyValue(\"white-space\"):0)&&\"pre\"===u.substring(0,3);y=l.linenums;(y=\"true\"===y||+y)||(y=(y=n.match(/\\blinenums\\b(?::(\\d+))?/))?\ny[1]&&y[1].length?+y[1]:!0:!1);y&&L(d,y,u);M({j:m,h:d,m:y,l:u,a:null,i:null,c:null,g:null})}}}p<x.length?D.setTimeout(f,250):\"function\"===typeof a&&a()}for(var c=d||document.body,t=c.ownerDocument||document,c=[c.getElementsByTagName(\"pre\"),c.getElementsByTagName(\"code\"),c.getElementsByTagName(\"xmp\")],x=[],q=0;q<c.length;++q)for(var l=0,n=c[q].length;l<n;++l)x.push(c[q][l]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var p=0,w=/\\blang(?:uage)?-([\\w.]+)(?!\\S)/,r=/\\bprettyprint\\b/,\ne=/\\bprettyprinted\\b/,B=/pre|xmp/i,z=/^code$/i,v=/^(?:pre|code|xmp)$/i,g={};f()}},H=D.define;\"function\"===typeof H&&H.amd&&H(\"google-code-prettify\",[],function(){return Y})})();}()\n","site":{"data":{}},"excerpt":"","more":"!function(){/*\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\"undefined\"!==typeof window&&(window.PR_SHOULD_USE_CONTINUATION=!0);\n(function(){function T(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=w[c])?a:\"0\"<=c&&\"7\">=c?parseInt(e.substring(1),8):\"u\"===c||\"x\"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function f(e){if(32>e)return(16>e?\"\\\\x0\":\"\\\\x\")+e.toString(16);e=String.fromCharCode(e);return\"\\\\\"===e||\"-\"===e||\"]\"===e||\"^\"===e?\"\\\\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));\ne=[];var a=\"^\"===c[0],b=[\"[\"];a&&b.push(\"^\");for(var a=a?1:0,g=c.length;a<g;++a){var h=c[a];if(/\\\\[bdsw]/i.test(h))b.push(h);else{var h=d(h),k;a+2<g&&\"-\"===c[a+1]?(k=d(c[a+2]),a+=2):k=h;e.push([h,k]);65>k||122<h||(65>k||90<h||e.push([Math.max(65,h)|32,Math.min(k,90)|32]),97>k||122<h||e.push([Math.max(97,h)&-33,Math.min(k,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];g=[];for(a=0;a<e.length;++a)h=e[a],h[0]<=g[1]+1?g[1]=Math.max(g[1],h[1]):c.push(g=h);for(a=0;a<c.length;++a)h=\nc[a],b.push(f(h[0])),h[1]>h[0]&&(h[1]+1>h[0]&&b.push(\"-\"),b.push(f(h[1])));b.push(\"]\");return b.join(\"\")}function m(e){for(var a=e.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\"g\")),b=a.length,d=[],g=0,h=0;g<b;++g){var k=a[g];\"(\"===k?++h:\"\\\\\"===k.charAt(0)&&(k=+k.substring(1))&&(k<=h?d[k]=-1:a[g]=f(k))}for(g=1;g<d.length;++g)-1===d[g]&&(d[g]=++E);for(h=g=0;g<b;++g)k=a[g],\n\"(\"===k?(++h,d[h]||(a[g]=\"(?:\")):\"\\\\\"===k.charAt(0)&&(k=+k.substring(1))&&k<=h&&(a[g]=\"\\\\\"+d[k]);for(g=0;g<b;++g)\"^\"===a[g]&&\"^\"!==a[g+1]&&(a[g]=\"\");if(e.ignoreCase&&q)for(g=0;g<b;++g)k=a[g],e=k.charAt(0),2<=k.length&&\"[\"===e?a[g]=c(k):\"\\\\\"!==e&&(a[g]=k.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);return\"[\"+String.fromCharCode(a&-33,a|32)+\"]\"}));return a.join(\"\")}for(var E=0,q=!1,l=!1,n=0,b=a.length;n<b;++n){var p=a[n];if(p.ignoreCase)l=!0;else if(/[a-z]/i.test(p.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\n\"\"))){q=!0;l=!1;break}}for(var w={b:8,t:9,n:10,v:11,f:12,r:13},r=[],n=0,b=a.length;n<b;++n){p=a[n];if(p.global||p.multiline)throw Error(\"\"+p);r.push(\"(?:\"+m(p)+\")\")}return new RegExp(r.join(\"|\"),l?\"gi\":\"g\")}function U(a,d){function f(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=a.firstChild;b;b=b.nextSibling)f(b);b=a.nodeName.toLowerCase();if(\"br\"===b||\"li\"===b)m[l]=\"\\n\",q[l<<1]=E++,q[l++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\\r\\n?/g,\"\\n\"):b.replace(/[ \\t\\r\\n]+/g,\n\" \"),m[l]=b,q[l<<1]=E,E+=b.length,q[l++<<1|1]=a)}var c=/(?:^|\\s)nocode(?:\\s|$)/,m=[],E=0,q=[],l=0;f(a);return{a:m.join(\"\").replace(/\\n$/,\"\"),c:q}}function J(a,d,f,c,m){f&&(a={h:a,l:1,j:null,m:null,a:f,c:null,i:d,g:null},c(a),m.push.apply(m,a.g))}function V(a){for(var d=void 0,f=a.firstChild;f;f=f.nextSibling)var c=f.nodeType,d=1===c?d?a:f:3===c?W.test(f.nodeValue)?a:d:d;return d===a?void 0:d}function G(a,d){function f(a){for(var l=a.i,n=a.h,b=[l,\"pln\"],p=0,q=a.a.match(m)||[],r={},e=0,t=q.length;e<\nt;++e){var z=q[e],v=r[z],g=void 0,h;if(\"string\"===typeof v)h=!1;else{var k=c[z.charAt(0)];if(k)g=z.match(k[1]),v=k[0];else{for(h=0;h<E;++h)if(k=d[h],g=z.match(k[1])){v=k[0];break}g||(v=\"pln\")}!(h=5<=v.length&&\"lang-\"===v.substring(0,5))||g&&\"string\"===typeof g[1]||(h=!1,v=\"src\");h||(r[z]=v)}k=p;p+=z.length;if(h){h=g[1];var A=z.indexOf(h),C=A+h.length;g[2]&&(C=z.length-g[2].length,A=C-h.length);v=v.substring(5);J(n,l+k,z.substring(0,A),f,b);J(n,l+k+A,h,K(v,h),b);J(n,l+k+C,z.substring(C),f,b)}else b.push(l+\nk,v)}a.g=b}var c={},m;(function(){for(var f=a.concat(d),l=[],n={},b=0,p=f.length;b<p;++b){var w=f[b],r=w[3];if(r)for(var e=r.length;0<=--e;)c[r.charAt(e)]=w;w=w[1];r=\"\"+w;n.hasOwnProperty(r)||(l.push(w),n[r]=null)}l.push(/[\\0-\\uffff]/);m=T(l)})();var E=d.length;return f}function x(a){var d=[],f=[];a.tripleQuotedStrings?d.push([\"str\",/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,\nnull,\"'\\\"\"]):a.multiLineStrings?d.push([\"str\",/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):d.push([\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);a.verbatimStrings&&f.push([\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push([\"com\",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,\"#\"]):d.push([\"com\",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,\nnull,\"#\"]),f.push([\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,null])):d.push([\"com\",/^#[^\\r\\n]*/,null,\"#\"]));a.cStyleComments&&(f.push([\"com\",/^\\/\\/[^\\r\\n]*/,null]),f.push([\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null]));if(c=a.regexLiterals){var m=(c=1<c?\"\":\"\\n\\r\")?\".\":\"[\\\\S\\\\s]\";f.push([\"lang-regex\",RegExp(\"^(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*(\"+\n(\"/(?=[^/*\"+c+\"])(?:[^/\\\\x5B\\\\x5C\"+c+\"]|\\\\x5C\"+m+\"|\\\\x5B(?:[^\\\\x5C\\\\x5D\"+c+\"]|\\\\x5C\"+m+\")*(?:\\\\x5D|$))+/\")+\")\")])}(c=a.types)&&f.push([\"typ\",c]);c=(\"\"+a.keywords).replace(/^ | $/g,\"\");c.length&&f.push([\"kwd\",new RegExp(\"^(?:\"+c.replace(/[\\s,]+/g,\"|\")+\")\\\\b\"),null]);d.push([\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);c=\"^.[^\\\\s\\\\w.$@'\\\"`/\\\\\\\\]*\";a.regexLiterals&&(c+=\"(?!s*/)\");f.push([\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null],[\"pln\",/^[a-z_$][a-z_$@0-9]*/i,\nnull],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pln\",/^\\\\[\\s\\S]?/,null],[\"pun\",new RegExp(c),null]);return G(d,f)}function L(a,d,f){function c(a){var b=a.nodeType;if(1==b&&!t.test(a.className))if(\"br\"===a.nodeName.toLowerCase())m(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&f){var e=a.nodeValue,d=e.match(q);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+\nd[0].length))&&a.parentNode.insertBefore(l.createTextNode(e),a.nextSibling),m(a),b||a.parentNode.removeChild(a))}}function m(a){function c(a,b){var e=b?a.cloneNode(!1):a,k=a.parentNode;if(k){var k=c(k,1),d=a.nextSibling;k.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,k.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var t=/(?:^|\\s)nocode(?:\\s|$)/,q=/\\r\\n?|\\n/,l=a.ownerDocument,n=l.createElement(\"li\");a.firstChild;)n.appendChild(a.firstChild);\nfor(var b=[n],p=0;p<b.length;++p)c(b[p]);d===(d|0)&&b[0].setAttribute(\"value\",d);var w=l.createElement(\"ol\");w.className=\"linenums\";d=Math.max(0,d-1|0)||0;for(var p=0,r=b.length;p<r;++p)n=b[p],n.className=\"L\"+(p+d)%10,n.firstChild||n.appendChild(l.createTextNode(\"\\u00a0\")),w.appendChild(n);a.appendChild(w)}function t(a,d){for(var f=d.length;0<=--f;){var c=d[f];I.hasOwnProperty(c)?D.console&&console.warn(\"cannot override language handler %s\",c):I[c]=a}}function K(a,d){a&&I.hasOwnProperty(a)||(a=/^\\s*</.test(d)?\n\"default-markup\":\"default-code\");return I[a]}function M(a){var d=a.j;try{var f=U(a.h,a.l),c=f.a;a.a=c;a.c=f.c;a.i=0;K(d,c)(a);var m=/\\bMSIE\\s(\\d+)/.exec(navigator.userAgent),m=m&&8>=+m[1],d=/\\n/g,t=a.a,q=t.length,f=0,l=a.c,n=l.length,c=0,b=a.g,p=b.length,w=0;b[p]=q;var r,e;for(e=r=0;e<p;)b[e]!==b[e+2]?(b[r++]=b[e++],b[r++]=b[e++]):e+=2;p=r;for(e=r=0;e<p;){for(var x=b[e],z=b[e+1],v=e+2;v+2<=p&&b[v+1]===z;)v+=2;b[r++]=x;b[r++]=z;e=v}b.length=r;var g=a.h;a=\"\";g&&(a=g.style.display,g.style.display=\"none\");\ntry{for(;c<n;){var h=l[c+2]||q,k=b[w+2]||q,v=Math.min(h,k),A=l[c+1],C;if(1!==A.nodeType&&(C=t.substring(f,v))){m&&(C=C.replace(d,\"\\r\"));A.nodeValue=C;var N=A.ownerDocument,u=N.createElement(\"span\");u.className=b[w+1];var B=A.parentNode;B.replaceChild(u,A);u.appendChild(A);f<h&&(l[c+1]=A=N.createTextNode(t.substring(v,h)),B.insertBefore(A,u.nextSibling))}f=v;f>=h&&(c+=2);f>=k&&(w+=2)}}finally{g&&(g.style.display=a)}}catch(y){D.console&&console.log(y&&y.stack||y)}}var D=\"undefined\"!==typeof window?\nwindow:{},B=[\"break,continue,do,else,for,if,return,while\"],F=[[B,\"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"],\"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof\"],H=[F,\"alignas,alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where\"],\nO=[F,\"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient\"],P=[F,\"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,internal,into,is,join,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,value,var,virtual,where,yield\"],\nF=[F,\"abstract,async,await,constructor,debugger,enum,eval,export,from,function,get,import,implements,instanceof,interface,let,null,of,set,undefined,var,with,yield,Infinity,NaN\"],Q=[B,\"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None\"],R=[B,\"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END\"],\nB=[B,\"case,done,elif,esac,eval,fi,function,in,local,set,then,until\"],S=/^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/,W=/\\S/,X=x({keywords:[H,P,O,F,\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",Q,R,B],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),\nI={};t(X,[\"default-code\"]);t(G([],[[\"pln\",/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[\"com\",/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[\"pun\",/^(?:<[%?]|[%?]>)/],[\"lang-\",/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),\"default-markup htm html mxml xhtml xml xsl\".split(\" \"));t(G([[\"pln\",/^[\\s]+/,\nnull,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],[\"pun\",/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);\nt(G([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);t(x({keywords:H,hashComments:!0,cStyleComments:!0,types:S}),\"c cc cpp cxx cyc m\".split(\" \"));t(x({keywords:\"null,true,false\"}),[\"json\"]);t(x({keywords:P,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:S}),[\"cs\"]);t(x({keywords:O,cStyleComments:!0}),[\"java\"]);t(x({keywords:B,hashComments:!0,multiLineStrings:!0}),[\"bash\",\"bsh\",\"csh\",\"sh\"]);t(x({keywords:Q,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),[\"cv\",\"py\",\"python\"]);t(x({keywords:\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",\nhashComments:!0,multiLineStrings:!0,regexLiterals:2}),[\"perl\",\"pl\",\"pm\"]);t(x({keywords:R,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),[\"rb\",\"ruby\"]);t(x({keywords:F,cStyleComments:!0,regexLiterals:!0}),[\"javascript\",\"js\",\"ts\",\"typescript\"]);t(x({keywords:\"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes\",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,\nregexLiterals:!0}),[\"coffee\"]);t(G([],[[\"str\",/^[\\s\\S]+/]]),[\"regex\"]);var Y=D.PR={createSimpleLexer:G,registerLangHandler:t,sourceDecorator:x,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:\"com\",PR_DECLARATION:\"dec\",PR_KEYWORD:\"kwd\",PR_LITERAL:\"lit\",PR_NOCODE:\"nocode\",PR_PLAIN:\"pln\",PR_PUNCTUATION:\"pun\",PR_SOURCE:\"src\",PR_STRING:\"str\",PR_TAG:\"tag\",PR_TYPE:\"typ\",prettyPrintOne:D.prettyPrintOne=function(a,d,f){f=f||!1;d=d||null;var c=document.createElement(\"div\");c.innerHTML=\"<pre>\"+a+\"</pre>\";\nc=c.firstChild;f&&L(c,f,!0);M({j:d,m:f,h:c,l:1,a:null,i:null,c:null,g:null});return c.innerHTML},prettyPrint:D.prettyPrint=function(a,d){function f(){for(var c=D.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;p<x.length&&b.now()<c;p++){for(var d=x[p],l=g,n=d;n=n.previousSibling;){var m=n.nodeType,u=(7===m||8===m)&&n.nodeValue;if(u?!/^\\??prettify\\b/.test(u):3!==m||/\\S/.test(n.nodeValue))break;if(u){l={};u.replace(/\\b(\\w+)=([\\w:.%+-]+)/g,function(a,b,c){l[b]=c});break}}n=d.className;if((l!==g||r.test(n))&&\n!e.test(n)){m=!1;for(u=d.parentNode;u;u=u.parentNode)if(v.test(u.tagName)&&u.className&&r.test(u.className)){m=!0;break}if(!m){d.className+=\" prettyprinted\";m=l.lang;if(!m){var m=n.match(w),q;!m&&(q=V(d))&&z.test(q.tagName)&&(m=q.className.match(w));m&&(m=m[1])}if(B.test(d.tagName))u=1;else var u=d.currentStyle,y=t.defaultView,u=(u=u?u.whiteSpace:y&&y.getComputedStyle?y.getComputedStyle(d,null).getPropertyValue(\"white-space\"):0)&&\"pre\"===u.substring(0,3);y=l.linenums;(y=\"true\"===y||+y)||(y=(y=n.match(/\\blinenums\\b(?::(\\d+))?/))?\ny[1]&&y[1].length?+y[1]:!0:!1);y&&L(d,y,u);M({j:m,h:d,m:y,l:u,a:null,i:null,c:null,g:null})}}}p<x.length?D.setTimeout(f,250):\"function\"===typeof a&&a()}for(var c=d||document.body,t=c.ownerDocument||document,c=[c.getElementsByTagName(\"pre\"),c.getElementsByTagName(\"code\"),c.getElementsByTagName(\"xmp\")],x=[],q=0;q<c.length;++q)for(var l=0,n=c[q].length;l<n;++l)x.push(c[q][l]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var p=0,w=/\\blang(?:uage)?-([\\w.]+)(?!\\S)/,r=/\\bprettyprint\\b/,\ne=/\\bprettyprinted\\b/,B=/pre|xmp/i,z=/^code$/i,v=/^(?:pre|code|xmp)$/i,g={};f()}},H=D.define;\"function\"===typeof H&&H.amd&&H(\"google-code-prettify\",[],function(){return Y})})();}()\n"},{"_content":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","source":"plugins/prettify/lang-Splus.js","raw":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","date":"2022-03-27T08:23:16.364Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-Splus.js","layout":"false","title":"","comments":1,"_id":"cl22h70v1005w5oss79h8h23p","content":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n"},{"_content":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","source":"plugins/prettify/lang-agc.js","raw":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","date":"2022-03-27T08:23:16.287Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-agc.js","layout":"false","title":"","comments":1,"_id":"cl22h70v2005y5oss0rf6ak1r","content":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n"},{"_content":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","source":"plugins/prettify/lang-apollo.js","raw":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","date":"2022-03-27T08:23:16.289Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-apollo.js","layout":"false","title":"","comments":1,"_id":"cl22h70v300605oss2b7628ts","content":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/,null,'\"'],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^REM[^\\r\\n]*/,null],[\"kwd\",/^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/,null],[\"pln\",/^[A-Z][A-Z0-9]?(?:\\$|%)?/i,null],[\"lit\",/^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i,\nnull,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$%\"]*/,null]]),[\"basic\",\"cbm\"]);\n","source":"plugins/prettify/lang-basic.js","raw":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/,null,'\"'],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^REM[^\\r\\n]*/,null],[\"kwd\",/^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/,null],[\"pln\",/^[A-Z][A-Z0-9]?(?:\\$|%)?/i,null],[\"lit\",/^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i,\nnull,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$%\"]*/,null]]),[\"basic\",\"cbm\"]);\n","date":"2022-03-27T08:23:16.290Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-basic.js","layout":"false","title":"","comments":1,"_id":"cl22h70v300625osscpjv6uy7","content":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/,null,'\"'],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^REM[^\\r\\n]*/,null],[\"kwd\",/^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/,null],[\"pln\",/^[A-Z][A-Z0-9]?(?:\\$|%)?/i,null],[\"lit\",/^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i,\nnull,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$%\"]*/,null]]),[\"basic\",\"cbm\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/,null,'\"'],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^REM[^\\r\\n]*/,null],[\"kwd\",/^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/,null],[\"pln\",/^[A-Z][A-Z0-9]?(?:\\$|%)?/i,null],[\"lit\",/^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i,\nnull,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$%\"]*/,null]]),[\"basic\",\"cbm\"]);\n"},{"_content":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","source":"plugins/prettify/lang-aea.js","raw":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","date":"2022-03-27T08:23:16.287Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-aea.js","layout":"false","title":"","comments":1,"_id":"cl22h70v400645oss1kfp4hu5","content":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2009 Onno Hommes.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,\nnull],[\"typ\",/^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"apollo\",\"agc\",\"aea\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","source":"plugins/prettify/lang-cl.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","date":"2022-03-27T08:23:16.291Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-cl.js","layout":"false","title":"","comments":1,"_id":"cl22h70v400665ossdeylcfbf","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n"},{"_content":"/*\n Copyright (C) 2011 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^[\\(\\{\\[]+/,null,\"([{\"],[\"clo\",/^[\\)\\}\\]]+/,null,\")]}\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:def|if|do|let|quote|var|fn|loop|recur|throw|try|monitor-enter|monitor-exit|defmacro|defn|defn-|macroexpand|macroexpand-1|for|doseq|dosync|dotimes|and|or|when|not|assert|doto|proxy|defstruct|first|rest|cons|defprotocol|deftype|defrecord|reify|defmulti|defmethod|meta|with-meta|ns|in-ns|create-ns|import|intern|refer|alias|namespace|resolve|ref|deref|refset|new|set!|memfn|to-array|into-array|aset|gen-class|reduce|map|filter|find|nil?|empty?|hash-map|hash-set|vec|vector|seq|flatten|reverse|assoc|dissoc|list|list?|disj|get|union|difference|intersection|extend|extend-type|extend-protocol|prn)\\b/,\nnull],[\"typ\",/^:[0-9a-zA-Z\\-]+/]]),[\"clj\"]);\n","source":"plugins/prettify/lang-clj.js","raw":"/*\n Copyright (C) 2011 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^[\\(\\{\\[]+/,null,\"([{\"],[\"clo\",/^[\\)\\}\\]]+/,null,\")]}\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:def|if|do|let|quote|var|fn|loop|recur|throw|try|monitor-enter|monitor-exit|defmacro|defn|defn-|macroexpand|macroexpand-1|for|doseq|dosync|dotimes|and|or|when|not|assert|doto|proxy|defstruct|first|rest|cons|defprotocol|deftype|defrecord|reify|defmulti|defmethod|meta|with-meta|ns|in-ns|create-ns|import|intern|refer|alias|namespace|resolve|ref|deref|refset|new|set!|memfn|to-array|into-array|aset|gen-class|reduce|map|filter|find|nil?|empty?|hash-map|hash-set|vec|vector|seq|flatten|reverse|assoc|dissoc|list|list?|disj|get|union|difference|intersection|extend|extend-type|extend-protocol|prn)\\b/,\nnull],[\"typ\",/^:[0-9a-zA-Z\\-]+/]]),[\"clj\"]);\n","date":"2022-03-27T08:23:16.316Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-clj.js","layout":"false","title":"","comments":1,"_id":"cl22h70v500685oss7tkmcwv2","content":"/*\n Copyright (C) 2011 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^[\\(\\{\\[]+/,null,\"([{\"],[\"clo\",/^[\\)\\}\\]]+/,null,\")]}\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:def|if|do|let|quote|var|fn|loop|recur|throw|try|monitor-enter|monitor-exit|defmacro|defn|defn-|macroexpand|macroexpand-1|for|doseq|dosync|dotimes|and|or|when|not|assert|doto|proxy|defstruct|first|rest|cons|defprotocol|deftype|defrecord|reify|defmulti|defmethod|meta|with-meta|ns|in-ns|create-ns|import|intern|refer|alias|namespace|resolve|ref|deref|refset|new|set!|memfn|to-array|into-array|aset|gen-class|reduce|map|filter|find|nil?|empty?|hash-map|hash-set|vec|vector|seq|flatten|reverse|assoc|dissoc|list|list?|disj|get|union|difference|intersection|extend|extend-type|extend-protocol|prn)\\b/,\nnull],[\"typ\",/^:[0-9a-zA-Z\\-]+/]]),[\"clj\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n Copyright (C) 2011 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^[\\(\\{\\[]+/,null,\"([{\"],[\"clo\",/^[\\)\\}\\]]+/,null,\")]}\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:def|if|do|let|quote|var|fn|loop|recur|throw|try|monitor-enter|monitor-exit|defmacro|defn|defn-|macroexpand|macroexpand-1|for|doseq|dosync|dotimes|and|or|when|not|assert|doto|proxy|defstruct|first|rest|cons|defprotocol|deftype|defrecord|reify|defmulti|defmethod|meta|with-meta|ns|in-ns|create-ns|import|intern|refer|alias|namespace|resolve|ref|deref|refset|new|set!|memfn|to-array|into-array|aset|gen-class|reduce|map|filter|find|nil?|empty?|hash-map|hash-set|vec|vector|seq|flatten|reverse|assoc|dissoc|list|list?|disj|get|union|difference|intersection|extend|extend-type|extend-protocol|prn)\\b/,\nnull],[\"typ\",/^:[0-9a-zA-Z\\-]+/]]),[\"clj\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/,null,'\"'],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^REM[^\\r\\n]*/,null],[\"kwd\",/^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/,null],[\"pln\",/^[A-Z][A-Z0-9]?(?:\\$|%)?/i,null],[\"lit\",/^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i,\nnull,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$%\"]*/,null]]),[\"basic\",\"cbm\"]);\n","source":"plugins/prettify/lang-cbm.js","raw":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/,null,'\"'],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^REM[^\\r\\n]*/,null],[\"kwd\",/^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/,null],[\"pln\",/^[A-Z][A-Z0-9]?(?:\\$|%)?/i,null],[\"lit\",/^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i,\nnull,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$%\"]*/,null]]),[\"basic\",\"cbm\"]);\n","date":"2022-03-27T08:23:16.290Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-cbm.js","layout":"false","title":"","comments":1,"_id":"cl22h70v500695oss2ulw592l","content":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/,null,'\"'],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^REM[^\\r\\n]*/,null],[\"kwd\",/^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/,null],[\"pln\",/^[A-Z][A-Z0-9]?(?:\\$|%)?/i,null],[\"lit\",/^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i,\nnull,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$%\"]*/,null]]),[\"basic\",\"cbm\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/,null,'\"'],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^REM[^\\r\\n]*/,null],[\"kwd\",/^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/,null],[\"pln\",/^[A-Z][A-Z0-9]?(?:\\$|%)?/i,null],[\"lit\",/^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i,\nnull,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$%\"]*/,null]]),[\"basic\",\"cbm\"]);\n"},{"_content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[ \\t\\r\\n\\f]+/,null,\" \\t\\r\\n\\f\"]],[[\"str\",/^\\\"(?:[^\\n\\r\\f\\\\\\\"]|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\\"/,null],[\"str\",/^\\'(?:[^\\n\\r\\f\\\\\\']|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\'/,null],[\"lang-css-str\",/^url\\(([^\\)\\\"\\']+)\\)/i],[\"kwd\",/^(?:url|rgb|\\!important|@import|@page|@media|@charset|inherit)(?=[^\\-\\w]|$)/i,null],[\"lang-css-kw\",/^(-?(?:[_a-z]|(?:\\\\[0-9a-f]+ ?))(?:[_a-z0-9\\-]|\\\\(?:\\\\[0-9a-f]+ ?))*)\\s*:/i],[\"com\",/^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//],\n[\"com\",/^(?:\\x3c!--|--\\x3e)/],[\"lit\",/^(?:\\d+|\\d*\\.\\d+)(?:%|[a-z]+)?/i],[\"lit\",/^#(?:[0-9a-f]{3}){1,2}\\b/i],[\"pln\",/^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i],[\"pun\",/^[^\\s\\w\\'\\\"]+/]]),[\"css\"]);PR.registerLangHandler(PR.createSimpleLexer([],[[\"kwd\",/^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i]]),[\"css-kw\"]);PR.registerLangHandler(PR.createSimpleLexer([],[[\"str\",/^[^\\)\\\"\\']+/]]),[\"css-str\"]);\n","source":"plugins/prettify/lang-css.js","raw":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[ \\t\\r\\n\\f]+/,null,\" \\t\\r\\n\\f\"]],[[\"str\",/^\\\"(?:[^\\n\\r\\f\\\\\\\"]|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\\"/,null],[\"str\",/^\\'(?:[^\\n\\r\\f\\\\\\']|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\'/,null],[\"lang-css-str\",/^url\\(([^\\)\\\"\\']+)\\)/i],[\"kwd\",/^(?:url|rgb|\\!important|@import|@page|@media|@charset|inherit)(?=[^\\-\\w]|$)/i,null],[\"lang-css-kw\",/^(-?(?:[_a-z]|(?:\\\\[0-9a-f]+ ?))(?:[_a-z0-9\\-]|\\\\(?:\\\\[0-9a-f]+ ?))*)\\s*:/i],[\"com\",/^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//],\n[\"com\",/^(?:\\x3c!--|--\\x3e)/],[\"lit\",/^(?:\\d+|\\d*\\.\\d+)(?:%|[a-z]+)?/i],[\"lit\",/^#(?:[0-9a-f]{3}){1,2}\\b/i],[\"pln\",/^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i],[\"pun\",/^[^\\s\\w\\'\\\"]+/]]),[\"css\"]);PR.registerLangHandler(PR.createSimpleLexer([],[[\"kwd\",/^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i]]),[\"css-kw\"]);PR.registerLangHandler(PR.createSimpleLexer([],[[\"str\",/^[^\\)\\\"\\']+/]]),[\"css-str\"]);\n","date":"2022-03-27T08:23:16.317Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-css.js","layout":"false","title":"","comments":1,"_id":"cl22h70v6006b5ossh2c3arwq","content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[ \\t\\r\\n\\f]+/,null,\" \\t\\r\\n\\f\"]],[[\"str\",/^\\\"(?:[^\\n\\r\\f\\\\\\\"]|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\\"/,null],[\"str\",/^\\'(?:[^\\n\\r\\f\\\\\\']|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\'/,null],[\"lang-css-str\",/^url\\(([^\\)\\\"\\']+)\\)/i],[\"kwd\",/^(?:url|rgb|\\!important|@import|@page|@media|@charset|inherit)(?=[^\\-\\w]|$)/i,null],[\"lang-css-kw\",/^(-?(?:[_a-z]|(?:\\\\[0-9a-f]+ ?))(?:[_a-z0-9\\-]|\\\\(?:\\\\[0-9a-f]+ ?))*)\\s*:/i],[\"com\",/^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//],\n[\"com\",/^(?:\\x3c!--|--\\x3e)/],[\"lit\",/^(?:\\d+|\\d*\\.\\d+)(?:%|[a-z]+)?/i],[\"lit\",/^#(?:[0-9a-f]{3}){1,2}\\b/i],[\"pln\",/^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i],[\"pun\",/^[^\\s\\w\\'\\\"]+/]]),[\"css\"]);PR.registerLangHandler(PR.createSimpleLexer([],[[\"kwd\",/^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i]]),[\"css-kw\"]);PR.registerLangHandler(PR.createSimpleLexer([],[[\"str\",/^[^\\)\\\"\\']+/]]),[\"css-str\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[ \\t\\r\\n\\f]+/,null,\" \\t\\r\\n\\f\"]],[[\"str\",/^\\\"(?:[^\\n\\r\\f\\\\\\\"]|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\\"/,null],[\"str\",/^\\'(?:[^\\n\\r\\f\\\\\\']|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\'/,null],[\"lang-css-str\",/^url\\(([^\\)\\\"\\']+)\\)/i],[\"kwd\",/^(?:url|rgb|\\!important|@import|@page|@media|@charset|inherit)(?=[^\\-\\w]|$)/i,null],[\"lang-css-kw\",/^(-?(?:[_a-z]|(?:\\\\[0-9a-f]+ ?))(?:[_a-z0-9\\-]|\\\\(?:\\\\[0-9a-f]+ ?))*)\\s*:/i],[\"com\",/^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//],\n[\"com\",/^(?:\\x3c!--|--\\x3e)/],[\"lit\",/^(?:\\d+|\\d*\\.\\d+)(?:%|[a-z]+)?/i],[\"lit\",/^#(?:[0-9a-f]{3}){1,2}\\b/i],[\"pln\",/^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i],[\"pun\",/^[^\\s\\w\\'\\\"]+/]]),[\"css\"]);PR.registerLangHandler(PR.createSimpleLexer([],[[\"kwd\",/^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i]]),[\"css-kw\"]);PR.registerLangHandler(PR.createSimpleLexer([],[[\"str\",/^[^\\)\\\"\\']+/]]),[\"css-str\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"com\",/^#!(?:.*)/],[\"kwd\",/^\\b(?:import|library|part of|part|as|show|hide)\\b/i],[\"com\",/^\\/\\/(?:.*)/],[\"com\",/^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//],[\"kwd\",/^\\b(?:class|interface)\\b/i],[\"kwd\",/^\\b(?:assert|async|await|break|case|catch|continue|default|do|else|finally|for|if|in|is|new|return|super|switch|sync|this|throw|try|while)\\b/i],[\"kwd\",/^\\b(?:abstract|const|extends|factory|final|get|implements|native|operator|set|static|typedef|var)\\b/i],\n[\"typ\",/^\\b(?:bool|double|Dynamic|int|num|Object|String|void)\\b/i],[\"kwd\",/^\\b(?:false|null|true)\\b/i],[\"str\",/^r?[\\']{3}[\\s|\\S]*?[^\\\\][\\']{3}/],[\"str\",/^r?[\\\"]{3}[\\s|\\S]*?[^\\\\][\\\"]{3}/],[\"str\",/^r?\\'(\\'|(?:[^\\n\\r\\f])*?[^\\\\]\\')/],[\"str\",/^r?\\\"(\\\"|(?:[^\\n\\r\\f])*?[^\\\\]\\\")/],[\"typ\",/^[A-Z]\\w*/],[\"pln\",/^[a-z_$][a-z0-9_]*/i],[\"pun\",/^[~!%^&*+=|?:<>/-]/],[\"lit\",/^\\b0x[0-9a-f]+/i],[\"lit\",/^\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i],[\"lit\",\n/^\\b\\.\\d+(?:e[+-]?\\d+)?/i],[\"pun\",/^[(){}\\[\\],.;]/]]),[\"dart\"]);\n","source":"plugins/prettify/lang-dart.js","raw":"/*\n\n Copyright (C) 2013 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"com\",/^#!(?:.*)/],[\"kwd\",/^\\b(?:import|library|part of|part|as|show|hide)\\b/i],[\"com\",/^\\/\\/(?:.*)/],[\"com\",/^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//],[\"kwd\",/^\\b(?:class|interface)\\b/i],[\"kwd\",/^\\b(?:assert|async|await|break|case|catch|continue|default|do|else|finally|for|if|in|is|new|return|super|switch|sync|this|throw|try|while)\\b/i],[\"kwd\",/^\\b(?:abstract|const|extends|factory|final|get|implements|native|operator|set|static|typedef|var)\\b/i],\n[\"typ\",/^\\b(?:bool|double|Dynamic|int|num|Object|String|void)\\b/i],[\"kwd\",/^\\b(?:false|null|true)\\b/i],[\"str\",/^r?[\\']{3}[\\s|\\S]*?[^\\\\][\\']{3}/],[\"str\",/^r?[\\\"]{3}[\\s|\\S]*?[^\\\\][\\\"]{3}/],[\"str\",/^r?\\'(\\'|(?:[^\\n\\r\\f])*?[^\\\\]\\')/],[\"str\",/^r?\\\"(\\\"|(?:[^\\n\\r\\f])*?[^\\\\]\\\")/],[\"typ\",/^[A-Z]\\w*/],[\"pln\",/^[a-z_$][a-z0-9_]*/i],[\"pun\",/^[~!%^&*+=|?:<>/-]/],[\"lit\",/^\\b0x[0-9a-f]+/i],[\"lit\",/^\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i],[\"lit\",\n/^\\b\\.\\d+(?:e[+-]?\\d+)?/i],[\"pun\",/^[(){}\\[\\],.;]/]]),[\"dart\"]);\n","date":"2022-03-27T08:23:16.318Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-dart.js","layout":"false","title":"","comments":1,"_id":"cl22h70v6006c5oss4dmwcixn","content":"/*\n\n Copyright (C) 2013 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"com\",/^#!(?:.*)/],[\"kwd\",/^\\b(?:import|library|part of|part|as|show|hide)\\b/i],[\"com\",/^\\/\\/(?:.*)/],[\"com\",/^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//],[\"kwd\",/^\\b(?:class|interface)\\b/i],[\"kwd\",/^\\b(?:assert|async|await|break|case|catch|continue|default|do|else|finally|for|if|in|is|new|return|super|switch|sync|this|throw|try|while)\\b/i],[\"kwd\",/^\\b(?:abstract|const|extends|factory|final|get|implements|native|operator|set|static|typedef|var)\\b/i],\n[\"typ\",/^\\b(?:bool|double|Dynamic|int|num|Object|String|void)\\b/i],[\"kwd\",/^\\b(?:false|null|true)\\b/i],[\"str\",/^r?[\\']{3}[\\s|\\S]*?[^\\\\][\\']{3}/],[\"str\",/^r?[\\\"]{3}[\\s|\\S]*?[^\\\\][\\\"]{3}/],[\"str\",/^r?\\'(\\'|(?:[^\\n\\r\\f])*?[^\\\\]\\')/],[\"str\",/^r?\\\"(\\\"|(?:[^\\n\\r\\f])*?[^\\\\]\\\")/],[\"typ\",/^[A-Z]\\w*/],[\"pln\",/^[a-z_$][a-z0-9_]*/i],[\"pun\",/^[~!%^&*+=|?:<>/-]/],[\"lit\",/^\\b0x[0-9a-f]+/i],[\"lit\",/^\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i],[\"lit\",\n/^\\b\\.\\d+(?:e[+-]?\\d+)?/i],[\"pun\",/^[(){}\\[\\],.;]/]]),[\"dart\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"com\",/^#!(?:.*)/],[\"kwd\",/^\\b(?:import|library|part of|part|as|show|hide)\\b/i],[\"com\",/^\\/\\/(?:.*)/],[\"com\",/^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//],[\"kwd\",/^\\b(?:class|interface)\\b/i],[\"kwd\",/^\\b(?:assert|async|await|break|case|catch|continue|default|do|else|finally|for|if|in|is|new|return|super|switch|sync|this|throw|try|while)\\b/i],[\"kwd\",/^\\b(?:abstract|const|extends|factory|final|get|implements|native|operator|set|static|typedef|var)\\b/i],\n[\"typ\",/^\\b(?:bool|double|Dynamic|int|num|Object|String|void)\\b/i],[\"kwd\",/^\\b(?:false|null|true)\\b/i],[\"str\",/^r?[\\']{3}[\\s|\\S]*?[^\\\\][\\']{3}/],[\"str\",/^r?[\\\"]{3}[\\s|\\S]*?[^\\\\][\\\"]{3}/],[\"str\",/^r?\\'(\\'|(?:[^\\n\\r\\f])*?[^\\\\]\\')/],[\"str\",/^r?\\\"(\\\"|(?:[^\\n\\r\\f])*?[^\\\\]\\\")/],[\"typ\",/^[A-Z]\\w*/],[\"pln\",/^[a-z_$][a-z0-9_]*/i],[\"pun\",/^[~!%^&*+=|?:<>/-]/],[\"lit\",/^\\b0x[0-9a-f]+/i],[\"lit\",/^\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i],[\"lit\",\n/^\\b\\.\\d+(?:e[+-]?\\d+)?/i],[\"pun\",/^[(){}\\[\\],.;]/]]),[\"dart\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Andrew Allen\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^\\?[^ \\t\\n({]+/,null,\"?\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\n]*/],[\"kwd\",/^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/],\n[\"kwd\",/^-[a-z_]+/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;]/]]),[\"erlang\",\"erl\"]);\n","source":"plugins/prettify/lang-erl.js","raw":"/*\n\n Copyright (C) 2013 Andrew Allen\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^\\?[^ \\t\\n({]+/,null,\"?\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\n]*/],[\"kwd\",/^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/],\n[\"kwd\",/^-[a-z_]+/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;]/]]),[\"erlang\",\"erl\"]);\n","date":"2022-03-27T08:23:16.319Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-erl.js","layout":"false","title":"","comments":1,"_id":"cl22h70v6006d5oss8z8n4llh","content":"/*\n\n Copyright (C) 2013 Andrew Allen\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^\\?[^ \\t\\n({]+/,null,\"?\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\n]*/],[\"kwd\",/^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/],\n[\"kwd\",/^-[a-z_]+/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;]/]]),[\"erlang\",\"erl\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Andrew Allen\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^\\?[^ \\t\\n({]+/,null,\"?\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\n]*/],[\"kwd\",/^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/],\n[\"kwd\",/^-[a-z_]+/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;]/]]),[\"erlang\",\"erl\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","source":"plugins/prettify/lang-el.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","date":"2022-03-27T08:23:16.318Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-el.js","layout":"false","title":"","comments":1,"_id":"cl22h70v7006e5ossa4l4gwi0","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n"},{"_content":"/*\n\n Copyright (C) 2013 Andrew Allen\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^\\?[^ \\t\\n({]+/,null,\"?\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\n]*/],[\"kwd\",/^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/],\n[\"kwd\",/^-[a-z_]+/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;]/]]),[\"erlang\",\"erl\"]);\n","source":"plugins/prettify/lang-erlang.js","raw":"/*\n\n Copyright (C) 2013 Andrew Allen\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^\\?[^ \\t\\n({]+/,null,\"?\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\n]*/],[\"kwd\",/^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/],\n[\"kwd\",/^-[a-z_]+/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;]/]]),[\"erlang\",\"erl\"]);\n","date":"2022-03-27T08:23:16.320Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-erlang.js","layout":"false","title":"","comments":1,"_id":"cl22h70v7006f5ossgd9880jq","content":"/*\n\n Copyright (C) 2013 Andrew Allen\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^\\?[^ \\t\\n({]+/,null,\"?\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\n]*/],[\"kwd\",/^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/],\n[\"kwd\",/^-[a-z_]+/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;]/]]),[\"erlang\",\"erl\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Andrew Allen\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^\\?[^ \\t\\n({]+/,null,\"?\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\n]*/],[\"kwd\",/^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/],\n[\"kwd\",/^-[a-z_]+/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;]/]]),[\"erlang\",\"erl\"]);\n"},{"_content":"/*\n\n Copyright (C) 2017 Jacek Kr??likowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#.*/,null,\"#\"],[\"lit\",/^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/,null,\"'\"],[\"atn\",/^@\\w+/,null,\"@\"],[\"pun\",/^[!%&()*+,\\-;<=>?\\[\\\\\\]^{|}]+/,null,\"!%&()*+,-;<=>?[\\\\]^{|}\"],[\"lit\",/^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/,null,\"0123456789\"]],[[\"atn\",/^iex(?:\\(\\d+\\))?> /],\n[\"pun\",/^::/],[\"lit\",/^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/],[\"atn\",/^(?:__(?:CALLER|ENV|MODULE|DIR)__)/],[\"kwd\",/^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/],[\"lit\",/^(?:true|false|nil)\\b/],[\"lit\",/^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/],[\"str\",/^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/],\n[\"str\",/^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/],[\"typ\",/^[A-Z]\\w*/],[\"com\",/^_\\w*/],[\"pln\",/^[$a-z]\\w*[\\!\\?]?/],[\"atv\",/^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i],[\"atv\",/^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i],[\"pun\",/^(?:\\.+|\\/|[:~])/]]),[\"ex\",\"exs\"]);\n","source":"plugins/prettify/lang-ex.js","raw":"/*\n\n Copyright (C) 2017 Jacek Kr??likowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#.*/,null,\"#\"],[\"lit\",/^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/,null,\"'\"],[\"atn\",/^@\\w+/,null,\"@\"],[\"pun\",/^[!%&()*+,\\-;<=>?\\[\\\\\\]^{|}]+/,null,\"!%&()*+,-;<=>?[\\\\]^{|}\"],[\"lit\",/^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/,null,\"0123456789\"]],[[\"atn\",/^iex(?:\\(\\d+\\))?> /],\n[\"pun\",/^::/],[\"lit\",/^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/],[\"atn\",/^(?:__(?:CALLER|ENV|MODULE|DIR)__)/],[\"kwd\",/^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/],[\"lit\",/^(?:true|false|nil)\\b/],[\"lit\",/^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/],[\"str\",/^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/],\n[\"str\",/^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/],[\"typ\",/^[A-Z]\\w*/],[\"com\",/^_\\w*/],[\"pln\",/^[$a-z]\\w*[\\!\\?]?/],[\"atv\",/^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i],[\"atv\",/^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i],[\"pun\",/^(?:\\.+|\\/|[:~])/]]),[\"ex\",\"exs\"]);\n","date":"2022-03-27T08:23:16.321Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-ex.js","layout":"false","title":"","comments":1,"_id":"cl22h70v7006g5oss4t8ohn83","content":"/*\n\n Copyright (C) 2017 Jacek Kr??likowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#.*/,null,\"#\"],[\"lit\",/^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/,null,\"'\"],[\"atn\",/^@\\w+/,null,\"@\"],[\"pun\",/^[!%&()*+,\\-;<=>?\\[\\\\\\]^{|}]+/,null,\"!%&()*+,-;<=>?[\\\\]^{|}\"],[\"lit\",/^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/,null,\"0123456789\"]],[[\"atn\",/^iex(?:\\(\\d+\\))?> /],\n[\"pun\",/^::/],[\"lit\",/^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/],[\"atn\",/^(?:__(?:CALLER|ENV|MODULE|DIR)__)/],[\"kwd\",/^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/],[\"lit\",/^(?:true|false|nil)\\b/],[\"lit\",/^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/],[\"str\",/^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/],\n[\"str\",/^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/],[\"typ\",/^[A-Z]\\w*/],[\"com\",/^_\\w*/],[\"pln\",/^[$a-z]\\w*[\\!\\?]?/],[\"atv\",/^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i],[\"atv\",/^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i],[\"pun\",/^(?:\\.+|\\/|[:~])/]]),[\"ex\",\"exs\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2017 Jacek Kr??likowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#.*/,null,\"#\"],[\"lit\",/^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/,null,\"'\"],[\"atn\",/^@\\w+/,null,\"@\"],[\"pun\",/^[!%&()*+,\\-;<=>?\\[\\\\\\]^{|}]+/,null,\"!%&()*+,-;<=>?[\\\\]^{|}\"],[\"lit\",/^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/,null,\"0123456789\"]],[[\"atn\",/^iex(?:\\(\\d+\\))?> /],\n[\"pun\",/^::/],[\"lit\",/^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/],[\"atn\",/^(?:__(?:CALLER|ENV|MODULE|DIR)__)/],[\"kwd\",/^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/],[\"lit\",/^(?:true|false|nil)\\b/],[\"lit\",/^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/],[\"str\",/^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/],\n[\"str\",/^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/],[\"typ\",/^[A-Z]\\w*/],[\"com\",/^_\\w*/],[\"pln\",/^[$a-z]\\w*[\\!\\?]?/],[\"atv\",/^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i],[\"atv\",/^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i],[\"pun\",/^(?:\\.+|\\/|[:~])/]]),[\"ex\",\"exs\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i,null,\"#\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/],[\"kwd\",/^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/],\n[\"lit\",/^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i],[\"pun\",/^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/]]),[\"fs\",\"ml\"]);\n","source":"plugins/prettify/lang-fs.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i,null,\"#\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/],[\"kwd\",/^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/],\n[\"lit\",/^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i],[\"pun\",/^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/]]),[\"fs\",\"ml\"]);\n","date":"2022-03-27T08:23:16.323Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-fs.js","layout":"false","title":"","comments":1,"_id":"cl22h70v8006h5ossdlrx3jbp","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i,null,\"#\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/],[\"kwd\",/^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/],\n[\"lit\",/^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i],[\"pun\",/^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/]]),[\"fs\",\"ml\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i,null,\"#\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/],[\"kwd\",/^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/],\n[\"lit\",/^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i],[\"pun\",/^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/]]),[\"fs\",\"ml\"]);\n"},{"_content":"/*\n\n Copyright (C) 2017 Jacek Kr??likowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#.*/,null,\"#\"],[\"lit\",/^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/,null,\"'\"],[\"atn\",/^@\\w+/,null,\"@\"],[\"pun\",/^[!%&()*+,\\-;<=>?\\[\\\\\\]^{|}]+/,null,\"!%&()*+,-;<=>?[\\\\]^{|}\"],[\"lit\",/^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/,null,\"0123456789\"]],[[\"atn\",/^iex(?:\\(\\d+\\))?> /],\n[\"pun\",/^::/],[\"lit\",/^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/],[\"atn\",/^(?:__(?:CALLER|ENV|MODULE|DIR)__)/],[\"kwd\",/^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/],[\"lit\",/^(?:true|false|nil)\\b/],[\"lit\",/^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/],[\"str\",/^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/],\n[\"str\",/^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/],[\"typ\",/^[A-Z]\\w*/],[\"com\",/^_\\w*/],[\"pln\",/^[$a-z]\\w*[\\!\\?]?/],[\"atv\",/^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i],[\"atv\",/^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i],[\"pun\",/^(?:\\.+|\\/|[:~])/]]),[\"ex\",\"exs\"]);\n","source":"plugins/prettify/lang-exs.js","raw":"/*\n\n Copyright (C) 2017 Jacek Kr??likowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#.*/,null,\"#\"],[\"lit\",/^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/,null,\"'\"],[\"atn\",/^@\\w+/,null,\"@\"],[\"pun\",/^[!%&()*+,\\-;<=>?\\[\\\\\\]^{|}]+/,null,\"!%&()*+,-;<=>?[\\\\]^{|}\"],[\"lit\",/^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/,null,\"0123456789\"]],[[\"atn\",/^iex(?:\\(\\d+\\))?> /],\n[\"pun\",/^::/],[\"lit\",/^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/],[\"atn\",/^(?:__(?:CALLER|ENV|MODULE|DIR)__)/],[\"kwd\",/^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/],[\"lit\",/^(?:true|false|nil)\\b/],[\"lit\",/^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/],[\"str\",/^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/],\n[\"str\",/^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/],[\"typ\",/^[A-Z]\\w*/],[\"com\",/^_\\w*/],[\"pln\",/^[$a-z]\\w*[\\!\\?]?/],[\"atv\",/^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i],[\"atv\",/^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i],[\"pun\",/^(?:\\.+|\\/|[:~])/]]),[\"ex\",\"exs\"]);\n","date":"2022-03-27T08:23:16.322Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-exs.js","layout":"false","title":"","comments":1,"_id":"cl22h70v8006i5ossdc882apx","content":"/*\n\n Copyright (C) 2017 Jacek Kr??likowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#.*/,null,\"#\"],[\"lit\",/^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/,null,\"'\"],[\"atn\",/^@\\w+/,null,\"@\"],[\"pun\",/^[!%&()*+,\\-;<=>?\\[\\\\\\]^{|}]+/,null,\"!%&()*+,-;<=>?[\\\\]^{|}\"],[\"lit\",/^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/,null,\"0123456789\"]],[[\"atn\",/^iex(?:\\(\\d+\\))?> /],\n[\"pun\",/^::/],[\"lit\",/^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/],[\"atn\",/^(?:__(?:CALLER|ENV|MODULE|DIR)__)/],[\"kwd\",/^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/],[\"lit\",/^(?:true|false|nil)\\b/],[\"lit\",/^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/],[\"str\",/^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/],\n[\"str\",/^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/],[\"typ\",/^[A-Z]\\w*/],[\"com\",/^_\\w*/],[\"pln\",/^[$a-z]\\w*[\\!\\?]?/],[\"atv\",/^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i],[\"atv\",/^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i],[\"pun\",/^(?:\\.+|\\/|[:~])/]]),[\"ex\",\"exs\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2017 Jacek Kr??likowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#.*/,null,\"#\"],[\"lit\",/^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/,null,\"'\"],[\"atn\",/^@\\w+/,null,\"@\"],[\"pun\",/^[!%&()*+,\\-;<=>?\\[\\\\\\]^{|}]+/,null,\"!%&()*+,-;<=>?[\\\\]^{|}\"],[\"lit\",/^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/,null,\"0123456789\"]],[[\"atn\",/^iex(?:\\(\\d+\\))?> /],\n[\"pun\",/^::/],[\"lit\",/^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/],[\"atn\",/^(?:__(?:CALLER|ENV|MODULE|DIR)__)/],[\"kwd\",/^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/],[\"lit\",/^(?:true|false|nil)\\b/],[\"lit\",/^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/],[\"str\",/^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/],\n[\"str\",/^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/],[\"typ\",/^[A-Z]\\w*/],[\"com\",/^_\\w*/],[\"pln\",/^[$a-z]\\w*[\\!\\?]?/],[\"atv\",/^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i],[\"atv\",/^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i],[\"pun\",/^(?:\\.+|\\/|[:~])/]]),[\"ex\",\"exs\"]);\n"},{"_content":"/*\n\n Copyright (C) 2010 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"pln\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])+(?:\\'|$)|`[^`]*(?:`|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\/)/],[\"pln\",/^(?:[^\\/\\\"\\'`]|\\/(?![\\/\\*]))+/i]]),[\"go\"]);\n","source":"plugins/prettify/lang-go.js","raw":"/*\n\n Copyright (C) 2010 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"pln\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])+(?:\\'|$)|`[^`]*(?:`|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\/)/],[\"pln\",/^(?:[^\\/\\\"\\'`]|\\/(?![\\/\\*]))+/i]]),[\"go\"]);\n","date":"2022-03-27T08:23:16.324Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-go.js","layout":"false","title":"","comments":1,"_id":"cl22h70v9006j5oss7kl75dxa","content":"/*\n\n Copyright (C) 2010 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"pln\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])+(?:\\'|$)|`[^`]*(?:`|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\/)/],[\"pln\",/^(?:[^\\/\\\"\\'`]|\\/(?![\\/\\*]))+/i]]),[\"go\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2010 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"pln\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])+(?:\\'|$)|`[^`]*(?:`|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\/)/],[\"pln\",/^(?:[^\\/\\\"\\'`]|\\/(?![\\/\\*]))+/i]]),[\"go\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","source":"plugins/prettify/lang-lassoscript.js","raw":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","date":"2022-03-27T08:23:16.328Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-lassoscript.js","layout":"false","title":"","comments":1,"_id":"cl22h70v9006k5ossg2d85v1k","content":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n"},{"_content":"/*\n\n Copyright (C) 2017 Micha?? B??czkowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"pun\",/^[.!%&()*+,\\-;<=>?\\[\\\\\\]^{|}:]+/,null,\".!%&()*+,-;<=>?[\\\\]^{|}:\"]],[[\"kwd\",/^\\b(package|public|protected|private|open|abstract|constructor|final|override|import|for|while|as|typealias|get|set|((data|enum|annotation|sealed) )?class|this|super|val|var|fun|is|in|throw|return|break|continue|(companion )?object|if|try|else|do|when|init|interface|typeof)\\b/],[\"lit\",/^(?:true|false|null)\\b/],\n[\"lit\",/^(0[xX][0-9a-fA-F_]+L?|0[bB][0-1]+L?|[0-9_.]+([eE]-?[0-9]+)?[fFL]?)/],[\"typ\",/^(\\b[A-Z]+[a-z][a-zA-Z0-9_$@]*|`.*`)/,null],[\"com\",/^\\/\\/.*/],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],[\"str\",/'.'/],[\"str\",/^\"([^\"\\\\]|\\\\[\\s\\S])*\"/],[\"str\",/^\"{3}[\\s\\S]*?[^\\\\]\"{3}/],[\"lit\",/^@([a-zA-Z0-9_$@]*|`.*`)/],[\"lit\",/^[a-zA-Z0-9_]+@/]]),[\"kotlin\"]);\n","source":"plugins/prettify/lang-kotlin.js","raw":"/*\n\n Copyright (C) 2017 Micha?? B??czkowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"pun\",/^[.!%&()*+,\\-;<=>?\\[\\\\\\]^{|}:]+/,null,\".!%&()*+,-;<=>?[\\\\]^{|}:\"]],[[\"kwd\",/^\\b(package|public|protected|private|open|abstract|constructor|final|override|import|for|while|as|typealias|get|set|((data|enum|annotation|sealed) )?class|this|super|val|var|fun|is|in|throw|return|break|continue|(companion )?object|if|try|else|do|when|init|interface|typeof)\\b/],[\"lit\",/^(?:true|false|null)\\b/],\n[\"lit\",/^(0[xX][0-9a-fA-F_]+L?|0[bB][0-1]+L?|[0-9_.]+([eE]-?[0-9]+)?[fFL]?)/],[\"typ\",/^(\\b[A-Z]+[a-z][a-zA-Z0-9_$@]*|`.*`)/,null],[\"com\",/^\\/\\/.*/],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],[\"str\",/'.'/],[\"str\",/^\"([^\"\\\\]|\\\\[\\s\\S])*\"/],[\"str\",/^\"{3}[\\s\\S]*?[^\\\\]\"{3}/],[\"lit\",/^@([a-zA-Z0-9_$@]*|`.*`)/],[\"lit\",/^[a-zA-Z0-9_]+@/]]),[\"kotlin\"]);\n","date":"2022-03-27T08:23:16.325Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-kotlin.js","layout":"false","title":"","comments":1,"_id":"cl22h70va006l5oss7kwn0851","content":"/*\n\n Copyright (C) 2017 Micha?? B??czkowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"pun\",/^[.!%&()*+,\\-;<=>?\\[\\\\\\]^{|}:]+/,null,\".!%&()*+,-;<=>?[\\\\]^{|}:\"]],[[\"kwd\",/^\\b(package|public|protected|private|open|abstract|constructor|final|override|import|for|while|as|typealias|get|set|((data|enum|annotation|sealed) )?class|this|super|val|var|fun|is|in|throw|return|break|continue|(companion )?object|if|try|else|do|when|init|interface|typeof)\\b/],[\"lit\",/^(?:true|false|null)\\b/],\n[\"lit\",/^(0[xX][0-9a-fA-F_]+L?|0[bB][0-1]+L?|[0-9_.]+([eE]-?[0-9]+)?[fFL]?)/],[\"typ\",/^(\\b[A-Z]+[a-z][a-zA-Z0-9_$@]*|`.*`)/,null],[\"com\",/^\\/\\/.*/],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],[\"str\",/'.'/],[\"str\",/^\"([^\"\\\\]|\\\\[\\s\\S])*\"/],[\"str\",/^\"{3}[\\s\\S]*?[^\\\\]\"{3}/],[\"lit\",/^@([a-zA-Z0-9_$@]*|`.*`)/],[\"lit\",/^[a-zA-Z0-9_]+@/]]),[\"kotlin\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2017 Micha?? B??czkowski\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"pun\",/^[.!%&()*+,\\-;<=>?\\[\\\\\\]^{|}:]+/,null,\".!%&()*+,-;<=>?[\\\\]^{|}:\"]],[[\"kwd\",/^\\b(package|public|protected|private|open|abstract|constructor|final|override|import|for|while|as|typealias|get|set|((data|enum|annotation|sealed) )?class|this|super|val|var|fun|is|in|throw|return|break|continue|(companion )?object|if|try|else|do|when|init|interface|typeof)\\b/],[\"lit\",/^(?:true|false|null)\\b/],\n[\"lit\",/^(0[xX][0-9a-fA-F_]+L?|0[bB][0-1]+L?|[0-9_.]+([eE]-?[0-9]+)?[fFL]?)/],[\"typ\",/^(\\b[A-Z]+[a-z][a-zA-Z0-9_$@]*|`.*`)/,null],[\"com\",/^\\/\\/.*/],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],[\"str\",/'.'/],[\"str\",/^\"([^\"\\\\]|\\\\[\\s\\S])*\"/],[\"str\",/^\"{3}[\\s\\S]*?[^\\\\]\"{3}/],[\"lit\",/^@([a-zA-Z0-9_$@]*|`.*`)/],[\"lit\",/^[a-zA-Z0-9_]+@/]]),[\"kotlin\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","source":"plugins/prettify/lang-lasso.js","raw":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","date":"2022-03-27T08:23:16.327Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-lasso.js","layout":"false","title":"","comments":1,"_id":"cl22h70va006m5ossdenx0qcs","content":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n"},{"_content":"/*\n\n Copyright (C) 2014 Paulo Moura\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\r\\n]*/,null,\"%\"],[\"com\",/^\\/\\*[\\s\\S]*?\\*\\//],[\"kwd\",/^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/],\n[\"kwd\",/^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;{}:^<>=\\\\/+*?#!-]/]]),[\"logtalk\",\"lgt\"]);\n","source":"plugins/prettify/lang-lgt.js","raw":"/*\n\n Copyright (C) 2014 Paulo Moura\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\r\\n]*/,null,\"%\"],[\"com\",/^\\/\\*[\\s\\S]*?\\*\\//],[\"kwd\",/^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/],\n[\"kwd\",/^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;{}:^<>=\\\\/+*?#!-]/]]),[\"logtalk\",\"lgt\"]);\n","date":"2022-03-27T08:23:16.330Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-lgt.js","layout":"false","title":"","comments":1,"_id":"cl22h70va006n5ossbdkser1c","content":"/*\n\n Copyright (C) 2014 Paulo Moura\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\r\\n]*/,null,\"%\"],[\"com\",/^\\/\\*[\\s\\S]*?\\*\\//],[\"kwd\",/^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/],\n[\"kwd\",/^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;{}:^<>=\\\\/+*?#!-]/]]),[\"logtalk\",\"lgt\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2014 Paulo Moura\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\r\\n]*/,null,\"%\"],[\"com\",/^\\/\\*[\\s\\S]*?\\*\\//],[\"kwd\",/^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/],\n[\"kwd\",/^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;{}:^<>=\\\\/+*?#!-]/]]),[\"logtalk\",\"lgt\"]);\n"},{"_content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])\\'?/,null,\"'\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^(?:(?:--+(?:[^\\r\\n\\x0C]*)?)|(?:\\{-(?:[^-]|-+[^-\\}])*-\\}))/],[\"kwd\",/^(?:case|class|data|default|deriving|do|else|if|import|in|infix|infixl|infixr|instance|let|module|newtype|of|then|type|where|_)(?=[^a-zA-Z0-9\\']|$)/,\nnull],[\"pln\",/^(?:[A-Z][\\w\\']*\\.)*[a-zA-Z][\\w\\']*/],[\"pun\",/^[^\\t\\n\\x0B\\x0C\\r a-zA-Z0-9\\'\\\"]+/]]),[\"hs\"]);\n","source":"plugins/prettify/lang-hs.js","raw":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])\\'?/,null,\"'\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^(?:(?:--+(?:[^\\r\\n\\x0C]*)?)|(?:\\{-(?:[^-]|-+[^-\\}])*-\\}))/],[\"kwd\",/^(?:case|class|data|default|deriving|do|else|if|import|in|infix|infixl|infixr|instance|let|module|newtype|of|then|type|where|_)(?=[^a-zA-Z0-9\\']|$)/,\nnull],[\"pln\",/^(?:[A-Z][\\w\\']*\\.)*[a-zA-Z][\\w\\']*/],[\"pun\",/^[^\\t\\n\\x0B\\x0C\\r a-zA-Z0-9\\'\\\"]+/]]),[\"hs\"]);\n","date":"2022-03-27T08:23:16.325Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-hs.js","layout":"false","title":"","comments":1,"_id":"cl22h70va006o5ossc7fs4edm","content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])\\'?/,null,\"'\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^(?:(?:--+(?:[^\\r\\n\\x0C]*)?)|(?:\\{-(?:[^-]|-+[^-\\}])*-\\}))/],[\"kwd\",/^(?:case|class|data|default|deriving|do|else|if|import|in|infix|infixl|infixr|instance|let|module|newtype|of|then|type|where|_)(?=[^a-zA-Z0-9\\']|$)/,\nnull],[\"pln\",/^(?:[A-Z][\\w\\']*\\.)*[a-zA-Z][\\w\\']*/],[\"pun\",/^[^\\t\\n\\x0B\\x0C\\r a-zA-Z0-9\\'\\\"]+/]]),[\"hs\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\x0B\\x0C\\r ]+/,null,\"\\t\\n\\x0B\\f\\r \"],[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])\\'?/,null,\"'\"],[\"lit\",/^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^(?:(?:--+(?:[^\\r\\n\\x0C]*)?)|(?:\\{-(?:[^-]|-+[^-\\}])*-\\}))/],[\"kwd\",/^(?:case|class|data|default|deriving|do|else|if|import|in|infix|infixl|infixr|instance|let|module|newtype|of|then|type|where|_)(?=[^a-zA-Z0-9\\']|$)/,\nnull],[\"pln\",/^(?:[A-Z][\\w\\']*\\.)*[a-zA-Z][\\w\\']*/],[\"pun\",/^[^\\t\\n\\x0B\\x0C\\r a-zA-Z0-9\\'\\\"]+/]]),[\"hs\"]);\n"},{"_content":"/*\n\n Copyright (C) 2011 Martin S.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^\\\\./],[\"typ\",/^[$&]/],[\"lit\",/[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i],[\"pun\",/^[{}()\\[\\]=]+/]]),[\"latex\",\"tex\"]);\n","source":"plugins/prettify/lang-latex.js","raw":"/*\n\n Copyright (C) 2011 Martin S.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^\\\\./],[\"typ\",/^[$&]/],[\"lit\",/[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i],[\"pun\",/^[{}()\\[\\]=]+/]]),[\"latex\",\"tex\"]);\n","date":"2022-03-27T08:23:16.329Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-latex.js","layout":"false","title":"","comments":1,"_id":"cl22h70vb006p5oss3gq5cgd0","content":"/*\n\n Copyright (C) 2011 Martin S.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^\\\\./],[\"typ\",/^[$&]/],[\"lit\",/[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i],[\"pun\",/^[{}()\\[\\]=]+/]]),[\"latex\",\"tex\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2011 Martin S.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^\\\\./],[\"typ\",/^[$&]/],[\"lit\",/[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i],[\"pun\",/^[{}()\\[\\]=]+/]]),[\"latex\",\"tex\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","source":"plugins/prettify/lang-lisp.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","date":"2022-03-27T08:23:16.332Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-lisp.js","layout":"false","title":"","comments":1,"_id":"cl22h70vb006q5ossav4840nr","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n"},{"_content":"/*\n\n Copyright (C) 2013 Nikhil Dabas\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"com\",/^;[^\\r\\n]*/,null,\";\"]],[[\"pln\",/^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/],[\"kwd\",/^[A-Za-z_][0-9A-Za-z_]*/,null],[\"lit\",/^\\d+\\.\\d+/],[\"lit\",/^(?:\\d+|0[xX][a-fA-F0-9]+)/],[\"pun\",/^[()\\[\\]{},=*<>:]|\\.\\.\\.$/]]),[\"llvm\",\"ll\"]);\n","source":"plugins/prettify/lang-llvm.js","raw":"/*\n\n Copyright (C) 2013 Nikhil Dabas\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"com\",/^;[^\\r\\n]*/,null,\";\"]],[[\"pln\",/^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/],[\"kwd\",/^[A-Za-z_][0-9A-Za-z_]*/,null],[\"lit\",/^\\d+\\.\\d+/],[\"lit\",/^(?:\\d+|0[xX][a-fA-F0-9]+)/],[\"pun\",/^[()\\[\\]{},=*<>:]|\\.\\.\\.$/]]),[\"llvm\",\"ll\"]);\n","date":"2022-03-27T08:23:16.334Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-llvm.js","layout":"false","title":"","comments":1,"_id":"cl22h70vb006r5osscs885kvp","content":"/*\n\n Copyright (C) 2013 Nikhil Dabas\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"com\",/^;[^\\r\\n]*/,null,\";\"]],[[\"pln\",/^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/],[\"kwd\",/^[A-Za-z_][0-9A-Za-z_]*/,null],[\"lit\",/^\\d+\\.\\d+/],[\"lit\",/^(?:\\d+|0[xX][a-fA-F0-9]+)/],[\"pun\",/^[()\\[\\]{},=*<>:]|\\.\\.\\.$/]]),[\"llvm\",\"ll\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Nikhil Dabas\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"com\",/^;[^\\r\\n]*/,null,\";\"]],[[\"pln\",/^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/],[\"kwd\",/^[A-Za-z_][0-9A-Za-z_]*/,null],[\"lit\",/^\\d+\\.\\d+/],[\"lit\",/^(?:\\d+|0[xX][a-fA-F0-9]+)/],[\"pun\",/^[()\\[\\]{},=*<>:]|\\.\\.\\.$/]]),[\"llvm\",\"ll\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Nikhil Dabas\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"com\",/^;[^\\r\\n]*/,null,\";\"]],[[\"pln\",/^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/],[\"kwd\",/^[A-Za-z_][0-9A-Za-z_]*/,null],[\"lit\",/^\\d+\\.\\d+/],[\"lit\",/^(?:\\d+|0[xX][a-fA-F0-9]+)/],[\"pun\",/^[()\\[\\]{},=*<>:]|\\.\\.\\.$/]]),[\"llvm\",\"ll\"]);\n","source":"plugins/prettify/lang-ll.js","raw":"/*\n\n Copyright (C) 2013 Nikhil Dabas\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"com\",/^;[^\\r\\n]*/,null,\";\"]],[[\"pln\",/^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/],[\"kwd\",/^[A-Za-z_][0-9A-Za-z_]*/,null],[\"lit\",/^\\d+\\.\\d+/],[\"lit\",/^(?:\\d+|0[xX][a-fA-F0-9]+)/],[\"pun\",/^[()\\[\\]{},=*<>:]|\\.\\.\\.$/]]),[\"llvm\",\"ll\"]);\n","date":"2022-03-27T08:23:16.333Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-ll.js","layout":"false","title":"","comments":1,"_id":"cl22h70vc006s5oss9pl2hx2q","content":"/*\n\n Copyright (C) 2013 Nikhil Dabas\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"com\",/^;[^\\r\\n]*/,null,\";\"]],[[\"pln\",/^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/],[\"kwd\",/^[A-Za-z_][0-9A-Za-z_]*/,null],[\"lit\",/^\\d+\\.\\d+/],[\"lit\",/^(?:\\d+|0[xX][a-fA-F0-9]+)/],[\"pun\",/^[()\\[\\]{},=*<>:]|\\.\\.\\.$/]]),[\"llvm\",\"ll\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Nikhil Dabas\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"com\",/^;[^\\r\\n]*/,null,\";\"]],[[\"pln\",/^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/],[\"kwd\",/^[A-Za-z_][0-9A-Za-z_]*/,null],[\"lit\",/^\\d+\\.\\d+/],[\"lit\",/^(?:\\d+|0[xX][a-fA-F0-9]+)/],[\"pun\",/^[()\\[\\]{},=*<>:]|\\.\\.\\.$/]]),[\"llvm\",\"ll\"]);\n"},{"_content":"/*\n\n Copyright (C) 2014 Paulo Moura\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\r\\n]*/,null,\"%\"],[\"com\",/^\\/\\*[\\s\\S]*?\\*\\//],[\"kwd\",/^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/],\n[\"kwd\",/^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;{}:^<>=\\\\/+*?#!-]/]]),[\"logtalk\",\"lgt\"]);\n","source":"plugins/prettify/lang-logtalk.js","raw":"/*\n\n Copyright (C) 2014 Paulo Moura\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\r\\n]*/,null,\"%\"],[\"com\",/^\\/\\*[\\s\\S]*?\\*\\//],[\"kwd\",/^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/],\n[\"kwd\",/^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;{}:^<>=\\\\/+*?#!-]/]]),[\"logtalk\",\"lgt\"]);\n","date":"2022-03-27T08:23:16.335Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-logtalk.js","layout":"false","title":"","comments":1,"_id":"cl22h70vc006t5osscy5g7f4m","content":"/*\n\n Copyright (C) 2014 Paulo Moura\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\r\\n]*/,null,\"%\"],[\"com\",/^\\/\\*[\\s\\S]*?\\*\\//],[\"kwd\",/^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/],\n[\"kwd\",/^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;{}:^<>=\\\\/+*?#!-]/]]),[\"logtalk\",\"lgt\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2014 Paulo Moura\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"lit\",/^[a-z][a-zA-Z0-9_]*/],[\"lit\",/^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/,null,\"'\"],[\"lit\",/^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"]],[[\"com\",/^%[^\\r\\n]*/,null,\"%\"],[\"com\",/^\\/\\*[\\s\\S]*?\\*\\//],[\"kwd\",/^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/],\n[\"kwd\",/^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/],[\"typ\",/^[A-Z_][a-zA-Z0-9_]*/],[\"pun\",/^[.,;{}:^<>=\\\\/+*?#!-]/]]),[\"logtalk\",\"lgt\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","source":"plugins/prettify/lang-ls.js","raw":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","date":"2022-03-27T08:23:16.338Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-ls.js","layout":"false","title":"","comments":1,"_id":"cl22h70vc006u5oss4u47ct8e","content":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Eric Knibbe\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/,null,\"'\"],[\"str\",/^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\`[^\\`]*(?:\\`|$)/,null,\"`\"],[\"lit\",/^0x[\\da-f]+|\\d+/i,null,\"0123456789\"],[\"atn\",/^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i,null,\"#$\"]],[[\"tag\",/^[[\\]]|<\\?(?:lasso(?:script)?|=)|\\?>|(no_square_brackets|noprocess)\\b/i],[\"com\",\n/^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//],[\"atn\",/^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i],[\"lit\",/^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i],[\"atv\",/^::\\s*[a-z_][\\w.]*/i],[\"lit\",/^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i],[\"typ\",/^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i],\n[\"kwd\",/^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i],\n[\"pln\",/^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i],[\"pun\",/^:=|[-+*\\/%=<>&|!?\\\\]+/]]),[\"lasso\",\"ls\",\"lassoscript\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","source":"plugins/prettify/lang-lsp.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","date":"2022-03-27T08:23:16.339Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-lsp.js","layout":"false","title":"","comments":1,"_id":"cl22h70vd006v5oss8a9wc7e1","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^--(?:\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)|[^\\r\\n]*)/],[\"str\",/^\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)/],[\"kwd\",/^(?:and|break|do|else|elseif|end|false|for|function|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,null],[\"lit\",/^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],\n[\"pln\",/^[a-z_]\\w*/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0][^\\w\\t\\n\\r \\xA0\\\"\\'\\-\\+=]*/]]),[\"lua\"]);\n","source":"plugins/prettify/lang-lua.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^--(?:\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)|[^\\r\\n]*)/],[\"str\",/^\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)/],[\"kwd\",/^(?:and|break|do|else|elseif|end|false|for|function|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,null],[\"lit\",/^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],\n[\"pln\",/^[a-z_]\\w*/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0][^\\w\\t\\n\\r \\xA0\\\"\\'\\-\\+=]*/]]),[\"lua\"]);\n","date":"2022-03-27T08:23:16.340Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-lua.js","layout":"false","title":"","comments":1,"_id":"cl22h70vd006w5ossfsqb442p","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^--(?:\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)|[^\\r\\n]*)/],[\"str\",/^\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)/],[\"kwd\",/^(?:and|break|do|else|elseif|end|false|for|function|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,null],[\"lit\",/^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],\n[\"pln\",/^[a-z_]\\w*/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0][^\\w\\t\\n\\r \\xA0\\\"\\'\\-\\+=]*/]]),[\"lua\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^--(?:\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)|[^\\r\\n]*)/],[\"str\",/^\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)/],[\"kwd\",/^(?:and|break|do|else|elseif|end|false|for|function|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,null],[\"lit\",/^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],\n[\"pln\",/^[a-z_]\\w*/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0][^\\w\\t\\n\\r \\xA0\\\"\\'\\-\\+=]*/]]),[\"lua\"]);\n"},{"_content":"/*\n\n Copyright (c) 2013 by Amro <amroamroamro@gmail.com>\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\nvar a=window.PR,b=[[a.PR_PLAIN,/^[ \\t\\r\\n\\v\\f\\xA0]+/,null,\" \\t\\r\\n\\x0B\\f\\u00a0\"],[a.PR_COMMENT,/^%\\{[^%]*%+(?:[^\\}%][^%]*%+)*\\}/,null],[a.PR_COMMENT,/^%[^\\r\\n]*/,null,\"%\"],[\"syscmd\",/^![^\\r\\n]*/,null,\"!\"]],c=[[\"linecont\",/^\\.\\.\\.\\s*[\\r\\n]/,null],[\"err\",/^\\?\\?\\? [^\\r\\n]*/,null],[\"wrn\",/^Warning: [^\\r\\n]*/,null],[\"codeoutput\",/^>>\\s+/,null],[\"codeoutput\",/^octave:\\d+>\\s+/,null],[\"lang-matlab-operators\",/^((?:[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*|\\)|\\]|\\}|\\.)')/,null],[\"lang-matlab-identifiers\",\n/^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)(?!')/,null],[a.PR_STRING,/^'(?:[^']|'')*'/,null],[a.PR_LITERAL,/^[+\\-]?\\.?\\d+(?:\\.\\d*)?(?:[Ee][+\\-]?\\d+)?[ij]?/,null],[a.PR_TAG,/^(?:\\{|\\}|\\(|\\)|\\[|\\])/,null],[a.PR_PUNCTUATION,/^(?:<|>|=|~|@|&|;|,|:|!|\\-|\\+|\\*|\\^|\\.|\\||\\\\|\\/)/,null]],d=[[\"lang-matlab-identifiers\",/^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)/,null],[a.PR_TAG,/^(?:\\{|\\}|\\(|\\)|\\[|\\])/,null],[a.PR_PUNCTUATION,/^(?:<|>|=|~|@|&|;|,|:|!|\\-|\\+|\\*|\\^|\\.|\\||\\\\|\\/)/,null],[\"transpose\",\n/^'/,null]];\na.registerLangHandler(a.createSimpleLexer([],[[a.PR_KEYWORD,/^\\b(?:break|case|catch|classdef|continue|else|elseif|end|for|function|global|if|otherwise|parfor|persistent|return|spmd|switch|try|while)\\b/,null],[\"const\",/^\\b(?:true|false|inf|Inf|nan|NaN|eps|pi|ans|nargin|nargout|varargin|varargout)\\b/,null],[a.PR_TYPE,/^\\b(?:cell|struct|char|double|single|logical|u?int(?:8|16|32|64)|sparse)\\b/,null],[\"fun\",/^\\b(?:abs|accumarray|acos(?:d|h)?|acot(?:d|h)?|acsc(?:d|h)?|actxcontrol(?:list|select)?|actxGetRunningServer|actxserver|addlistener|addpath|addpref|addtodate|airy|align|alim|all|allchild|alpha|alphamap|amd|ancestor|and|angle|annotation|any|area|arrayfun|asec(?:d|h)?|asin(?:d|h)?|assert|assignin|atan(?:2|d|h)?|audiodevinfo|audioplayer|audiorecorder|aufinfo|auread|autumn|auwrite|avifile|aviinfo|aviread|axes|axis|balance|bar(?:3|3h|h)?|base2dec|beep|BeginInvoke|bench|bessel(?:h|i|j|k|y)|beta|betainc|betaincinv|betaln|bicg|bicgstab|bicgstabl|bin2dec|bitand|bitcmp|bitget|bitmax|bitnot|bitor|bitset|bitshift|bitxor|blanks|blkdiag|bone|box|brighten|brush|bsxfun|builddocsearchdb|builtin|bvp4c|bvp5c|bvpget|bvpinit|bvpset|bvpxtend|calendar|calllib|callSoapService|camdolly|cameratoolbar|camlight|camlookat|camorbit|campan|campos|camproj|camroll|camtarget|camup|camva|camzoom|cart2pol|cart2sph|cast|cat|caxis|cd|cdf2rdf|cdfepoch|cdfinfo|cdflib(?:.(?:close|closeVar|computeEpoch|computeEpoch16|create|createAttr|createVar|delete|deleteAttr|deleteAttrEntry|deleteAttrgEntry|deleteVar|deleteVarRecords|epoch16Breakdown|epochBreakdown|getAttrEntry|getAttrgEntry|getAttrMaxEntry|getAttrMaxgEntry|getAttrName|getAttrNum|getAttrScope|getCacheSize|getChecksum|getCompression|getCompressionCacheSize|getConstantNames|getConstantValue|getCopyright|getFileBackward|getFormat|getLibraryCopyright|getLibraryVersion|getMajority|getName|getNumAttrEntries|getNumAttrgEntries|getNumAttributes|getNumgAttributes|getReadOnlyMode|getStageCacheSize|getValidate|getVarAllocRecords|getVarBlockingFactor|getVarCacheSize|getVarCompression|getVarData|getVarMaxAllocRecNum|getVarMaxWrittenRecNum|getVarName|getVarNum|getVarNumRecsWritten|getVarPadValue|getVarRecordData|getVarReservePercent|getVarsMaxWrittenRecNum|getVarSparseRecords|getVersion|hyperGetVarData|hyperPutVarData|inquire|inquireAttr|inquireAttrEntry|inquireAttrgEntry|inquireVar|open|putAttrEntry|putAttrgEntry|putVarData|putVarRecordData|renameAttr|renameVar|setCacheSize|setChecksum|setCompression|setCompressionCacheSize|setFileBackward|setFormat|setMajority|setReadOnlyMode|setStageCacheSize|setValidate|setVarAllocBlockRecords|setVarBlockingFactor|setVarCacheSize|setVarCompression|setVarInitialRecs|setVarPadValue|SetVarReservePercent|setVarsCacheSize|setVarSparseRecords))?|cdfread|cdfwrite|ceil|cell2mat|cell2struct|celldisp|cellfun|cellplot|cellstr|cgs|checkcode|checkin|checkout|chol|cholinc|cholupdate|circshift|cla|clabel|class|clc|clear|clearvars|clf|clipboard|clock|close|closereq|cmopts|cmpermute|cmunique|colamd|colon|colorbar|colordef|colormap|colormapeditor|colperm|Combine|comet|comet3|commandhistory|commandwindow|compan|compass|complex|computer|cond|condeig|condest|coneplot|conj|containers.Map|contour(?:3|c|f|slice)?|contrast|conv|conv2|convhull|convhulln|convn|cool|copper|copyfile|copyobj|corrcoef|cos(?:d|h)?|cot(?:d|h)?|cov|cplxpair|cputime|createClassFromWsdl|createSoapMessage|cross|csc(?:d|h)?|csvread|csvwrite|ctranspose|cumprod|cumsum|cumtrapz|curl|customverctrl|cylinder|daqread|daspect|datacursormode|datatipinfo|date|datenum|datestr|datetick|datevec|dbclear|dbcont|dbdown|dblquad|dbmex|dbquit|dbstack|dbstatus|dbstep|dbstop|dbtype|dbup|dde23|ddeget|ddesd|ddeset|deal|deblank|dec2base|dec2bin|dec2hex|decic|deconv|del2|delaunay|delaunay3|delaunayn|DelaunayTri|delete|demo|depdir|depfun|det|detrend|deval|diag|dialog|diary|diff|diffuse|dir|disp|display|dither|divergence|dlmread|dlmwrite|dmperm|doc|docsearch|dos|dot|dragrect|drawnow|dsearch|dsearchn|dynamicprops|echo|echodemo|edit|eig|eigs|ellipj|ellipke|ellipsoid|empty|enableNETfromNetworkDrive|enableservice|EndInvoke|enumeration|eomday|eq|erf|erfc|erfcinv|erfcx|erfinv|error|errorbar|errordlg|etime|etree|etreeplot|eval|evalc|evalin|event.(?:EventData|listener|PropertyEvent|proplistener)|exifread|exist|exit|exp|expint|expm|expm1|export2wsdlg|eye|ezcontour|ezcontourf|ezmesh|ezmeshc|ezplot|ezplot3|ezpolar|ezsurf|ezsurfc|factor|factorial|fclose|feather|feature|feof|ferror|feval|fft|fft2|fftn|fftshift|fftw|fgetl|fgets|fieldnames|figure|figurepalette|fileattrib|filebrowser|filemarker|fileparts|fileread|filesep|fill|fill3|filter|filter2|find|findall|findfigs|findobj|findstr|finish|fitsdisp|fitsinfo|fitsread|fitswrite|fix|flag|flipdim|fliplr|flipud|floor|flow|fminbnd|fminsearch|fopen|format|fplot|fprintf|frame2im|fread|freqspace|frewind|fscanf|fseek|ftell|FTP|full|fullfile|func2str|functions|funm|fwrite|fzero|gallery|gamma|gammainc|gammaincinv|gammaln|gca|gcbf|gcbo|gcd|gcf|gco|ge|genpath|genvarname|get|getappdata|getenv|getfield|getframe|getpixelposition|getpref|ginput|gmres|gplot|grabcode|gradient|gray|graymon|grid|griddata(?:3|n)?|griddedInterpolant|gsvd|gt|gtext|guidata|guide|guihandles|gunzip|gzip|h5create|h5disp|h5info|h5read|h5readatt|h5write|h5writeatt|hadamard|handle|hankel|hdf|hdf5|hdf5info|hdf5read|hdf5write|hdfinfo|hdfread|hdftool|help|helpbrowser|helpdesk|helpdlg|helpwin|hess|hex2dec|hex2num|hgexport|hggroup|hgload|hgsave|hgsetget|hgtransform|hidden|hilb|hist|histc|hold|home|horzcat|hostid|hot|hsv|hsv2rgb|hypot|ichol|idivide|ifft|ifft2|ifftn|ifftshift|ilu|im2frame|im2java|imag|image|imagesc|imapprox|imfinfo|imformats|import|importdata|imread|imwrite|ind2rgb|ind2sub|inferiorto|info|inline|inmem|inpolygon|input|inputdlg|inputname|inputParser|inspect|instrcallback|instrfind|instrfindall|int2str|integral(?:2|3)?|interp(?:1|1q|2|3|ft|n)|interpstreamspeed|intersect|intmax|intmin|inv|invhilb|ipermute|isa|isappdata|iscell|iscellstr|ischar|iscolumn|isdir|isempty|isequal|isequaln|isequalwithequalnans|isfield|isfinite|isfloat|isglobal|ishandle|ishghandle|ishold|isinf|isinteger|isjava|iskeyword|isletter|islogical|ismac|ismatrix|ismember|ismethod|isnan|isnumeric|isobject|isocaps|isocolors|isonormals|isosurface|ispc|ispref|isprime|isprop|isreal|isrow|isscalar|issorted|isspace|issparse|isstr|isstrprop|isstruct|isstudent|isunix|isvarname|isvector|javaaddpath|javaArray|javachk|javaclasspath|javacomponent|javaMethod|javaMethodEDT|javaObject|javaObjectEDT|javarmpath|jet|keyboard|kron|lasterr|lasterror|lastwarn|lcm|ldivide|ldl|le|legend|legendre|length|libfunctions|libfunctionsview|libisloaded|libpointer|libstruct|license|light|lightangle|lighting|lin2mu|line|lines|linkaxes|linkdata|linkprop|linsolve|linspace|listdlg|listfonts|load|loadlibrary|loadobj|log|log10|log1p|log2|loglog|logm|logspace|lookfor|lower|ls|lscov|lsqnonneg|lsqr|lt|lu|luinc|magic|makehgtform|mat2cell|mat2str|material|matfile|matlab.io.MatFile|matlab.mixin.(?:Copyable|Heterogeneous(?:.getDefaultScalarElement)?)|matlabrc|matlabroot|max|maxNumCompThreads|mean|median|membrane|memmapfile|memory|menu|mesh|meshc|meshgrid|meshz|meta.(?:class(?:.fromName)?|DynamicProperty|EnumeratedValue|event|MetaData|method|package(?:.(?:fromName|getAllPackages))?|property)|metaclass|methods|methodsview|mex(?:.getCompilerConfigurations)?|MException|mexext|mfilename|min|minres|minus|mislocked|mkdir|mkpp|mldivide|mlint|mlintrpt|mlock|mmfileinfo|mmreader|mod|mode|more|move|movefile|movegui|movie|movie2avi|mpower|mrdivide|msgbox|mtimes|mu2lin|multibandread|multibandwrite|munlock|namelengthmax|nargchk|narginchk|nargoutchk|native2unicode|nccreate|ncdisp|nchoosek|ncinfo|ncread|ncreadatt|ncwrite|ncwriteatt|ncwriteschema|ndgrid|ndims|ne|NET(?:.(?:addAssembly|Assembly|convertArray|createArray|createGeneric|disableAutoRelease|enableAutoRelease|GenericClass|invokeGenericMethod|NetException|setStaticProperty))?|netcdf.(?:abort|close|copyAtt|create|defDim|defGrp|defVar|defVarChunking|defVarDeflate|defVarFill|defVarFletcher32|delAtt|endDef|getAtt|getChunkCache|getConstant|getConstantNames|getVar|inq|inqAtt|inqAttID|inqAttName|inqDim|inqDimID|inqDimIDs|inqFormat|inqGrpName|inqGrpNameFull|inqGrpParent|inqGrps|inqLibVers|inqNcid|inqUnlimDims|inqVar|inqVarChunking|inqVarDeflate|inqVarFill|inqVarFletcher32|inqVarID|inqVarIDs|open|putAtt|putVar|reDef|renameAtt|renameDim|renameVar|setChunkCache|setDefaultFormat|setFill|sync)|newplot|nextpow2|nnz|noanimate|nonzeros|norm|normest|not|notebook|now|nthroot|null|num2cell|num2hex|num2str|numel|nzmax|ode(?:113|15i|15s|23|23s|23t|23tb|45)|odeget|odeset|odextend|onCleanup|ones|open|openfig|opengl|openvar|optimget|optimset|or|ordeig|orderfields|ordqz|ordschur|orient|orth|pack|padecoef|pagesetupdlg|pan|pareto|parseSoapResponse|pascal|patch|path|path2rc|pathsep|pathtool|pause|pbaspect|pcg|pchip|pcode|pcolor|pdepe|pdeval|peaks|perl|perms|permute|pie|pink|pinv|planerot|playshow|plot|plot3|plotbrowser|plotedit|plotmatrix|plottools|plotyy|plus|pol2cart|polar|poly|polyarea|polyder|polyeig|polyfit|polyint|polyval|polyvalm|pow2|power|ppval|prefdir|preferences|primes|print|printdlg|printopt|printpreview|prod|profile|profsave|propedit|propertyeditor|psi|publish|PutCharArray|PutFullMatrix|PutWorkspaceData|pwd|qhull|qmr|qr|qrdelete|qrinsert|qrupdate|quad|quad2d|quadgk|quadl|quadv|questdlg|quit|quiver|quiver3|qz|rand|randi|randn|randperm|RandStream(?:.(?:create|getDefaultStream|getGlobalStream|list|setDefaultStream|setGlobalStream))?|rank|rat|rats|rbbox|rcond|rdivide|readasync|real|reallog|realmax|realmin|realpow|realsqrt|record|rectangle|rectint|recycle|reducepatch|reducevolume|refresh|refreshdata|regexp|regexpi|regexprep|regexptranslate|rehash|rem|Remove|RemoveAll|repmat|reset|reshape|residue|restoredefaultpath|rethrow|rgb2hsv|rgb2ind|rgbplot|ribbon|rmappdata|rmdir|rmfield|rmpath|rmpref|rng|roots|rose|rosser|rot90|rotate|rotate3d|round|rref|rsf2csf|run|save|saveas|saveobj|savepath|scatter|scatter3|schur|sec|secd|sech|selectmoveresize|semilogx|semilogy|sendmail|serial|set|setappdata|setdiff|setenv|setfield|setpixelposition|setpref|setstr|setxor|shading|shg|shiftdim|showplottool|shrinkfaces|sign|sin(?:d|h)?|size|slice|smooth3|snapnow|sort|sortrows|sound|soundsc|spalloc|spaugment|spconvert|spdiags|specular|speye|spfun|sph2cart|sphere|spinmap|spline|spones|spparms|sprand|sprandn|sprandsym|sprank|spring|sprintf|spy|sqrt|sqrtm|squeeze|ss2tf|sscanf|stairs|startup|std|stem|stem3|stopasync|str2double|str2func|str2mat|str2num|strcat|strcmp|strcmpi|stream2|stream3|streamline|streamparticles|streamribbon|streamslice|streamtube|strfind|strjust|strmatch|strncmp|strncmpi|strread|strrep|strtok|strtrim|struct2cell|structfun|strvcat|sub2ind|subplot|subsasgn|subsindex|subspace|subsref|substruct|subvolume|sum|summer|superclasses|superiorto|support|surf|surf2patch|surface|surfc|surfl|surfnorm|svd|svds|swapbytes|symamd|symbfact|symmlq|symrcm|symvar|system|tan(?:d|h)?|tar|tempdir|tempname|tetramesh|texlabel|text|textread|textscan|textwrap|tfqmr|throw|tic|Tiff(?:.(?:getTagNames|getVersion))?|timer|timerfind|timerfindall|times|timeseries|title|toc|todatenum|toeplitz|toolboxdir|trace|transpose|trapz|treelayout|treeplot|tril|trimesh|triplequad|triplot|TriRep|TriScatteredInterp|trisurf|triu|tscollection|tsearch|tsearchn|tstool|type|typecast|uibuttongroup|uicontextmenu|uicontrol|uigetdir|uigetfile|uigetpref|uiimport|uimenu|uiopen|uipanel|uipushtool|uiputfile|uiresume|uisave|uisetcolor|uisetfont|uisetpref|uistack|uitable|uitoggletool|uitoolbar|uiwait|uminus|undocheckout|unicode2native|union|unique|unix|unloadlibrary|unmesh|unmkpp|untar|unwrap|unzip|uplus|upper|urlread|urlwrite|usejava|userpath|validateattributes|validatestring|vander|var|vectorize|ver|verctrl|verLessThan|version|vertcat|VideoReader(?:.isPlatformSupported)?|VideoWriter(?:.getProfiles)?|view|viewmtx|visdiff|volumebounds|voronoi|voronoin|wait|waitbar|waitfor|waitforbuttonpress|warndlg|warning|waterfall|wavfinfo|wavplay|wavread|wavrecord|wavwrite|web|weekday|what|whatsnew|which|whitebg|who|whos|wilkinson|winopen|winqueryreg|winter|wk1finfo|wk1read|wk1write|workspace|xlabel|xlim|xlsfinfo|xlsread|xlswrite|xmlread|xmlwrite|xor|xslt|ylabel|ylim|zeros|zip|zlabel|zlim|zoom)\\b/,null],\n[\"fun_tbx\",/^\\b(?:addedvarplot|andrewsplot|anova(?:1|2|n)|ansaribradley|aoctool|barttest|bbdesign|beta(?:cdf|fit|inv|like|pdf|rnd|stat)|bino(?:cdf|fit|inv|pdf|rnd|stat)|biplot|bootci|bootstrp|boxplot|candexch|candgen|canoncorr|capability|capaplot|caseread|casewrite|categorical|ccdesign|cdfplot|chi2(?:cdf|gof|inv|pdf|rnd|stat)|cholcov|Classification(?:BaggedEnsemble|Discriminant(?:.(?:fit|make|template))?|Ensemble|KNN(?:.(?:fit|template))?|PartitionedEnsemble|PartitionedModel|Tree(?:.(?:fit|template))?)|classify|classregtree|cluster|clusterdata|cmdscale|combnk|Compact(?:Classification(?:Discriminant|Ensemble|Tree)|Regression(?:Ensemble|Tree)|TreeBagger)|confusionmat|controlchart|controlrules|cophenet|copula(?:cdf|fit|param|pdf|rnd|stat)|cordexch|corr|corrcov|coxphfit|createns|crosstab|crossval|cvpartition|datasample|dataset|daugment|dcovary|dendrogram|dfittool|disttool|dummyvar|dwtest|ecdf|ecdfhist|ev(?:cdf|fit|inv|like|pdf|rnd|stat)|ExhaustiveSearcher|exp(?:cdf|fit|inv|like|pdf|rnd|stat)|factoran|fcdf|ff2n|finv|fitdist|fitensemble|fpdf|fracfact|fracfactgen|friedman|frnd|fstat|fsurfht|fullfact|gagerr|gam(?:cdf|fit|inv|like|pdf|rnd|stat)|GeneralizedLinearModel(?:.fit)?|geo(?:cdf|inv|mean|pdf|rnd|stat)|gev(?:cdf|fit|inv|like|pdf|rnd|stat)|gline|glmfit|glmval|glyphplot|gmdistribution(?:.fit)?|gname|gp(?:cdf|fit|inv|like|pdf|rnd|stat)|gplotmatrix|grp2idx|grpstats|gscatter|haltonset|harmmean|hist3|histfit|hmm(?:decode|estimate|generate|train|viterbi)|hougen|hyge(?:cdf|inv|pdf|rnd|stat)|icdf|inconsistent|interactionplot|invpred|iqr|iwishrnd|jackknife|jbtest|johnsrnd|KDTreeSearcher|kmeans|knnsearch|kruskalwallis|ksdensity|kstest|kstest2|kurtosis|lasso|lassoglm|lassoPlot|leverage|lhsdesign|lhsnorm|lillietest|LinearModel(?:.fit)?|linhyptest|linkage|logn(?:cdf|fit|inv|like|pdf|rnd|stat)|lsline|mad|mahal|maineffectsplot|manova1|manovacluster|mdscale|mhsample|mle|mlecov|mnpdf|mnrfit|mnrnd|mnrval|moment|multcompare|multivarichart|mvn(?:cdf|pdf|rnd)|mvregress|mvregresslike|mvt(?:cdf|pdf|rnd)|NaiveBayes(?:.fit)?|nan(?:cov|max|mean|median|min|std|sum|var)|nbin(?:cdf|fit|inv|pdf|rnd|stat)|ncf(?:cdf|inv|pdf|rnd|stat)|nct(?:cdf|inv|pdf|rnd|stat)|ncx2(?:cdf|inv|pdf|rnd|stat)|NeighborSearcher|nlinfit|nlintool|nlmefit|nlmefitsa|nlparci|nlpredci|nnmf|nominal|NonLinearModel(?:.fit)?|norm(?:cdf|fit|inv|like|pdf|rnd|stat)|normplot|normspec|ordinal|outlierMeasure|parallelcoords|paretotails|partialcorr|pcacov|pcares|pdf|pdist|pdist2|pearsrnd|perfcurve|perms|piecewisedistribution|plsregress|poiss(?:cdf|fit|inv|pdf|rnd|tat)|polyconf|polytool|prctile|princomp|ProbDist(?:Kernel|Parametric|UnivKernel|UnivParam)?|probplot|procrustes|qqplot|qrandset|qrandstream|quantile|randg|random|randsample|randtool|range|rangesearch|ranksum|rayl(?:cdf|fit|inv|pdf|rnd|stat)|rcoplot|refcurve|refline|regress|Regression(?:BaggedEnsemble|Ensemble|PartitionedEnsemble|PartitionedModel|Tree(?:.(?:fit|template))?)|regstats|relieff|ridge|robustdemo|robustfit|rotatefactors|rowexch|rsmdemo|rstool|runstest|sampsizepwr|scatterhist|sequentialfs|signrank|signtest|silhouette|skewness|slicesample|sobolset|squareform|statget|statset|stepwise|stepwisefit|surfht|tabulate|tblread|tblwrite|tcdf|tdfread|tiedrank|tinv|tpdf|TreeBagger|treedisp|treefit|treeprune|treetest|treeval|trimmean|trnd|tstat|ttest|ttest2|unid(?:cdf|inv|pdf|rnd|stat)|unif(?:cdf|inv|it|pdf|rnd|stat)|vartest(?:2|n)?|wbl(?:cdf|fit|inv|like|pdf|rnd|stat)|wblplot|wishrnd|x2fx|xptread|zscore|ztest)\\b/,\nnull],[\"fun_tbx\",/^\\b(?:adapthisteq|analyze75info|analyze75read|applycform|applylut|axes2pix|bestblk|blockproc|bwarea|bwareaopen|bwboundaries|bwconncomp|bwconvhull|bwdist|bwdistgeodesic|bweuler|bwhitmiss|bwlabel|bwlabeln|bwmorph|bwpack|bwperim|bwselect|bwtraceboundary|bwulterode|bwunpack|checkerboard|col2im|colfilt|conndef|convmtx2|corner|cornermetric|corr2|cp2tform|cpcorr|cpselect|cpstruct2pairs|dct2|dctmtx|deconvblind|deconvlucy|deconvreg|deconvwnr|decorrstretch|demosaic|dicom(?:anon|dict|info|lookup|read|uid|write)|edge|edgetaper|entropy|entropyfilt|fan2para|fanbeam|findbounds|fliptform|freqz2|fsamp2|fspecial|ftrans2|fwind1|fwind2|getheight|getimage|getimagemodel|getline|getneighbors|getnhood|getpts|getrangefromclass|getrect|getsequence|gray2ind|graycomatrix|graycoprops|graydist|grayslice|graythresh|hdrread|hdrwrite|histeq|hough|houghlines|houghpeaks|iccfind|iccread|iccroot|iccwrite|idct2|ifanbeam|im2bw|im2col|im2double|im2int16|im2java2d|im2single|im2uint16|im2uint8|imabsdiff|imadd|imadjust|ImageAdapter|imageinfo|imagemodel|imapplymatrix|imattributes|imbothat|imclearborder|imclose|imcolormaptool|imcomplement|imcontour|imcontrast|imcrop|imdilate|imdisplayrange|imdistline|imdivide|imellipse|imerode|imextendedmax|imextendedmin|imfill|imfilter|imfindcircles|imfreehand|imfuse|imgca|imgcf|imgetfile|imhandles|imhist|imhmax|imhmin|imimposemin|imlincomb|imline|immagbox|immovie|immultiply|imnoise|imopen|imoverview|imoverviewpanel|impixel|impixelinfo|impixelinfoval|impixelregion|impixelregionpanel|implay|impoint|impoly|impositionrect|improfile|imputfile|impyramid|imreconstruct|imrect|imregconfig|imregionalmax|imregionalmin|imregister|imresize|imroi|imrotate|imsave|imscrollpanel|imshow|imshowpair|imsubtract|imtool|imtophat|imtransform|imview|ind2gray|ind2rgb|interfileinfo|interfileread|intlut|ippl|iptaddcallback|iptcheckconn|iptcheckhandle|iptcheckinput|iptcheckmap|iptchecknargin|iptcheckstrs|iptdemos|iptgetapi|iptGetPointerBehavior|iptgetpref|ipticondir|iptnum2ordinal|iptPointerManager|iptprefs|iptremovecallback|iptSetPointerBehavior|iptsetpref|iptwindowalign|iradon|isbw|isflat|isgray|isicc|isind|isnitf|isrgb|isrset|lab2double|lab2uint16|lab2uint8|label2rgb|labelmatrix|makecform|makeConstrainToRectFcn|makehdr|makelut|makeresampler|maketform|mat2gray|mean2|medfilt2|montage|nitfinfo|nitfread|nlfilter|normxcorr2|ntsc2rgb|openrset|ordfilt2|otf2psf|padarray|para2fan|phantom|poly2mask|psf2otf|qtdecomp|qtgetblk|qtsetblk|radon|rangefilt|reflect|regionprops|registration.metric.(?:MattesMutualInformation|MeanSquares)|registration.optimizer.(?:OnePlusOneEvolutionary|RegularStepGradientDescent)|rgb2gray|rgb2ntsc|rgb2ycbcr|roicolor|roifill|roifilt2|roipoly|rsetwrite|std2|stdfilt|strel|stretchlim|subimage|tformarray|tformfwd|tforminv|tonemap|translate|truesize|uintlut|viscircles|warp|watershed|whitepoint|wiener2|xyz2double|xyz2uint16|ycbcr2rgb)\\b/,\nnull],[\"fun_tbx\",/^\\b(?:bintprog|color|fgoalattain|fminbnd|fmincon|fminimax|fminsearch|fminunc|fseminf|fsolve|fzero|fzmult|gangstr|ktrlink|linprog|lsqcurvefit|lsqlin|lsqnonlin|lsqnonneg|optimget|optimset|optimtool|quadprog)\\b/,null],[\"ident\",/^[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*/,null]]),[\"matlab-identifiers\"]);a.registerLangHandler(a.createSimpleLexer([],d),[\"matlab-operators\"]);a.registerLangHandler(a.createSimpleLexer(b,c),[\"matlab\"]);\n","source":"plugins/prettify/lang-matlab.js","raw":"/*\n\n Copyright (c) 2013 by Amro <amroamroamro@gmail.com>\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\nvar a=window.PR,b=[[a.PR_PLAIN,/^[ \\t\\r\\n\\v\\f\\xA0]+/,null,\" \\t\\r\\n\\x0B\\f\\u00a0\"],[a.PR_COMMENT,/^%\\{[^%]*%+(?:[^\\}%][^%]*%+)*\\}/,null],[a.PR_COMMENT,/^%[^\\r\\n]*/,null,\"%\"],[\"syscmd\",/^![^\\r\\n]*/,null,\"!\"]],c=[[\"linecont\",/^\\.\\.\\.\\s*[\\r\\n]/,null],[\"err\",/^\\?\\?\\? [^\\r\\n]*/,null],[\"wrn\",/^Warning: [^\\r\\n]*/,null],[\"codeoutput\",/^>>\\s+/,null],[\"codeoutput\",/^octave:\\d+>\\s+/,null],[\"lang-matlab-operators\",/^((?:[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*|\\)|\\]|\\}|\\.)')/,null],[\"lang-matlab-identifiers\",\n/^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)(?!')/,null],[a.PR_STRING,/^'(?:[^']|'')*'/,null],[a.PR_LITERAL,/^[+\\-]?\\.?\\d+(?:\\.\\d*)?(?:[Ee][+\\-]?\\d+)?[ij]?/,null],[a.PR_TAG,/^(?:\\{|\\}|\\(|\\)|\\[|\\])/,null],[a.PR_PUNCTUATION,/^(?:<|>|=|~|@|&|;|,|:|!|\\-|\\+|\\*|\\^|\\.|\\||\\\\|\\/)/,null]],d=[[\"lang-matlab-identifiers\",/^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)/,null],[a.PR_TAG,/^(?:\\{|\\}|\\(|\\)|\\[|\\])/,null],[a.PR_PUNCTUATION,/^(?:<|>|=|~|@|&|;|,|:|!|\\-|\\+|\\*|\\^|\\.|\\||\\\\|\\/)/,null],[\"transpose\",\n/^'/,null]];\na.registerLangHandler(a.createSimpleLexer([],[[a.PR_KEYWORD,/^\\b(?:break|case|catch|classdef|continue|else|elseif|end|for|function|global|if|otherwise|parfor|persistent|return|spmd|switch|try|while)\\b/,null],[\"const\",/^\\b(?:true|false|inf|Inf|nan|NaN|eps|pi|ans|nargin|nargout|varargin|varargout)\\b/,null],[a.PR_TYPE,/^\\b(?:cell|struct|char|double|single|logical|u?int(?:8|16|32|64)|sparse)\\b/,null],[\"fun\",/^\\b(?:abs|accumarray|acos(?:d|h)?|acot(?:d|h)?|acsc(?:d|h)?|actxcontrol(?:list|select)?|actxGetRunningServer|actxserver|addlistener|addpath|addpref|addtodate|airy|align|alim|all|allchild|alpha|alphamap|amd|ancestor|and|angle|annotation|any|area|arrayfun|asec(?:d|h)?|asin(?:d|h)?|assert|assignin|atan(?:2|d|h)?|audiodevinfo|audioplayer|audiorecorder|aufinfo|auread|autumn|auwrite|avifile|aviinfo|aviread|axes|axis|balance|bar(?:3|3h|h)?|base2dec|beep|BeginInvoke|bench|bessel(?:h|i|j|k|y)|beta|betainc|betaincinv|betaln|bicg|bicgstab|bicgstabl|bin2dec|bitand|bitcmp|bitget|bitmax|bitnot|bitor|bitset|bitshift|bitxor|blanks|blkdiag|bone|box|brighten|brush|bsxfun|builddocsearchdb|builtin|bvp4c|bvp5c|bvpget|bvpinit|bvpset|bvpxtend|calendar|calllib|callSoapService|camdolly|cameratoolbar|camlight|camlookat|camorbit|campan|campos|camproj|camroll|camtarget|camup|camva|camzoom|cart2pol|cart2sph|cast|cat|caxis|cd|cdf2rdf|cdfepoch|cdfinfo|cdflib(?:.(?:close|closeVar|computeEpoch|computeEpoch16|create|createAttr|createVar|delete|deleteAttr|deleteAttrEntry|deleteAttrgEntry|deleteVar|deleteVarRecords|epoch16Breakdown|epochBreakdown|getAttrEntry|getAttrgEntry|getAttrMaxEntry|getAttrMaxgEntry|getAttrName|getAttrNum|getAttrScope|getCacheSize|getChecksum|getCompression|getCompressionCacheSize|getConstantNames|getConstantValue|getCopyright|getFileBackward|getFormat|getLibraryCopyright|getLibraryVersion|getMajority|getName|getNumAttrEntries|getNumAttrgEntries|getNumAttributes|getNumgAttributes|getReadOnlyMode|getStageCacheSize|getValidate|getVarAllocRecords|getVarBlockingFactor|getVarCacheSize|getVarCompression|getVarData|getVarMaxAllocRecNum|getVarMaxWrittenRecNum|getVarName|getVarNum|getVarNumRecsWritten|getVarPadValue|getVarRecordData|getVarReservePercent|getVarsMaxWrittenRecNum|getVarSparseRecords|getVersion|hyperGetVarData|hyperPutVarData|inquire|inquireAttr|inquireAttrEntry|inquireAttrgEntry|inquireVar|open|putAttrEntry|putAttrgEntry|putVarData|putVarRecordData|renameAttr|renameVar|setCacheSize|setChecksum|setCompression|setCompressionCacheSize|setFileBackward|setFormat|setMajority|setReadOnlyMode|setStageCacheSize|setValidate|setVarAllocBlockRecords|setVarBlockingFactor|setVarCacheSize|setVarCompression|setVarInitialRecs|setVarPadValue|SetVarReservePercent|setVarsCacheSize|setVarSparseRecords))?|cdfread|cdfwrite|ceil|cell2mat|cell2struct|celldisp|cellfun|cellplot|cellstr|cgs|checkcode|checkin|checkout|chol|cholinc|cholupdate|circshift|cla|clabel|class|clc|clear|clearvars|clf|clipboard|clock|close|closereq|cmopts|cmpermute|cmunique|colamd|colon|colorbar|colordef|colormap|colormapeditor|colperm|Combine|comet|comet3|commandhistory|commandwindow|compan|compass|complex|computer|cond|condeig|condest|coneplot|conj|containers.Map|contour(?:3|c|f|slice)?|contrast|conv|conv2|convhull|convhulln|convn|cool|copper|copyfile|copyobj|corrcoef|cos(?:d|h)?|cot(?:d|h)?|cov|cplxpair|cputime|createClassFromWsdl|createSoapMessage|cross|csc(?:d|h)?|csvread|csvwrite|ctranspose|cumprod|cumsum|cumtrapz|curl|customverctrl|cylinder|daqread|daspect|datacursormode|datatipinfo|date|datenum|datestr|datetick|datevec|dbclear|dbcont|dbdown|dblquad|dbmex|dbquit|dbstack|dbstatus|dbstep|dbstop|dbtype|dbup|dde23|ddeget|ddesd|ddeset|deal|deblank|dec2base|dec2bin|dec2hex|decic|deconv|del2|delaunay|delaunay3|delaunayn|DelaunayTri|delete|demo|depdir|depfun|det|detrend|deval|diag|dialog|diary|diff|diffuse|dir|disp|display|dither|divergence|dlmread|dlmwrite|dmperm|doc|docsearch|dos|dot|dragrect|drawnow|dsearch|dsearchn|dynamicprops|echo|echodemo|edit|eig|eigs|ellipj|ellipke|ellipsoid|empty|enableNETfromNetworkDrive|enableservice|EndInvoke|enumeration|eomday|eq|erf|erfc|erfcinv|erfcx|erfinv|error|errorbar|errordlg|etime|etree|etreeplot|eval|evalc|evalin|event.(?:EventData|listener|PropertyEvent|proplistener)|exifread|exist|exit|exp|expint|expm|expm1|export2wsdlg|eye|ezcontour|ezcontourf|ezmesh|ezmeshc|ezplot|ezplot3|ezpolar|ezsurf|ezsurfc|factor|factorial|fclose|feather|feature|feof|ferror|feval|fft|fft2|fftn|fftshift|fftw|fgetl|fgets|fieldnames|figure|figurepalette|fileattrib|filebrowser|filemarker|fileparts|fileread|filesep|fill|fill3|filter|filter2|find|findall|findfigs|findobj|findstr|finish|fitsdisp|fitsinfo|fitsread|fitswrite|fix|flag|flipdim|fliplr|flipud|floor|flow|fminbnd|fminsearch|fopen|format|fplot|fprintf|frame2im|fread|freqspace|frewind|fscanf|fseek|ftell|FTP|full|fullfile|func2str|functions|funm|fwrite|fzero|gallery|gamma|gammainc|gammaincinv|gammaln|gca|gcbf|gcbo|gcd|gcf|gco|ge|genpath|genvarname|get|getappdata|getenv|getfield|getframe|getpixelposition|getpref|ginput|gmres|gplot|grabcode|gradient|gray|graymon|grid|griddata(?:3|n)?|griddedInterpolant|gsvd|gt|gtext|guidata|guide|guihandles|gunzip|gzip|h5create|h5disp|h5info|h5read|h5readatt|h5write|h5writeatt|hadamard|handle|hankel|hdf|hdf5|hdf5info|hdf5read|hdf5write|hdfinfo|hdfread|hdftool|help|helpbrowser|helpdesk|helpdlg|helpwin|hess|hex2dec|hex2num|hgexport|hggroup|hgload|hgsave|hgsetget|hgtransform|hidden|hilb|hist|histc|hold|home|horzcat|hostid|hot|hsv|hsv2rgb|hypot|ichol|idivide|ifft|ifft2|ifftn|ifftshift|ilu|im2frame|im2java|imag|image|imagesc|imapprox|imfinfo|imformats|import|importdata|imread|imwrite|ind2rgb|ind2sub|inferiorto|info|inline|inmem|inpolygon|input|inputdlg|inputname|inputParser|inspect|instrcallback|instrfind|instrfindall|int2str|integral(?:2|3)?|interp(?:1|1q|2|3|ft|n)|interpstreamspeed|intersect|intmax|intmin|inv|invhilb|ipermute|isa|isappdata|iscell|iscellstr|ischar|iscolumn|isdir|isempty|isequal|isequaln|isequalwithequalnans|isfield|isfinite|isfloat|isglobal|ishandle|ishghandle|ishold|isinf|isinteger|isjava|iskeyword|isletter|islogical|ismac|ismatrix|ismember|ismethod|isnan|isnumeric|isobject|isocaps|isocolors|isonormals|isosurface|ispc|ispref|isprime|isprop|isreal|isrow|isscalar|issorted|isspace|issparse|isstr|isstrprop|isstruct|isstudent|isunix|isvarname|isvector|javaaddpath|javaArray|javachk|javaclasspath|javacomponent|javaMethod|javaMethodEDT|javaObject|javaObjectEDT|javarmpath|jet|keyboard|kron|lasterr|lasterror|lastwarn|lcm|ldivide|ldl|le|legend|legendre|length|libfunctions|libfunctionsview|libisloaded|libpointer|libstruct|license|light|lightangle|lighting|lin2mu|line|lines|linkaxes|linkdata|linkprop|linsolve|linspace|listdlg|listfonts|load|loadlibrary|loadobj|log|log10|log1p|log2|loglog|logm|logspace|lookfor|lower|ls|lscov|lsqnonneg|lsqr|lt|lu|luinc|magic|makehgtform|mat2cell|mat2str|material|matfile|matlab.io.MatFile|matlab.mixin.(?:Copyable|Heterogeneous(?:.getDefaultScalarElement)?)|matlabrc|matlabroot|max|maxNumCompThreads|mean|median|membrane|memmapfile|memory|menu|mesh|meshc|meshgrid|meshz|meta.(?:class(?:.fromName)?|DynamicProperty|EnumeratedValue|event|MetaData|method|package(?:.(?:fromName|getAllPackages))?|property)|metaclass|methods|methodsview|mex(?:.getCompilerConfigurations)?|MException|mexext|mfilename|min|minres|minus|mislocked|mkdir|mkpp|mldivide|mlint|mlintrpt|mlock|mmfileinfo|mmreader|mod|mode|more|move|movefile|movegui|movie|movie2avi|mpower|mrdivide|msgbox|mtimes|mu2lin|multibandread|multibandwrite|munlock|namelengthmax|nargchk|narginchk|nargoutchk|native2unicode|nccreate|ncdisp|nchoosek|ncinfo|ncread|ncreadatt|ncwrite|ncwriteatt|ncwriteschema|ndgrid|ndims|ne|NET(?:.(?:addAssembly|Assembly|convertArray|createArray|createGeneric|disableAutoRelease|enableAutoRelease|GenericClass|invokeGenericMethod|NetException|setStaticProperty))?|netcdf.(?:abort|close|copyAtt|create|defDim|defGrp|defVar|defVarChunking|defVarDeflate|defVarFill|defVarFletcher32|delAtt|endDef|getAtt|getChunkCache|getConstant|getConstantNames|getVar|inq|inqAtt|inqAttID|inqAttName|inqDim|inqDimID|inqDimIDs|inqFormat|inqGrpName|inqGrpNameFull|inqGrpParent|inqGrps|inqLibVers|inqNcid|inqUnlimDims|inqVar|inqVarChunking|inqVarDeflate|inqVarFill|inqVarFletcher32|inqVarID|inqVarIDs|open|putAtt|putVar|reDef|renameAtt|renameDim|renameVar|setChunkCache|setDefaultFormat|setFill|sync)|newplot|nextpow2|nnz|noanimate|nonzeros|norm|normest|not|notebook|now|nthroot|null|num2cell|num2hex|num2str|numel|nzmax|ode(?:113|15i|15s|23|23s|23t|23tb|45)|odeget|odeset|odextend|onCleanup|ones|open|openfig|opengl|openvar|optimget|optimset|or|ordeig|orderfields|ordqz|ordschur|orient|orth|pack|padecoef|pagesetupdlg|pan|pareto|parseSoapResponse|pascal|patch|path|path2rc|pathsep|pathtool|pause|pbaspect|pcg|pchip|pcode|pcolor|pdepe|pdeval|peaks|perl|perms|permute|pie|pink|pinv|planerot|playshow|plot|plot3|plotbrowser|plotedit|plotmatrix|plottools|plotyy|plus|pol2cart|polar|poly|polyarea|polyder|polyeig|polyfit|polyint|polyval|polyvalm|pow2|power|ppval|prefdir|preferences|primes|print|printdlg|printopt|printpreview|prod|profile|profsave|propedit|propertyeditor|psi|publish|PutCharArray|PutFullMatrix|PutWorkspaceData|pwd|qhull|qmr|qr|qrdelete|qrinsert|qrupdate|quad|quad2d|quadgk|quadl|quadv|questdlg|quit|quiver|quiver3|qz|rand|randi|randn|randperm|RandStream(?:.(?:create|getDefaultStream|getGlobalStream|list|setDefaultStream|setGlobalStream))?|rank|rat|rats|rbbox|rcond|rdivide|readasync|real|reallog|realmax|realmin|realpow|realsqrt|record|rectangle|rectint|recycle|reducepatch|reducevolume|refresh|refreshdata|regexp|regexpi|regexprep|regexptranslate|rehash|rem|Remove|RemoveAll|repmat|reset|reshape|residue|restoredefaultpath|rethrow|rgb2hsv|rgb2ind|rgbplot|ribbon|rmappdata|rmdir|rmfield|rmpath|rmpref|rng|roots|rose|rosser|rot90|rotate|rotate3d|round|rref|rsf2csf|run|save|saveas|saveobj|savepath|scatter|scatter3|schur|sec|secd|sech|selectmoveresize|semilogx|semilogy|sendmail|serial|set|setappdata|setdiff|setenv|setfield|setpixelposition|setpref|setstr|setxor|shading|shg|shiftdim|showplottool|shrinkfaces|sign|sin(?:d|h)?|size|slice|smooth3|snapnow|sort|sortrows|sound|soundsc|spalloc|spaugment|spconvert|spdiags|specular|speye|spfun|sph2cart|sphere|spinmap|spline|spones|spparms|sprand|sprandn|sprandsym|sprank|spring|sprintf|spy|sqrt|sqrtm|squeeze|ss2tf|sscanf|stairs|startup|std|stem|stem3|stopasync|str2double|str2func|str2mat|str2num|strcat|strcmp|strcmpi|stream2|stream3|streamline|streamparticles|streamribbon|streamslice|streamtube|strfind|strjust|strmatch|strncmp|strncmpi|strread|strrep|strtok|strtrim|struct2cell|structfun|strvcat|sub2ind|subplot|subsasgn|subsindex|subspace|subsref|substruct|subvolume|sum|summer|superclasses|superiorto|support|surf|surf2patch|surface|surfc|surfl|surfnorm|svd|svds|swapbytes|symamd|symbfact|symmlq|symrcm|symvar|system|tan(?:d|h)?|tar|tempdir|tempname|tetramesh|texlabel|text|textread|textscan|textwrap|tfqmr|throw|tic|Tiff(?:.(?:getTagNames|getVersion))?|timer|timerfind|timerfindall|times|timeseries|title|toc|todatenum|toeplitz|toolboxdir|trace|transpose|trapz|treelayout|treeplot|tril|trimesh|triplequad|triplot|TriRep|TriScatteredInterp|trisurf|triu|tscollection|tsearch|tsearchn|tstool|type|typecast|uibuttongroup|uicontextmenu|uicontrol|uigetdir|uigetfile|uigetpref|uiimport|uimenu|uiopen|uipanel|uipushtool|uiputfile|uiresume|uisave|uisetcolor|uisetfont|uisetpref|uistack|uitable|uitoggletool|uitoolbar|uiwait|uminus|undocheckout|unicode2native|union|unique|unix|unloadlibrary|unmesh|unmkpp|untar|unwrap|unzip|uplus|upper|urlread|urlwrite|usejava|userpath|validateattributes|validatestring|vander|var|vectorize|ver|verctrl|verLessThan|version|vertcat|VideoReader(?:.isPlatformSupported)?|VideoWriter(?:.getProfiles)?|view|viewmtx|visdiff|volumebounds|voronoi|voronoin|wait|waitbar|waitfor|waitforbuttonpress|warndlg|warning|waterfall|wavfinfo|wavplay|wavread|wavrecord|wavwrite|web|weekday|what|whatsnew|which|whitebg|who|whos|wilkinson|winopen|winqueryreg|winter|wk1finfo|wk1read|wk1write|workspace|xlabel|xlim|xlsfinfo|xlsread|xlswrite|xmlread|xmlwrite|xor|xslt|ylabel|ylim|zeros|zip|zlabel|zlim|zoom)\\b/,null],\n[\"fun_tbx\",/^\\b(?:addedvarplot|andrewsplot|anova(?:1|2|n)|ansaribradley|aoctool|barttest|bbdesign|beta(?:cdf|fit|inv|like|pdf|rnd|stat)|bino(?:cdf|fit|inv|pdf|rnd|stat)|biplot|bootci|bootstrp|boxplot|candexch|candgen|canoncorr|capability|capaplot|caseread|casewrite|categorical|ccdesign|cdfplot|chi2(?:cdf|gof|inv|pdf|rnd|stat)|cholcov|Classification(?:BaggedEnsemble|Discriminant(?:.(?:fit|make|template))?|Ensemble|KNN(?:.(?:fit|template))?|PartitionedEnsemble|PartitionedModel|Tree(?:.(?:fit|template))?)|classify|classregtree|cluster|clusterdata|cmdscale|combnk|Compact(?:Classification(?:Discriminant|Ensemble|Tree)|Regression(?:Ensemble|Tree)|TreeBagger)|confusionmat|controlchart|controlrules|cophenet|copula(?:cdf|fit|param|pdf|rnd|stat)|cordexch|corr|corrcov|coxphfit|createns|crosstab|crossval|cvpartition|datasample|dataset|daugment|dcovary|dendrogram|dfittool|disttool|dummyvar|dwtest|ecdf|ecdfhist|ev(?:cdf|fit|inv|like|pdf|rnd|stat)|ExhaustiveSearcher|exp(?:cdf|fit|inv|like|pdf|rnd|stat)|factoran|fcdf|ff2n|finv|fitdist|fitensemble|fpdf|fracfact|fracfactgen|friedman|frnd|fstat|fsurfht|fullfact|gagerr|gam(?:cdf|fit|inv|like|pdf|rnd|stat)|GeneralizedLinearModel(?:.fit)?|geo(?:cdf|inv|mean|pdf|rnd|stat)|gev(?:cdf|fit|inv|like|pdf|rnd|stat)|gline|glmfit|glmval|glyphplot|gmdistribution(?:.fit)?|gname|gp(?:cdf|fit|inv|like|pdf|rnd|stat)|gplotmatrix|grp2idx|grpstats|gscatter|haltonset|harmmean|hist3|histfit|hmm(?:decode|estimate|generate|train|viterbi)|hougen|hyge(?:cdf|inv|pdf|rnd|stat)|icdf|inconsistent|interactionplot|invpred|iqr|iwishrnd|jackknife|jbtest|johnsrnd|KDTreeSearcher|kmeans|knnsearch|kruskalwallis|ksdensity|kstest|kstest2|kurtosis|lasso|lassoglm|lassoPlot|leverage|lhsdesign|lhsnorm|lillietest|LinearModel(?:.fit)?|linhyptest|linkage|logn(?:cdf|fit|inv|like|pdf|rnd|stat)|lsline|mad|mahal|maineffectsplot|manova1|manovacluster|mdscale|mhsample|mle|mlecov|mnpdf|mnrfit|mnrnd|mnrval|moment|multcompare|multivarichart|mvn(?:cdf|pdf|rnd)|mvregress|mvregresslike|mvt(?:cdf|pdf|rnd)|NaiveBayes(?:.fit)?|nan(?:cov|max|mean|median|min|std|sum|var)|nbin(?:cdf|fit|inv|pdf|rnd|stat)|ncf(?:cdf|inv|pdf|rnd|stat)|nct(?:cdf|inv|pdf|rnd|stat)|ncx2(?:cdf|inv|pdf|rnd|stat)|NeighborSearcher|nlinfit|nlintool|nlmefit|nlmefitsa|nlparci|nlpredci|nnmf|nominal|NonLinearModel(?:.fit)?|norm(?:cdf|fit|inv|like|pdf|rnd|stat)|normplot|normspec|ordinal|outlierMeasure|parallelcoords|paretotails|partialcorr|pcacov|pcares|pdf|pdist|pdist2|pearsrnd|perfcurve|perms|piecewisedistribution|plsregress|poiss(?:cdf|fit|inv|pdf|rnd|tat)|polyconf|polytool|prctile|princomp|ProbDist(?:Kernel|Parametric|UnivKernel|UnivParam)?|probplot|procrustes|qqplot|qrandset|qrandstream|quantile|randg|random|randsample|randtool|range|rangesearch|ranksum|rayl(?:cdf|fit|inv|pdf|rnd|stat)|rcoplot|refcurve|refline|regress|Regression(?:BaggedEnsemble|Ensemble|PartitionedEnsemble|PartitionedModel|Tree(?:.(?:fit|template))?)|regstats|relieff|ridge|robustdemo|robustfit|rotatefactors|rowexch|rsmdemo|rstool|runstest|sampsizepwr|scatterhist|sequentialfs|signrank|signtest|silhouette|skewness|slicesample|sobolset|squareform|statget|statset|stepwise|stepwisefit|surfht|tabulate|tblread|tblwrite|tcdf|tdfread|tiedrank|tinv|tpdf|TreeBagger|treedisp|treefit|treeprune|treetest|treeval|trimmean|trnd|tstat|ttest|ttest2|unid(?:cdf|inv|pdf|rnd|stat)|unif(?:cdf|inv|it|pdf|rnd|stat)|vartest(?:2|n)?|wbl(?:cdf|fit|inv|like|pdf|rnd|stat)|wblplot|wishrnd|x2fx|xptread|zscore|ztest)\\b/,\nnull],[\"fun_tbx\",/^\\b(?:adapthisteq|analyze75info|analyze75read|applycform|applylut|axes2pix|bestblk|blockproc|bwarea|bwareaopen|bwboundaries|bwconncomp|bwconvhull|bwdist|bwdistgeodesic|bweuler|bwhitmiss|bwlabel|bwlabeln|bwmorph|bwpack|bwperim|bwselect|bwtraceboundary|bwulterode|bwunpack|checkerboard|col2im|colfilt|conndef|convmtx2|corner|cornermetric|corr2|cp2tform|cpcorr|cpselect|cpstruct2pairs|dct2|dctmtx|deconvblind|deconvlucy|deconvreg|deconvwnr|decorrstretch|demosaic|dicom(?:anon|dict|info|lookup|read|uid|write)|edge|edgetaper|entropy|entropyfilt|fan2para|fanbeam|findbounds|fliptform|freqz2|fsamp2|fspecial|ftrans2|fwind1|fwind2|getheight|getimage|getimagemodel|getline|getneighbors|getnhood|getpts|getrangefromclass|getrect|getsequence|gray2ind|graycomatrix|graycoprops|graydist|grayslice|graythresh|hdrread|hdrwrite|histeq|hough|houghlines|houghpeaks|iccfind|iccread|iccroot|iccwrite|idct2|ifanbeam|im2bw|im2col|im2double|im2int16|im2java2d|im2single|im2uint16|im2uint8|imabsdiff|imadd|imadjust|ImageAdapter|imageinfo|imagemodel|imapplymatrix|imattributes|imbothat|imclearborder|imclose|imcolormaptool|imcomplement|imcontour|imcontrast|imcrop|imdilate|imdisplayrange|imdistline|imdivide|imellipse|imerode|imextendedmax|imextendedmin|imfill|imfilter|imfindcircles|imfreehand|imfuse|imgca|imgcf|imgetfile|imhandles|imhist|imhmax|imhmin|imimposemin|imlincomb|imline|immagbox|immovie|immultiply|imnoise|imopen|imoverview|imoverviewpanel|impixel|impixelinfo|impixelinfoval|impixelregion|impixelregionpanel|implay|impoint|impoly|impositionrect|improfile|imputfile|impyramid|imreconstruct|imrect|imregconfig|imregionalmax|imregionalmin|imregister|imresize|imroi|imrotate|imsave|imscrollpanel|imshow|imshowpair|imsubtract|imtool|imtophat|imtransform|imview|ind2gray|ind2rgb|interfileinfo|interfileread|intlut|ippl|iptaddcallback|iptcheckconn|iptcheckhandle|iptcheckinput|iptcheckmap|iptchecknargin|iptcheckstrs|iptdemos|iptgetapi|iptGetPointerBehavior|iptgetpref|ipticondir|iptnum2ordinal|iptPointerManager|iptprefs|iptremovecallback|iptSetPointerBehavior|iptsetpref|iptwindowalign|iradon|isbw|isflat|isgray|isicc|isind|isnitf|isrgb|isrset|lab2double|lab2uint16|lab2uint8|label2rgb|labelmatrix|makecform|makeConstrainToRectFcn|makehdr|makelut|makeresampler|maketform|mat2gray|mean2|medfilt2|montage|nitfinfo|nitfread|nlfilter|normxcorr2|ntsc2rgb|openrset|ordfilt2|otf2psf|padarray|para2fan|phantom|poly2mask|psf2otf|qtdecomp|qtgetblk|qtsetblk|radon|rangefilt|reflect|regionprops|registration.metric.(?:MattesMutualInformation|MeanSquares)|registration.optimizer.(?:OnePlusOneEvolutionary|RegularStepGradientDescent)|rgb2gray|rgb2ntsc|rgb2ycbcr|roicolor|roifill|roifilt2|roipoly|rsetwrite|std2|stdfilt|strel|stretchlim|subimage|tformarray|tformfwd|tforminv|tonemap|translate|truesize|uintlut|viscircles|warp|watershed|whitepoint|wiener2|xyz2double|xyz2uint16|ycbcr2rgb)\\b/,\nnull],[\"fun_tbx\",/^\\b(?:bintprog|color|fgoalattain|fminbnd|fmincon|fminimax|fminsearch|fminunc|fseminf|fsolve|fzero|fzmult|gangstr|ktrlink|linprog|lsqcurvefit|lsqlin|lsqnonlin|lsqnonneg|optimget|optimset|optimtool|quadprog)\\b/,null],[\"ident\",/^[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*/,null]]),[\"matlab-identifiers\"]);a.registerLangHandler(a.createSimpleLexer([],d),[\"matlab-operators\"]);a.registerLangHandler(a.createSimpleLexer(b,c),[\"matlab\"]);\n","date":"2022-03-27T08:23:16.342Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-matlab.js","layout":"false","title":"","comments":1,"_id":"cl22h70vd006x5ossfbnlbiv2","content":"/*\n\n Copyright (c) 2013 by Amro <amroamroamro@gmail.com>\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\nvar a=window.PR,b=[[a.PR_PLAIN,/^[ \\t\\r\\n\\v\\f\\xA0]+/,null,\" \\t\\r\\n\\x0B\\f\\u00a0\"],[a.PR_COMMENT,/^%\\{[^%]*%+(?:[^\\}%][^%]*%+)*\\}/,null],[a.PR_COMMENT,/^%[^\\r\\n]*/,null,\"%\"],[\"syscmd\",/^![^\\r\\n]*/,null,\"!\"]],c=[[\"linecont\",/^\\.\\.\\.\\s*[\\r\\n]/,null],[\"err\",/^\\?\\?\\? [^\\r\\n]*/,null],[\"wrn\",/^Warning: [^\\r\\n]*/,null],[\"codeoutput\",/^>>\\s+/,null],[\"codeoutput\",/^octave:\\d+>\\s+/,null],[\"lang-matlab-operators\",/^((?:[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*|\\)|\\]|\\}|\\.)')/,null],[\"lang-matlab-identifiers\",\n/^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)(?!')/,null],[a.PR_STRING,/^'(?:[^']|'')*'/,null],[a.PR_LITERAL,/^[+\\-]?\\.?\\d+(?:\\.\\d*)?(?:[Ee][+\\-]?\\d+)?[ij]?/,null],[a.PR_TAG,/^(?:\\{|\\}|\\(|\\)|\\[|\\])/,null],[a.PR_PUNCTUATION,/^(?:<|>|=|~|@|&|;|,|:|!|\\-|\\+|\\*|\\^|\\.|\\||\\\\|\\/)/,null]],d=[[\"lang-matlab-identifiers\",/^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)/,null],[a.PR_TAG,/^(?:\\{|\\}|\\(|\\)|\\[|\\])/,null],[a.PR_PUNCTUATION,/^(?:<|>|=|~|@|&|;|,|:|!|\\-|\\+|\\*|\\^|\\.|\\||\\\\|\\/)/,null],[\"transpose\",\n/^'/,null]];\na.registerLangHandler(a.createSimpleLexer([],[[a.PR_KEYWORD,/^\\b(?:break|case|catch|classdef|continue|else|elseif|end|for|function|global|if|otherwise|parfor|persistent|return|spmd|switch|try|while)\\b/,null],[\"const\",/^\\b(?:true|false|inf|Inf|nan|NaN|eps|pi|ans|nargin|nargout|varargin|varargout)\\b/,null],[a.PR_TYPE,/^\\b(?:cell|struct|char|double|single|logical|u?int(?:8|16|32|64)|sparse)\\b/,null],[\"fun\",/^\\b(?:abs|accumarray|acos(?:d|h)?|acot(?:d|h)?|acsc(?:d|h)?|actxcontrol(?:list|select)?|actxGetRunningServer|actxserver|addlistener|addpath|addpref|addtodate|airy|align|alim|all|allchild|alpha|alphamap|amd|ancestor|and|angle|annotation|any|area|arrayfun|asec(?:d|h)?|asin(?:d|h)?|assert|assignin|atan(?:2|d|h)?|audiodevinfo|audioplayer|audiorecorder|aufinfo|auread|autumn|auwrite|avifile|aviinfo|aviread|axes|axis|balance|bar(?:3|3h|h)?|base2dec|beep|BeginInvoke|bench|bessel(?:h|i|j|k|y)|beta|betainc|betaincinv|betaln|bicg|bicgstab|bicgstabl|bin2dec|bitand|bitcmp|bitget|bitmax|bitnot|bitor|bitset|bitshift|bitxor|blanks|blkdiag|bone|box|brighten|brush|bsxfun|builddocsearchdb|builtin|bvp4c|bvp5c|bvpget|bvpinit|bvpset|bvpxtend|calendar|calllib|callSoapService|camdolly|cameratoolbar|camlight|camlookat|camorbit|campan|campos|camproj|camroll|camtarget|camup|camva|camzoom|cart2pol|cart2sph|cast|cat|caxis|cd|cdf2rdf|cdfepoch|cdfinfo|cdflib(?:.(?:close|closeVar|computeEpoch|computeEpoch16|create|createAttr|createVar|delete|deleteAttr|deleteAttrEntry|deleteAttrgEntry|deleteVar|deleteVarRecords|epoch16Breakdown|epochBreakdown|getAttrEntry|getAttrgEntry|getAttrMaxEntry|getAttrMaxgEntry|getAttrName|getAttrNum|getAttrScope|getCacheSize|getChecksum|getCompression|getCompressionCacheSize|getConstantNames|getConstantValue|getCopyright|getFileBackward|getFormat|getLibraryCopyright|getLibraryVersion|getMajority|getName|getNumAttrEntries|getNumAttrgEntries|getNumAttributes|getNumgAttributes|getReadOnlyMode|getStageCacheSize|getValidate|getVarAllocRecords|getVarBlockingFactor|getVarCacheSize|getVarCompression|getVarData|getVarMaxAllocRecNum|getVarMaxWrittenRecNum|getVarName|getVarNum|getVarNumRecsWritten|getVarPadValue|getVarRecordData|getVarReservePercent|getVarsMaxWrittenRecNum|getVarSparseRecords|getVersion|hyperGetVarData|hyperPutVarData|inquire|inquireAttr|inquireAttrEntry|inquireAttrgEntry|inquireVar|open|putAttrEntry|putAttrgEntry|putVarData|putVarRecordData|renameAttr|renameVar|setCacheSize|setChecksum|setCompression|setCompressionCacheSize|setFileBackward|setFormat|setMajority|setReadOnlyMode|setStageCacheSize|setValidate|setVarAllocBlockRecords|setVarBlockingFactor|setVarCacheSize|setVarCompression|setVarInitialRecs|setVarPadValue|SetVarReservePercent|setVarsCacheSize|setVarSparseRecords))?|cdfread|cdfwrite|ceil|cell2mat|cell2struct|celldisp|cellfun|cellplot|cellstr|cgs|checkcode|checkin|checkout|chol|cholinc|cholupdate|circshift|cla|clabel|class|clc|clear|clearvars|clf|clipboard|clock|close|closereq|cmopts|cmpermute|cmunique|colamd|colon|colorbar|colordef|colormap|colormapeditor|colperm|Combine|comet|comet3|commandhistory|commandwindow|compan|compass|complex|computer|cond|condeig|condest|coneplot|conj|containers.Map|contour(?:3|c|f|slice)?|contrast|conv|conv2|convhull|convhulln|convn|cool|copper|copyfile|copyobj|corrcoef|cos(?:d|h)?|cot(?:d|h)?|cov|cplxpair|cputime|createClassFromWsdl|createSoapMessage|cross|csc(?:d|h)?|csvread|csvwrite|ctranspose|cumprod|cumsum|cumtrapz|curl|customverctrl|cylinder|daqread|daspect|datacursormode|datatipinfo|date|datenum|datestr|datetick|datevec|dbclear|dbcont|dbdown|dblquad|dbmex|dbquit|dbstack|dbstatus|dbstep|dbstop|dbtype|dbup|dde23|ddeget|ddesd|ddeset|deal|deblank|dec2base|dec2bin|dec2hex|decic|deconv|del2|delaunay|delaunay3|delaunayn|DelaunayTri|delete|demo|depdir|depfun|det|detrend|deval|diag|dialog|diary|diff|diffuse|dir|disp|display|dither|divergence|dlmread|dlmwrite|dmperm|doc|docsearch|dos|dot|dragrect|drawnow|dsearch|dsearchn|dynamicprops|echo|echodemo|edit|eig|eigs|ellipj|ellipke|ellipsoid|empty|enableNETfromNetworkDrive|enableservice|EndInvoke|enumeration|eomday|eq|erf|erfc|erfcinv|erfcx|erfinv|error|errorbar|errordlg|etime|etree|etreeplot|eval|evalc|evalin|event.(?:EventData|listener|PropertyEvent|proplistener)|exifread|exist|exit|exp|expint|expm|expm1|export2wsdlg|eye|ezcontour|ezcontourf|ezmesh|ezmeshc|ezplot|ezplot3|ezpolar|ezsurf|ezsurfc|factor|factorial|fclose|feather|feature|feof|ferror|feval|fft|fft2|fftn|fftshift|fftw|fgetl|fgets|fieldnames|figure|figurepalette|fileattrib|filebrowser|filemarker|fileparts|fileread|filesep|fill|fill3|filter|filter2|find|findall|findfigs|findobj|findstr|finish|fitsdisp|fitsinfo|fitsread|fitswrite|fix|flag|flipdim|fliplr|flipud|floor|flow|fminbnd|fminsearch|fopen|format|fplot|fprintf|frame2im|fread|freqspace|frewind|fscanf|fseek|ftell|FTP|full|fullfile|func2str|functions|funm|fwrite|fzero|gallery|gamma|gammainc|gammaincinv|gammaln|gca|gcbf|gcbo|gcd|gcf|gco|ge|genpath|genvarname|get|getappdata|getenv|getfield|getframe|getpixelposition|getpref|ginput|gmres|gplot|grabcode|gradient|gray|graymon|grid|griddata(?:3|n)?|griddedInterpolant|gsvd|gt|gtext|guidata|guide|guihandles|gunzip|gzip|h5create|h5disp|h5info|h5read|h5readatt|h5write|h5writeatt|hadamard|handle|hankel|hdf|hdf5|hdf5info|hdf5read|hdf5write|hdfinfo|hdfread|hdftool|help|helpbrowser|helpdesk|helpdlg|helpwin|hess|hex2dec|hex2num|hgexport|hggroup|hgload|hgsave|hgsetget|hgtransform|hidden|hilb|hist|histc|hold|home|horzcat|hostid|hot|hsv|hsv2rgb|hypot|ichol|idivide|ifft|ifft2|ifftn|ifftshift|ilu|im2frame|im2java|imag|image|imagesc|imapprox|imfinfo|imformats|import|importdata|imread|imwrite|ind2rgb|ind2sub|inferiorto|info|inline|inmem|inpolygon|input|inputdlg|inputname|inputParser|inspect|instrcallback|instrfind|instrfindall|int2str|integral(?:2|3)?|interp(?:1|1q|2|3|ft|n)|interpstreamspeed|intersect|intmax|intmin|inv|invhilb|ipermute|isa|isappdata|iscell|iscellstr|ischar|iscolumn|isdir|isempty|isequal|isequaln|isequalwithequalnans|isfield|isfinite|isfloat|isglobal|ishandle|ishghandle|ishold|isinf|isinteger|isjava|iskeyword|isletter|islogical|ismac|ismatrix|ismember|ismethod|isnan|isnumeric|isobject|isocaps|isocolors|isonormals|isosurface|ispc|ispref|isprime|isprop|isreal|isrow|isscalar|issorted|isspace|issparse|isstr|isstrprop|isstruct|isstudent|isunix|isvarname|isvector|javaaddpath|javaArray|javachk|javaclasspath|javacomponent|javaMethod|javaMethodEDT|javaObject|javaObjectEDT|javarmpath|jet|keyboard|kron|lasterr|lasterror|lastwarn|lcm|ldivide|ldl|le|legend|legendre|length|libfunctions|libfunctionsview|libisloaded|libpointer|libstruct|license|light|lightangle|lighting|lin2mu|line|lines|linkaxes|linkdata|linkprop|linsolve|linspace|listdlg|listfonts|load|loadlibrary|loadobj|log|log10|log1p|log2|loglog|logm|logspace|lookfor|lower|ls|lscov|lsqnonneg|lsqr|lt|lu|luinc|magic|makehgtform|mat2cell|mat2str|material|matfile|matlab.io.MatFile|matlab.mixin.(?:Copyable|Heterogeneous(?:.getDefaultScalarElement)?)|matlabrc|matlabroot|max|maxNumCompThreads|mean|median|membrane|memmapfile|memory|menu|mesh|meshc|meshgrid|meshz|meta.(?:class(?:.fromName)?|DynamicProperty|EnumeratedValue|event|MetaData|method|package(?:.(?:fromName|getAllPackages))?|property)|metaclass|methods|methodsview|mex(?:.getCompilerConfigurations)?|MException|mexext|mfilename|min|minres|minus|mislocked|mkdir|mkpp|mldivide|mlint|mlintrpt|mlock|mmfileinfo|mmreader|mod|mode|more|move|movefile|movegui|movie|movie2avi|mpower|mrdivide|msgbox|mtimes|mu2lin|multibandread|multibandwrite|munlock|namelengthmax|nargchk|narginchk|nargoutchk|native2unicode|nccreate|ncdisp|nchoosek|ncinfo|ncread|ncreadatt|ncwrite|ncwriteatt|ncwriteschema|ndgrid|ndims|ne|NET(?:.(?:addAssembly|Assembly|convertArray|createArray|createGeneric|disableAutoRelease|enableAutoRelease|GenericClass|invokeGenericMethod|NetException|setStaticProperty))?|netcdf.(?:abort|close|copyAtt|create|defDim|defGrp|defVar|defVarChunking|defVarDeflate|defVarFill|defVarFletcher32|delAtt|endDef|getAtt|getChunkCache|getConstant|getConstantNames|getVar|inq|inqAtt|inqAttID|inqAttName|inqDim|inqDimID|inqDimIDs|inqFormat|inqGrpName|inqGrpNameFull|inqGrpParent|inqGrps|inqLibVers|inqNcid|inqUnlimDims|inqVar|inqVarChunking|inqVarDeflate|inqVarFill|inqVarFletcher32|inqVarID|inqVarIDs|open|putAtt|putVar|reDef|renameAtt|renameDim|renameVar|setChunkCache|setDefaultFormat|setFill|sync)|newplot|nextpow2|nnz|noanimate|nonzeros|norm|normest|not|notebook|now|nthroot|null|num2cell|num2hex|num2str|numel|nzmax|ode(?:113|15i|15s|23|23s|23t|23tb|45)|odeget|odeset|odextend|onCleanup|ones|open|openfig|opengl|openvar|optimget|optimset|or|ordeig|orderfields|ordqz|ordschur|orient|orth|pack|padecoef|pagesetupdlg|pan|pareto|parseSoapResponse|pascal|patch|path|path2rc|pathsep|pathtool|pause|pbaspect|pcg|pchip|pcode|pcolor|pdepe|pdeval|peaks|perl|perms|permute|pie|pink|pinv|planerot|playshow|plot|plot3|plotbrowser|plotedit|plotmatrix|plottools|plotyy|plus|pol2cart|polar|poly|polyarea|polyder|polyeig|polyfit|polyint|polyval|polyvalm|pow2|power|ppval|prefdir|preferences|primes|print|printdlg|printopt|printpreview|prod|profile|profsave|propedit|propertyeditor|psi|publish|PutCharArray|PutFullMatrix|PutWorkspaceData|pwd|qhull|qmr|qr|qrdelete|qrinsert|qrupdate|quad|quad2d|quadgk|quadl|quadv|questdlg|quit|quiver|quiver3|qz|rand|randi|randn|randperm|RandStream(?:.(?:create|getDefaultStream|getGlobalStream|list|setDefaultStream|setGlobalStream))?|rank|rat|rats|rbbox|rcond|rdivide|readasync|real|reallog|realmax|realmin|realpow|realsqrt|record|rectangle|rectint|recycle|reducepatch|reducevolume|refresh|refreshdata|regexp|regexpi|regexprep|regexptranslate|rehash|rem|Remove|RemoveAll|repmat|reset|reshape|residue|restoredefaultpath|rethrow|rgb2hsv|rgb2ind|rgbplot|ribbon|rmappdata|rmdir|rmfield|rmpath|rmpref|rng|roots|rose|rosser|rot90|rotate|rotate3d|round|rref|rsf2csf|run|save|saveas|saveobj|savepath|scatter|scatter3|schur|sec|secd|sech|selectmoveresize|semilogx|semilogy|sendmail|serial|set|setappdata|setdiff|setenv|setfield|setpixelposition|setpref|setstr|setxor|shading|shg|shiftdim|showplottool|shrinkfaces|sign|sin(?:d|h)?|size|slice|smooth3|snapnow|sort|sortrows|sound|soundsc|spalloc|spaugment|spconvert|spdiags|specular|speye|spfun|sph2cart|sphere|spinmap|spline|spones|spparms|sprand|sprandn|sprandsym|sprank|spring|sprintf|spy|sqrt|sqrtm|squeeze|ss2tf|sscanf|stairs|startup|std|stem|stem3|stopasync|str2double|str2func|str2mat|str2num|strcat|strcmp|strcmpi|stream2|stream3|streamline|streamparticles|streamribbon|streamslice|streamtube|strfind|strjust|strmatch|strncmp|strncmpi|strread|strrep|strtok|strtrim|struct2cell|structfun|strvcat|sub2ind|subplot|subsasgn|subsindex|subspace|subsref|substruct|subvolume|sum|summer|superclasses|superiorto|support|surf|surf2patch|surface|surfc|surfl|surfnorm|svd|svds|swapbytes|symamd|symbfact|symmlq|symrcm|symvar|system|tan(?:d|h)?|tar|tempdir|tempname|tetramesh|texlabel|text|textread|textscan|textwrap|tfqmr|throw|tic|Tiff(?:.(?:getTagNames|getVersion))?|timer|timerfind|timerfindall|times|timeseries|title|toc|todatenum|toeplitz|toolboxdir|trace|transpose|trapz|treelayout|treeplot|tril|trimesh|triplequad|triplot|TriRep|TriScatteredInterp|trisurf|triu|tscollection|tsearch|tsearchn|tstool|type|typecast|uibuttongroup|uicontextmenu|uicontrol|uigetdir|uigetfile|uigetpref|uiimport|uimenu|uiopen|uipanel|uipushtool|uiputfile|uiresume|uisave|uisetcolor|uisetfont|uisetpref|uistack|uitable|uitoggletool|uitoolbar|uiwait|uminus|undocheckout|unicode2native|union|unique|unix|unloadlibrary|unmesh|unmkpp|untar|unwrap|unzip|uplus|upper|urlread|urlwrite|usejava|userpath|validateattributes|validatestring|vander|var|vectorize|ver|verctrl|verLessThan|version|vertcat|VideoReader(?:.isPlatformSupported)?|VideoWriter(?:.getProfiles)?|view|viewmtx|visdiff|volumebounds|voronoi|voronoin|wait|waitbar|waitfor|waitforbuttonpress|warndlg|warning|waterfall|wavfinfo|wavplay|wavread|wavrecord|wavwrite|web|weekday|what|whatsnew|which|whitebg|who|whos|wilkinson|winopen|winqueryreg|winter|wk1finfo|wk1read|wk1write|workspace|xlabel|xlim|xlsfinfo|xlsread|xlswrite|xmlread|xmlwrite|xor|xslt|ylabel|ylim|zeros|zip|zlabel|zlim|zoom)\\b/,null],\n[\"fun_tbx\",/^\\b(?:addedvarplot|andrewsplot|anova(?:1|2|n)|ansaribradley|aoctool|barttest|bbdesign|beta(?:cdf|fit|inv|like|pdf|rnd|stat)|bino(?:cdf|fit|inv|pdf|rnd|stat)|biplot|bootci|bootstrp|boxplot|candexch|candgen|canoncorr|capability|capaplot|caseread|casewrite|categorical|ccdesign|cdfplot|chi2(?:cdf|gof|inv|pdf|rnd|stat)|cholcov|Classification(?:BaggedEnsemble|Discriminant(?:.(?:fit|make|template))?|Ensemble|KNN(?:.(?:fit|template))?|PartitionedEnsemble|PartitionedModel|Tree(?:.(?:fit|template))?)|classify|classregtree|cluster|clusterdata|cmdscale|combnk|Compact(?:Classification(?:Discriminant|Ensemble|Tree)|Regression(?:Ensemble|Tree)|TreeBagger)|confusionmat|controlchart|controlrules|cophenet|copula(?:cdf|fit|param|pdf|rnd|stat)|cordexch|corr|corrcov|coxphfit|createns|crosstab|crossval|cvpartition|datasample|dataset|daugment|dcovary|dendrogram|dfittool|disttool|dummyvar|dwtest|ecdf|ecdfhist|ev(?:cdf|fit|inv|like|pdf|rnd|stat)|ExhaustiveSearcher|exp(?:cdf|fit|inv|like|pdf|rnd|stat)|factoran|fcdf|ff2n|finv|fitdist|fitensemble|fpdf|fracfact|fracfactgen|friedman|frnd|fstat|fsurfht|fullfact|gagerr|gam(?:cdf|fit|inv|like|pdf|rnd|stat)|GeneralizedLinearModel(?:.fit)?|geo(?:cdf|inv|mean|pdf|rnd|stat)|gev(?:cdf|fit|inv|like|pdf|rnd|stat)|gline|glmfit|glmval|glyphplot|gmdistribution(?:.fit)?|gname|gp(?:cdf|fit|inv|like|pdf|rnd|stat)|gplotmatrix|grp2idx|grpstats|gscatter|haltonset|harmmean|hist3|histfit|hmm(?:decode|estimate|generate|train|viterbi)|hougen|hyge(?:cdf|inv|pdf|rnd|stat)|icdf|inconsistent|interactionplot|invpred|iqr|iwishrnd|jackknife|jbtest|johnsrnd|KDTreeSearcher|kmeans|knnsearch|kruskalwallis|ksdensity|kstest|kstest2|kurtosis|lasso|lassoglm|lassoPlot|leverage|lhsdesign|lhsnorm|lillietest|LinearModel(?:.fit)?|linhyptest|linkage|logn(?:cdf|fit|inv|like|pdf|rnd|stat)|lsline|mad|mahal|maineffectsplot|manova1|manovacluster|mdscale|mhsample|mle|mlecov|mnpdf|mnrfit|mnrnd|mnrval|moment|multcompare|multivarichart|mvn(?:cdf|pdf|rnd)|mvregress|mvregresslike|mvt(?:cdf|pdf|rnd)|NaiveBayes(?:.fit)?|nan(?:cov|max|mean|median|min|std|sum|var)|nbin(?:cdf|fit|inv|pdf|rnd|stat)|ncf(?:cdf|inv|pdf|rnd|stat)|nct(?:cdf|inv|pdf|rnd|stat)|ncx2(?:cdf|inv|pdf|rnd|stat)|NeighborSearcher|nlinfit|nlintool|nlmefit|nlmefitsa|nlparci|nlpredci|nnmf|nominal|NonLinearModel(?:.fit)?|norm(?:cdf|fit|inv|like|pdf|rnd|stat)|normplot|normspec|ordinal|outlierMeasure|parallelcoords|paretotails|partialcorr|pcacov|pcares|pdf|pdist|pdist2|pearsrnd|perfcurve|perms|piecewisedistribution|plsregress|poiss(?:cdf|fit|inv|pdf|rnd|tat)|polyconf|polytool|prctile|princomp|ProbDist(?:Kernel|Parametric|UnivKernel|UnivParam)?|probplot|procrustes|qqplot|qrandset|qrandstream|quantile|randg|random|randsample|randtool|range|rangesearch|ranksum|rayl(?:cdf|fit|inv|pdf|rnd|stat)|rcoplot|refcurve|refline|regress|Regression(?:BaggedEnsemble|Ensemble|PartitionedEnsemble|PartitionedModel|Tree(?:.(?:fit|template))?)|regstats|relieff|ridge|robustdemo|robustfit|rotatefactors|rowexch|rsmdemo|rstool|runstest|sampsizepwr|scatterhist|sequentialfs|signrank|signtest|silhouette|skewness|slicesample|sobolset|squareform|statget|statset|stepwise|stepwisefit|surfht|tabulate|tblread|tblwrite|tcdf|tdfread|tiedrank|tinv|tpdf|TreeBagger|treedisp|treefit|treeprune|treetest|treeval|trimmean|trnd|tstat|ttest|ttest2|unid(?:cdf|inv|pdf|rnd|stat)|unif(?:cdf|inv|it|pdf|rnd|stat)|vartest(?:2|n)?|wbl(?:cdf|fit|inv|like|pdf|rnd|stat)|wblplot|wishrnd|x2fx|xptread|zscore|ztest)\\b/,\nnull],[\"fun_tbx\",/^\\b(?:adapthisteq|analyze75info|analyze75read|applycform|applylut|axes2pix|bestblk|blockproc|bwarea|bwareaopen|bwboundaries|bwconncomp|bwconvhull|bwdist|bwdistgeodesic|bweuler|bwhitmiss|bwlabel|bwlabeln|bwmorph|bwpack|bwperim|bwselect|bwtraceboundary|bwulterode|bwunpack|checkerboard|col2im|colfilt|conndef|convmtx2|corner|cornermetric|corr2|cp2tform|cpcorr|cpselect|cpstruct2pairs|dct2|dctmtx|deconvblind|deconvlucy|deconvreg|deconvwnr|decorrstretch|demosaic|dicom(?:anon|dict|info|lookup|read|uid|write)|edge|edgetaper|entropy|entropyfilt|fan2para|fanbeam|findbounds|fliptform|freqz2|fsamp2|fspecial|ftrans2|fwind1|fwind2|getheight|getimage|getimagemodel|getline|getneighbors|getnhood|getpts|getrangefromclass|getrect|getsequence|gray2ind|graycomatrix|graycoprops|graydist|grayslice|graythresh|hdrread|hdrwrite|histeq|hough|houghlines|houghpeaks|iccfind|iccread|iccroot|iccwrite|idct2|ifanbeam|im2bw|im2col|im2double|im2int16|im2java2d|im2single|im2uint16|im2uint8|imabsdiff|imadd|imadjust|ImageAdapter|imageinfo|imagemodel|imapplymatrix|imattributes|imbothat|imclearborder|imclose|imcolormaptool|imcomplement|imcontour|imcontrast|imcrop|imdilate|imdisplayrange|imdistline|imdivide|imellipse|imerode|imextendedmax|imextendedmin|imfill|imfilter|imfindcircles|imfreehand|imfuse|imgca|imgcf|imgetfile|imhandles|imhist|imhmax|imhmin|imimposemin|imlincomb|imline|immagbox|immovie|immultiply|imnoise|imopen|imoverview|imoverviewpanel|impixel|impixelinfo|impixelinfoval|impixelregion|impixelregionpanel|implay|impoint|impoly|impositionrect|improfile|imputfile|impyramid|imreconstruct|imrect|imregconfig|imregionalmax|imregionalmin|imregister|imresize|imroi|imrotate|imsave|imscrollpanel|imshow|imshowpair|imsubtract|imtool|imtophat|imtransform|imview|ind2gray|ind2rgb|interfileinfo|interfileread|intlut|ippl|iptaddcallback|iptcheckconn|iptcheckhandle|iptcheckinput|iptcheckmap|iptchecknargin|iptcheckstrs|iptdemos|iptgetapi|iptGetPointerBehavior|iptgetpref|ipticondir|iptnum2ordinal|iptPointerManager|iptprefs|iptremovecallback|iptSetPointerBehavior|iptsetpref|iptwindowalign|iradon|isbw|isflat|isgray|isicc|isind|isnitf|isrgb|isrset|lab2double|lab2uint16|lab2uint8|label2rgb|labelmatrix|makecform|makeConstrainToRectFcn|makehdr|makelut|makeresampler|maketform|mat2gray|mean2|medfilt2|montage|nitfinfo|nitfread|nlfilter|normxcorr2|ntsc2rgb|openrset|ordfilt2|otf2psf|padarray|para2fan|phantom|poly2mask|psf2otf|qtdecomp|qtgetblk|qtsetblk|radon|rangefilt|reflect|regionprops|registration.metric.(?:MattesMutualInformation|MeanSquares)|registration.optimizer.(?:OnePlusOneEvolutionary|RegularStepGradientDescent)|rgb2gray|rgb2ntsc|rgb2ycbcr|roicolor|roifill|roifilt2|roipoly|rsetwrite|std2|stdfilt|strel|stretchlim|subimage|tformarray|tformfwd|tforminv|tonemap|translate|truesize|uintlut|viscircles|warp|watershed|whitepoint|wiener2|xyz2double|xyz2uint16|ycbcr2rgb)\\b/,\nnull],[\"fun_tbx\",/^\\b(?:bintprog|color|fgoalattain|fminbnd|fmincon|fminimax|fminsearch|fminunc|fseminf|fsolve|fzero|fzmult|gangstr|ktrlink|linprog|lsqcurvefit|lsqlin|lsqnonlin|lsqnonneg|optimget|optimset|optimtool|quadprog)\\b/,null],[\"ident\",/^[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*/,null]]),[\"matlab-identifiers\"]);a.registerLangHandler(a.createSimpleLexer([],d),[\"matlab-operators\"]);a.registerLangHandler(a.createSimpleLexer(b,c),[\"matlab\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (c) 2013 by Amro <amroamroamro@gmail.com>\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\nvar a=window.PR,b=[[a.PR_PLAIN,/^[ \\t\\r\\n\\v\\f\\xA0]+/,null,\" \\t\\r\\n\\x0B\\f\\u00a0\"],[a.PR_COMMENT,/^%\\{[^%]*%+(?:[^\\}%][^%]*%+)*\\}/,null],[a.PR_COMMENT,/^%[^\\r\\n]*/,null,\"%\"],[\"syscmd\",/^![^\\r\\n]*/,null,\"!\"]],c=[[\"linecont\",/^\\.\\.\\.\\s*[\\r\\n]/,null],[\"err\",/^\\?\\?\\? [^\\r\\n]*/,null],[\"wrn\",/^Warning: [^\\r\\n]*/,null],[\"codeoutput\",/^>>\\s+/,null],[\"codeoutput\",/^octave:\\d+>\\s+/,null],[\"lang-matlab-operators\",/^((?:[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*|\\)|\\]|\\}|\\.)')/,null],[\"lang-matlab-identifiers\",\n/^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)(?!')/,null],[a.PR_STRING,/^'(?:[^']|'')*'/,null],[a.PR_LITERAL,/^[+\\-]?\\.?\\d+(?:\\.\\d*)?(?:[Ee][+\\-]?\\d+)?[ij]?/,null],[a.PR_TAG,/^(?:\\{|\\}|\\(|\\)|\\[|\\])/,null],[a.PR_PUNCTUATION,/^(?:<|>|=|~|@|&|;|,|:|!|\\-|\\+|\\*|\\^|\\.|\\||\\\\|\\/)/,null]],d=[[\"lang-matlab-identifiers\",/^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)/,null],[a.PR_TAG,/^(?:\\{|\\}|\\(|\\)|\\[|\\])/,null],[a.PR_PUNCTUATION,/^(?:<|>|=|~|@|&|;|,|:|!|\\-|\\+|\\*|\\^|\\.|\\||\\\\|\\/)/,null],[\"transpose\",\n/^'/,null]];\na.registerLangHandler(a.createSimpleLexer([],[[a.PR_KEYWORD,/^\\b(?:break|case|catch|classdef|continue|else|elseif|end|for|function|global|if|otherwise|parfor|persistent|return|spmd|switch|try|while)\\b/,null],[\"const\",/^\\b(?:true|false|inf|Inf|nan|NaN|eps|pi|ans|nargin|nargout|varargin|varargout)\\b/,null],[a.PR_TYPE,/^\\b(?:cell|struct|char|double|single|logical|u?int(?:8|16|32|64)|sparse)\\b/,null],[\"fun\",/^\\b(?:abs|accumarray|acos(?:d|h)?|acot(?:d|h)?|acsc(?:d|h)?|actxcontrol(?:list|select)?|actxGetRunningServer|actxserver|addlistener|addpath|addpref|addtodate|airy|align|alim|all|allchild|alpha|alphamap|amd|ancestor|and|angle|annotation|any|area|arrayfun|asec(?:d|h)?|asin(?:d|h)?|assert|assignin|atan(?:2|d|h)?|audiodevinfo|audioplayer|audiorecorder|aufinfo|auread|autumn|auwrite|avifile|aviinfo|aviread|axes|axis|balance|bar(?:3|3h|h)?|base2dec|beep|BeginInvoke|bench|bessel(?:h|i|j|k|y)|beta|betainc|betaincinv|betaln|bicg|bicgstab|bicgstabl|bin2dec|bitand|bitcmp|bitget|bitmax|bitnot|bitor|bitset|bitshift|bitxor|blanks|blkdiag|bone|box|brighten|brush|bsxfun|builddocsearchdb|builtin|bvp4c|bvp5c|bvpget|bvpinit|bvpset|bvpxtend|calendar|calllib|callSoapService|camdolly|cameratoolbar|camlight|camlookat|camorbit|campan|campos|camproj|camroll|camtarget|camup|camva|camzoom|cart2pol|cart2sph|cast|cat|caxis|cd|cdf2rdf|cdfepoch|cdfinfo|cdflib(?:.(?:close|closeVar|computeEpoch|computeEpoch16|create|createAttr|createVar|delete|deleteAttr|deleteAttrEntry|deleteAttrgEntry|deleteVar|deleteVarRecords|epoch16Breakdown|epochBreakdown|getAttrEntry|getAttrgEntry|getAttrMaxEntry|getAttrMaxgEntry|getAttrName|getAttrNum|getAttrScope|getCacheSize|getChecksum|getCompression|getCompressionCacheSize|getConstantNames|getConstantValue|getCopyright|getFileBackward|getFormat|getLibraryCopyright|getLibraryVersion|getMajority|getName|getNumAttrEntries|getNumAttrgEntries|getNumAttributes|getNumgAttributes|getReadOnlyMode|getStageCacheSize|getValidate|getVarAllocRecords|getVarBlockingFactor|getVarCacheSize|getVarCompression|getVarData|getVarMaxAllocRecNum|getVarMaxWrittenRecNum|getVarName|getVarNum|getVarNumRecsWritten|getVarPadValue|getVarRecordData|getVarReservePercent|getVarsMaxWrittenRecNum|getVarSparseRecords|getVersion|hyperGetVarData|hyperPutVarData|inquire|inquireAttr|inquireAttrEntry|inquireAttrgEntry|inquireVar|open|putAttrEntry|putAttrgEntry|putVarData|putVarRecordData|renameAttr|renameVar|setCacheSize|setChecksum|setCompression|setCompressionCacheSize|setFileBackward|setFormat|setMajority|setReadOnlyMode|setStageCacheSize|setValidate|setVarAllocBlockRecords|setVarBlockingFactor|setVarCacheSize|setVarCompression|setVarInitialRecs|setVarPadValue|SetVarReservePercent|setVarsCacheSize|setVarSparseRecords))?|cdfread|cdfwrite|ceil|cell2mat|cell2struct|celldisp|cellfun|cellplot|cellstr|cgs|checkcode|checkin|checkout|chol|cholinc|cholupdate|circshift|cla|clabel|class|clc|clear|clearvars|clf|clipboard|clock|close|closereq|cmopts|cmpermute|cmunique|colamd|colon|colorbar|colordef|colormap|colormapeditor|colperm|Combine|comet|comet3|commandhistory|commandwindow|compan|compass|complex|computer|cond|condeig|condest|coneplot|conj|containers.Map|contour(?:3|c|f|slice)?|contrast|conv|conv2|convhull|convhulln|convn|cool|copper|copyfile|copyobj|corrcoef|cos(?:d|h)?|cot(?:d|h)?|cov|cplxpair|cputime|createClassFromWsdl|createSoapMessage|cross|csc(?:d|h)?|csvread|csvwrite|ctranspose|cumprod|cumsum|cumtrapz|curl|customverctrl|cylinder|daqread|daspect|datacursormode|datatipinfo|date|datenum|datestr|datetick|datevec|dbclear|dbcont|dbdown|dblquad|dbmex|dbquit|dbstack|dbstatus|dbstep|dbstop|dbtype|dbup|dde23|ddeget|ddesd|ddeset|deal|deblank|dec2base|dec2bin|dec2hex|decic|deconv|del2|delaunay|delaunay3|delaunayn|DelaunayTri|delete|demo|depdir|depfun|det|detrend|deval|diag|dialog|diary|diff|diffuse|dir|disp|display|dither|divergence|dlmread|dlmwrite|dmperm|doc|docsearch|dos|dot|dragrect|drawnow|dsearch|dsearchn|dynamicprops|echo|echodemo|edit|eig|eigs|ellipj|ellipke|ellipsoid|empty|enableNETfromNetworkDrive|enableservice|EndInvoke|enumeration|eomday|eq|erf|erfc|erfcinv|erfcx|erfinv|error|errorbar|errordlg|etime|etree|etreeplot|eval|evalc|evalin|event.(?:EventData|listener|PropertyEvent|proplistener)|exifread|exist|exit|exp|expint|expm|expm1|export2wsdlg|eye|ezcontour|ezcontourf|ezmesh|ezmeshc|ezplot|ezplot3|ezpolar|ezsurf|ezsurfc|factor|factorial|fclose|feather|feature|feof|ferror|feval|fft|fft2|fftn|fftshift|fftw|fgetl|fgets|fieldnames|figure|figurepalette|fileattrib|filebrowser|filemarker|fileparts|fileread|filesep|fill|fill3|filter|filter2|find|findall|findfigs|findobj|findstr|finish|fitsdisp|fitsinfo|fitsread|fitswrite|fix|flag|flipdim|fliplr|flipud|floor|flow|fminbnd|fminsearch|fopen|format|fplot|fprintf|frame2im|fread|freqspace|frewind|fscanf|fseek|ftell|FTP|full|fullfile|func2str|functions|funm|fwrite|fzero|gallery|gamma|gammainc|gammaincinv|gammaln|gca|gcbf|gcbo|gcd|gcf|gco|ge|genpath|genvarname|get|getappdata|getenv|getfield|getframe|getpixelposition|getpref|ginput|gmres|gplot|grabcode|gradient|gray|graymon|grid|griddata(?:3|n)?|griddedInterpolant|gsvd|gt|gtext|guidata|guide|guihandles|gunzip|gzip|h5create|h5disp|h5info|h5read|h5readatt|h5write|h5writeatt|hadamard|handle|hankel|hdf|hdf5|hdf5info|hdf5read|hdf5write|hdfinfo|hdfread|hdftool|help|helpbrowser|helpdesk|helpdlg|helpwin|hess|hex2dec|hex2num|hgexport|hggroup|hgload|hgsave|hgsetget|hgtransform|hidden|hilb|hist|histc|hold|home|horzcat|hostid|hot|hsv|hsv2rgb|hypot|ichol|idivide|ifft|ifft2|ifftn|ifftshift|ilu|im2frame|im2java|imag|image|imagesc|imapprox|imfinfo|imformats|import|importdata|imread|imwrite|ind2rgb|ind2sub|inferiorto|info|inline|inmem|inpolygon|input|inputdlg|inputname|inputParser|inspect|instrcallback|instrfind|instrfindall|int2str|integral(?:2|3)?|interp(?:1|1q|2|3|ft|n)|interpstreamspeed|intersect|intmax|intmin|inv|invhilb|ipermute|isa|isappdata|iscell|iscellstr|ischar|iscolumn|isdir|isempty|isequal|isequaln|isequalwithequalnans|isfield|isfinite|isfloat|isglobal|ishandle|ishghandle|ishold|isinf|isinteger|isjava|iskeyword|isletter|islogical|ismac|ismatrix|ismember|ismethod|isnan|isnumeric|isobject|isocaps|isocolors|isonormals|isosurface|ispc|ispref|isprime|isprop|isreal|isrow|isscalar|issorted|isspace|issparse|isstr|isstrprop|isstruct|isstudent|isunix|isvarname|isvector|javaaddpath|javaArray|javachk|javaclasspath|javacomponent|javaMethod|javaMethodEDT|javaObject|javaObjectEDT|javarmpath|jet|keyboard|kron|lasterr|lasterror|lastwarn|lcm|ldivide|ldl|le|legend|legendre|length|libfunctions|libfunctionsview|libisloaded|libpointer|libstruct|license|light|lightangle|lighting|lin2mu|line|lines|linkaxes|linkdata|linkprop|linsolve|linspace|listdlg|listfonts|load|loadlibrary|loadobj|log|log10|log1p|log2|loglog|logm|logspace|lookfor|lower|ls|lscov|lsqnonneg|lsqr|lt|lu|luinc|magic|makehgtform|mat2cell|mat2str|material|matfile|matlab.io.MatFile|matlab.mixin.(?:Copyable|Heterogeneous(?:.getDefaultScalarElement)?)|matlabrc|matlabroot|max|maxNumCompThreads|mean|median|membrane|memmapfile|memory|menu|mesh|meshc|meshgrid|meshz|meta.(?:class(?:.fromName)?|DynamicProperty|EnumeratedValue|event|MetaData|method|package(?:.(?:fromName|getAllPackages))?|property)|metaclass|methods|methodsview|mex(?:.getCompilerConfigurations)?|MException|mexext|mfilename|min|minres|minus|mislocked|mkdir|mkpp|mldivide|mlint|mlintrpt|mlock|mmfileinfo|mmreader|mod|mode|more|move|movefile|movegui|movie|movie2avi|mpower|mrdivide|msgbox|mtimes|mu2lin|multibandread|multibandwrite|munlock|namelengthmax|nargchk|narginchk|nargoutchk|native2unicode|nccreate|ncdisp|nchoosek|ncinfo|ncread|ncreadatt|ncwrite|ncwriteatt|ncwriteschema|ndgrid|ndims|ne|NET(?:.(?:addAssembly|Assembly|convertArray|createArray|createGeneric|disableAutoRelease|enableAutoRelease|GenericClass|invokeGenericMethod|NetException|setStaticProperty))?|netcdf.(?:abort|close|copyAtt|create|defDim|defGrp|defVar|defVarChunking|defVarDeflate|defVarFill|defVarFletcher32|delAtt|endDef|getAtt|getChunkCache|getConstant|getConstantNames|getVar|inq|inqAtt|inqAttID|inqAttName|inqDim|inqDimID|inqDimIDs|inqFormat|inqGrpName|inqGrpNameFull|inqGrpParent|inqGrps|inqLibVers|inqNcid|inqUnlimDims|inqVar|inqVarChunking|inqVarDeflate|inqVarFill|inqVarFletcher32|inqVarID|inqVarIDs|open|putAtt|putVar|reDef|renameAtt|renameDim|renameVar|setChunkCache|setDefaultFormat|setFill|sync)|newplot|nextpow2|nnz|noanimate|nonzeros|norm|normest|not|notebook|now|nthroot|null|num2cell|num2hex|num2str|numel|nzmax|ode(?:113|15i|15s|23|23s|23t|23tb|45)|odeget|odeset|odextend|onCleanup|ones|open|openfig|opengl|openvar|optimget|optimset|or|ordeig|orderfields|ordqz|ordschur|orient|orth|pack|padecoef|pagesetupdlg|pan|pareto|parseSoapResponse|pascal|patch|path|path2rc|pathsep|pathtool|pause|pbaspect|pcg|pchip|pcode|pcolor|pdepe|pdeval|peaks|perl|perms|permute|pie|pink|pinv|planerot|playshow|plot|plot3|plotbrowser|plotedit|plotmatrix|plottools|plotyy|plus|pol2cart|polar|poly|polyarea|polyder|polyeig|polyfit|polyint|polyval|polyvalm|pow2|power|ppval|prefdir|preferences|primes|print|printdlg|printopt|printpreview|prod|profile|profsave|propedit|propertyeditor|psi|publish|PutCharArray|PutFullMatrix|PutWorkspaceData|pwd|qhull|qmr|qr|qrdelete|qrinsert|qrupdate|quad|quad2d|quadgk|quadl|quadv|questdlg|quit|quiver|quiver3|qz|rand|randi|randn|randperm|RandStream(?:.(?:create|getDefaultStream|getGlobalStream|list|setDefaultStream|setGlobalStream))?|rank|rat|rats|rbbox|rcond|rdivide|readasync|real|reallog|realmax|realmin|realpow|realsqrt|record|rectangle|rectint|recycle|reducepatch|reducevolume|refresh|refreshdata|regexp|regexpi|regexprep|regexptranslate|rehash|rem|Remove|RemoveAll|repmat|reset|reshape|residue|restoredefaultpath|rethrow|rgb2hsv|rgb2ind|rgbplot|ribbon|rmappdata|rmdir|rmfield|rmpath|rmpref|rng|roots|rose|rosser|rot90|rotate|rotate3d|round|rref|rsf2csf|run|save|saveas|saveobj|savepath|scatter|scatter3|schur|sec|secd|sech|selectmoveresize|semilogx|semilogy|sendmail|serial|set|setappdata|setdiff|setenv|setfield|setpixelposition|setpref|setstr|setxor|shading|shg|shiftdim|showplottool|shrinkfaces|sign|sin(?:d|h)?|size|slice|smooth3|snapnow|sort|sortrows|sound|soundsc|spalloc|spaugment|spconvert|spdiags|specular|speye|spfun|sph2cart|sphere|spinmap|spline|spones|spparms|sprand|sprandn|sprandsym|sprank|spring|sprintf|spy|sqrt|sqrtm|squeeze|ss2tf|sscanf|stairs|startup|std|stem|stem3|stopasync|str2double|str2func|str2mat|str2num|strcat|strcmp|strcmpi|stream2|stream3|streamline|streamparticles|streamribbon|streamslice|streamtube|strfind|strjust|strmatch|strncmp|strncmpi|strread|strrep|strtok|strtrim|struct2cell|structfun|strvcat|sub2ind|subplot|subsasgn|subsindex|subspace|subsref|substruct|subvolume|sum|summer|superclasses|superiorto|support|surf|surf2patch|surface|surfc|surfl|surfnorm|svd|svds|swapbytes|symamd|symbfact|symmlq|symrcm|symvar|system|tan(?:d|h)?|tar|tempdir|tempname|tetramesh|texlabel|text|textread|textscan|textwrap|tfqmr|throw|tic|Tiff(?:.(?:getTagNames|getVersion))?|timer|timerfind|timerfindall|times|timeseries|title|toc|todatenum|toeplitz|toolboxdir|trace|transpose|trapz|treelayout|treeplot|tril|trimesh|triplequad|triplot|TriRep|TriScatteredInterp|trisurf|triu|tscollection|tsearch|tsearchn|tstool|type|typecast|uibuttongroup|uicontextmenu|uicontrol|uigetdir|uigetfile|uigetpref|uiimport|uimenu|uiopen|uipanel|uipushtool|uiputfile|uiresume|uisave|uisetcolor|uisetfont|uisetpref|uistack|uitable|uitoggletool|uitoolbar|uiwait|uminus|undocheckout|unicode2native|union|unique|unix|unloadlibrary|unmesh|unmkpp|untar|unwrap|unzip|uplus|upper|urlread|urlwrite|usejava|userpath|validateattributes|validatestring|vander|var|vectorize|ver|verctrl|verLessThan|version|vertcat|VideoReader(?:.isPlatformSupported)?|VideoWriter(?:.getProfiles)?|view|viewmtx|visdiff|volumebounds|voronoi|voronoin|wait|waitbar|waitfor|waitforbuttonpress|warndlg|warning|waterfall|wavfinfo|wavplay|wavread|wavrecord|wavwrite|web|weekday|what|whatsnew|which|whitebg|who|whos|wilkinson|winopen|winqueryreg|winter|wk1finfo|wk1read|wk1write|workspace|xlabel|xlim|xlsfinfo|xlsread|xlswrite|xmlread|xmlwrite|xor|xslt|ylabel|ylim|zeros|zip|zlabel|zlim|zoom)\\b/,null],\n[\"fun_tbx\",/^\\b(?:addedvarplot|andrewsplot|anova(?:1|2|n)|ansaribradley|aoctool|barttest|bbdesign|beta(?:cdf|fit|inv|like|pdf|rnd|stat)|bino(?:cdf|fit|inv|pdf|rnd|stat)|biplot|bootci|bootstrp|boxplot|candexch|candgen|canoncorr|capability|capaplot|caseread|casewrite|categorical|ccdesign|cdfplot|chi2(?:cdf|gof|inv|pdf|rnd|stat)|cholcov|Classification(?:BaggedEnsemble|Discriminant(?:.(?:fit|make|template))?|Ensemble|KNN(?:.(?:fit|template))?|PartitionedEnsemble|PartitionedModel|Tree(?:.(?:fit|template))?)|classify|classregtree|cluster|clusterdata|cmdscale|combnk|Compact(?:Classification(?:Discriminant|Ensemble|Tree)|Regression(?:Ensemble|Tree)|TreeBagger)|confusionmat|controlchart|controlrules|cophenet|copula(?:cdf|fit|param|pdf|rnd|stat)|cordexch|corr|corrcov|coxphfit|createns|crosstab|crossval|cvpartition|datasample|dataset|daugment|dcovary|dendrogram|dfittool|disttool|dummyvar|dwtest|ecdf|ecdfhist|ev(?:cdf|fit|inv|like|pdf|rnd|stat)|ExhaustiveSearcher|exp(?:cdf|fit|inv|like|pdf|rnd|stat)|factoran|fcdf|ff2n|finv|fitdist|fitensemble|fpdf|fracfact|fracfactgen|friedman|frnd|fstat|fsurfht|fullfact|gagerr|gam(?:cdf|fit|inv|like|pdf|rnd|stat)|GeneralizedLinearModel(?:.fit)?|geo(?:cdf|inv|mean|pdf|rnd|stat)|gev(?:cdf|fit|inv|like|pdf|rnd|stat)|gline|glmfit|glmval|glyphplot|gmdistribution(?:.fit)?|gname|gp(?:cdf|fit|inv|like|pdf|rnd|stat)|gplotmatrix|grp2idx|grpstats|gscatter|haltonset|harmmean|hist3|histfit|hmm(?:decode|estimate|generate|train|viterbi)|hougen|hyge(?:cdf|inv|pdf|rnd|stat)|icdf|inconsistent|interactionplot|invpred|iqr|iwishrnd|jackknife|jbtest|johnsrnd|KDTreeSearcher|kmeans|knnsearch|kruskalwallis|ksdensity|kstest|kstest2|kurtosis|lasso|lassoglm|lassoPlot|leverage|lhsdesign|lhsnorm|lillietest|LinearModel(?:.fit)?|linhyptest|linkage|logn(?:cdf|fit|inv|like|pdf|rnd|stat)|lsline|mad|mahal|maineffectsplot|manova1|manovacluster|mdscale|mhsample|mle|mlecov|mnpdf|mnrfit|mnrnd|mnrval|moment|multcompare|multivarichart|mvn(?:cdf|pdf|rnd)|mvregress|mvregresslike|mvt(?:cdf|pdf|rnd)|NaiveBayes(?:.fit)?|nan(?:cov|max|mean|median|min|std|sum|var)|nbin(?:cdf|fit|inv|pdf|rnd|stat)|ncf(?:cdf|inv|pdf|rnd|stat)|nct(?:cdf|inv|pdf|rnd|stat)|ncx2(?:cdf|inv|pdf|rnd|stat)|NeighborSearcher|nlinfit|nlintool|nlmefit|nlmefitsa|nlparci|nlpredci|nnmf|nominal|NonLinearModel(?:.fit)?|norm(?:cdf|fit|inv|like|pdf|rnd|stat)|normplot|normspec|ordinal|outlierMeasure|parallelcoords|paretotails|partialcorr|pcacov|pcares|pdf|pdist|pdist2|pearsrnd|perfcurve|perms|piecewisedistribution|plsregress|poiss(?:cdf|fit|inv|pdf|rnd|tat)|polyconf|polytool|prctile|princomp|ProbDist(?:Kernel|Parametric|UnivKernel|UnivParam)?|probplot|procrustes|qqplot|qrandset|qrandstream|quantile|randg|random|randsample|randtool|range|rangesearch|ranksum|rayl(?:cdf|fit|inv|pdf|rnd|stat)|rcoplot|refcurve|refline|regress|Regression(?:BaggedEnsemble|Ensemble|PartitionedEnsemble|PartitionedModel|Tree(?:.(?:fit|template))?)|regstats|relieff|ridge|robustdemo|robustfit|rotatefactors|rowexch|rsmdemo|rstool|runstest|sampsizepwr|scatterhist|sequentialfs|signrank|signtest|silhouette|skewness|slicesample|sobolset|squareform|statget|statset|stepwise|stepwisefit|surfht|tabulate|tblread|tblwrite|tcdf|tdfread|tiedrank|tinv|tpdf|TreeBagger|treedisp|treefit|treeprune|treetest|treeval|trimmean|trnd|tstat|ttest|ttest2|unid(?:cdf|inv|pdf|rnd|stat)|unif(?:cdf|inv|it|pdf|rnd|stat)|vartest(?:2|n)?|wbl(?:cdf|fit|inv|like|pdf|rnd|stat)|wblplot|wishrnd|x2fx|xptread|zscore|ztest)\\b/,\nnull],[\"fun_tbx\",/^\\b(?:adapthisteq|analyze75info|analyze75read|applycform|applylut|axes2pix|bestblk|blockproc|bwarea|bwareaopen|bwboundaries|bwconncomp|bwconvhull|bwdist|bwdistgeodesic|bweuler|bwhitmiss|bwlabel|bwlabeln|bwmorph|bwpack|bwperim|bwselect|bwtraceboundary|bwulterode|bwunpack|checkerboard|col2im|colfilt|conndef|convmtx2|corner|cornermetric|corr2|cp2tform|cpcorr|cpselect|cpstruct2pairs|dct2|dctmtx|deconvblind|deconvlucy|deconvreg|deconvwnr|decorrstretch|demosaic|dicom(?:anon|dict|info|lookup|read|uid|write)|edge|edgetaper|entropy|entropyfilt|fan2para|fanbeam|findbounds|fliptform|freqz2|fsamp2|fspecial|ftrans2|fwind1|fwind2|getheight|getimage|getimagemodel|getline|getneighbors|getnhood|getpts|getrangefromclass|getrect|getsequence|gray2ind|graycomatrix|graycoprops|graydist|grayslice|graythresh|hdrread|hdrwrite|histeq|hough|houghlines|houghpeaks|iccfind|iccread|iccroot|iccwrite|idct2|ifanbeam|im2bw|im2col|im2double|im2int16|im2java2d|im2single|im2uint16|im2uint8|imabsdiff|imadd|imadjust|ImageAdapter|imageinfo|imagemodel|imapplymatrix|imattributes|imbothat|imclearborder|imclose|imcolormaptool|imcomplement|imcontour|imcontrast|imcrop|imdilate|imdisplayrange|imdistline|imdivide|imellipse|imerode|imextendedmax|imextendedmin|imfill|imfilter|imfindcircles|imfreehand|imfuse|imgca|imgcf|imgetfile|imhandles|imhist|imhmax|imhmin|imimposemin|imlincomb|imline|immagbox|immovie|immultiply|imnoise|imopen|imoverview|imoverviewpanel|impixel|impixelinfo|impixelinfoval|impixelregion|impixelregionpanel|implay|impoint|impoly|impositionrect|improfile|imputfile|impyramid|imreconstruct|imrect|imregconfig|imregionalmax|imregionalmin|imregister|imresize|imroi|imrotate|imsave|imscrollpanel|imshow|imshowpair|imsubtract|imtool|imtophat|imtransform|imview|ind2gray|ind2rgb|interfileinfo|interfileread|intlut|ippl|iptaddcallback|iptcheckconn|iptcheckhandle|iptcheckinput|iptcheckmap|iptchecknargin|iptcheckstrs|iptdemos|iptgetapi|iptGetPointerBehavior|iptgetpref|ipticondir|iptnum2ordinal|iptPointerManager|iptprefs|iptremovecallback|iptSetPointerBehavior|iptsetpref|iptwindowalign|iradon|isbw|isflat|isgray|isicc|isind|isnitf|isrgb|isrset|lab2double|lab2uint16|lab2uint8|label2rgb|labelmatrix|makecform|makeConstrainToRectFcn|makehdr|makelut|makeresampler|maketform|mat2gray|mean2|medfilt2|montage|nitfinfo|nitfread|nlfilter|normxcorr2|ntsc2rgb|openrset|ordfilt2|otf2psf|padarray|para2fan|phantom|poly2mask|psf2otf|qtdecomp|qtgetblk|qtsetblk|radon|rangefilt|reflect|regionprops|registration.metric.(?:MattesMutualInformation|MeanSquares)|registration.optimizer.(?:OnePlusOneEvolutionary|RegularStepGradientDescent)|rgb2gray|rgb2ntsc|rgb2ycbcr|roicolor|roifill|roifilt2|roipoly|rsetwrite|std2|stdfilt|strel|stretchlim|subimage|tformarray|tformfwd|tforminv|tonemap|translate|truesize|uintlut|viscircles|warp|watershed|whitepoint|wiener2|xyz2double|xyz2uint16|ycbcr2rgb)\\b/,\nnull],[\"fun_tbx\",/^\\b(?:bintprog|color|fgoalattain|fminbnd|fmincon|fminimax|fminsearch|fminunc|fseminf|fsolve|fzero|fzmult|gangstr|ktrlink|linprog|lsqcurvefit|lsqlin|lsqnonlin|lsqnonneg|optimget|optimset|optimtool|quadprog)\\b/,null],[\"ident\",/^[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*/,null]]),[\"matlab-identifiers\"]);a.registerLangHandler(a.createSimpleLexer([],d),[\"matlab-operators\"]);a.registerLangHandler(a.createSimpleLexer(b,c),[\"matlab\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i,null,\"#\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/],[\"kwd\",/^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/],\n[\"lit\",/^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i],[\"pun\",/^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/]]),[\"fs\",\"ml\"]);\n","source":"plugins/prettify/lang-ml.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i,null,\"#\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/],[\"kwd\",/^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/],\n[\"lit\",/^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i],[\"pun\",/^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/]]),[\"fs\",\"ml\"]);\n","date":"2022-03-27T08:23:16.348Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-ml.js","layout":"false","title":"","comments":1,"_id":"cl22h70vd006y5ossdimnemdp","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i,null,\"#\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/],[\"kwd\",/^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/],\n[\"lit\",/^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i],[\"pun\",/^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/]]),[\"fs\",\"ml\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i,null,\"#\"],[\"str\",/^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/,null,\"\\\"'\"]],[[\"com\",/^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/],[\"kwd\",/^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/],\n[\"lit\",/^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i],[\"pun\",/^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/]]),[\"fs\",\"ml\"]);\n"},{"_content":"/*\n\n Copyright (C) 2011 Zimin A.V.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,'\"'],[\"com\",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null],[\"str\",/^<#(?:[^#>])*(?:#>|$)/,null],[\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,null],[\"com\",/^\\/\\/[^\\r\\n]*/,\nnull],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"kwd\",/^(?:abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield)\\b/,\nnull],[\"typ\",/^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/,null],[\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^@[A-Z]+[a-z][A-Za-z_$@0-9]*/,null],[\"pln\",/^'?[A-Za-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]]),[\"n\",\"nemerle\"]);\n","source":"plugins/prettify/lang-n.js","raw":"/*\n\n Copyright (C) 2011 Zimin A.V.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,'\"'],[\"com\",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null],[\"str\",/^<#(?:[^#>])*(?:#>|$)/,null],[\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,null],[\"com\",/^\\/\\/[^\\r\\n]*/,\nnull],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"kwd\",/^(?:abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield)\\b/,\nnull],[\"typ\",/^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/,null],[\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^@[A-Z]+[a-z][A-Za-z_$@0-9]*/,null],[\"pln\",/^'?[A-Za-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]]),[\"n\",\"nemerle\"]);\n","date":"2022-03-27T08:23:16.351Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-n.js","layout":"false","title":"","comments":1,"_id":"cl22h70ve006z5oss7n5v5rje","content":"/*\n\n Copyright (C) 2011 Zimin A.V.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,'\"'],[\"com\",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null],[\"str\",/^<#(?:[^#>])*(?:#>|$)/,null],[\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,null],[\"com\",/^\\/\\/[^\\r\\n]*/,\nnull],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"kwd\",/^(?:abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield)\\b/,\nnull],[\"typ\",/^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/,null],[\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^@[A-Z]+[a-z][A-Za-z_$@0-9]*/,null],[\"pln\",/^'?[A-Za-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]]),[\"n\",\"nemerle\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2011 Zimin A.V.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,'\"'],[\"com\",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null],[\"str\",/^<#(?:[^#>])*(?:#>|$)/,null],[\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,null],[\"com\",/^\\/\\/[^\\r\\n]*/,\nnull],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"kwd\",/^(?:abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield)\\b/,\nnull],[\"typ\",/^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/,null],[\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^@[A-Z]+[a-z][A-Za-z_$@0-9]*/,null],[\"pln\",/^'?[A-Za-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]]),[\"n\",\"nemerle\"]);\n"},{"_content":"/*\n\n Copyright (C) 2011 Zimin A.V.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,'\"'],[\"com\",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null],[\"str\",/^<#(?:[^#>])*(?:#>|$)/,null],[\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,null],[\"com\",/^\\/\\/[^\\r\\n]*/,\nnull],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"kwd\",/^(?:abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield)\\b/,\nnull],[\"typ\",/^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/,null],[\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^@[A-Z]+[a-z][A-Za-z_$@0-9]*/,null],[\"pln\",/^'?[A-Za-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]]),[\"n\",\"nemerle\"]);\n","source":"plugins/prettify/lang-nemerle.js","raw":"/*\n\n Copyright (C) 2011 Zimin A.V.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,'\"'],[\"com\",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null],[\"str\",/^<#(?:[^#>])*(?:#>|$)/,null],[\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,null],[\"com\",/^\\/\\/[^\\r\\n]*/,\nnull],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"kwd\",/^(?:abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield)\\b/,\nnull],[\"typ\",/^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/,null],[\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^@[A-Z]+[a-z][A-Za-z_$@0-9]*/,null],[\"pln\",/^'?[A-Za-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]]),[\"n\",\"nemerle\"]);\n","date":"2022-03-27T08:23:16.352Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-nemerle.js","layout":"false","title":"","comments":1,"_id":"cl22h70ve00705oss4kow3590","content":"/*\n\n Copyright (C) 2011 Zimin A.V.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,'\"'],[\"com\",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null],[\"str\",/^<#(?:[^#>])*(?:#>|$)/,null],[\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,null],[\"com\",/^\\/\\/[^\\r\\n]*/,\nnull],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"kwd\",/^(?:abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield)\\b/,\nnull],[\"typ\",/^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/,null],[\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^@[A-Z]+[a-z][A-Za-z_$@0-9]*/,null],[\"pln\",/^'?[A-Za-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]]),[\"n\",\"nemerle\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2011 Zimin A.V.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,'\"'],[\"com\",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null],[\"str\",/^<#(?:[^#>])*(?:#>|$)/,null],[\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,null],[\"com\",/^\\/\\/[^\\r\\n]*/,\nnull],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"kwd\",/^(?:abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield)\\b/,\nnull],[\"typ\",/^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/,null],[\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^@[A-Z]+[a-z][A-Za-z_$@0-9]*/,null],[\"pln\",/^'?[A-Za-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]]),[\"n\",\"nemerle\"]);\n"},{"_content":"/*\n\n Copyright (C) 2011 Kitware Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:[^\"]|\\\\.)*\")/,null,'\"']],[[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"dec\",/^(?:\\$(?:D|DEVICE|EC|ECODE|ES|ESTACK|ET|ETRAP|H|HOROLOG|I|IO|J|JOB|K|KEY|P|PRINCIPAL|Q|QUIT|ST|STACK|S|STORAGE|SY|SYSTEM|T|TEST|TL|TLEVEL|TR|TRESTART|X|Y|Z[A-Z]*|A|ASCII|C|CHAR|D|DATA|E|EXTRACT|F|FIND|FN|FNUMBER|G|GET|J|JUSTIFY|L|LENGTH|NA|NAME|O|ORDER|P|PIECE|QL|QLENGTH|QS|QSUBSCRIPT|Q|QUERY|R|RANDOM|RE|REVERSE|S|SELECT|ST|STACK|T|TEXT|TR|TRANSLATE|NaN))\\b/i,\nnull],[\"kwd\",/^(?:[^\\$]B|BREAK|C|CLOSE|D|DO|E|ELSE|F|FOR|G|GOTO|H|HALT|H|HANG|I|IF|J|JOB|K|KILL|L|LOCK|M|MERGE|N|NEW|O|OPEN|Q|QUIT|R|READ|S|SET|TC|TCOMMIT|TRE|TRESTART|TRO|TROLLBACK|TS|TSTART|U|USE|V|VIEW|W|WRITE|X|XECUTE)\\b/i,null],[\"lit\",/^[+-]?(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:E[+\\-]?\\d+)?)/i],[\"pln\",/^[a-z][a-zA-Z0-9]*/i],[\"pun\",/^[^\\w\\t\\n\\r\\xA0\\\"\\$;%\\^]|_/]]),[\"mumps\"]);\n","source":"plugins/prettify/lang-mumps.js","raw":"/*\n\n Copyright (C) 2011 Kitware Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:[^\"]|\\\\.)*\")/,null,'\"']],[[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"dec\",/^(?:\\$(?:D|DEVICE|EC|ECODE|ES|ESTACK|ET|ETRAP|H|HOROLOG|I|IO|J|JOB|K|KEY|P|PRINCIPAL|Q|QUIT|ST|STACK|S|STORAGE|SY|SYSTEM|T|TEST|TL|TLEVEL|TR|TRESTART|X|Y|Z[A-Z]*|A|ASCII|C|CHAR|D|DATA|E|EXTRACT|F|FIND|FN|FNUMBER|G|GET|J|JUSTIFY|L|LENGTH|NA|NAME|O|ORDER|P|PIECE|QL|QLENGTH|QS|QSUBSCRIPT|Q|QUERY|R|RANDOM|RE|REVERSE|S|SELECT|ST|STACK|T|TEXT|TR|TRANSLATE|NaN))\\b/i,\nnull],[\"kwd\",/^(?:[^\\$]B|BREAK|C|CLOSE|D|DO|E|ELSE|F|FOR|G|GOTO|H|HALT|H|HANG|I|IF|J|JOB|K|KILL|L|LOCK|M|MERGE|N|NEW|O|OPEN|Q|QUIT|R|READ|S|SET|TC|TCOMMIT|TRE|TRESTART|TRO|TROLLBACK|TS|TSTART|U|USE|V|VIEW|W|WRITE|X|XECUTE)\\b/i,null],[\"lit\",/^[+-]?(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:E[+\\-]?\\d+)?)/i],[\"pln\",/^[a-z][a-zA-Z0-9]*/i],[\"pun\",/^[^\\w\\t\\n\\r\\xA0\\\"\\$;%\\^]|_/]]),[\"mumps\"]);\n","date":"2022-03-27T08:23:16.349Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-mumps.js","layout":"false","title":"","comments":1,"_id":"cl22h70ve00715ossa3pycnx2","content":"/*\n\n Copyright (C) 2011 Kitware Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:[^\"]|\\\\.)*\")/,null,'\"']],[[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"dec\",/^(?:\\$(?:D|DEVICE|EC|ECODE|ES|ESTACK|ET|ETRAP|H|HOROLOG|I|IO|J|JOB|K|KEY|P|PRINCIPAL|Q|QUIT|ST|STACK|S|STORAGE|SY|SYSTEM|T|TEST|TL|TLEVEL|TR|TRESTART|X|Y|Z[A-Z]*|A|ASCII|C|CHAR|D|DATA|E|EXTRACT|F|FIND|FN|FNUMBER|G|GET|J|JUSTIFY|L|LENGTH|NA|NAME|O|ORDER|P|PIECE|QL|QLENGTH|QS|QSUBSCRIPT|Q|QUERY|R|RANDOM|RE|REVERSE|S|SELECT|ST|STACK|T|TEXT|TR|TRANSLATE|NaN))\\b/i,\nnull],[\"kwd\",/^(?:[^\\$]B|BREAK|C|CLOSE|D|DO|E|ELSE|F|FOR|G|GOTO|H|HALT|H|HANG|I|IF|J|JOB|K|KILL|L|LOCK|M|MERGE|N|NEW|O|OPEN|Q|QUIT|R|READ|S|SET|TC|TCOMMIT|TRE|TRESTART|TRO|TROLLBACK|TS|TSTART|U|USE|V|VIEW|W|WRITE|X|XECUTE)\\b/i,null],[\"lit\",/^[+-]?(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:E[+\\-]?\\d+)?)/i],[\"pln\",/^[a-z][a-zA-Z0-9]*/i],[\"pun\",/^[^\\w\\t\\n\\r\\xA0\\\"\\$;%\\^]|_/]]),[\"mumps\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2011 Kitware Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:[^\"]|\\\\.)*\")/,null,'\"']],[[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"dec\",/^(?:\\$(?:D|DEVICE|EC|ECODE|ES|ESTACK|ET|ETRAP|H|HOROLOG|I|IO|J|JOB|K|KEY|P|PRINCIPAL|Q|QUIT|ST|STACK|S|STORAGE|SY|SYSTEM|T|TEST|TL|TLEVEL|TR|TRESTART|X|Y|Z[A-Z]*|A|ASCII|C|CHAR|D|DATA|E|EXTRACT|F|FIND|FN|FNUMBER|G|GET|J|JUSTIFY|L|LENGTH|NA|NAME|O|ORDER|P|PIECE|QL|QLENGTH|QS|QSUBSCRIPT|Q|QUERY|R|RANDOM|RE|REVERSE|S|SELECT|ST|STACK|T|TEXT|TR|TRANSLATE|NaN))\\b/i,\nnull],[\"kwd\",/^(?:[^\\$]B|BREAK|C|CLOSE|D|DO|E|ELSE|F|FOR|G|GOTO|H|HALT|H|HANG|I|IF|J|JOB|K|KILL|L|LOCK|M|MERGE|N|NEW|O|OPEN|Q|QUIT|R|READ|S|SET|TC|TCOMMIT|TRE|TRESTART|TRO|TROLLBACK|TS|TSTART|U|USE|V|VIEW|W|WRITE|X|XECUTE)\\b/i,null],[\"lit\",/^[+-]?(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:E[+\\-]?\\d+)?)/i],[\"pln\",/^[a-z][a-zA-Z0-9]*/i],[\"pun\",/^[^\\w\\t\\n\\r\\xA0\\\"\\$;%\\^]|_/]]),[\"mumps\"]);\n"},{"_content":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$))/,null,\"'\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^\\(\\*[\\s\\S]*?(?:\\*\\)|$)|^\\{[\\s\\S]*?(?:\\}|$)/,null],[\"kwd\",/^(?:ABSOLUTE|AND|ARRAY|ASM|ASSEMBLER|BEGIN|CASE|CONST|CONSTRUCTOR|DESTRUCTOR|DIV|DO|DOWNTO|ELSE|END|EXTERNAL|FOR|FORWARD|FUNCTION|GOTO|IF|IMPLEMENTATION|IN|INLINE|INTERFACE|INTERRUPT|LABEL|MOD|NOT|OBJECT|OF|OR|PACKED|PROCEDURE|PROGRAM|RECORD|REPEAT|SET|SHL|SHR|THEN|TO|TYPE|UNIT|UNTIL|USES|VAR|VIRTUAL|WHILE|WITH|XOR)\\b/i,\nnull],[\"lit\",/^(?:true|false|self|nil)/i,null],[\"pln\",/^[a-z][a-z0-9]*/i,null],[\"lit\",/^(?:\\$[a-f0-9]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\/]*/,null]]),[\"pascal\"]);\n","source":"plugins/prettify/lang-pascal.js","raw":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$))/,null,\"'\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^\\(\\*[\\s\\S]*?(?:\\*\\)|$)|^\\{[\\s\\S]*?(?:\\}|$)/,null],[\"kwd\",/^(?:ABSOLUTE|AND|ARRAY|ASM|ASSEMBLER|BEGIN|CASE|CONST|CONSTRUCTOR|DESTRUCTOR|DIV|DO|DOWNTO|ELSE|END|EXTERNAL|FOR|FORWARD|FUNCTION|GOTO|IF|IMPLEMENTATION|IN|INLINE|INTERFACE|INTERRUPT|LABEL|MOD|NOT|OBJECT|OF|OR|PACKED|PROCEDURE|PROGRAM|RECORD|REPEAT|SET|SHL|SHR|THEN|TO|TYPE|UNIT|UNTIL|USES|VAR|VIRTUAL|WHILE|WITH|XOR)\\b/i,\nnull],[\"lit\",/^(?:true|false|self|nil)/i,null],[\"pln\",/^[a-z][a-z0-9]*/i,null],[\"lit\",/^(?:\\$[a-f0-9]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\/]*/,null]]),[\"pascal\"]);\n","date":"2022-03-27T08:23:16.353Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-pascal.js","layout":"false","title":"","comments":1,"_id":"cl22h70vf00725oss5aay188i","content":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$))/,null,\"'\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^\\(\\*[\\s\\S]*?(?:\\*\\)|$)|^\\{[\\s\\S]*?(?:\\}|$)/,null],[\"kwd\",/^(?:ABSOLUTE|AND|ARRAY|ASM|ASSEMBLER|BEGIN|CASE|CONST|CONSTRUCTOR|DESTRUCTOR|DIV|DO|DOWNTO|ELSE|END|EXTERNAL|FOR|FORWARD|FUNCTION|GOTO|IF|IMPLEMENTATION|IN|INLINE|INTERFACE|INTERRUPT|LABEL|MOD|NOT|OBJECT|OF|OR|PACKED|PROCEDURE|PROGRAM|RECORD|REPEAT|SET|SHL|SHR|THEN|TO|TYPE|UNIT|UNTIL|USES|VAR|VIRTUAL|WHILE|WITH|XOR)\\b/i,\nnull],[\"lit\",/^(?:true|false|self|nil)/i,null],[\"pln\",/^[a-z][a-z0-9]*/i,null],[\"lit\",/^(?:\\$[a-f0-9]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\/]*/,null]]),[\"pascal\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2013 Peter Kofler\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$))/,null,\"'\"],[\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]],[[\"com\",/^\\(\\*[\\s\\S]*?(?:\\*\\)|$)|^\\{[\\s\\S]*?(?:\\}|$)/,null],[\"kwd\",/^(?:ABSOLUTE|AND|ARRAY|ASM|ASSEMBLER|BEGIN|CASE|CONST|CONSTRUCTOR|DESTRUCTOR|DIV|DO|DOWNTO|ELSE|END|EXTERNAL|FOR|FORWARD|FUNCTION|GOTO|IF|IMPLEMENTATION|IN|INLINE|INTERFACE|INTERRUPT|LABEL|MOD|NOT|OBJECT|OF|OR|PACKED|PROCEDURE|PROGRAM|RECORD|REPEAT|SET|SHL|SHR|THEN|TO|TYPE|UNIT|UNTIL|USES|VAR|VIRTUAL|WHILE|WITH|XOR)\\b/i,\nnull],[\"lit\",/^(?:true|false|self|nil)/i,null],[\"pln\",/^[a-z][a-z0-9]*/i,null],[\"lit\",/^(?:\\$[a-f0-9]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?)/i,null,\"0123456789\"],[\"pun\",/^.[^\\s\\w\\.$@\\'\\/]*/,null]]),[\"pascal\"]);\n"},{"_content":"/*\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.sourceDecorator({keywords:\"bytes,default,double,enum,extend,extensions,false,group,import,max,message,option,optional,package,repeated,required,returns,rpc,service,syntax,to,true\",types:/^(bool|(double|s?fixed|[su]?int)(32|64)|float|string)\\b/,cStyleComments:!0}),[\"proto\"]);\n","source":"plugins/prettify/lang-proto.js","raw":"/*\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.sourceDecorator({keywords:\"bytes,default,double,enum,extend,extensions,false,group,import,max,message,option,optional,package,repeated,required,returns,rpc,service,syntax,to,true\",types:/^(bool|(double|s?fixed|[su]?int)(32|64)|float|string)\\b/,cStyleComments:!0}),[\"proto\"]);\n","date":"2022-03-27T08:23:16.354Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-proto.js","layout":"false","title":"","comments":1,"_id":"cl22h70vf00735ossgjijdiwm","content":"/*\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.sourceDecorator({keywords:\"bytes,default,double,enum,extend,extensions,false,group,import,max,message,option,optional,package,repeated,required,returns,rpc,service,syntax,to,true\",types:/^(bool|(double|s?fixed|[su]?int)(32|64)|float|string)\\b/,cStyleComments:!0}),[\"proto\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.sourceDecorator({keywords:\"bytes,default,double,enum,extend,extensions,false,group,import,max,message,option,optional,package,repeated,required,returns,rpc,service,syntax,to,true\",types:/^(bool|(double|s?fixed|[su]?int)(32|64)|float|string)\\b/,cStyleComments:!0}),[\"proto\"]);\n"},{"_content":"/*\n\n Copyright (C) 2012 Jeffrey Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"lit\",/^\\\\(?:cr|l?dots|R|tab)\\b/],[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^#(?:ifn?def|endif)/],[\"pln\",/^\\\\[{}]/],[\"pun\",/^[{}()\\[\\]]+/]]),[\"Rd\",\"rd\"]);\n","source":"plugins/prettify/lang-rd.js","raw":"/*\n\n Copyright (C) 2012 Jeffrey Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"lit\",/^\\\\(?:cr|l?dots|R|tab)\\b/],[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^#(?:ifn?def|endif)/],[\"pln\",/^\\\\[{}]/],[\"pun\",/^[{}()\\[\\]]+/]]),[\"Rd\",\"rd\"]);\n","date":"2022-03-27T08:23:16.356Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-rd.js","layout":"false","title":"","comments":1,"_id":"cl22h70vf00745oss774beple","content":"/*\n\n Copyright (C) 2012 Jeffrey Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"lit\",/^\\\\(?:cr|l?dots|R|tab)\\b/],[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^#(?:ifn?def|endif)/],[\"pln\",/^\\\\[{}]/],[\"pun\",/^[{}()\\[\\]]+/]]),[\"Rd\",\"rd\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2012 Jeffrey Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"lit\",/^\\\\(?:cr|l?dots|R|tab)\\b/],[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^#(?:ifn?def|endif)/],[\"pln\",/^\\\\[{}]/],[\"pun\",/^[{}()\\[\\]]+/]]),[\"Rd\",\"rd\"]);\n"},{"_content":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","source":"plugins/prettify/lang-r.js","raw":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","date":"2022-03-27T08:23:16.355Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-r.js","layout":"false","title":"","comments":1,"_id":"cl22h70vf00755ossgzuuddq9","content":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n"},{"_content":"/*\n\n Copyright (C) 2015 Chris Morgan\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([],[[\"pln\",/^[\\t\\n\\r \\xA0]+/],[\"com\",/^\\/\\/.*/],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],[\"str\",/^b\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}))*?\"/],[\"str\",/^\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}|u\\{\\[\\da-fA-F]{1,6}\\}))*?\"/],[\"str\",/^b?r(#*)\\\"[\\s\\S]*?\\\"\\1/],[\"str\",/^b'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}))'/],[\"str\",/^'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{1,6}\\}))'/],[\"tag\",/^'\\w+?\\b/],[\"kwd\",/^(?:match|if|else|as|break|box|continue|extern|fn|for|in|if|impl|let|loop|pub|return|super|unsafe|where|while|use|mod|trait|struct|enum|type|move|mut|ref|static|const|crate)\\b/],\n[\"kwd\",/^(?:alignof|become|do|offsetof|priv|pure|sizeof|typeof|unsized|yield|abstract|virtual|final|override|macro)\\b/],[\"typ\",/^(?:[iu](8|16|32|64|128|size)|char|bool|f32|f64|str|Self)\\b/],[\"typ\",/^(?:Copy|Send|Sized|Sync|Drop|Fn|FnMut|FnOnce|Box|ToOwned|Clone|PartialEq|PartialOrd|Eq|Ord|AsRef|AsMut|Into|From|Default|Iterator|Extend|IntoIterator|DoubleEndedIterator|ExactSizeIterator|Option|Some|None|Result|Ok|Err|SliceConcatExt|String|ToString|Vec)\\b/],[\"lit\",/^(self|true|false|null)\\b/],\n[\"lit\",/^\\d[0-9_]*(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0x[a-fA-F0-9_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0o[0-7_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0b[01_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^\\d[0-9_]*\\.(?![^\\s\\d.])/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)(?:[eE][+-]?[0-9_]+)?(?:f32|f64)?/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)(?:f32|f64)?/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)?(?:f32|f64)/],\n[\"atn\",/^[a-z_]\\w*!/i],[\"pln\",/^[a-z_]\\w*/i],[\"atv\",/^#!?\\[[\\s\\S]*?\\]/],[\"pun\",/^[+\\-/*=^&|!<>%[\\](){}?:.,;]/],[\"pln\",/./]]),[\"rust\"]);\n","source":"plugins/prettify/lang-rust.js","raw":"/*\n\n Copyright (C) 2015 Chris Morgan\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([],[[\"pln\",/^[\\t\\n\\r \\xA0]+/],[\"com\",/^\\/\\/.*/],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],[\"str\",/^b\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}))*?\"/],[\"str\",/^\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}|u\\{\\[\\da-fA-F]{1,6}\\}))*?\"/],[\"str\",/^b?r(#*)\\\"[\\s\\S]*?\\\"\\1/],[\"str\",/^b'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}))'/],[\"str\",/^'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{1,6}\\}))'/],[\"tag\",/^'\\w+?\\b/],[\"kwd\",/^(?:match|if|else|as|break|box|continue|extern|fn|for|in|if|impl|let|loop|pub|return|super|unsafe|where|while|use|mod|trait|struct|enum|type|move|mut|ref|static|const|crate)\\b/],\n[\"kwd\",/^(?:alignof|become|do|offsetof|priv|pure|sizeof|typeof|unsized|yield|abstract|virtual|final|override|macro)\\b/],[\"typ\",/^(?:[iu](8|16|32|64|128|size)|char|bool|f32|f64|str|Self)\\b/],[\"typ\",/^(?:Copy|Send|Sized|Sync|Drop|Fn|FnMut|FnOnce|Box|ToOwned|Clone|PartialEq|PartialOrd|Eq|Ord|AsRef|AsMut|Into|From|Default|Iterator|Extend|IntoIterator|DoubleEndedIterator|ExactSizeIterator|Option|Some|None|Result|Ok|Err|SliceConcatExt|String|ToString|Vec)\\b/],[\"lit\",/^(self|true|false|null)\\b/],\n[\"lit\",/^\\d[0-9_]*(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0x[a-fA-F0-9_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0o[0-7_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0b[01_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^\\d[0-9_]*\\.(?![^\\s\\d.])/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)(?:[eE][+-]?[0-9_]+)?(?:f32|f64)?/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)(?:f32|f64)?/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)?(?:f32|f64)/],\n[\"atn\",/^[a-z_]\\w*!/i],[\"pln\",/^[a-z_]\\w*/i],[\"atv\",/^#!?\\[[\\s\\S]*?\\]/],[\"pun\",/^[+\\-/*=^&|!<>%[\\](){}?:.,;]/],[\"pln\",/./]]),[\"rust\"]);\n","date":"2022-03-27T08:23:16.360Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-rust.js","layout":"false","title":"","comments":1,"_id":"cl22h70vg00765oss4393bsyv","content":"/*\n\n Copyright (C) 2015 Chris Morgan\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([],[[\"pln\",/^[\\t\\n\\r \\xA0]+/],[\"com\",/^\\/\\/.*/],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],[\"str\",/^b\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}))*?\"/],[\"str\",/^\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}|u\\{\\[\\da-fA-F]{1,6}\\}))*?\"/],[\"str\",/^b?r(#*)\\\"[\\s\\S]*?\\\"\\1/],[\"str\",/^b'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}))'/],[\"str\",/^'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{1,6}\\}))'/],[\"tag\",/^'\\w+?\\b/],[\"kwd\",/^(?:match|if|else|as|break|box|continue|extern|fn|for|in|if|impl|let|loop|pub|return|super|unsafe|where|while|use|mod|trait|struct|enum|type|move|mut|ref|static|const|crate)\\b/],\n[\"kwd\",/^(?:alignof|become|do|offsetof|priv|pure|sizeof|typeof|unsized|yield|abstract|virtual|final|override|macro)\\b/],[\"typ\",/^(?:[iu](8|16|32|64|128|size)|char|bool|f32|f64|str|Self)\\b/],[\"typ\",/^(?:Copy|Send|Sized|Sync|Drop|Fn|FnMut|FnOnce|Box|ToOwned|Clone|PartialEq|PartialOrd|Eq|Ord|AsRef|AsMut|Into|From|Default|Iterator|Extend|IntoIterator|DoubleEndedIterator|ExactSizeIterator|Option|Some|None|Result|Ok|Err|SliceConcatExt|String|ToString|Vec)\\b/],[\"lit\",/^(self|true|false|null)\\b/],\n[\"lit\",/^\\d[0-9_]*(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0x[a-fA-F0-9_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0o[0-7_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0b[01_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^\\d[0-9_]*\\.(?![^\\s\\d.])/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)(?:[eE][+-]?[0-9_]+)?(?:f32|f64)?/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)(?:f32|f64)?/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)?(?:f32|f64)/],\n[\"atn\",/^[a-z_]\\w*!/i],[\"pln\",/^[a-z_]\\w*/i],[\"atv\",/^#!?\\[[\\s\\S]*?\\]/],[\"pun\",/^[+\\-/*=^&|!<>%[\\](){}?:.,;]/],[\"pln\",/./]]),[\"rust\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2015 Chris Morgan\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([],[[\"pln\",/^[\\t\\n\\r \\xA0]+/],[\"com\",/^\\/\\/.*/],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],[\"str\",/^b\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}))*?\"/],[\"str\",/^\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}|u\\{\\[\\da-fA-F]{1,6}\\}))*?\"/],[\"str\",/^b?r(#*)\\\"[\\s\\S]*?\\\"\\1/],[\"str\",/^b'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}))'/],[\"str\",/^'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{1,6}\\}))'/],[\"tag\",/^'\\w+?\\b/],[\"kwd\",/^(?:match|if|else|as|break|box|continue|extern|fn|for|in|if|impl|let|loop|pub|return|super|unsafe|where|while|use|mod|trait|struct|enum|type|move|mut|ref|static|const|crate)\\b/],\n[\"kwd\",/^(?:alignof|become|do|offsetof|priv|pure|sizeof|typeof|unsized|yield|abstract|virtual|final|override|macro)\\b/],[\"typ\",/^(?:[iu](8|16|32|64|128|size)|char|bool|f32|f64|str|Self)\\b/],[\"typ\",/^(?:Copy|Send|Sized|Sync|Drop|Fn|FnMut|FnOnce|Box|ToOwned|Clone|PartialEq|PartialOrd|Eq|Ord|AsRef|AsMut|Into|From|Default|Iterator|Extend|IntoIterator|DoubleEndedIterator|ExactSizeIterator|Option|Some|None|Result|Ok|Err|SliceConcatExt|String|ToString|Vec)\\b/],[\"lit\",/^(self|true|false|null)\\b/],\n[\"lit\",/^\\d[0-9_]*(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0x[a-fA-F0-9_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0o[0-7_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^0b[01_]+(?:[iu](?:size|8|16|32|64|128))?/],[\"lit\",/^\\d[0-9_]*\\.(?![^\\s\\d.])/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)(?:[eE][+-]?[0-9_]+)?(?:f32|f64)?/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)(?:f32|f64)?/],[\"lit\",/^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)?(?:f32|f64)/],\n[\"atn\",/^[a-z_]\\w*!/i],[\"pln\",/^[a-z_]\\w*/i],[\"atv\",/^#!?\\[[\\s\\S]*?\\]/],[\"pun\",/^[+\\-/*=^&|!<>%[\\](){}?:.,;]/],[\"pln\",/./]]),[\"rust\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","source":"plugins/prettify/lang-rkt.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","date":"2022-03-27T08:23:16.359Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-rkt.js","layout":"false","title":"","comments":1,"_id":"cl22h70vg00775ossf0831wum","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n"},{"_content":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","source":"plugins/prettify/lang-s.js","raw":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","date":"2022-03-27T08:23:16.361Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-s.js","layout":"false","title":"","comments":1,"_id":"cl22h70vg00785ossaqdv8ozu","content":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2012 Jeffrey B. Arnold\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"'],[\"str\",/^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/,null,\"'\"]],[[\"com\",/^#.*/],[\"kwd\",/^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/],[\"lit\",/^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/],[\"lit\",/^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/],[\"lit\",/^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/],\n[\"pun\",/^(?:<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/],[\"pln\",/^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/],[\"str\",/^`.+`/]]),[\"r\",\"s\",\"R\",\"S\",\"Splus\"]);\n"},{"_content":"/*\n\n Copyright (C) 2010 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:(?:\"\"(?:\"\"?(?!\")|[^\\\\\"]|\\\\.)*\"{0,3})|(?:[^\"\\r\\n\\\\]|\\\\.)*\"?))/,null,'\"'],[\"lit\",/^`(?:[^\\r\\n\\\\`]|\\\\.)*`?/,null,\"`\"],[\"pun\",/^[!#%&()*+,\\-:;<=>?@\\[\\\\\\]^{|}~]+/,null,\"!#%&()*+,-:;<=>?@[\\\\]^{|}~\"]],[[\"str\",/^'(?:[^\\r\\n\\\\']|\\\\(?:'|[^\\r\\n']+))'/],[\"lit\",/^'[a-zA-Z_$][\\w$]*(?!['$\\w])/],[\"kwd\",/^(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|object|override|package|private|protected|requires|return|sealed|super|throw|trait|try|type|val|var|while|with|yield)\\b/],\n[\"lit\",/^(?:true|false|null|this)\\b/],[\"lit\",/^(?:(?:0(?:[0-7]+|X[0-9A-F]+))L?|(?:(?:0|[1-9][0-9]*)(?:(?:\\.[0-9]+)?(?:E[+\\-]?[0-9]+)?F?|L?))|\\\\.[0-9]+(?:E[+\\-]?[0-9]+)?F?)/i],[\"typ\",/^[$_]*[A-Z][_$A-Z0-9]*[a-z][\\w$]*/],[\"pln\",/^[$a-zA-Z_][\\w$]*/],[\"com\",/^\\/(?:\\/.*|\\*(?:\\/|\\**[^*/])*(?:\\*+\\/?)?)/],[\"pun\",/^(?:\\.+|\\/)/]]),[\"scala\"]);\n","source":"plugins/prettify/lang-scala.js","raw":"/*\n\n Copyright (C) 2010 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:(?:\"\"(?:\"\"?(?!\")|[^\\\\\"]|\\\\.)*\"{0,3})|(?:[^\"\\r\\n\\\\]|\\\\.)*\"?))/,null,'\"'],[\"lit\",/^`(?:[^\\r\\n\\\\`]|\\\\.)*`?/,null,\"`\"],[\"pun\",/^[!#%&()*+,\\-:;<=>?@\\[\\\\\\]^{|}~]+/,null,\"!#%&()*+,-:;<=>?@[\\\\]^{|}~\"]],[[\"str\",/^'(?:[^\\r\\n\\\\']|\\\\(?:'|[^\\r\\n']+))'/],[\"lit\",/^'[a-zA-Z_$][\\w$]*(?!['$\\w])/],[\"kwd\",/^(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|object|override|package|private|protected|requires|return|sealed|super|throw|trait|try|type|val|var|while|with|yield)\\b/],\n[\"lit\",/^(?:true|false|null|this)\\b/],[\"lit\",/^(?:(?:0(?:[0-7]+|X[0-9A-F]+))L?|(?:(?:0|[1-9][0-9]*)(?:(?:\\.[0-9]+)?(?:E[+\\-]?[0-9]+)?F?|L?))|\\\\.[0-9]+(?:E[+\\-]?[0-9]+)?F?)/i],[\"typ\",/^[$_]*[A-Z][_$A-Z0-9]*[a-z][\\w$]*/],[\"pln\",/^[$a-zA-Z_][\\w$]*/],[\"com\",/^\\/(?:\\/.*|\\*(?:\\/|\\**[^*/])*(?:\\*+\\/?)?)/],[\"pun\",/^(?:\\.+|\\/)/]]),[\"scala\"]);\n","date":"2022-03-27T08:23:16.362Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-scala.js","layout":"false","title":"","comments":1,"_id":"cl22h70vh00795ossdvd6ey5z","content":"/*\n\n Copyright (C) 2010 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:(?:\"\"(?:\"\"?(?!\")|[^\\\\\"]|\\\\.)*\"{0,3})|(?:[^\"\\r\\n\\\\]|\\\\.)*\"?))/,null,'\"'],[\"lit\",/^`(?:[^\\r\\n\\\\`]|\\\\.)*`?/,null,\"`\"],[\"pun\",/^[!#%&()*+,\\-:;<=>?@\\[\\\\\\]^{|}~]+/,null,\"!#%&()*+,-:;<=>?@[\\\\]^{|}~\"]],[[\"str\",/^'(?:[^\\r\\n\\\\']|\\\\(?:'|[^\\r\\n']+))'/],[\"lit\",/^'[a-zA-Z_$][\\w$]*(?!['$\\w])/],[\"kwd\",/^(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|object|override|package|private|protected|requires|return|sealed|super|throw|trait|try|type|val|var|while|with|yield)\\b/],\n[\"lit\",/^(?:true|false|null|this)\\b/],[\"lit\",/^(?:(?:0(?:[0-7]+|X[0-9A-F]+))L?|(?:(?:0|[1-9][0-9]*)(?:(?:\\.[0-9]+)?(?:E[+\\-]?[0-9]+)?F?|L?))|\\\\.[0-9]+(?:E[+\\-]?[0-9]+)?F?)/i],[\"typ\",/^[$_]*[A-Z][_$A-Z0-9]*[a-z][\\w$]*/],[\"pln\",/^[$a-zA-Z_][\\w$]*/],[\"com\",/^\\/(?:\\/.*|\\*(?:\\/|\\**[^*/])*(?:\\*+\\/?)?)/],[\"pun\",/^(?:\\.+|\\/)/]]),[\"scala\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2010 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:(?:\"\"(?:\"\"?(?!\")|[^\\\\\"]|\\\\.)*\"{0,3})|(?:[^\"\\r\\n\\\\]|\\\\.)*\"?))/,null,'\"'],[\"lit\",/^`(?:[^\\r\\n\\\\`]|\\\\.)*`?/,null,\"`\"],[\"pun\",/^[!#%&()*+,\\-:;<=>?@\\[\\\\\\]^{|}~]+/,null,\"!#%&()*+,-:;<=>?@[\\\\]^{|}~\"]],[[\"str\",/^'(?:[^\\r\\n\\\\']|\\\\(?:'|[^\\r\\n']+))'/],[\"lit\",/^'[a-zA-Z_$][\\w$]*(?!['$\\w])/],[\"kwd\",/^(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|object|override|package|private|protected|requires|return|sealed|super|throw|trait|try|type|val|var|while|with|yield)\\b/],\n[\"lit\",/^(?:true|false|null|this)\\b/],[\"lit\",/^(?:(?:0(?:[0-7]+|X[0-9A-F]+))L?|(?:(?:0|[1-9][0-9]*)(?:(?:\\.[0-9]+)?(?:E[+\\-]?[0-9]+)?F?|L?))|\\\\.[0-9]+(?:E[+\\-]?[0-9]+)?F?)/i],[\"typ\",/^[$_]*[A-Z][_$A-Z0-9]*[a-z][\\w$]*/],[\"pln\",/^[$a-zA-Z_][\\w$]*/],[\"com\",/^\\/(?:\\/.*|\\*(?:\\/|\\**[^*/])*(?:\\*+\\/?)?)/],[\"pun\",/^(?:\\.+|\\/)/]]),[\"scala\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","source":"plugins/prettify/lang-scm.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","date":"2022-03-27T08:23:16.363Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-scm.js","layout":"false","title":"","comments":1,"_id":"cl22h70vh007a5oss1i6hcueo","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:[^\\\"\\\\]|\\\\.)*\"|'(?:[^\\'\\\\]|\\\\.)*')/,null,\"\\\"'\"]],[[\"com\",/^(?:--[^\\r\\n]*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))/],[\"kwd\",/^(?:ADD|ALL|ALTER|AND|ANY|APPLY|AS|ASC|AUTHORIZATION|BACKUP|BEGIN|BETWEEN|BREAK|BROWSE|BULK|BY|CASCADE|CASE|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COMMIT|COMPUTE|CONNECT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT|CURRENT_DATE|CURRENT_TIME|CURRENT_TIMESTAMP|CURRENT_USER|CURSOR|DATABASE|DBCC|DEALLOCATE|DECLARE|DEFAULT|DELETE|DENY|DESC|DISK|DISTINCT|DISTRIBUTED|DOUBLE|DROP|DUMMY|DUMP|ELSE|END|ERRLVL|ESCAPE|EXCEPT|EXEC|EXECUTE|EXISTS|EXIT|FETCH|FILE|FILLFACTOR|FOLLOWING|FOR|FOREIGN|FREETEXT|FREETEXTTABLE|FROM|FULL|FUNCTION|GOTO|GRANT|GROUP|HAVING|HOLDLOCK|IDENTITY|IDENTITYCOL|IDENTITY_INSERT|IF|IN|INDEX|INNER|INSERT|INTERSECT|INTO|IS|JOIN|KEY|KILL|LEFT|LIKE|LINENO|LOAD|MATCH|MATCHED|MERGE|NATURAL|NATIONAL|NOCHECK|NONCLUSTERED|NOCYCLE|NOT|NULL|NULLIF|OF|OFF|OFFSETS|ON|OPEN|OPENDATASOURCE|OPENQUERY|OPENROWSET|OPENXML|OPTION|OR|ORDER|OUTER|OVER|PARTITION|PERCENT|PIVOT|PLAN|PRECEDING|PRECISION|PRIMARY|PRINT|PROC|PROCEDURE|PUBLIC|RAISERROR|READ|READTEXT|RECONFIGURE|REFERENCES|REPLICATION|RESTORE|RESTRICT|RETURN|REVOKE|RIGHT|ROLLBACK|ROWCOUNT|ROWGUIDCOL|ROWS?|RULE|SAVE|SCHEMA|SELECT|SESSION_USER|SET|SETUSER|SHUTDOWN|SOME|START|STATISTICS|SYSTEM_USER|TABLE|TEXTSIZE|THEN|TO|TOP|TRAN|TRANSACTION|TRIGGER|TRUNCATE|TSEQUAL|UNBOUNDED|UNION|UNIQUE|UNPIVOT|UPDATE|UPDATETEXT|USE|USER|USING|VALUES|VARYING|VIEW|WAITFOR|WHEN|WHERE|WHILE|WITH|WITHIN|WRITETEXT|XML)(?=[^\\w-]|$)/i,\nnull],[\"lit\",/^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^[a-z_][\\w-]*/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0+\\-\\\"\\']*/]]),[\"sql\"]);\n","source":"plugins/prettify/lang-sql.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:[^\\\"\\\\]|\\\\.)*\"|'(?:[^\\'\\\\]|\\\\.)*')/,null,\"\\\"'\"]],[[\"com\",/^(?:--[^\\r\\n]*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))/],[\"kwd\",/^(?:ADD|ALL|ALTER|AND|ANY|APPLY|AS|ASC|AUTHORIZATION|BACKUP|BEGIN|BETWEEN|BREAK|BROWSE|BULK|BY|CASCADE|CASE|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COMMIT|COMPUTE|CONNECT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT|CURRENT_DATE|CURRENT_TIME|CURRENT_TIMESTAMP|CURRENT_USER|CURSOR|DATABASE|DBCC|DEALLOCATE|DECLARE|DEFAULT|DELETE|DENY|DESC|DISK|DISTINCT|DISTRIBUTED|DOUBLE|DROP|DUMMY|DUMP|ELSE|END|ERRLVL|ESCAPE|EXCEPT|EXEC|EXECUTE|EXISTS|EXIT|FETCH|FILE|FILLFACTOR|FOLLOWING|FOR|FOREIGN|FREETEXT|FREETEXTTABLE|FROM|FULL|FUNCTION|GOTO|GRANT|GROUP|HAVING|HOLDLOCK|IDENTITY|IDENTITYCOL|IDENTITY_INSERT|IF|IN|INDEX|INNER|INSERT|INTERSECT|INTO|IS|JOIN|KEY|KILL|LEFT|LIKE|LINENO|LOAD|MATCH|MATCHED|MERGE|NATURAL|NATIONAL|NOCHECK|NONCLUSTERED|NOCYCLE|NOT|NULL|NULLIF|OF|OFF|OFFSETS|ON|OPEN|OPENDATASOURCE|OPENQUERY|OPENROWSET|OPENXML|OPTION|OR|ORDER|OUTER|OVER|PARTITION|PERCENT|PIVOT|PLAN|PRECEDING|PRECISION|PRIMARY|PRINT|PROC|PROCEDURE|PUBLIC|RAISERROR|READ|READTEXT|RECONFIGURE|REFERENCES|REPLICATION|RESTORE|RESTRICT|RETURN|REVOKE|RIGHT|ROLLBACK|ROWCOUNT|ROWGUIDCOL|ROWS?|RULE|SAVE|SCHEMA|SELECT|SESSION_USER|SET|SETUSER|SHUTDOWN|SOME|START|STATISTICS|SYSTEM_USER|TABLE|TEXTSIZE|THEN|TO|TOP|TRAN|TRANSACTION|TRIGGER|TRUNCATE|TSEQUAL|UNBOUNDED|UNION|UNIQUE|UNPIVOT|UPDATE|UPDATETEXT|USE|USER|USING|VALUES|VARYING|VIEW|WAITFOR|WHEN|WHERE|WHILE|WITH|WITHIN|WRITETEXT|XML)(?=[^\\w-]|$)/i,\nnull],[\"lit\",/^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^[a-z_][\\w-]*/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0+\\-\\\"\\']*/]]),[\"sql\"]);\n","date":"2022-03-27T08:23:16.365Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-sql.js","layout":"false","title":"","comments":1,"_id":"cl22h70vh007b5oss23xhcs5f","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:[^\\\"\\\\]|\\\\.)*\"|'(?:[^\\'\\\\]|\\\\.)*')/,null,\"\\\"'\"]],[[\"com\",/^(?:--[^\\r\\n]*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))/],[\"kwd\",/^(?:ADD|ALL|ALTER|AND|ANY|APPLY|AS|ASC|AUTHORIZATION|BACKUP|BEGIN|BETWEEN|BREAK|BROWSE|BULK|BY|CASCADE|CASE|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COMMIT|COMPUTE|CONNECT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT|CURRENT_DATE|CURRENT_TIME|CURRENT_TIMESTAMP|CURRENT_USER|CURSOR|DATABASE|DBCC|DEALLOCATE|DECLARE|DEFAULT|DELETE|DENY|DESC|DISK|DISTINCT|DISTRIBUTED|DOUBLE|DROP|DUMMY|DUMP|ELSE|END|ERRLVL|ESCAPE|EXCEPT|EXEC|EXECUTE|EXISTS|EXIT|FETCH|FILE|FILLFACTOR|FOLLOWING|FOR|FOREIGN|FREETEXT|FREETEXTTABLE|FROM|FULL|FUNCTION|GOTO|GRANT|GROUP|HAVING|HOLDLOCK|IDENTITY|IDENTITYCOL|IDENTITY_INSERT|IF|IN|INDEX|INNER|INSERT|INTERSECT|INTO|IS|JOIN|KEY|KILL|LEFT|LIKE|LINENO|LOAD|MATCH|MATCHED|MERGE|NATURAL|NATIONAL|NOCHECK|NONCLUSTERED|NOCYCLE|NOT|NULL|NULLIF|OF|OFF|OFFSETS|ON|OPEN|OPENDATASOURCE|OPENQUERY|OPENROWSET|OPENXML|OPTION|OR|ORDER|OUTER|OVER|PARTITION|PERCENT|PIVOT|PLAN|PRECEDING|PRECISION|PRIMARY|PRINT|PROC|PROCEDURE|PUBLIC|RAISERROR|READ|READTEXT|RECONFIGURE|REFERENCES|REPLICATION|RESTORE|RESTRICT|RETURN|REVOKE|RIGHT|ROLLBACK|ROWCOUNT|ROWGUIDCOL|ROWS?|RULE|SAVE|SCHEMA|SELECT|SESSION_USER|SET|SETUSER|SHUTDOWN|SOME|START|STATISTICS|SYSTEM_USER|TABLE|TEXTSIZE|THEN|TO|TOP|TRAN|TRANSACTION|TRIGGER|TRUNCATE|TSEQUAL|UNBOUNDED|UNION|UNIQUE|UNPIVOT|UPDATE|UPDATETEXT|USE|USER|USING|VALUES|VARYING|VIEW|WAITFOR|WHEN|WHERE|WHILE|WITH|WITHIN|WRITETEXT|XML)(?=[^\\w-]|$)/i,\nnull],[\"lit\",/^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^[a-z_][\\w-]*/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0+\\-\\\"\\']*/]]),[\"sql\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^(?:\"(?:[^\\\"\\\\]|\\\\.)*\"|'(?:[^\\'\\\\]|\\\\.)*')/,null,\"\\\"'\"]],[[\"com\",/^(?:--[^\\r\\n]*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))/],[\"kwd\",/^(?:ADD|ALL|ALTER|AND|ANY|APPLY|AS|ASC|AUTHORIZATION|BACKUP|BEGIN|BETWEEN|BREAK|BROWSE|BULK|BY|CASCADE|CASE|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COMMIT|COMPUTE|CONNECT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT|CURRENT_DATE|CURRENT_TIME|CURRENT_TIMESTAMP|CURRENT_USER|CURSOR|DATABASE|DBCC|DEALLOCATE|DECLARE|DEFAULT|DELETE|DENY|DESC|DISK|DISTINCT|DISTRIBUTED|DOUBLE|DROP|DUMMY|DUMP|ELSE|END|ERRLVL|ESCAPE|EXCEPT|EXEC|EXECUTE|EXISTS|EXIT|FETCH|FILE|FILLFACTOR|FOLLOWING|FOR|FOREIGN|FREETEXT|FREETEXTTABLE|FROM|FULL|FUNCTION|GOTO|GRANT|GROUP|HAVING|HOLDLOCK|IDENTITY|IDENTITYCOL|IDENTITY_INSERT|IF|IN|INDEX|INNER|INSERT|INTERSECT|INTO|IS|JOIN|KEY|KILL|LEFT|LIKE|LINENO|LOAD|MATCH|MATCHED|MERGE|NATURAL|NATIONAL|NOCHECK|NONCLUSTERED|NOCYCLE|NOT|NULL|NULLIF|OF|OFF|OFFSETS|ON|OPEN|OPENDATASOURCE|OPENQUERY|OPENROWSET|OPENXML|OPTION|OR|ORDER|OUTER|OVER|PARTITION|PERCENT|PIVOT|PLAN|PRECEDING|PRECISION|PRIMARY|PRINT|PROC|PROCEDURE|PUBLIC|RAISERROR|READ|READTEXT|RECONFIGURE|REFERENCES|REPLICATION|RESTORE|RESTRICT|RETURN|REVOKE|RIGHT|ROLLBACK|ROWCOUNT|ROWGUIDCOL|ROWS?|RULE|SAVE|SCHEMA|SELECT|SESSION_USER|SET|SETUSER|SHUTDOWN|SOME|START|STATISTICS|SYSTEM_USER|TABLE|TEXTSIZE|THEN|TO|TOP|TRAN|TRANSACTION|TRIGGER|TRUNCATE|TSEQUAL|UNBOUNDED|UNION|UNIQUE|UNPIVOT|UPDATE|UPDATETEXT|USE|USER|USING|VALUES|VARYING|VIEW|WAITFOR|WHEN|WHERE|WHILE|WITH|WITHIN|WRITETEXT|XML)(?=[^\\w-]|$)/i,\nnull],[\"lit\",/^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i],[\"pln\",/^[a-z_][\\w-]*/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0+\\-\\\"\\']*/]]),[\"sql\"]);\n"},{"_content":"/*\n\n Copyright (C) 2015 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[ \\n\\r\\t\\v\\f\\0]+/,null,\" \\n\\r\\t\\v\\f\\x00\"],[\"str\",/^\"(?:[^\"\\\\]|(?:\\\\.)|(?:\\\\\\((?:[^\"\\\\)]|\\\\.)*\\)))*\"/,null,'\"']],[[\"lit\",/^(?:(?:0x[\\da-fA-F][\\da-fA-F_]*\\.[\\da-fA-F][\\da-fA-F_]*[pP]?)|(?:\\d[\\d_]*\\.\\d[\\d_]*[eE]?))[+-]?\\d[\\d_]*/,null],[\"lit\",/^-?(?:(?:0(?:(?:b[01][01_]*)|(?:o[0-7][0-7_]*)|(?:x[\\da-fA-F][\\da-fA-F_]*)))|(?:\\d[\\d_]*))/,null],[\"lit\",/^(?:_|Any|true|false|nil)\\b/,null],[\"kwd\",/^\\b(?:__COLUMN__|__FILE__|__FUNCTION__|__LINE__|#available|#colorLiteral|#column|#else|#elseif|#endif|#file|#fileLiteral|#function|#if|#imageLiteral|#line|#selector|#sourceLocation|arch|arm|arm64|associatedtype|associativity|as|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|dynamicType|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|import|indirect|infix|init|inout|internal|i386|if|in|iOS|iOSApplicationExtension|is|lazy|left|let|mutating|none|nonmutating|open|operator|optional|OSX|OSXApplicationExtension|override|postfix|precedence|prefix|private|protocol|Protocol|public|repeat|required|rethrows|return|right|safe|Self|self|set|static|struct|subscript|super|switch|throw|throws|try|Type|typealias|unowned|unsafe|var|weak|watchOS|where|while|willSet|x86_64)\\b/,\nnull],[\"com\",/^\\/\\/.*?[\\n\\r]/,null],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"pun\",/^<<=|<=|<<|>>=|>=|>>|===|==|\\.\\.\\.|&&=|\\.\\.<|!==|!=|&=|~=|~|\\(|\\)|\\[|\\]|{|}|@|#|;|\\.|,|:|\\|\\|=|\\?\\?|\\|\\||&&|&\\*|&\\+|&-|&=|\\+=|-=|\\/=|\\*=|\\^=|%=|\\|=|->|`|==|\\+\\+|--|\\/|\\+|!|\\*|%|<|>|&|\\||\\^|\\?|=|-|_/,null],[\"typ\",/^\\b(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null]]),[\"swift\"]);\n","source":"plugins/prettify/lang-swift.js","raw":"/*\n\n Copyright (C) 2015 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[ \\n\\r\\t\\v\\f\\0]+/,null,\" \\n\\r\\t\\v\\f\\x00\"],[\"str\",/^\"(?:[^\"\\\\]|(?:\\\\.)|(?:\\\\\\((?:[^\"\\\\)]|\\\\.)*\\)))*\"/,null,'\"']],[[\"lit\",/^(?:(?:0x[\\da-fA-F][\\da-fA-F_]*\\.[\\da-fA-F][\\da-fA-F_]*[pP]?)|(?:\\d[\\d_]*\\.\\d[\\d_]*[eE]?))[+-]?\\d[\\d_]*/,null],[\"lit\",/^-?(?:(?:0(?:(?:b[01][01_]*)|(?:o[0-7][0-7_]*)|(?:x[\\da-fA-F][\\da-fA-F_]*)))|(?:\\d[\\d_]*))/,null],[\"lit\",/^(?:_|Any|true|false|nil)\\b/,null],[\"kwd\",/^\\b(?:__COLUMN__|__FILE__|__FUNCTION__|__LINE__|#available|#colorLiteral|#column|#else|#elseif|#endif|#file|#fileLiteral|#function|#if|#imageLiteral|#line|#selector|#sourceLocation|arch|arm|arm64|associatedtype|associativity|as|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|dynamicType|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|import|indirect|infix|init|inout|internal|i386|if|in|iOS|iOSApplicationExtension|is|lazy|left|let|mutating|none|nonmutating|open|operator|optional|OSX|OSXApplicationExtension|override|postfix|precedence|prefix|private|protocol|Protocol|public|repeat|required|rethrows|return|right|safe|Self|self|set|static|struct|subscript|super|switch|throw|throws|try|Type|typealias|unowned|unsafe|var|weak|watchOS|where|while|willSet|x86_64)\\b/,\nnull],[\"com\",/^\\/\\/.*?[\\n\\r]/,null],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"pun\",/^<<=|<=|<<|>>=|>=|>>|===|==|\\.\\.\\.|&&=|\\.\\.<|!==|!=|&=|~=|~|\\(|\\)|\\[|\\]|{|}|@|#|;|\\.|,|:|\\|\\|=|\\?\\?|\\|\\||&&|&\\*|&\\+|&-|&=|\\+=|-=|\\/=|\\*=|\\^=|%=|\\|=|->|`|==|\\+\\+|--|\\/|\\+|!|\\*|%|<|>|&|\\||\\^|\\?|=|-|_/,null],[\"typ\",/^\\b(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null]]),[\"swift\"]);\n","date":"2022-03-27T08:23:16.368Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-swift.js","layout":"false","title":"","comments":1,"_id":"cl22h70vh007c5oss17682k49","content":"/*\n\n Copyright (C) 2015 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[ \\n\\r\\t\\v\\f\\0]+/,null,\" \\n\\r\\t\\v\\f\\x00\"],[\"str\",/^\"(?:[^\"\\\\]|(?:\\\\.)|(?:\\\\\\((?:[^\"\\\\)]|\\\\.)*\\)))*\"/,null,'\"']],[[\"lit\",/^(?:(?:0x[\\da-fA-F][\\da-fA-F_]*\\.[\\da-fA-F][\\da-fA-F_]*[pP]?)|(?:\\d[\\d_]*\\.\\d[\\d_]*[eE]?))[+-]?\\d[\\d_]*/,null],[\"lit\",/^-?(?:(?:0(?:(?:b[01][01_]*)|(?:o[0-7][0-7_]*)|(?:x[\\da-fA-F][\\da-fA-F_]*)))|(?:\\d[\\d_]*))/,null],[\"lit\",/^(?:_|Any|true|false|nil)\\b/,null],[\"kwd\",/^\\b(?:__COLUMN__|__FILE__|__FUNCTION__|__LINE__|#available|#colorLiteral|#column|#else|#elseif|#endif|#file|#fileLiteral|#function|#if|#imageLiteral|#line|#selector|#sourceLocation|arch|arm|arm64|associatedtype|associativity|as|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|dynamicType|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|import|indirect|infix|init|inout|internal|i386|if|in|iOS|iOSApplicationExtension|is|lazy|left|let|mutating|none|nonmutating|open|operator|optional|OSX|OSXApplicationExtension|override|postfix|precedence|prefix|private|protocol|Protocol|public|repeat|required|rethrows|return|right|safe|Self|self|set|static|struct|subscript|super|switch|throw|throws|try|Type|typealias|unowned|unsafe|var|weak|watchOS|where|while|willSet|x86_64)\\b/,\nnull],[\"com\",/^\\/\\/.*?[\\n\\r]/,null],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"pun\",/^<<=|<=|<<|>>=|>=|>>|===|==|\\.\\.\\.|&&=|\\.\\.<|!==|!=|&=|~=|~|\\(|\\)|\\[|\\]|{|}|@|#|;|\\.|,|:|\\|\\|=|\\?\\?|\\|\\||&&|&\\*|&\\+|&-|&=|\\+=|-=|\\/=|\\*=|\\^=|%=|\\|=|->|`|==|\\+\\+|--|\\/|\\+|!|\\*|%|<|>|&|\\||\\^|\\?|=|-|_/,null],[\"typ\",/^\\b(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null]]),[\"swift\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2015 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[ \\n\\r\\t\\v\\f\\0]+/,null,\" \\n\\r\\t\\v\\f\\x00\"],[\"str\",/^\"(?:[^\"\\\\]|(?:\\\\.)|(?:\\\\\\((?:[^\"\\\\)]|\\\\.)*\\)))*\"/,null,'\"']],[[\"lit\",/^(?:(?:0x[\\da-fA-F][\\da-fA-F_]*\\.[\\da-fA-F][\\da-fA-F_]*[pP]?)|(?:\\d[\\d_]*\\.\\d[\\d_]*[eE]?))[+-]?\\d[\\d_]*/,null],[\"lit\",/^-?(?:(?:0(?:(?:b[01][01_]*)|(?:o[0-7][0-7_]*)|(?:x[\\da-fA-F][\\da-fA-F_]*)))|(?:\\d[\\d_]*))/,null],[\"lit\",/^(?:_|Any|true|false|nil)\\b/,null],[\"kwd\",/^\\b(?:__COLUMN__|__FILE__|__FUNCTION__|__LINE__|#available|#colorLiteral|#column|#else|#elseif|#endif|#file|#fileLiteral|#function|#if|#imageLiteral|#line|#selector|#sourceLocation|arch|arm|arm64|associatedtype|associativity|as|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|dynamicType|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|import|indirect|infix|init|inout|internal|i386|if|in|iOS|iOSApplicationExtension|is|lazy|left|let|mutating|none|nonmutating|open|operator|optional|OSX|OSXApplicationExtension|override|postfix|precedence|prefix|private|protocol|Protocol|public|repeat|required|rethrows|return|right|safe|Self|self|set|static|struct|subscript|super|switch|throw|throws|try|Type|typealias|unowned|unsafe|var|weak|watchOS|where|while|willSet|x86_64)\\b/,\nnull],[\"com\",/^\\/\\/.*?[\\n\\r]/,null],[\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null],[\"pun\",/^<<=|<=|<<|>>=|>=|>>|===|==|\\.\\.\\.|&&=|\\.\\.<|!==|!=|&=|~=|~|\\(|\\)|\\[|\\]|{|}|@|#|;|\\.|,|:|\\|\\|=|\\?\\?|\\|\\||&&|&\\*|&\\+|&-|&=|\\+=|-=|\\/=|\\*=|\\^=|%=|\\|=|->|`|==|\\+\\+|--|\\/|\\+|!|\\*|%|<|>|&|\\||\\^|\\?|=|-|_/,null],[\"typ\",/^\\b(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null]]),[\"swift\"]);\n"},{"_content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","source":"plugins/prettify/lang-ss.js","raw":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","date":"2022-03-27T08:23:16.366Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-ss.js","layout":"false","title":"","comments":1,"_id":"cl22h70vi007d5ossb9dm6vm0","content":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2008 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\(+/,null,\"(\"],[\"clo\",/^\\)+/,null,\")\"],[\"com\",/^;[^\\r\\n]*/,null,\";\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/,\nnull],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),\"cl el lisp lsp scm ss rkt\".split(\" \"));\n"},{"_content":"/*\n\n Copyright (C) 2012 Pyrios\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\{+/,null,\"{\"],[\"clo\",/^\\}+/,null,\"}\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:after|append|apply|array|break|case|catch|continue|error|eval|exec|exit|expr|for|foreach|if|incr|info|proc|return|set|switch|trace|uplevel|upvar|while)\\b/,null],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],\n[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"tcl\"]);\n","source":"plugins/prettify/lang-tcl.js","raw":"/*\n\n Copyright (C) 2012 Pyrios\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\{+/,null,\"{\"],[\"clo\",/^\\}+/,null,\"}\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:after|append|apply|array|break|case|catch|continue|error|eval|exec|exit|expr|for|foreach|if|incr|info|proc|return|set|switch|trace|uplevel|upvar|while)\\b/,null],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],\n[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"tcl\"]);\n","date":"2022-03-27T08:23:16.369Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-tcl.js","layout":"false","title":"","comments":1,"_id":"cl22h70vi007e5osshvcf7m00","content":"/*\n\n Copyright (C) 2012 Pyrios\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\{+/,null,\"{\"],[\"clo\",/^\\}+/,null,\"}\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:after|append|apply|array|break|case|catch|continue|error|eval|exec|exit|expr|for|foreach|if|incr|info|proc|return|set|switch|trace|uplevel|upvar|while)\\b/,null],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],\n[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"tcl\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2012 Pyrios\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"opn\",/^\\{+/,null,\"{\"],[\"clo\",/^\\}+/,null,\"}\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"str\",/^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/,null,'\"']],[[\"kwd\",/^(?:after|append|apply|array|break|case|catch|continue|error|eval|exec|exit|expr|for|foreach|if|incr|info|proc|return|set|switch|trace|uplevel|upvar|while)\\b/,null],[\"lit\",/^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i],\n[\"lit\",/^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/],[\"pln\",/^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/]]),[\"tcl\"]);\n"},{"_content":"/*\n\n Copyright (C) 2011 Martin S.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^\\\\./],[\"typ\",/^[$&]/],[\"lit\",/[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i],[\"pun\",/^[{}()\\[\\]=]+/]]),[\"latex\",\"tex\"]);\n","source":"plugins/prettify/lang-tex.js","raw":"/*\n\n Copyright (C) 2011 Martin S.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^\\\\./],[\"typ\",/^[$&]/],[\"lit\",/[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i],[\"pun\",/^[{}()\\[\\]=]+/]]),[\"latex\",\"tex\"]);\n","date":"2022-03-27T08:23:16.369Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-tex.js","layout":"false","title":"","comments":1,"_id":"cl22h70vi007f5oss8h7k1ofz","content":"/*\n\n Copyright (C) 2011 Martin S.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^\\\\./],[\"typ\",/^[$&]/],[\"lit\",/[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i],[\"pun\",/^[{}()\\[\\]=]+/]]),[\"latex\",\"tex\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2011 Martin S.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"],[\"com\",/^%[^\\r\\n]*/,null,\"%\"]],[[\"kwd\",/^\\\\[a-zA-Z@]+/],[\"kwd\",/^\\\\./],[\"typ\",/^[$&]/],[\"lit\",/[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i],[\"pun\",/^[{}()\\[\\]=]+/]]),[\"latex\",\"tex\"]);\n"},{"_content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0\\u2028\\u2029]+/,null,\"\\t\\n\\r \\u00a0\\u2028\\u2029\"],[\"str\",/^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i,null,'\"\\u201c\\u201d'],[\"com\",/^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/,null,\"'\\u2018\\u2019\"]],[[\"kwd\",/^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i,\nnull],[\"com\",/^REM\\b[^\\r\\n\\u2028\\u2029]*/i],[\"lit\",/^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i],[\"pln\",/^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i],[\"pun\",/^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/],[\"pun\",/^(?:\\[|\\])/]]),[\"vb\",\n\"vbs\"]);\n","source":"plugins/prettify/lang-vbs.js","raw":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0\\u2028\\u2029]+/,null,\"\\t\\n\\r \\u00a0\\u2028\\u2029\"],[\"str\",/^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i,null,'\"\\u201c\\u201d'],[\"com\",/^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/,null,\"'\\u2018\\u2019\"]],[[\"kwd\",/^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i,\nnull],[\"com\",/^REM\\b[^\\r\\n\\u2028\\u2029]*/i],[\"lit\",/^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i],[\"pln\",/^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i],[\"pun\",/^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/],[\"pun\",/^(?:\\[|\\])/]]),[\"vb\",\n\"vbs\"]);\n","date":"2022-03-27T08:23:16.372Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-vbs.js","layout":"false","title":"","comments":1,"_id":"cl22h70vi007g5ossbnuwfl9s","content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0\\u2028\\u2029]+/,null,\"\\t\\n\\r \\u00a0\\u2028\\u2029\"],[\"str\",/^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i,null,'\"\\u201c\\u201d'],[\"com\",/^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/,null,\"'\\u2018\\u2019\"]],[[\"kwd\",/^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i,\nnull],[\"com\",/^REM\\b[^\\r\\n\\u2028\\u2029]*/i],[\"lit\",/^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i],[\"pln\",/^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i],[\"pun\",/^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/],[\"pun\",/^(?:\\[|\\])/]]),[\"vb\",\n\"vbs\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0\\u2028\\u2029]+/,null,\"\\t\\n\\r \\u00a0\\u2028\\u2029\"],[\"str\",/^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i,null,'\"\\u201c\\u201d'],[\"com\",/^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/,null,\"'\\u2018\\u2019\"]],[[\"kwd\",/^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i,\nnull],[\"com\",/^REM\\b[^\\r\\n\\u2028\\u2029]*/i],[\"lit\",/^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i],[\"pln\",/^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i],[\"pun\",/^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/],[\"pun\",/^(?:\\[|\\])/]]),[\"vb\",\n\"vbs\"]);\n"},{"_content":"/*\n\n Copyright (C) 2010 benoit@ryder.fr\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"str\",/^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i],[\"com\",/^--[^\\r\\n]*/],[\"kwd\",/^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i,\nnull],[\"typ\",/^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i,null],[\"typ\",/^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i,null],[\"lit\",/^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i],\n[\"pln\",/^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/]]),[\"vhdl\",\"vhd\"]);\n","source":"plugins/prettify/lang-vhd.js","raw":"/*\n\n Copyright (C) 2010 benoit@ryder.fr\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"str\",/^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i],[\"com\",/^--[^\\r\\n]*/],[\"kwd\",/^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i,\nnull],[\"typ\",/^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i,null],[\"typ\",/^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i,null],[\"lit\",/^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i],\n[\"pln\",/^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/]]),[\"vhdl\",\"vhd\"]);\n","date":"2022-03-27T08:23:16.373Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-vhd.js","layout":"false","title":"","comments":1,"_id":"cl22h70vj007h5ossbv223f9b","content":"/*\n\n Copyright (C) 2010 benoit@ryder.fr\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"str\",/^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i],[\"com\",/^--[^\\r\\n]*/],[\"kwd\",/^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i,\nnull],[\"typ\",/^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i,null],[\"typ\",/^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i,null],[\"lit\",/^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i],\n[\"pln\",/^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/]]),[\"vhdl\",\"vhd\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2010 benoit@ryder.fr\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"str\",/^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i],[\"com\",/^--[^\\r\\n]*/],[\"kwd\",/^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i,\nnull],[\"typ\",/^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i,null],[\"typ\",/^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i,null],[\"lit\",/^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i],\n[\"pln\",/^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/]]),[\"vhdl\",\"vhd\"]);\n"},{"_content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0\\u2028\\u2029]+/,null,\"\\t\\n\\r \\u00a0\\u2028\\u2029\"],[\"str\",/^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i,null,'\"\\u201c\\u201d'],[\"com\",/^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/,null,\"'\\u2018\\u2019\"]],[[\"kwd\",/^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i,\nnull],[\"com\",/^REM\\b[^\\r\\n\\u2028\\u2029]*/i],[\"lit\",/^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i],[\"pln\",/^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i],[\"pun\",/^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/],[\"pun\",/^(?:\\[|\\])/]]),[\"vb\",\n\"vbs\"]);\n","source":"plugins/prettify/lang-vb.js","raw":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0\\u2028\\u2029]+/,null,\"\\t\\n\\r \\u00a0\\u2028\\u2029\"],[\"str\",/^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i,null,'\"\\u201c\\u201d'],[\"com\",/^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/,null,\"'\\u2018\\u2019\"]],[[\"kwd\",/^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i,\nnull],[\"com\",/^REM\\b[^\\r\\n\\u2028\\u2029]*/i],[\"lit\",/^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i],[\"pln\",/^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i],[\"pun\",/^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/],[\"pun\",/^(?:\\[|\\])/]]),[\"vb\",\n\"vbs\"]);\n","date":"2022-03-27T08:23:16.371Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-vb.js","layout":"false","title":"","comments":1,"_id":"cl22h70vj007i5oss28kuevr4","content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0\\u2028\\u2029]+/,null,\"\\t\\n\\r \\u00a0\\u2028\\u2029\"],[\"str\",/^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i,null,'\"\\u201c\\u201d'],[\"com\",/^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/,null,\"'\\u2018\\u2019\"]],[[\"kwd\",/^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i,\nnull],[\"com\",/^REM\\b[^\\r\\n\\u2028\\u2029]*/i],[\"lit\",/^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i],[\"pln\",/^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i],[\"pun\",/^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/],[\"pun\",/^(?:\\[|\\])/]]),[\"vb\",\n\"vbs\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0\\u2028\\u2029]+/,null,\"\\t\\n\\r \\u00a0\\u2028\\u2029\"],[\"str\",/^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i,null,'\"\\u201c\\u201d'],[\"com\",/^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/,null,\"'\\u2018\\u2019\"]],[[\"kwd\",/^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i,\nnull],[\"com\",/^REM\\b[^\\r\\n\\u2028\\u2029]*/i],[\"lit\",/^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i],[\"pln\",/^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i],[\"pun\",/^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/],[\"pun\",/^(?:\\[|\\])/]]),[\"vb\",\n\"vbs\"]);\n"},{"_content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t \\xA0a-gi-z0-9]+/,null,\"\\t \\u00a0abcdefgijklmnopqrstuvwxyz0123456789\"],[\"pun\",/^[=*~\\^\\[\\]]+/,null,\"=*~^[]\"]],[[\"lang-wiki.meta\",/(?:^^|\\r\\n?|\\n)(#[a-z]+)\\b/],[\"lit\",/^(?:[A-Z][a-z][a-z0-9]+[A-Z][a-z][a-zA-Z0-9]+)\\b/],[\"lang-\",/^\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/],[\"lang-\",/^`([^\\r\\n`]+)`/],[\"str\",/^https?:\\/\\/[^\\/?#\\s]*(?:\\/[^?#\\s]*)?(?:\\?[^#\\s]*)?(?:#\\S*)?/i],[\"pln\",/^(?:\\r\\n|[\\s\\S])[^#=*~^A-Zh\\{`\\[\\r\\n]*/]]),[\"wiki\"]);\nPR.registerLangHandler(PR.createSimpleLexer([[\"kwd\",/^#[a-z]+/i,null,\"#\"]],[]),[\"wiki.meta\"]);\n","source":"plugins/prettify/lang-wiki.js","raw":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t \\xA0a-gi-z0-9]+/,null,\"\\t \\u00a0abcdefgijklmnopqrstuvwxyz0123456789\"],[\"pun\",/^[=*~\\^\\[\\]]+/,null,\"=*~^[]\"]],[[\"lang-wiki.meta\",/(?:^^|\\r\\n?|\\n)(#[a-z]+)\\b/],[\"lit\",/^(?:[A-Z][a-z][a-z0-9]+[A-Z][a-z][a-zA-Z0-9]+)\\b/],[\"lang-\",/^\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/],[\"lang-\",/^`([^\\r\\n`]+)`/],[\"str\",/^https?:\\/\\/[^\\/?#\\s]*(?:\\/[^?#\\s]*)?(?:\\?[^#\\s]*)?(?:#\\S*)?/i],[\"pln\",/^(?:\\r\\n|[\\s\\S])[^#=*~^A-Zh\\{`\\[\\r\\n]*/]]),[\"wiki\"]);\nPR.registerLangHandler(PR.createSimpleLexer([[\"kwd\",/^#[a-z]+/i,null,\"#\"]],[]),[\"wiki.meta\"]);\n","date":"2022-03-27T08:23:16.375Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-wiki.js","layout":"false","title":"","comments":1,"_id":"cl22h70vj007j5ossd64jgpep","content":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t \\xA0a-gi-z0-9]+/,null,\"\\t \\u00a0abcdefgijklmnopqrstuvwxyz0123456789\"],[\"pun\",/^[=*~\\^\\[\\]]+/,null,\"=*~^[]\"]],[[\"lang-wiki.meta\",/(?:^^|\\r\\n?|\\n)(#[a-z]+)\\b/],[\"lit\",/^(?:[A-Z][a-z][a-z0-9]+[A-Z][a-z][a-zA-Z0-9]+)\\b/],[\"lang-\",/^\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/],[\"lang-\",/^`([^\\r\\n`]+)`/],[\"str\",/^https?:\\/\\/[^\\/?#\\s]*(?:\\/[^?#\\s]*)?(?:\\?[^#\\s]*)?(?:#\\S*)?/i],[\"pln\",/^(?:\\r\\n|[\\s\\S])[^#=*~^A-Zh\\{`\\[\\r\\n]*/]]),[\"wiki\"]);\nPR.registerLangHandler(PR.createSimpleLexer([[\"kwd\",/^#[a-z]+/i,null,\"#\"]],[]),[\"wiki.meta\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2009 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t \\xA0a-gi-z0-9]+/,null,\"\\t \\u00a0abcdefgijklmnopqrstuvwxyz0123456789\"],[\"pun\",/^[=*~\\^\\[\\]]+/,null,\"=*~^[]\"]],[[\"lang-wiki.meta\",/(?:^^|\\r\\n?|\\n)(#[a-z]+)\\b/],[\"lit\",/^(?:[A-Z][a-z][a-z0-9]+[A-Z][a-z][a-zA-Z0-9]+)\\b/],[\"lang-\",/^\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/],[\"lang-\",/^`([^\\r\\n`]+)`/],[\"str\",/^https?:\\/\\/[^\\/?#\\s]*(?:\\/[^?#\\s]*)?(?:\\?[^#\\s]*)?(?:#\\S*)?/i],[\"pln\",/^(?:\\r\\n|[\\s\\S])[^#=*~^A-Zh\\{`\\[\\r\\n]*/]]),[\"wiki\"]);\nPR.registerLangHandler(PR.createSimpleLexer([[\"kwd\",/^#[a-z]+/i,null,\"#\"]],[]),[\"wiki.meta\"]);\n"},{"_content":"/*\n\n Copyright (C) 2010 benoit@ryder.fr\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"str\",/^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i],[\"com\",/^--[^\\r\\n]*/],[\"kwd\",/^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i,\nnull],[\"typ\",/^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i,null],[\"typ\",/^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i,null],[\"lit\",/^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i],\n[\"pln\",/^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/]]),[\"vhdl\",\"vhd\"]);\n","source":"plugins/prettify/lang-vhdl.js","raw":"/*\n\n Copyright (C) 2010 benoit@ryder.fr\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"str\",/^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i],[\"com\",/^--[^\\r\\n]*/],[\"kwd\",/^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i,\nnull],[\"typ\",/^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i,null],[\"typ\",/^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i,null],[\"lit\",/^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i],\n[\"pln\",/^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/]]),[\"vhdl\",\"vhd\"]);\n","date":"2022-03-27T08:23:16.374Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-vhdl.js","layout":"false","title":"","comments":1,"_id":"cl22h70vj007k5ossg3jw9l3d","content":"/*\n\n Copyright (C) 2010 benoit@ryder.fr\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"str\",/^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i],[\"com\",/^--[^\\r\\n]*/],[\"kwd\",/^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i,\nnull],[\"typ\",/^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i,null],[\"typ\",/^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i,null],[\"lit\",/^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i],\n[\"pln\",/^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/]]),[\"vhdl\",\"vhd\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2010 benoit@ryder.fr\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pln\",/^[\\t\\n\\r \\xA0]+/,null,\"\\t\\n\\r \\u00a0\"]],[[\"str\",/^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i],[\"com\",/^--[^\\r\\n]*/],[\"kwd\",/^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i,\nnull],[\"typ\",/^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i,null],[\"typ\",/^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i,null],[\"lit\",/^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i],\n[\"pln\",/^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i],[\"pun\",/^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/]]),[\"vhdl\",\"vhd\"]);\n"},{"_content":"/*\n\n Copyright (C) 2011 Patrick Wied\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"var pln\",/^\\$[A-Za-z0-9_\\-]+/,null,\"$\"]],[[\"pln\",/^[\\s=][<>][\\s=]/],[\"lit\",/^\\@[\\w-]+/],[\"tag\",/^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"com\",/^\\(:[\\s\\S]*?:\\)/],[\"pln\",/^[\\/\\{\\};,\\[\\]\\(\\)]$/],[\"str\",/^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"],[\"kwd\",/^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/],\n[\"typ\",/^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/,null],[\"fun pln\",/^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/],\n[\"pln\",/^[A-Za-z0-9_\\-\\:]+/],[\"pln\",/^[\\t\\n\\r \\xA0]+/]]),[\"xq\",\"xquery\"]);\n","source":"plugins/prettify/lang-xq.js","raw":"/*\n\n Copyright (C) 2011 Patrick Wied\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"var pln\",/^\\$[A-Za-z0-9_\\-]+/,null,\"$\"]],[[\"pln\",/^[\\s=][<>][\\s=]/],[\"lit\",/^\\@[\\w-]+/],[\"tag\",/^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"com\",/^\\(:[\\s\\S]*?:\\)/],[\"pln\",/^[\\/\\{\\};,\\[\\]\\(\\)]$/],[\"str\",/^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"],[\"kwd\",/^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/],\n[\"typ\",/^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/,null],[\"fun pln\",/^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/],\n[\"pln\",/^[A-Za-z0-9_\\-\\:]+/],[\"pln\",/^[\\t\\n\\r \\xA0]+/]]),[\"xq\",\"xquery\"]);\n","date":"2022-03-27T08:23:16.376Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-xq.js","layout":"false","title":"","comments":1,"_id":"cl22h70vk007l5ossdejodwen","content":"/*\n\n Copyright (C) 2011 Patrick Wied\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"var pln\",/^\\$[A-Za-z0-9_\\-]+/,null,\"$\"]],[[\"pln\",/^[\\s=][<>][\\s=]/],[\"lit\",/^\\@[\\w-]+/],[\"tag\",/^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"com\",/^\\(:[\\s\\S]*?:\\)/],[\"pln\",/^[\\/\\{\\};,\\[\\]\\(\\)]$/],[\"str\",/^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"],[\"kwd\",/^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/],\n[\"typ\",/^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/,null],[\"fun pln\",/^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/],\n[\"pln\",/^[A-Za-z0-9_\\-\\:]+/],[\"pln\",/^[\\t\\n\\r \\xA0]+/]]),[\"xq\",\"xquery\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2011 Patrick Wied\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"var pln\",/^\\$[A-Za-z0-9_\\-]+/,null,\"$\"]],[[\"pln\",/^[\\s=][<>][\\s=]/],[\"lit\",/^\\@[\\w-]+/],[\"tag\",/^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"com\",/^\\(:[\\s\\S]*?:\\)/],[\"pln\",/^[\\/\\{\\};,\\[\\]\\(\\)]$/],[\"str\",/^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"],[\"kwd\",/^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/],\n[\"typ\",/^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/,null],[\"fun pln\",/^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/],\n[\"pln\",/^[A-Za-z0-9_\\-\\:]+/],[\"pln\",/^[\\t\\n\\r \\xA0]+/]]),[\"xq\",\"xquery\"]);\n"},{"_content":"/*\n\n Copyright (C) 2011 Patrick Wied\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"var pln\",/^\\$[A-Za-z0-9_\\-]+/,null,\"$\"]],[[\"pln\",/^[\\s=][<>][\\s=]/],[\"lit\",/^\\@[\\w-]+/],[\"tag\",/^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"com\",/^\\(:[\\s\\S]*?:\\)/],[\"pln\",/^[\\/\\{\\};,\\[\\]\\(\\)]$/],[\"str\",/^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"],[\"kwd\",/^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/],\n[\"typ\",/^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/,null],[\"fun pln\",/^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/],\n[\"pln\",/^[A-Za-z0-9_\\-\\:]+/],[\"pln\",/^[\\t\\n\\r \\xA0]+/]]),[\"xq\",\"xquery\"]);\n","source":"plugins/prettify/lang-xquery.js","raw":"/*\n\n Copyright (C) 2011 Patrick Wied\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"var pln\",/^\\$[A-Za-z0-9_\\-]+/,null,\"$\"]],[[\"pln\",/^[\\s=][<>][\\s=]/],[\"lit\",/^\\@[\\w-]+/],[\"tag\",/^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"com\",/^\\(:[\\s\\S]*?:\\)/],[\"pln\",/^[\\/\\{\\};,\\[\\]\\(\\)]$/],[\"str\",/^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"],[\"kwd\",/^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/],\n[\"typ\",/^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/,null],[\"fun pln\",/^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/],\n[\"pln\",/^[A-Za-z0-9_\\-\\:]+/],[\"pln\",/^[\\t\\n\\r \\xA0]+/]]),[\"xq\",\"xquery\"]);\n","date":"2022-03-27T08:23:16.377Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-xquery.js","layout":"false","title":"","comments":1,"_id":"cl22h70vk007m5oss5jkbe8mi","content":"/*\n\n Copyright (C) 2011 Patrick Wied\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"var pln\",/^\\$[A-Za-z0-9_\\-]+/,null,\"$\"]],[[\"pln\",/^[\\s=][<>][\\s=]/],[\"lit\",/^\\@[\\w-]+/],[\"tag\",/^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"com\",/^\\(:[\\s\\S]*?:\\)/],[\"pln\",/^[\\/\\{\\};,\\[\\]\\(\\)]$/],[\"str\",/^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"],[\"kwd\",/^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/],\n[\"typ\",/^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/,null],[\"fun pln\",/^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/],\n[\"pln\",/^[A-Za-z0-9_\\-\\:]+/],[\"pln\",/^[\\t\\n\\r \\xA0]+/]]),[\"xq\",\"xquery\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2011 Patrick Wied\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"var pln\",/^\\$[A-Za-z0-9_\\-]+/,null,\"$\"]],[[\"pln\",/^[\\s=][<>][\\s=]/],[\"lit\",/^\\@[\\w-]+/],[\"tag\",/^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"com\",/^\\(:[\\s\\S]*?:\\)/],[\"pln\",/^[\\/\\{\\};,\\[\\]\\(\\)]$/],[\"str\",/^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/,null,\"\\\"'\"],[\"kwd\",/^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/],\n[\"typ\",/^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/,null],[\"fun pln\",/^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/],\n[\"pln\",/^[A-Za-z0-9_\\-\\:]+/],[\"pln\",/^[\\t\\n\\r \\xA0]+/]]),[\"xq\",\"xquery\"]);\n"},{"_content":"/*\n\n Copyright (C) 2015 ribrdb @ code.google.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pun\",/^[:|>?]+/,null,\":|>?\"],[\"dec\",/^%(?:YAML|TAG)[^#\\r\\n]+/,null,\"%\"],[\"typ\",/^[&]\\S+/,null,\"&\"],[\"typ\",/^!\\S*/,null,\"!\"],[\"str\",/^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/,null,'\"'],[\"str\",/^'(?:[^']|'')*(?:'|$)/,null,\"'\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\t\\r\\n\"]],[[\"dec\",/^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/],[\"pun\",/^-/],[\"kwd\",/^[\\w-]+:[ \\r\\n]/],[\"pln\",\n/^\\w+/]]),[\"yaml\",\"yml\"]);\n","source":"plugins/prettify/lang-yml.js","raw":"/*\n\n Copyright (C) 2015 ribrdb @ code.google.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pun\",/^[:|>?]+/,null,\":|>?\"],[\"dec\",/^%(?:YAML|TAG)[^#\\r\\n]+/,null,\"%\"],[\"typ\",/^[&]\\S+/,null,\"&\"],[\"typ\",/^!\\S*/,null,\"!\"],[\"str\",/^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/,null,'\"'],[\"str\",/^'(?:[^']|'')*(?:'|$)/,null,\"'\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\t\\r\\n\"]],[[\"dec\",/^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/],[\"pun\",/^-/],[\"kwd\",/^[\\w-]+:[ \\r\\n]/],[\"pln\",\n/^\\w+/]]),[\"yaml\",\"yml\"]);\n","date":"2022-03-27T08:23:16.379Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-yml.js","layout":"false","title":"","comments":1,"_id":"cl22h70vk007n5oss4dkmbfg7","content":"/*\n\n Copyright (C) 2015 ribrdb @ code.google.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pun\",/^[:|>?]+/,null,\":|>?\"],[\"dec\",/^%(?:YAML|TAG)[^#\\r\\n]+/,null,\"%\"],[\"typ\",/^[&]\\S+/,null,\"&\"],[\"typ\",/^!\\S*/,null,\"!\"],[\"str\",/^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/,null,'\"'],[\"str\",/^'(?:[^']|'')*(?:'|$)/,null,\"'\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\t\\r\\n\"]],[[\"dec\",/^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/],[\"pun\",/^-/],[\"kwd\",/^[\\w-]+:[ \\r\\n]/],[\"pln\",\n/^\\w+/]]),[\"yaml\",\"yml\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2015 ribrdb @ code.google.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pun\",/^[:|>?]+/,null,\":|>?\"],[\"dec\",/^%(?:YAML|TAG)[^#\\r\\n]+/,null,\"%\"],[\"typ\",/^[&]\\S+/,null,\"&\"],[\"typ\",/^!\\S*/,null,\"!\"],[\"str\",/^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/,null,'\"'],[\"str\",/^'(?:[^']|'')*(?:'|$)/,null,\"'\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\t\\r\\n\"]],[[\"dec\",/^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/],[\"pun\",/^-/],[\"kwd\",/^[\\w-]+:[ \\r\\n]/],[\"pln\",\n/^\\w+/]]),[\"yaml\",\"yml\"]);\n"},{"_content":".pln{color:#000}@media screen{.str{color:#080}.kwd{color:#008}.com{color:#800}.typ{color:#606}.lit{color:#066}.clo,.opn,.pun{color:#660}.tag{color:#008}.atn{color:#606}.atv{color:#080}.dec,.var{color:#606}.fun{color:red}}@media print,projection{.kwd,.tag,.typ{font-weight:700}.str{color:#060}.kwd{color:#006}.com{color:#600;font-style:italic}.typ{color:#404}.lit{color:#044}.clo,.opn,.pun{color:#440}.tag{color:#006}.atn{color:#404}.atv{color:#060}}pre.prettyprint{padding:2px;border:1px solid #888}ol.linenums{margin-top:0;margin-bottom:0}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}li.L1,li.L3,li.L5,li.L7,li.L9{background:#eee}","source":"plugins/prettify/prettify.css","raw":".pln{color:#000}@media screen{.str{color:#080}.kwd{color:#008}.com{color:#800}.typ{color:#606}.lit{color:#066}.clo,.opn,.pun{color:#660}.tag{color:#008}.atn{color:#606}.atv{color:#080}.dec,.var{color:#606}.fun{color:red}}@media print,projection{.kwd,.tag,.typ{font-weight:700}.str{color:#060}.kwd{color:#006}.com{color:#600;font-style:italic}.typ{color:#404}.lit{color:#044}.clo,.opn,.pun{color:#440}.tag{color:#006}.atn{color:#404}.atv{color:#060}}pre.prettyprint{padding:2px;border:1px solid #888}ol.linenums{margin-top:0;margin-bottom:0}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}li.L1,li.L3,li.L5,li.L7,li.L9{background:#eee}","date":"2022-03-27T08:23:16.384Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/prettify.css","layout":"false","title":"","comments":1,"_id":"cl22h70vk007o5ossfm5j5odr","content":".pln{color:#000}@media screen{.str{color:#080}.kwd{color:#008}.com{color:#800}.typ{color:#606}.lit{color:#066}.clo,.opn,.pun{color:#660}.tag{color:#008}.atn{color:#606}.atv{color:#080}.dec,.var{color:#606}.fun{color:red}}@media print,projection{.kwd,.tag,.typ{font-weight:700}.str{color:#060}.kwd{color:#006}.com{color:#600;font-style:italic}.typ{color:#404}.lit{color:#044}.clo,.opn,.pun{color:#440}.tag{color:#006}.atn{color:#404}.atv{color:#060}}pre.prettyprint{padding:2px;border:1px solid #888}ol.linenums{margin-top:0;margin-bottom:0}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}li.L1,li.L3,li.L5,li.L7,li.L9{background:#eee}","site":{"data":{}},"excerpt":"","more":".pln{color:#000}@media screen{.str{color:#080}.kwd{color:#008}.com{color:#800}.typ{color:#606}.lit{color:#066}.clo,.opn,.pun{color:#660}.tag{color:#008}.atn{color:#606}.atv{color:#080}.dec,.var{color:#606}.fun{color:red}}@media print,projection{.kwd,.tag,.typ{font-weight:700}.str{color:#060}.kwd{color:#006}.com{color:#600;font-style:italic}.typ{color:#404}.lit{color:#044}.clo,.opn,.pun{color:#440}.tag{color:#006}.atn{color:#404}.atv{color:#060}}pre.prettyprint{padding:2px;border:1px solid #888}ol.linenums{margin-top:0;margin-bottom:0}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}li.L1,li.L3,li.L5,li.L7,li.L9{background:#eee}"},{"_content":"!function(){/*\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\"undefined\"!==typeof window&&(window.PR_SHOULD_USE_CONTINUATION=!0);\n(function(){function T(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=w[c])?a:\"0\"<=c&&\"7\">=c?parseInt(e.substring(1),8):\"u\"===c||\"x\"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function f(e){if(32>e)return(16>e?\"\\\\x0\":\"\\\\x\")+e.toString(16);e=String.fromCharCode(e);return\"\\\\\"===e||\"-\"===e||\"]\"===e||\"^\"===e?\"\\\\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));\ne=[];var a=\"^\"===c[0],b=[\"[\"];a&&b.push(\"^\");for(var a=a?1:0,g=c.length;a<g;++a){var h=c[a];if(/\\\\[bdsw]/i.test(h))b.push(h);else{var h=d(h),k;a+2<g&&\"-\"===c[a+1]?(k=d(c[a+2]),a+=2):k=h;e.push([h,k]);65>k||122<h||(65>k||90<h||e.push([Math.max(65,h)|32,Math.min(k,90)|32]),97>k||122<h||e.push([Math.max(97,h)&-33,Math.min(k,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];g=[];for(a=0;a<e.length;++a)h=e[a],h[0]<=g[1]+1?g[1]=Math.max(g[1],h[1]):c.push(g=h);for(a=0;a<c.length;++a)h=\nc[a],b.push(f(h[0])),h[1]>h[0]&&(h[1]+1>h[0]&&b.push(\"-\"),b.push(f(h[1])));b.push(\"]\");return b.join(\"\")}function m(e){for(var a=e.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\"g\")),b=a.length,d=[],g=0,h=0;g<b;++g){var k=a[g];\"(\"===k?++h:\"\\\\\"===k.charAt(0)&&(k=+k.substring(1))&&(k<=h?d[k]=-1:a[g]=f(k))}for(g=1;g<d.length;++g)-1===d[g]&&(d[g]=++E);for(h=g=0;g<b;++g)k=a[g],\n\"(\"===k?(++h,d[h]||(a[g]=\"(?:\")):\"\\\\\"===k.charAt(0)&&(k=+k.substring(1))&&k<=h&&(a[g]=\"\\\\\"+d[k]);for(g=0;g<b;++g)\"^\"===a[g]&&\"^\"!==a[g+1]&&(a[g]=\"\");if(e.ignoreCase&&q)for(g=0;g<b;++g)k=a[g],e=k.charAt(0),2<=k.length&&\"[\"===e?a[g]=c(k):\"\\\\\"!==e&&(a[g]=k.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);return\"[\"+String.fromCharCode(a&-33,a|32)+\"]\"}));return a.join(\"\")}for(var E=0,q=!1,l=!1,n=0,b=a.length;n<b;++n){var p=a[n];if(p.ignoreCase)l=!0;else if(/[a-z]/i.test(p.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\n\"\"))){q=!0;l=!1;break}}for(var w={b:8,t:9,n:10,v:11,f:12,r:13},r=[],n=0,b=a.length;n<b;++n){p=a[n];if(p.global||p.multiline)throw Error(\"\"+p);r.push(\"(?:\"+m(p)+\")\")}return new RegExp(r.join(\"|\"),l?\"gi\":\"g\")}function U(a,d){function f(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=a.firstChild;b;b=b.nextSibling)f(b);b=a.nodeName.toLowerCase();if(\"br\"===b||\"li\"===b)m[l]=\"\\n\",q[l<<1]=E++,q[l++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\\r\\n?/g,\"\\n\"):b.replace(/[ \\t\\r\\n]+/g,\n\" \"),m[l]=b,q[l<<1]=E,E+=b.length,q[l++<<1|1]=a)}var c=/(?:^|\\s)nocode(?:\\s|$)/,m=[],E=0,q=[],l=0;f(a);return{a:m.join(\"\").replace(/\\n$/,\"\"),c:q}}function J(a,d,f,c,m){f&&(a={h:a,l:1,j:null,m:null,a:f,c:null,i:d,g:null},c(a),m.push.apply(m,a.g))}function V(a){for(var d=void 0,f=a.firstChild;f;f=f.nextSibling)var c=f.nodeType,d=1===c?d?a:f:3===c?W.test(f.nodeValue)?a:d:d;return d===a?void 0:d}function G(a,d){function f(a){for(var l=a.i,n=a.h,b=[l,\"pln\"],p=0,q=a.a.match(m)||[],r={},e=0,t=q.length;e<\nt;++e){var z=q[e],v=r[z],g=void 0,h;if(\"string\"===typeof v)h=!1;else{var k=c[z.charAt(0)];if(k)g=z.match(k[1]),v=k[0];else{for(h=0;h<E;++h)if(k=d[h],g=z.match(k[1])){v=k[0];break}g||(v=\"pln\")}!(h=5<=v.length&&\"lang-\"===v.substring(0,5))||g&&\"string\"===typeof g[1]||(h=!1,v=\"src\");h||(r[z]=v)}k=p;p+=z.length;if(h){h=g[1];var A=z.indexOf(h),C=A+h.length;g[2]&&(C=z.length-g[2].length,A=C-h.length);v=v.substring(5);J(n,l+k,z.substring(0,A),f,b);J(n,l+k+A,h,K(v,h),b);J(n,l+k+C,z.substring(C),f,b)}else b.push(l+\nk,v)}a.g=b}var c={},m;(function(){for(var f=a.concat(d),l=[],n={},b=0,p=f.length;b<p;++b){var w=f[b],r=w[3];if(r)for(var e=r.length;0<=--e;)c[r.charAt(e)]=w;w=w[1];r=\"\"+w;n.hasOwnProperty(r)||(l.push(w),n[r]=null)}l.push(/[\\0-\\uffff]/);m=T(l)})();var E=d.length;return f}function x(a){var d=[],f=[];a.tripleQuotedStrings?d.push([\"str\",/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,\nnull,\"'\\\"\"]):a.multiLineStrings?d.push([\"str\",/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):d.push([\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);a.verbatimStrings&&f.push([\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push([\"com\",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,\"#\"]):d.push([\"com\",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,\nnull,\"#\"]),f.push([\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,null])):d.push([\"com\",/^#[^\\r\\n]*/,null,\"#\"]));a.cStyleComments&&(f.push([\"com\",/^\\/\\/[^\\r\\n]*/,null]),f.push([\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null]));if(c=a.regexLiterals){var m=(c=1<c?\"\":\"\\n\\r\")?\".\":\"[\\\\S\\\\s]\";f.push([\"lang-regex\",RegExp(\"^(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*(\"+\n(\"/(?=[^/*\"+c+\"])(?:[^/\\\\x5B\\\\x5C\"+c+\"]|\\\\x5C\"+m+\"|\\\\x5B(?:[^\\\\x5C\\\\x5D\"+c+\"]|\\\\x5C\"+m+\")*(?:\\\\x5D|$))+/\")+\")\")])}(c=a.types)&&f.push([\"typ\",c]);c=(\"\"+a.keywords).replace(/^ | $/g,\"\");c.length&&f.push([\"kwd\",new RegExp(\"^(?:\"+c.replace(/[\\s,]+/g,\"|\")+\")\\\\b\"),null]);d.push([\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);c=\"^.[^\\\\s\\\\w.$@'\\\"`/\\\\\\\\]*\";a.regexLiterals&&(c+=\"(?!s*/)\");f.push([\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null],[\"pln\",/^[a-z_$][a-z_$@0-9]*/i,\nnull],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pln\",/^\\\\[\\s\\S]?/,null],[\"pun\",new RegExp(c),null]);return G(d,f)}function L(a,d,f){function c(a){var b=a.nodeType;if(1==b&&!t.test(a.className))if(\"br\"===a.nodeName.toLowerCase())m(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&f){var e=a.nodeValue,d=e.match(q);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+\nd[0].length))&&a.parentNode.insertBefore(l.createTextNode(e),a.nextSibling),m(a),b||a.parentNode.removeChild(a))}}function m(a){function c(a,b){var e=b?a.cloneNode(!1):a,k=a.parentNode;if(k){var k=c(k,1),d=a.nextSibling;k.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,k.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var t=/(?:^|\\s)nocode(?:\\s|$)/,q=/\\r\\n?|\\n/,l=a.ownerDocument,n=l.createElement(\"li\");a.firstChild;)n.appendChild(a.firstChild);\nfor(var b=[n],p=0;p<b.length;++p)c(b[p]);d===(d|0)&&b[0].setAttribute(\"value\",d);var w=l.createElement(\"ol\");w.className=\"linenums\";d=Math.max(0,d-1|0)||0;for(var p=0,r=b.length;p<r;++p)n=b[p],n.className=\"L\"+(p+d)%10,n.firstChild||n.appendChild(l.createTextNode(\"\\u00a0\")),w.appendChild(n);a.appendChild(w)}function t(a,d){for(var f=d.length;0<=--f;){var c=d[f];I.hasOwnProperty(c)?D.console&&console.warn(\"cannot override language handler %s\",c):I[c]=a}}function K(a,d){a&&I.hasOwnProperty(a)||(a=/^\\s*</.test(d)?\n\"default-markup\":\"default-code\");return I[a]}function M(a){var d=a.j;try{var f=U(a.h,a.l),c=f.a;a.a=c;a.c=f.c;a.i=0;K(d,c)(a);var m=/\\bMSIE\\s(\\d+)/.exec(navigator.userAgent),m=m&&8>=+m[1],d=/\\n/g,t=a.a,q=t.length,f=0,l=a.c,n=l.length,c=0,b=a.g,p=b.length,w=0;b[p]=q;var r,e;for(e=r=0;e<p;)b[e]!==b[e+2]?(b[r++]=b[e++],b[r++]=b[e++]):e+=2;p=r;for(e=r=0;e<p;){for(var x=b[e],z=b[e+1],v=e+2;v+2<=p&&b[v+1]===z;)v+=2;b[r++]=x;b[r++]=z;e=v}b.length=r;var g=a.h;a=\"\";g&&(a=g.style.display,g.style.display=\"none\");\ntry{for(;c<n;){var h=l[c+2]||q,k=b[w+2]||q,v=Math.min(h,k),A=l[c+1],C;if(1!==A.nodeType&&(C=t.substring(f,v))){m&&(C=C.replace(d,\"\\r\"));A.nodeValue=C;var N=A.ownerDocument,u=N.createElement(\"span\");u.className=b[w+1];var B=A.parentNode;B.replaceChild(u,A);u.appendChild(A);f<h&&(l[c+1]=A=N.createTextNode(t.substring(v,h)),B.insertBefore(A,u.nextSibling))}f=v;f>=h&&(c+=2);f>=k&&(w+=2)}}finally{g&&(g.style.display=a)}}catch(y){D.console&&console.log(y&&y.stack||y)}}var D=\"undefined\"!==typeof window?\nwindow:{},B=[\"break,continue,do,else,for,if,return,while\"],F=[[B,\"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"],\"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof\"],H=[F,\"alignas,alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where\"],\nO=[F,\"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient\"],P=[F,\"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,internal,into,is,join,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,value,var,virtual,where,yield\"],\nF=[F,\"abstract,async,await,constructor,debugger,enum,eval,export,from,function,get,import,implements,instanceof,interface,let,null,of,set,undefined,var,with,yield,Infinity,NaN\"],Q=[B,\"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None\"],R=[B,\"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END\"],\nB=[B,\"case,done,elif,esac,eval,fi,function,in,local,set,then,until\"],S=/^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/,W=/\\S/,X=x({keywords:[H,P,O,F,\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",Q,R,B],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),\nI={};t(X,[\"default-code\"]);t(G([],[[\"pln\",/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[\"com\",/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[\"pun\",/^(?:<[%?]|[%?]>)/],[\"lang-\",/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),\"default-markup htm html mxml xhtml xml xsl\".split(\" \"));t(G([[\"pln\",/^[\\s]+/,\nnull,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],[\"pun\",/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);\nt(G([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);t(x({keywords:H,hashComments:!0,cStyleComments:!0,types:S}),\"c cc cpp cxx cyc m\".split(\" \"));t(x({keywords:\"null,true,false\"}),[\"json\"]);t(x({keywords:P,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:S}),[\"cs\"]);t(x({keywords:O,cStyleComments:!0}),[\"java\"]);t(x({keywords:B,hashComments:!0,multiLineStrings:!0}),[\"bash\",\"bsh\",\"csh\",\"sh\"]);t(x({keywords:Q,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),[\"cv\",\"py\",\"python\"]);t(x({keywords:\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",\nhashComments:!0,multiLineStrings:!0,regexLiterals:2}),[\"perl\",\"pl\",\"pm\"]);t(x({keywords:R,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),[\"rb\",\"ruby\"]);t(x({keywords:F,cStyleComments:!0,regexLiterals:!0}),[\"javascript\",\"js\",\"ts\",\"typescript\"]);t(x({keywords:\"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes\",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,\nregexLiterals:!0}),[\"coffee\"]);t(G([],[[\"str\",/^[\\s\\S]+/]]),[\"regex\"]);var Y=D.PR={createSimpleLexer:G,registerLangHandler:t,sourceDecorator:x,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:\"com\",PR_DECLARATION:\"dec\",PR_KEYWORD:\"kwd\",PR_LITERAL:\"lit\",PR_NOCODE:\"nocode\",PR_PLAIN:\"pln\",PR_PUNCTUATION:\"pun\",PR_SOURCE:\"src\",PR_STRING:\"str\",PR_TAG:\"tag\",PR_TYPE:\"typ\",prettyPrintOne:D.prettyPrintOne=function(a,d,f){f=f||!1;d=d||null;var c=document.createElement(\"div\");c.innerHTML=\"<pre>\"+a+\"</pre>\";\nc=c.firstChild;f&&L(c,f,!0);M({j:d,m:f,h:c,l:1,a:null,i:null,c:null,g:null});return c.innerHTML},prettyPrint:D.prettyPrint=function(a,d){function f(){for(var c=D.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;p<x.length&&b.now()<c;p++){for(var d=x[p],l=g,n=d;n=n.previousSibling;){var m=n.nodeType,u=(7===m||8===m)&&n.nodeValue;if(u?!/^\\??prettify\\b/.test(u):3!==m||/\\S/.test(n.nodeValue))break;if(u){l={};u.replace(/\\b(\\w+)=([\\w:.%+-]+)/g,function(a,b,c){l[b]=c});break}}n=d.className;if((l!==g||r.test(n))&&\n!e.test(n)){m=!1;for(u=d.parentNode;u;u=u.parentNode)if(v.test(u.tagName)&&u.className&&r.test(u.className)){m=!0;break}if(!m){d.className+=\" prettyprinted\";m=l.lang;if(!m){var m=n.match(w),q;!m&&(q=V(d))&&z.test(q.tagName)&&(m=q.className.match(w));m&&(m=m[1])}if(B.test(d.tagName))u=1;else var u=d.currentStyle,y=t.defaultView,u=(u=u?u.whiteSpace:y&&y.getComputedStyle?y.getComputedStyle(d,null).getPropertyValue(\"white-space\"):0)&&\"pre\"===u.substring(0,3);y=l.linenums;(y=\"true\"===y||+y)||(y=(y=n.match(/\\blinenums\\b(?::(\\d+))?/))?\ny[1]&&y[1].length?+y[1]:!0:!1);y&&L(d,y,u);M({j:m,h:d,m:y,l:u,a:null,i:null,c:null,g:null})}}}p<x.length?D.setTimeout(f,250):\"function\"===typeof a&&a()}for(var c=d||document.body,t=c.ownerDocument||document,c=[c.getElementsByTagName(\"pre\"),c.getElementsByTagName(\"code\"),c.getElementsByTagName(\"xmp\")],x=[],q=0;q<c.length;++q)for(var l=0,n=c[q].length;l<n;++l)x.push(c[q][l]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var p=0,w=/\\blang(?:uage)?-([\\w.]+)(?!\\S)/,r=/\\bprettyprint\\b/,\ne=/\\bprettyprinted\\b/,B=/pre|xmp/i,z=/^code$/i,v=/^(?:pre|code|xmp)$/i,g={};f()}},H=D.define;\"function\"===typeof H&&H.amd&&H(\"google-code-prettify\",[],function(){return Y})})();}()\n","source":"plugins/prettify/prettify.js","raw":"!function(){/*\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\"undefined\"!==typeof window&&(window.PR_SHOULD_USE_CONTINUATION=!0);\n(function(){function T(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=w[c])?a:\"0\"<=c&&\"7\">=c?parseInt(e.substring(1),8):\"u\"===c||\"x\"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function f(e){if(32>e)return(16>e?\"\\\\x0\":\"\\\\x\")+e.toString(16);e=String.fromCharCode(e);return\"\\\\\"===e||\"-\"===e||\"]\"===e||\"^\"===e?\"\\\\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));\ne=[];var a=\"^\"===c[0],b=[\"[\"];a&&b.push(\"^\");for(var a=a?1:0,g=c.length;a<g;++a){var h=c[a];if(/\\\\[bdsw]/i.test(h))b.push(h);else{var h=d(h),k;a+2<g&&\"-\"===c[a+1]?(k=d(c[a+2]),a+=2):k=h;e.push([h,k]);65>k||122<h||(65>k||90<h||e.push([Math.max(65,h)|32,Math.min(k,90)|32]),97>k||122<h||e.push([Math.max(97,h)&-33,Math.min(k,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];g=[];for(a=0;a<e.length;++a)h=e[a],h[0]<=g[1]+1?g[1]=Math.max(g[1],h[1]):c.push(g=h);for(a=0;a<c.length;++a)h=\nc[a],b.push(f(h[0])),h[1]>h[0]&&(h[1]+1>h[0]&&b.push(\"-\"),b.push(f(h[1])));b.push(\"]\");return b.join(\"\")}function m(e){for(var a=e.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\"g\")),b=a.length,d=[],g=0,h=0;g<b;++g){var k=a[g];\"(\"===k?++h:\"\\\\\"===k.charAt(0)&&(k=+k.substring(1))&&(k<=h?d[k]=-1:a[g]=f(k))}for(g=1;g<d.length;++g)-1===d[g]&&(d[g]=++E);for(h=g=0;g<b;++g)k=a[g],\n\"(\"===k?(++h,d[h]||(a[g]=\"(?:\")):\"\\\\\"===k.charAt(0)&&(k=+k.substring(1))&&k<=h&&(a[g]=\"\\\\\"+d[k]);for(g=0;g<b;++g)\"^\"===a[g]&&\"^\"!==a[g+1]&&(a[g]=\"\");if(e.ignoreCase&&q)for(g=0;g<b;++g)k=a[g],e=k.charAt(0),2<=k.length&&\"[\"===e?a[g]=c(k):\"\\\\\"!==e&&(a[g]=k.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);return\"[\"+String.fromCharCode(a&-33,a|32)+\"]\"}));return a.join(\"\")}for(var E=0,q=!1,l=!1,n=0,b=a.length;n<b;++n){var p=a[n];if(p.ignoreCase)l=!0;else if(/[a-z]/i.test(p.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\n\"\"))){q=!0;l=!1;break}}for(var w={b:8,t:9,n:10,v:11,f:12,r:13},r=[],n=0,b=a.length;n<b;++n){p=a[n];if(p.global||p.multiline)throw Error(\"\"+p);r.push(\"(?:\"+m(p)+\")\")}return new RegExp(r.join(\"|\"),l?\"gi\":\"g\")}function U(a,d){function f(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=a.firstChild;b;b=b.nextSibling)f(b);b=a.nodeName.toLowerCase();if(\"br\"===b||\"li\"===b)m[l]=\"\\n\",q[l<<1]=E++,q[l++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\\r\\n?/g,\"\\n\"):b.replace(/[ \\t\\r\\n]+/g,\n\" \"),m[l]=b,q[l<<1]=E,E+=b.length,q[l++<<1|1]=a)}var c=/(?:^|\\s)nocode(?:\\s|$)/,m=[],E=0,q=[],l=0;f(a);return{a:m.join(\"\").replace(/\\n$/,\"\"),c:q}}function J(a,d,f,c,m){f&&(a={h:a,l:1,j:null,m:null,a:f,c:null,i:d,g:null},c(a),m.push.apply(m,a.g))}function V(a){for(var d=void 0,f=a.firstChild;f;f=f.nextSibling)var c=f.nodeType,d=1===c?d?a:f:3===c?W.test(f.nodeValue)?a:d:d;return d===a?void 0:d}function G(a,d){function f(a){for(var l=a.i,n=a.h,b=[l,\"pln\"],p=0,q=a.a.match(m)||[],r={},e=0,t=q.length;e<\nt;++e){var z=q[e],v=r[z],g=void 0,h;if(\"string\"===typeof v)h=!1;else{var k=c[z.charAt(0)];if(k)g=z.match(k[1]),v=k[0];else{for(h=0;h<E;++h)if(k=d[h],g=z.match(k[1])){v=k[0];break}g||(v=\"pln\")}!(h=5<=v.length&&\"lang-\"===v.substring(0,5))||g&&\"string\"===typeof g[1]||(h=!1,v=\"src\");h||(r[z]=v)}k=p;p+=z.length;if(h){h=g[1];var A=z.indexOf(h),C=A+h.length;g[2]&&(C=z.length-g[2].length,A=C-h.length);v=v.substring(5);J(n,l+k,z.substring(0,A),f,b);J(n,l+k+A,h,K(v,h),b);J(n,l+k+C,z.substring(C),f,b)}else b.push(l+\nk,v)}a.g=b}var c={},m;(function(){for(var f=a.concat(d),l=[],n={},b=0,p=f.length;b<p;++b){var w=f[b],r=w[3];if(r)for(var e=r.length;0<=--e;)c[r.charAt(e)]=w;w=w[1];r=\"\"+w;n.hasOwnProperty(r)||(l.push(w),n[r]=null)}l.push(/[\\0-\\uffff]/);m=T(l)})();var E=d.length;return f}function x(a){var d=[],f=[];a.tripleQuotedStrings?d.push([\"str\",/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,\nnull,\"'\\\"\"]):a.multiLineStrings?d.push([\"str\",/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):d.push([\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);a.verbatimStrings&&f.push([\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push([\"com\",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,\"#\"]):d.push([\"com\",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,\nnull,\"#\"]),f.push([\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,null])):d.push([\"com\",/^#[^\\r\\n]*/,null,\"#\"]));a.cStyleComments&&(f.push([\"com\",/^\\/\\/[^\\r\\n]*/,null]),f.push([\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null]));if(c=a.regexLiterals){var m=(c=1<c?\"\":\"\\n\\r\")?\".\":\"[\\\\S\\\\s]\";f.push([\"lang-regex\",RegExp(\"^(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*(\"+\n(\"/(?=[^/*\"+c+\"])(?:[^/\\\\x5B\\\\x5C\"+c+\"]|\\\\x5C\"+m+\"|\\\\x5B(?:[^\\\\x5C\\\\x5D\"+c+\"]|\\\\x5C\"+m+\")*(?:\\\\x5D|$))+/\")+\")\")])}(c=a.types)&&f.push([\"typ\",c]);c=(\"\"+a.keywords).replace(/^ | $/g,\"\");c.length&&f.push([\"kwd\",new RegExp(\"^(?:\"+c.replace(/[\\s,]+/g,\"|\")+\")\\\\b\"),null]);d.push([\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);c=\"^.[^\\\\s\\\\w.$@'\\\"`/\\\\\\\\]*\";a.regexLiterals&&(c+=\"(?!s*/)\");f.push([\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null],[\"pln\",/^[a-z_$][a-z_$@0-9]*/i,\nnull],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pln\",/^\\\\[\\s\\S]?/,null],[\"pun\",new RegExp(c),null]);return G(d,f)}function L(a,d,f){function c(a){var b=a.nodeType;if(1==b&&!t.test(a.className))if(\"br\"===a.nodeName.toLowerCase())m(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&f){var e=a.nodeValue,d=e.match(q);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+\nd[0].length))&&a.parentNode.insertBefore(l.createTextNode(e),a.nextSibling),m(a),b||a.parentNode.removeChild(a))}}function m(a){function c(a,b){var e=b?a.cloneNode(!1):a,k=a.parentNode;if(k){var k=c(k,1),d=a.nextSibling;k.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,k.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var t=/(?:^|\\s)nocode(?:\\s|$)/,q=/\\r\\n?|\\n/,l=a.ownerDocument,n=l.createElement(\"li\");a.firstChild;)n.appendChild(a.firstChild);\nfor(var b=[n],p=0;p<b.length;++p)c(b[p]);d===(d|0)&&b[0].setAttribute(\"value\",d);var w=l.createElement(\"ol\");w.className=\"linenums\";d=Math.max(0,d-1|0)||0;for(var p=0,r=b.length;p<r;++p)n=b[p],n.className=\"L\"+(p+d)%10,n.firstChild||n.appendChild(l.createTextNode(\"\\u00a0\")),w.appendChild(n);a.appendChild(w)}function t(a,d){for(var f=d.length;0<=--f;){var c=d[f];I.hasOwnProperty(c)?D.console&&console.warn(\"cannot override language handler %s\",c):I[c]=a}}function K(a,d){a&&I.hasOwnProperty(a)||(a=/^\\s*</.test(d)?\n\"default-markup\":\"default-code\");return I[a]}function M(a){var d=a.j;try{var f=U(a.h,a.l),c=f.a;a.a=c;a.c=f.c;a.i=0;K(d,c)(a);var m=/\\bMSIE\\s(\\d+)/.exec(navigator.userAgent),m=m&&8>=+m[1],d=/\\n/g,t=a.a,q=t.length,f=0,l=a.c,n=l.length,c=0,b=a.g,p=b.length,w=0;b[p]=q;var r,e;for(e=r=0;e<p;)b[e]!==b[e+2]?(b[r++]=b[e++],b[r++]=b[e++]):e+=2;p=r;for(e=r=0;e<p;){for(var x=b[e],z=b[e+1],v=e+2;v+2<=p&&b[v+1]===z;)v+=2;b[r++]=x;b[r++]=z;e=v}b.length=r;var g=a.h;a=\"\";g&&(a=g.style.display,g.style.display=\"none\");\ntry{for(;c<n;){var h=l[c+2]||q,k=b[w+2]||q,v=Math.min(h,k),A=l[c+1],C;if(1!==A.nodeType&&(C=t.substring(f,v))){m&&(C=C.replace(d,\"\\r\"));A.nodeValue=C;var N=A.ownerDocument,u=N.createElement(\"span\");u.className=b[w+1];var B=A.parentNode;B.replaceChild(u,A);u.appendChild(A);f<h&&(l[c+1]=A=N.createTextNode(t.substring(v,h)),B.insertBefore(A,u.nextSibling))}f=v;f>=h&&(c+=2);f>=k&&(w+=2)}}finally{g&&(g.style.display=a)}}catch(y){D.console&&console.log(y&&y.stack||y)}}var D=\"undefined\"!==typeof window?\nwindow:{},B=[\"break,continue,do,else,for,if,return,while\"],F=[[B,\"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"],\"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof\"],H=[F,\"alignas,alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where\"],\nO=[F,\"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient\"],P=[F,\"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,internal,into,is,join,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,value,var,virtual,where,yield\"],\nF=[F,\"abstract,async,await,constructor,debugger,enum,eval,export,from,function,get,import,implements,instanceof,interface,let,null,of,set,undefined,var,with,yield,Infinity,NaN\"],Q=[B,\"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None\"],R=[B,\"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END\"],\nB=[B,\"case,done,elif,esac,eval,fi,function,in,local,set,then,until\"],S=/^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/,W=/\\S/,X=x({keywords:[H,P,O,F,\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",Q,R,B],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),\nI={};t(X,[\"default-code\"]);t(G([],[[\"pln\",/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[\"com\",/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[\"pun\",/^(?:<[%?]|[%?]>)/],[\"lang-\",/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),\"default-markup htm html mxml xhtml xml xsl\".split(\" \"));t(G([[\"pln\",/^[\\s]+/,\nnull,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],[\"pun\",/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);\nt(G([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);t(x({keywords:H,hashComments:!0,cStyleComments:!0,types:S}),\"c cc cpp cxx cyc m\".split(\" \"));t(x({keywords:\"null,true,false\"}),[\"json\"]);t(x({keywords:P,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:S}),[\"cs\"]);t(x({keywords:O,cStyleComments:!0}),[\"java\"]);t(x({keywords:B,hashComments:!0,multiLineStrings:!0}),[\"bash\",\"bsh\",\"csh\",\"sh\"]);t(x({keywords:Q,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),[\"cv\",\"py\",\"python\"]);t(x({keywords:\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",\nhashComments:!0,multiLineStrings:!0,regexLiterals:2}),[\"perl\",\"pl\",\"pm\"]);t(x({keywords:R,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),[\"rb\",\"ruby\"]);t(x({keywords:F,cStyleComments:!0,regexLiterals:!0}),[\"javascript\",\"js\",\"ts\",\"typescript\"]);t(x({keywords:\"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes\",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,\nregexLiterals:!0}),[\"coffee\"]);t(G([],[[\"str\",/^[\\s\\S]+/]]),[\"regex\"]);var Y=D.PR={createSimpleLexer:G,registerLangHandler:t,sourceDecorator:x,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:\"com\",PR_DECLARATION:\"dec\",PR_KEYWORD:\"kwd\",PR_LITERAL:\"lit\",PR_NOCODE:\"nocode\",PR_PLAIN:\"pln\",PR_PUNCTUATION:\"pun\",PR_SOURCE:\"src\",PR_STRING:\"str\",PR_TAG:\"tag\",PR_TYPE:\"typ\",prettyPrintOne:D.prettyPrintOne=function(a,d,f){f=f||!1;d=d||null;var c=document.createElement(\"div\");c.innerHTML=\"<pre>\"+a+\"</pre>\";\nc=c.firstChild;f&&L(c,f,!0);M({j:d,m:f,h:c,l:1,a:null,i:null,c:null,g:null});return c.innerHTML},prettyPrint:D.prettyPrint=function(a,d){function f(){for(var c=D.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;p<x.length&&b.now()<c;p++){for(var d=x[p],l=g,n=d;n=n.previousSibling;){var m=n.nodeType,u=(7===m||8===m)&&n.nodeValue;if(u?!/^\\??prettify\\b/.test(u):3!==m||/\\S/.test(n.nodeValue))break;if(u){l={};u.replace(/\\b(\\w+)=([\\w:.%+-]+)/g,function(a,b,c){l[b]=c});break}}n=d.className;if((l!==g||r.test(n))&&\n!e.test(n)){m=!1;for(u=d.parentNode;u;u=u.parentNode)if(v.test(u.tagName)&&u.className&&r.test(u.className)){m=!0;break}if(!m){d.className+=\" prettyprinted\";m=l.lang;if(!m){var m=n.match(w),q;!m&&(q=V(d))&&z.test(q.tagName)&&(m=q.className.match(w));m&&(m=m[1])}if(B.test(d.tagName))u=1;else var u=d.currentStyle,y=t.defaultView,u=(u=u?u.whiteSpace:y&&y.getComputedStyle?y.getComputedStyle(d,null).getPropertyValue(\"white-space\"):0)&&\"pre\"===u.substring(0,3);y=l.linenums;(y=\"true\"===y||+y)||(y=(y=n.match(/\\blinenums\\b(?::(\\d+))?/))?\ny[1]&&y[1].length?+y[1]:!0:!1);y&&L(d,y,u);M({j:m,h:d,m:y,l:u,a:null,i:null,c:null,g:null})}}}p<x.length?D.setTimeout(f,250):\"function\"===typeof a&&a()}for(var c=d||document.body,t=c.ownerDocument||document,c=[c.getElementsByTagName(\"pre\"),c.getElementsByTagName(\"code\"),c.getElementsByTagName(\"xmp\")],x=[],q=0;q<c.length;++q)for(var l=0,n=c[q].length;l<n;++l)x.push(c[q][l]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var p=0,w=/\\blang(?:uage)?-([\\w.]+)(?!\\S)/,r=/\\bprettyprint\\b/,\ne=/\\bprettyprinted\\b/,B=/pre|xmp/i,z=/^code$/i,v=/^(?:pre|code|xmp)$/i,g={};f()}},H=D.define;\"function\"===typeof H&&H.amd&&H(\"google-code-prettify\",[],function(){return Y})})();}()\n","date":"2022-03-27T08:23:16.380Z","updated":"2018-12-17T07:43:56.000Z","path":"plugins/prettify/prettify.js","layout":"false","title":"","comments":1,"_id":"cl22h70vl007p5osse2nwf0hs","content":"!function(){/*\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\"undefined\"!==typeof window&&(window.PR_SHOULD_USE_CONTINUATION=!0);\n(function(){function T(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=w[c])?a:\"0\"<=c&&\"7\">=c?parseInt(e.substring(1),8):\"u\"===c||\"x\"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function f(e){if(32>e)return(16>e?\"\\\\x0\":\"\\\\x\")+e.toString(16);e=String.fromCharCode(e);return\"\\\\\"===e||\"-\"===e||\"]\"===e||\"^\"===e?\"\\\\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));\ne=[];var a=\"^\"===c[0],b=[\"[\"];a&&b.push(\"^\");for(var a=a?1:0,g=c.length;a<g;++a){var h=c[a];if(/\\\\[bdsw]/i.test(h))b.push(h);else{var h=d(h),k;a+2<g&&\"-\"===c[a+1]?(k=d(c[a+2]),a+=2):k=h;e.push([h,k]);65>k||122<h||(65>k||90<h||e.push([Math.max(65,h)|32,Math.min(k,90)|32]),97>k||122<h||e.push([Math.max(97,h)&-33,Math.min(k,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];g=[];for(a=0;a<e.length;++a)h=e[a],h[0]<=g[1]+1?g[1]=Math.max(g[1],h[1]):c.push(g=h);for(a=0;a<c.length;++a)h=\nc[a],b.push(f(h[0])),h[1]>h[0]&&(h[1]+1>h[0]&&b.push(\"-\"),b.push(f(h[1])));b.push(\"]\");return b.join(\"\")}function m(e){for(var a=e.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\"g\")),b=a.length,d=[],g=0,h=0;g<b;++g){var k=a[g];\"(\"===k?++h:\"\\\\\"===k.charAt(0)&&(k=+k.substring(1))&&(k<=h?d[k]=-1:a[g]=f(k))}for(g=1;g<d.length;++g)-1===d[g]&&(d[g]=++E);for(h=g=0;g<b;++g)k=a[g],\n\"(\"===k?(++h,d[h]||(a[g]=\"(?:\")):\"\\\\\"===k.charAt(0)&&(k=+k.substring(1))&&k<=h&&(a[g]=\"\\\\\"+d[k]);for(g=0;g<b;++g)\"^\"===a[g]&&\"^\"!==a[g+1]&&(a[g]=\"\");if(e.ignoreCase&&q)for(g=0;g<b;++g)k=a[g],e=k.charAt(0),2<=k.length&&\"[\"===e?a[g]=c(k):\"\\\\\"!==e&&(a[g]=k.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);return\"[\"+String.fromCharCode(a&-33,a|32)+\"]\"}));return a.join(\"\")}for(var E=0,q=!1,l=!1,n=0,b=a.length;n<b;++n){var p=a[n];if(p.ignoreCase)l=!0;else if(/[a-z]/i.test(p.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\n\"\"))){q=!0;l=!1;break}}for(var w={b:8,t:9,n:10,v:11,f:12,r:13},r=[],n=0,b=a.length;n<b;++n){p=a[n];if(p.global||p.multiline)throw Error(\"\"+p);r.push(\"(?:\"+m(p)+\")\")}return new RegExp(r.join(\"|\"),l?\"gi\":\"g\")}function U(a,d){function f(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=a.firstChild;b;b=b.nextSibling)f(b);b=a.nodeName.toLowerCase();if(\"br\"===b||\"li\"===b)m[l]=\"\\n\",q[l<<1]=E++,q[l++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\\r\\n?/g,\"\\n\"):b.replace(/[ \\t\\r\\n]+/g,\n\" \"),m[l]=b,q[l<<1]=E,E+=b.length,q[l++<<1|1]=a)}var c=/(?:^|\\s)nocode(?:\\s|$)/,m=[],E=0,q=[],l=0;f(a);return{a:m.join(\"\").replace(/\\n$/,\"\"),c:q}}function J(a,d,f,c,m){f&&(a={h:a,l:1,j:null,m:null,a:f,c:null,i:d,g:null},c(a),m.push.apply(m,a.g))}function V(a){for(var d=void 0,f=a.firstChild;f;f=f.nextSibling)var c=f.nodeType,d=1===c?d?a:f:3===c?W.test(f.nodeValue)?a:d:d;return d===a?void 0:d}function G(a,d){function f(a){for(var l=a.i,n=a.h,b=[l,\"pln\"],p=0,q=a.a.match(m)||[],r={},e=0,t=q.length;e<\nt;++e){var z=q[e],v=r[z],g=void 0,h;if(\"string\"===typeof v)h=!1;else{var k=c[z.charAt(0)];if(k)g=z.match(k[1]),v=k[0];else{for(h=0;h<E;++h)if(k=d[h],g=z.match(k[1])){v=k[0];break}g||(v=\"pln\")}!(h=5<=v.length&&\"lang-\"===v.substring(0,5))||g&&\"string\"===typeof g[1]||(h=!1,v=\"src\");h||(r[z]=v)}k=p;p+=z.length;if(h){h=g[1];var A=z.indexOf(h),C=A+h.length;g[2]&&(C=z.length-g[2].length,A=C-h.length);v=v.substring(5);J(n,l+k,z.substring(0,A),f,b);J(n,l+k+A,h,K(v,h),b);J(n,l+k+C,z.substring(C),f,b)}else b.push(l+\nk,v)}a.g=b}var c={},m;(function(){for(var f=a.concat(d),l=[],n={},b=0,p=f.length;b<p;++b){var w=f[b],r=w[3];if(r)for(var e=r.length;0<=--e;)c[r.charAt(e)]=w;w=w[1];r=\"\"+w;n.hasOwnProperty(r)||(l.push(w),n[r]=null)}l.push(/[\\0-\\uffff]/);m=T(l)})();var E=d.length;return f}function x(a){var d=[],f=[];a.tripleQuotedStrings?d.push([\"str\",/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,\nnull,\"'\\\"\"]):a.multiLineStrings?d.push([\"str\",/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):d.push([\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);a.verbatimStrings&&f.push([\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push([\"com\",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,\"#\"]):d.push([\"com\",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,\nnull,\"#\"]),f.push([\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,null])):d.push([\"com\",/^#[^\\r\\n]*/,null,\"#\"]));a.cStyleComments&&(f.push([\"com\",/^\\/\\/[^\\r\\n]*/,null]),f.push([\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null]));if(c=a.regexLiterals){var m=(c=1<c?\"\":\"\\n\\r\")?\".\":\"[\\\\S\\\\s]\";f.push([\"lang-regex\",RegExp(\"^(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*(\"+\n(\"/(?=[^/*\"+c+\"])(?:[^/\\\\x5B\\\\x5C\"+c+\"]|\\\\x5C\"+m+\"|\\\\x5B(?:[^\\\\x5C\\\\x5D\"+c+\"]|\\\\x5C\"+m+\")*(?:\\\\x5D|$))+/\")+\")\")])}(c=a.types)&&f.push([\"typ\",c]);c=(\"\"+a.keywords).replace(/^ | $/g,\"\");c.length&&f.push([\"kwd\",new RegExp(\"^(?:\"+c.replace(/[\\s,]+/g,\"|\")+\")\\\\b\"),null]);d.push([\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);c=\"^.[^\\\\s\\\\w.$@'\\\"`/\\\\\\\\]*\";a.regexLiterals&&(c+=\"(?!s*/)\");f.push([\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null],[\"pln\",/^[a-z_$][a-z_$@0-9]*/i,\nnull],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pln\",/^\\\\[\\s\\S]?/,null],[\"pun\",new RegExp(c),null]);return G(d,f)}function L(a,d,f){function c(a){var b=a.nodeType;if(1==b&&!t.test(a.className))if(\"br\"===a.nodeName.toLowerCase())m(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&f){var e=a.nodeValue,d=e.match(q);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+\nd[0].length))&&a.parentNode.insertBefore(l.createTextNode(e),a.nextSibling),m(a),b||a.parentNode.removeChild(a))}}function m(a){function c(a,b){var e=b?a.cloneNode(!1):a,k=a.parentNode;if(k){var k=c(k,1),d=a.nextSibling;k.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,k.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var t=/(?:^|\\s)nocode(?:\\s|$)/,q=/\\r\\n?|\\n/,l=a.ownerDocument,n=l.createElement(\"li\");a.firstChild;)n.appendChild(a.firstChild);\nfor(var b=[n],p=0;p<b.length;++p)c(b[p]);d===(d|0)&&b[0].setAttribute(\"value\",d);var w=l.createElement(\"ol\");w.className=\"linenums\";d=Math.max(0,d-1|0)||0;for(var p=0,r=b.length;p<r;++p)n=b[p],n.className=\"L\"+(p+d)%10,n.firstChild||n.appendChild(l.createTextNode(\"\\u00a0\")),w.appendChild(n);a.appendChild(w)}function t(a,d){for(var f=d.length;0<=--f;){var c=d[f];I.hasOwnProperty(c)?D.console&&console.warn(\"cannot override language handler %s\",c):I[c]=a}}function K(a,d){a&&I.hasOwnProperty(a)||(a=/^\\s*</.test(d)?\n\"default-markup\":\"default-code\");return I[a]}function M(a){var d=a.j;try{var f=U(a.h,a.l),c=f.a;a.a=c;a.c=f.c;a.i=0;K(d,c)(a);var m=/\\bMSIE\\s(\\d+)/.exec(navigator.userAgent),m=m&&8>=+m[1],d=/\\n/g,t=a.a,q=t.length,f=0,l=a.c,n=l.length,c=0,b=a.g,p=b.length,w=0;b[p]=q;var r,e;for(e=r=0;e<p;)b[e]!==b[e+2]?(b[r++]=b[e++],b[r++]=b[e++]):e+=2;p=r;for(e=r=0;e<p;){for(var x=b[e],z=b[e+1],v=e+2;v+2<=p&&b[v+1]===z;)v+=2;b[r++]=x;b[r++]=z;e=v}b.length=r;var g=a.h;a=\"\";g&&(a=g.style.display,g.style.display=\"none\");\ntry{for(;c<n;){var h=l[c+2]||q,k=b[w+2]||q,v=Math.min(h,k),A=l[c+1],C;if(1!==A.nodeType&&(C=t.substring(f,v))){m&&(C=C.replace(d,\"\\r\"));A.nodeValue=C;var N=A.ownerDocument,u=N.createElement(\"span\");u.className=b[w+1];var B=A.parentNode;B.replaceChild(u,A);u.appendChild(A);f<h&&(l[c+1]=A=N.createTextNode(t.substring(v,h)),B.insertBefore(A,u.nextSibling))}f=v;f>=h&&(c+=2);f>=k&&(w+=2)}}finally{g&&(g.style.display=a)}}catch(y){D.console&&console.log(y&&y.stack||y)}}var D=\"undefined\"!==typeof window?\nwindow:{},B=[\"break,continue,do,else,for,if,return,while\"],F=[[B,\"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"],\"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof\"],H=[F,\"alignas,alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where\"],\nO=[F,\"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient\"],P=[F,\"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,internal,into,is,join,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,value,var,virtual,where,yield\"],\nF=[F,\"abstract,async,await,constructor,debugger,enum,eval,export,from,function,get,import,implements,instanceof,interface,let,null,of,set,undefined,var,with,yield,Infinity,NaN\"],Q=[B,\"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None\"],R=[B,\"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END\"],\nB=[B,\"case,done,elif,esac,eval,fi,function,in,local,set,then,until\"],S=/^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/,W=/\\S/,X=x({keywords:[H,P,O,F,\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",Q,R,B],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),\nI={};t(X,[\"default-code\"]);t(G([],[[\"pln\",/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[\"com\",/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[\"pun\",/^(?:<[%?]|[%?]>)/],[\"lang-\",/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),\"default-markup htm html mxml xhtml xml xsl\".split(\" \"));t(G([[\"pln\",/^[\\s]+/,\nnull,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],[\"pun\",/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);\nt(G([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);t(x({keywords:H,hashComments:!0,cStyleComments:!0,types:S}),\"c cc cpp cxx cyc m\".split(\" \"));t(x({keywords:\"null,true,false\"}),[\"json\"]);t(x({keywords:P,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:S}),[\"cs\"]);t(x({keywords:O,cStyleComments:!0}),[\"java\"]);t(x({keywords:B,hashComments:!0,multiLineStrings:!0}),[\"bash\",\"bsh\",\"csh\",\"sh\"]);t(x({keywords:Q,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),[\"cv\",\"py\",\"python\"]);t(x({keywords:\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",\nhashComments:!0,multiLineStrings:!0,regexLiterals:2}),[\"perl\",\"pl\",\"pm\"]);t(x({keywords:R,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),[\"rb\",\"ruby\"]);t(x({keywords:F,cStyleComments:!0,regexLiterals:!0}),[\"javascript\",\"js\",\"ts\",\"typescript\"]);t(x({keywords:\"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes\",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,\nregexLiterals:!0}),[\"coffee\"]);t(G([],[[\"str\",/^[\\s\\S]+/]]),[\"regex\"]);var Y=D.PR={createSimpleLexer:G,registerLangHandler:t,sourceDecorator:x,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:\"com\",PR_DECLARATION:\"dec\",PR_KEYWORD:\"kwd\",PR_LITERAL:\"lit\",PR_NOCODE:\"nocode\",PR_PLAIN:\"pln\",PR_PUNCTUATION:\"pun\",PR_SOURCE:\"src\",PR_STRING:\"str\",PR_TAG:\"tag\",PR_TYPE:\"typ\",prettyPrintOne:D.prettyPrintOne=function(a,d,f){f=f||!1;d=d||null;var c=document.createElement(\"div\");c.innerHTML=\"<pre>\"+a+\"</pre>\";\nc=c.firstChild;f&&L(c,f,!0);M({j:d,m:f,h:c,l:1,a:null,i:null,c:null,g:null});return c.innerHTML},prettyPrint:D.prettyPrint=function(a,d){function f(){for(var c=D.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;p<x.length&&b.now()<c;p++){for(var d=x[p],l=g,n=d;n=n.previousSibling;){var m=n.nodeType,u=(7===m||8===m)&&n.nodeValue;if(u?!/^\\??prettify\\b/.test(u):3!==m||/\\S/.test(n.nodeValue))break;if(u){l={};u.replace(/\\b(\\w+)=([\\w:.%+-]+)/g,function(a,b,c){l[b]=c});break}}n=d.className;if((l!==g||r.test(n))&&\n!e.test(n)){m=!1;for(u=d.parentNode;u;u=u.parentNode)if(v.test(u.tagName)&&u.className&&r.test(u.className)){m=!0;break}if(!m){d.className+=\" prettyprinted\";m=l.lang;if(!m){var m=n.match(w),q;!m&&(q=V(d))&&z.test(q.tagName)&&(m=q.className.match(w));m&&(m=m[1])}if(B.test(d.tagName))u=1;else var u=d.currentStyle,y=t.defaultView,u=(u=u?u.whiteSpace:y&&y.getComputedStyle?y.getComputedStyle(d,null).getPropertyValue(\"white-space\"):0)&&\"pre\"===u.substring(0,3);y=l.linenums;(y=\"true\"===y||+y)||(y=(y=n.match(/\\blinenums\\b(?::(\\d+))?/))?\ny[1]&&y[1].length?+y[1]:!0:!1);y&&L(d,y,u);M({j:m,h:d,m:y,l:u,a:null,i:null,c:null,g:null})}}}p<x.length?D.setTimeout(f,250):\"function\"===typeof a&&a()}for(var c=d||document.body,t=c.ownerDocument||document,c=[c.getElementsByTagName(\"pre\"),c.getElementsByTagName(\"code\"),c.getElementsByTagName(\"xmp\")],x=[],q=0;q<c.length;++q)for(var l=0,n=c[q].length;l<n;++l)x.push(c[q][l]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var p=0,w=/\\blang(?:uage)?-([\\w.]+)(?!\\S)/,r=/\\bprettyprint\\b/,\ne=/\\bprettyprinted\\b/,B=/pre|xmp/i,z=/^code$/i,v=/^(?:pre|code|xmp)$/i,g={};f()}},H=D.define;\"function\"===typeof H&&H.amd&&H(\"google-code-prettify\",[],function(){return Y})})();}()\n","site":{"data":{}},"excerpt":"","more":"!function(){/*\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\"undefined\"!==typeof window&&(window.PR_SHOULD_USE_CONTINUATION=!0);\n(function(){function T(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=w[c])?a:\"0\"<=c&&\"7\">=c?parseInt(e.substring(1),8):\"u\"===c||\"x\"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function f(e){if(32>e)return(16>e?\"\\\\x0\":\"\\\\x\")+e.toString(16);e=String.fromCharCode(e);return\"\\\\\"===e||\"-\"===e||\"]\"===e||\"^\"===e?\"\\\\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));\ne=[];var a=\"^\"===c[0],b=[\"[\"];a&&b.push(\"^\");for(var a=a?1:0,g=c.length;a<g;++a){var h=c[a];if(/\\\\[bdsw]/i.test(h))b.push(h);else{var h=d(h),k;a+2<g&&\"-\"===c[a+1]?(k=d(c[a+2]),a+=2):k=h;e.push([h,k]);65>k||122<h||(65>k||90<h||e.push([Math.max(65,h)|32,Math.min(k,90)|32]),97>k||122<h||e.push([Math.max(97,h)&-33,Math.min(k,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];g=[];for(a=0;a<e.length;++a)h=e[a],h[0]<=g[1]+1?g[1]=Math.max(g[1],h[1]):c.push(g=h);for(a=0;a<c.length;++a)h=\nc[a],b.push(f(h[0])),h[1]>h[0]&&(h[1]+1>h[0]&&b.push(\"-\"),b.push(f(h[1])));b.push(\"]\");return b.join(\"\")}function m(e){for(var a=e.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\"g\")),b=a.length,d=[],g=0,h=0;g<b;++g){var k=a[g];\"(\"===k?++h:\"\\\\\"===k.charAt(0)&&(k=+k.substring(1))&&(k<=h?d[k]=-1:a[g]=f(k))}for(g=1;g<d.length;++g)-1===d[g]&&(d[g]=++E);for(h=g=0;g<b;++g)k=a[g],\n\"(\"===k?(++h,d[h]||(a[g]=\"(?:\")):\"\\\\\"===k.charAt(0)&&(k=+k.substring(1))&&k<=h&&(a[g]=\"\\\\\"+d[k]);for(g=0;g<b;++g)\"^\"===a[g]&&\"^\"!==a[g+1]&&(a[g]=\"\");if(e.ignoreCase&&q)for(g=0;g<b;++g)k=a[g],e=k.charAt(0),2<=k.length&&\"[\"===e?a[g]=c(k):\"\\\\\"!==e&&(a[g]=k.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);return\"[\"+String.fromCharCode(a&-33,a|32)+\"]\"}));return a.join(\"\")}for(var E=0,q=!1,l=!1,n=0,b=a.length;n<b;++n){var p=a[n];if(p.ignoreCase)l=!0;else if(/[a-z]/i.test(p.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\n\"\"))){q=!0;l=!1;break}}for(var w={b:8,t:9,n:10,v:11,f:12,r:13},r=[],n=0,b=a.length;n<b;++n){p=a[n];if(p.global||p.multiline)throw Error(\"\"+p);r.push(\"(?:\"+m(p)+\")\")}return new RegExp(r.join(\"|\"),l?\"gi\":\"g\")}function U(a,d){function f(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=a.firstChild;b;b=b.nextSibling)f(b);b=a.nodeName.toLowerCase();if(\"br\"===b||\"li\"===b)m[l]=\"\\n\",q[l<<1]=E++,q[l++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\\r\\n?/g,\"\\n\"):b.replace(/[ \\t\\r\\n]+/g,\n\" \"),m[l]=b,q[l<<1]=E,E+=b.length,q[l++<<1|1]=a)}var c=/(?:^|\\s)nocode(?:\\s|$)/,m=[],E=0,q=[],l=0;f(a);return{a:m.join(\"\").replace(/\\n$/,\"\"),c:q}}function J(a,d,f,c,m){f&&(a={h:a,l:1,j:null,m:null,a:f,c:null,i:d,g:null},c(a),m.push.apply(m,a.g))}function V(a){for(var d=void 0,f=a.firstChild;f;f=f.nextSibling)var c=f.nodeType,d=1===c?d?a:f:3===c?W.test(f.nodeValue)?a:d:d;return d===a?void 0:d}function G(a,d){function f(a){for(var l=a.i,n=a.h,b=[l,\"pln\"],p=0,q=a.a.match(m)||[],r={},e=0,t=q.length;e<\nt;++e){var z=q[e],v=r[z],g=void 0,h;if(\"string\"===typeof v)h=!1;else{var k=c[z.charAt(0)];if(k)g=z.match(k[1]),v=k[0];else{for(h=0;h<E;++h)if(k=d[h],g=z.match(k[1])){v=k[0];break}g||(v=\"pln\")}!(h=5<=v.length&&\"lang-\"===v.substring(0,5))||g&&\"string\"===typeof g[1]||(h=!1,v=\"src\");h||(r[z]=v)}k=p;p+=z.length;if(h){h=g[1];var A=z.indexOf(h),C=A+h.length;g[2]&&(C=z.length-g[2].length,A=C-h.length);v=v.substring(5);J(n,l+k,z.substring(0,A),f,b);J(n,l+k+A,h,K(v,h),b);J(n,l+k+C,z.substring(C),f,b)}else b.push(l+\nk,v)}a.g=b}var c={},m;(function(){for(var f=a.concat(d),l=[],n={},b=0,p=f.length;b<p;++b){var w=f[b],r=w[3];if(r)for(var e=r.length;0<=--e;)c[r.charAt(e)]=w;w=w[1];r=\"\"+w;n.hasOwnProperty(r)||(l.push(w),n[r]=null)}l.push(/[\\0-\\uffff]/);m=T(l)})();var E=d.length;return f}function x(a){var d=[],f=[];a.tripleQuotedStrings?d.push([\"str\",/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,\nnull,\"'\\\"\"]):a.multiLineStrings?d.push([\"str\",/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):d.push([\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);a.verbatimStrings&&f.push([\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push([\"com\",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,\"#\"]):d.push([\"com\",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,\nnull,\"#\"]),f.push([\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,null])):d.push([\"com\",/^#[^\\r\\n]*/,null,\"#\"]));a.cStyleComments&&(f.push([\"com\",/^\\/\\/[^\\r\\n]*/,null]),f.push([\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null]));if(c=a.regexLiterals){var m=(c=1<c?\"\":\"\\n\\r\")?\".\":\"[\\\\S\\\\s]\";f.push([\"lang-regex\",RegExp(\"^(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*(\"+\n(\"/(?=[^/*\"+c+\"])(?:[^/\\\\x5B\\\\x5C\"+c+\"]|\\\\x5C\"+m+\"|\\\\x5B(?:[^\\\\x5C\\\\x5D\"+c+\"]|\\\\x5C\"+m+\")*(?:\\\\x5D|$))+/\")+\")\")])}(c=a.types)&&f.push([\"typ\",c]);c=(\"\"+a.keywords).replace(/^ | $/g,\"\");c.length&&f.push([\"kwd\",new RegExp(\"^(?:\"+c.replace(/[\\s,]+/g,\"|\")+\")\\\\b\"),null]);d.push([\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);c=\"^.[^\\\\s\\\\w.$@'\\\"`/\\\\\\\\]*\";a.regexLiterals&&(c+=\"(?!s*/)\");f.push([\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null],[\"pln\",/^[a-z_$][a-z_$@0-9]*/i,\nnull],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pln\",/^\\\\[\\s\\S]?/,null],[\"pun\",new RegExp(c),null]);return G(d,f)}function L(a,d,f){function c(a){var b=a.nodeType;if(1==b&&!t.test(a.className))if(\"br\"===a.nodeName.toLowerCase())m(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&f){var e=a.nodeValue,d=e.match(q);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+\nd[0].length))&&a.parentNode.insertBefore(l.createTextNode(e),a.nextSibling),m(a),b||a.parentNode.removeChild(a))}}function m(a){function c(a,b){var e=b?a.cloneNode(!1):a,k=a.parentNode;if(k){var k=c(k,1),d=a.nextSibling;k.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,k.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var t=/(?:^|\\s)nocode(?:\\s|$)/,q=/\\r\\n?|\\n/,l=a.ownerDocument,n=l.createElement(\"li\");a.firstChild;)n.appendChild(a.firstChild);\nfor(var b=[n],p=0;p<b.length;++p)c(b[p]);d===(d|0)&&b[0].setAttribute(\"value\",d);var w=l.createElement(\"ol\");w.className=\"linenums\";d=Math.max(0,d-1|0)||0;for(var p=0,r=b.length;p<r;++p)n=b[p],n.className=\"L\"+(p+d)%10,n.firstChild||n.appendChild(l.createTextNode(\"\\u00a0\")),w.appendChild(n);a.appendChild(w)}function t(a,d){for(var f=d.length;0<=--f;){var c=d[f];I.hasOwnProperty(c)?D.console&&console.warn(\"cannot override language handler %s\",c):I[c]=a}}function K(a,d){a&&I.hasOwnProperty(a)||(a=/^\\s*</.test(d)?\n\"default-markup\":\"default-code\");return I[a]}function M(a){var d=a.j;try{var f=U(a.h,a.l),c=f.a;a.a=c;a.c=f.c;a.i=0;K(d,c)(a);var m=/\\bMSIE\\s(\\d+)/.exec(navigator.userAgent),m=m&&8>=+m[1],d=/\\n/g,t=a.a,q=t.length,f=0,l=a.c,n=l.length,c=0,b=a.g,p=b.length,w=0;b[p]=q;var r,e;for(e=r=0;e<p;)b[e]!==b[e+2]?(b[r++]=b[e++],b[r++]=b[e++]):e+=2;p=r;for(e=r=0;e<p;){for(var x=b[e],z=b[e+1],v=e+2;v+2<=p&&b[v+1]===z;)v+=2;b[r++]=x;b[r++]=z;e=v}b.length=r;var g=a.h;a=\"\";g&&(a=g.style.display,g.style.display=\"none\");\ntry{for(;c<n;){var h=l[c+2]||q,k=b[w+2]||q,v=Math.min(h,k),A=l[c+1],C;if(1!==A.nodeType&&(C=t.substring(f,v))){m&&(C=C.replace(d,\"\\r\"));A.nodeValue=C;var N=A.ownerDocument,u=N.createElement(\"span\");u.className=b[w+1];var B=A.parentNode;B.replaceChild(u,A);u.appendChild(A);f<h&&(l[c+1]=A=N.createTextNode(t.substring(v,h)),B.insertBefore(A,u.nextSibling))}f=v;f>=h&&(c+=2);f>=k&&(w+=2)}}finally{g&&(g.style.display=a)}}catch(y){D.console&&console.log(y&&y.stack||y)}}var D=\"undefined\"!==typeof window?\nwindow:{},B=[\"break,continue,do,else,for,if,return,while\"],F=[[B,\"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"],\"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof\"],H=[F,\"alignas,alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where\"],\nO=[F,\"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient\"],P=[F,\"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,internal,into,is,join,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,value,var,virtual,where,yield\"],\nF=[F,\"abstract,async,await,constructor,debugger,enum,eval,export,from,function,get,import,implements,instanceof,interface,let,null,of,set,undefined,var,with,yield,Infinity,NaN\"],Q=[B,\"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None\"],R=[B,\"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END\"],\nB=[B,\"case,done,elif,esac,eval,fi,function,in,local,set,then,until\"],S=/^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/,W=/\\S/,X=x({keywords:[H,P,O,F,\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",Q,R,B],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),\nI={};t(X,[\"default-code\"]);t(G([],[[\"pln\",/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[\"com\",/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[\"pun\",/^(?:<[%?]|[%?]>)/],[\"lang-\",/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),\"default-markup htm html mxml xhtml xml xsl\".split(\" \"));t(G([[\"pln\",/^[\\s]+/,\nnull,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],[\"pun\",/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);\nt(G([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);t(x({keywords:H,hashComments:!0,cStyleComments:!0,types:S}),\"c cc cpp cxx cyc m\".split(\" \"));t(x({keywords:\"null,true,false\"}),[\"json\"]);t(x({keywords:P,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:S}),[\"cs\"]);t(x({keywords:O,cStyleComments:!0}),[\"java\"]);t(x({keywords:B,hashComments:!0,multiLineStrings:!0}),[\"bash\",\"bsh\",\"csh\",\"sh\"]);t(x({keywords:Q,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),[\"cv\",\"py\",\"python\"]);t(x({keywords:\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",\nhashComments:!0,multiLineStrings:!0,regexLiterals:2}),[\"perl\",\"pl\",\"pm\"]);t(x({keywords:R,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),[\"rb\",\"ruby\"]);t(x({keywords:F,cStyleComments:!0,regexLiterals:!0}),[\"javascript\",\"js\",\"ts\",\"typescript\"]);t(x({keywords:\"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes\",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,\nregexLiterals:!0}),[\"coffee\"]);t(G([],[[\"str\",/^[\\s\\S]+/]]),[\"regex\"]);var Y=D.PR={createSimpleLexer:G,registerLangHandler:t,sourceDecorator:x,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:\"com\",PR_DECLARATION:\"dec\",PR_KEYWORD:\"kwd\",PR_LITERAL:\"lit\",PR_NOCODE:\"nocode\",PR_PLAIN:\"pln\",PR_PUNCTUATION:\"pun\",PR_SOURCE:\"src\",PR_STRING:\"str\",PR_TAG:\"tag\",PR_TYPE:\"typ\",prettyPrintOne:D.prettyPrintOne=function(a,d,f){f=f||!1;d=d||null;var c=document.createElement(\"div\");c.innerHTML=\"<pre>\"+a+\"</pre>\";\nc=c.firstChild;f&&L(c,f,!0);M({j:d,m:f,h:c,l:1,a:null,i:null,c:null,g:null});return c.innerHTML},prettyPrint:D.prettyPrint=function(a,d){function f(){for(var c=D.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;p<x.length&&b.now()<c;p++){for(var d=x[p],l=g,n=d;n=n.previousSibling;){var m=n.nodeType,u=(7===m||8===m)&&n.nodeValue;if(u?!/^\\??prettify\\b/.test(u):3!==m||/\\S/.test(n.nodeValue))break;if(u){l={};u.replace(/\\b(\\w+)=([\\w:.%+-]+)/g,function(a,b,c){l[b]=c});break}}n=d.className;if((l!==g||r.test(n))&&\n!e.test(n)){m=!1;for(u=d.parentNode;u;u=u.parentNode)if(v.test(u.tagName)&&u.className&&r.test(u.className)){m=!0;break}if(!m){d.className+=\" prettyprinted\";m=l.lang;if(!m){var m=n.match(w),q;!m&&(q=V(d))&&z.test(q.tagName)&&(m=q.className.match(w));m&&(m=m[1])}if(B.test(d.tagName))u=1;else var u=d.currentStyle,y=t.defaultView,u=(u=u?u.whiteSpace:y&&y.getComputedStyle?y.getComputedStyle(d,null).getPropertyValue(\"white-space\"):0)&&\"pre\"===u.substring(0,3);y=l.linenums;(y=\"true\"===y||+y)||(y=(y=n.match(/\\blinenums\\b(?::(\\d+))?/))?\ny[1]&&y[1].length?+y[1]:!0:!1);y&&L(d,y,u);M({j:m,h:d,m:y,l:u,a:null,i:null,c:null,g:null})}}}p<x.length?D.setTimeout(f,250):\"function\"===typeof a&&a()}for(var c=d||document.body,t=c.ownerDocument||document,c=[c.getElementsByTagName(\"pre\"),c.getElementsByTagName(\"code\"),c.getElementsByTagName(\"xmp\")],x=[],q=0;q<c.length;++q)for(var l=0,n=c[q].length;l<n;++l)x.push(c[q][l]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var p=0,w=/\\blang(?:uage)?-([\\w.]+)(?!\\S)/,r=/\\bprettyprint\\b/,\ne=/\\bprettyprinted\\b/,B=/pre|xmp/i,z=/^code$/i,v=/^(?:pre|code|xmp)$/i,g={};f()}},H=D.define;\"function\"===typeof H&&H.amd&&H(\"google-code-prettify\",[],function(){return Y})})();}()\n"},{"_content":"!function(){/*\n\n Copyright (C) 2013 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n(function(){function aa(g){function r(){try{L.doScroll(\"left\")}catch(ba){k.setTimeout(r,50);return}x(\"poll\")}function x(r){if(\"readystatechange\"!=r.type||\"complete\"==z.readyState)(\"load\"==r.type?k:z)[B](n+r.type,x,!1),!l&&(l=!0)&&g.call(k,r.type||r)}var X=z.addEventListener,l=!1,E=!0,v=X?\"addEventListener\":\"attachEvent\",B=X?\"removeEventListener\":\"detachEvent\",n=X?\"\":\"on\";if(\"complete\"==z.readyState)g.call(k,\"lazy\");else{if(z.createEventObject&&L.doScroll){try{E=!k.frameElement}catch(ba){}E&&r()}z[v](n+\n\"DOMContentLoaded\",x,!1);z[v](n+\"readystatechange\",x,!1);k[v](n+\"load\",x,!1)}}function T(){U&&aa(function(){var g=M.length;ca(g?function(){for(var r=0;r<g;++r)(function(g){k.setTimeout(function(){k.exports[M[g]].apply(k,arguments)},0)})(r)}:void 0)})}for(var k=window,z=document,L=z.documentElement,N=z.head||z.getElementsByTagName(\"head\")[0]||L,B=\"\",F=z.getElementsByTagName(\"script\"),l=F.length;0<=--l;){var O=F[l],Y=O.src.match(/^[^?#]*\\/run_prettify\\.js(\\?[^#]*)?(?:#.*)?$/);if(Y){B=Y[1]||\"\";O.parentNode.removeChild(O);\nbreak}}var U=!0,H=[],P=[],M=[];B.replace(/[?&]([^&=]+)=([^&]+)/g,function(g,r,x){x=decodeURIComponent(x);r=decodeURIComponent(r);\"autorun\"==r?U=!/^[0fn]/i.test(x):\"lang\"==r?H.push(x):\"skin\"==r?P.push(x):\"callback\"==r&&M.push(x)});l=0;for(B=H.length;l<B;++l)(function(){var g=z.createElement(\"script\");g.onload=g.onerror=g.onreadystatechange=function(){!g||g.readyState&&!/loaded|complete/.test(g.readyState)||(g.onerror=g.onload=g.onreadystatechange=null,--S,S||k.setTimeout(T,0),g.parentNode&&g.parentNode.removeChild(g),\ng=null)};g.type=\"text/javascript\";g.src=\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/lang-\"+encodeURIComponent(H[l])+\".js\";N.insertBefore(g,N.firstChild)})(H[l]);for(var S=H.length,F=[],l=0,B=P.length;l<B;++l)F.push(\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/skins/\"+encodeURIComponent(P[l])+\".css\");F.push(\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/prettify.css\");(function(g){function r(l){if(l!==x){var k=z.createElement(\"link\");k.rel=\"stylesheet\";\nk.type=\"text/css\";l+1<x&&(k.error=k.onerror=function(){r(l+1)});k.href=g[l];N.appendChild(k)}}var x=g.length;r(0)})(F);var ca=function(){\"undefined\"!==typeof window&&(window.PR_SHOULD_USE_CONTINUATION=!0);var g;(function(){function r(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=k[c])?a:\"0\"<=c&&\"7\">=c?parseInt(e.substring(1),8):\"u\"===c||\"x\"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function f(e){if(32>e)return(16>e?\"\\\\x0\":\"\\\\x\")+e.toString(16);e=String.fromCharCode(e);\nreturn\"\\\\\"===e||\"-\"===e||\"]\"===e||\"^\"===e?\"\\\\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));e=[];var a=\"^\"===c[0],b=[\"[\"];a&&b.push(\"^\");for(var a=a?1:0,h=c.length;a<h;++a){var m=c[a];if(/\\\\[bdsw]/i.test(m))b.push(m);else{var m=d(m),p;a+2<h&&\"-\"===c[a+1]?(p=d(c[a+2]),a+=2):p=m;e.push([m,p]);65>p||122<m||(65>p||90<m||e.push([Math.max(65,m)|32,Math.min(p,90)|32]),97>p||122<m||\ne.push([Math.max(97,m)&-33,Math.min(p,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];h=[];for(a=0;a<e.length;++a)m=e[a],m[0]<=h[1]+1?h[1]=Math.max(h[1],m[1]):c.push(h=m);for(a=0;a<c.length;++a)m=c[a],b.push(f(m[0])),m[1]>m[0]&&(m[1]+1>m[0]&&b.push(\"-\"),b.push(f(m[1])));b.push(\"]\");return b.join(\"\")}function g(e){for(var a=e.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\n\"g\")),b=a.length,d=[],h=0,m=0;h<b;++h){var p=a[h];\"(\"===p?++m:\"\\\\\"===p.charAt(0)&&(p=+p.substring(1))&&(p<=m?d[p]=-1:a[h]=f(p))}for(h=1;h<d.length;++h)-1===d[h]&&(d[h]=++r);for(m=h=0;h<b;++h)p=a[h],\"(\"===p?(++m,d[m]||(a[h]=\"(?:\")):\"\\\\\"===p.charAt(0)&&(p=+p.substring(1))&&p<=m&&(a[h]=\"\\\\\"+d[p]);for(h=0;h<b;++h)\"^\"===a[h]&&\"^\"!==a[h+1]&&(a[h]=\"\");if(e.ignoreCase&&A)for(h=0;h<b;++h)p=a[h],e=p.charAt(0),2<=p.length&&\"[\"===e?a[h]=c(p):\"\\\\\"!==e&&(a[h]=p.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);\nreturn\"[\"+String.fromCharCode(a&-33,a|32)+\"]\"}));return a.join(\"\")}for(var r=0,A=!1,q=!1,I=0,b=a.length;I<b;++I){var t=a[I];if(t.ignoreCase)q=!0;else if(/[a-z]/i.test(t.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\"\"))){A=!0;q=!1;break}}for(var k={b:8,t:9,n:10,v:11,f:12,r:13},u=[],I=0,b=a.length;I<b;++I){t=a[I];if(t.global||t.multiline)throw Error(\"\"+t);u.push(\"(?:\"+g(t)+\")\")}return new RegExp(u.join(\"|\"),q?\"gi\":\"g\")}function l(a,d){function f(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=\na.firstChild;b;b=b.nextSibling)f(b);b=a.nodeName.toLowerCase();if(\"br\"===b||\"li\"===b)g[q]=\"\\n\",A[q<<1]=r++,A[q++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\\r\\n?/g,\"\\n\"):b.replace(/[ \\t\\r\\n]+/g,\" \"),g[q]=b,A[q<<1]=r,r+=b.length,A[q++<<1|1]=a)}var c=/(?:^|\\s)nocode(?:\\s|$)/,g=[],r=0,A=[],q=0;f(a);return{a:g.join(\"\").replace(/\\n$/,\"\"),c:A}}function k(a,d,f,c,g){f&&(a={h:a,l:1,j:null,m:null,a:f,c:null,i:d,g:null},c(a),g.push.apply(g,a.g))}function z(a){for(var d=void 0,f=a.firstChild;f;f=\nf.nextSibling)var c=f.nodeType,d=1===c?d?a:f:3===c?S.test(f.nodeValue)?a:d:d;return d===a?void 0:d}function E(a,d){function f(a){for(var q=a.i,r=a.h,b=[q,\"pln\"],t=0,A=a.a.match(g)||[],u={},e=0,l=A.length;e<l;++e){var D=A[e],w=u[D],h=void 0,m;if(\"string\"===typeof w)m=!1;else{var p=c[D.charAt(0)];if(p)h=D.match(p[1]),w=p[0];else{for(m=0;m<n;++m)if(p=d[m],h=D.match(p[1])){w=p[0];break}h||(w=\"pln\")}!(m=5<=w.length&&\"lang-\"===w.substring(0,5))||h&&\"string\"===typeof h[1]||(m=!1,w=\"src\");m||(u[D]=w)}p=t;\nt+=D.length;if(m){m=h[1];var C=D.indexOf(m),G=C+m.length;h[2]&&(G=D.length-h[2].length,C=G-m.length);w=w.substring(5);k(r,q+p,D.substring(0,C),f,b);k(r,q+p+C,m,F(w,m),b);k(r,q+p+G,D.substring(G),f,b)}else b.push(q+p,w)}a.g=b}var c={},g;(function(){for(var f=a.concat(d),q=[],k={},b=0,t=f.length;b<t;++b){var n=f[b],u=n[3];if(u)for(var e=u.length;0<=--e;)c[u.charAt(e)]=n;n=n[1];u=\"\"+n;k.hasOwnProperty(u)||(q.push(n),k[u]=null)}q.push(/[\\0-\\uffff]/);g=r(q)})();var n=d.length;return f}function v(a){var d=\n[],f=[];a.tripleQuotedStrings?d.push([\"str\",/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,null,\"'\\\"\"]):a.multiLineStrings?d.push([\"str\",/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):d.push([\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);a.verbatimStrings&&\nf.push([\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push([\"com\",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,\"#\"]):d.push([\"com\",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"]),f.push([\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,null])):d.push([\"com\",/^#[^\\r\\n]*/,null,\"#\"]));a.cStyleComments&&(f.push([\"com\",/^\\/\\/[^\\r\\n]*/,null]),f.push([\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\nnull]));if(c=a.regexLiterals){var g=(c=1<c?\"\":\"\\n\\r\")?\".\":\"[\\\\S\\\\s]\";f.push([\"lang-regex\",RegExp(\"^(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*(\"+(\"/(?=[^/*\"+c+\"])(?:[^/\\\\x5B\\\\x5C\"+c+\"]|\\\\x5C\"+g+\"|\\\\x5B(?:[^\\\\x5C\\\\x5D\"+c+\"]|\\\\x5C\"+g+\")*(?:\\\\x5D|$))+/\")+\")\")])}(c=a.types)&&f.push([\"typ\",c]);c=(\"\"+a.keywords).replace(/^ | $/g,\"\");c.length&&f.push([\"kwd\",\nnew RegExp(\"^(?:\"+c.replace(/[\\s,]+/g,\"|\")+\")\\\\b\"),null]);d.push([\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);c=\"^.[^\\\\s\\\\w.$@'\\\"`/\\\\\\\\]*\";a.regexLiterals&&(c+=\"(?!s*/)\");f.push([\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null],[\"pln\",/^[a-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pln\",/^\\\\[\\s\\S]?/,null],[\"pun\",new RegExp(c),null]);return E(d,f)}function B(a,d,f){function c(a){var b=\na.nodeType;if(1==b&&!r.test(a.className))if(\"br\"===a.nodeName.toLowerCase())g(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&f){var e=a.nodeValue,d=e.match(n);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+d[0].length))&&a.parentNode.insertBefore(q.createTextNode(e),a.nextSibling),g(a),b||a.parentNode.removeChild(a))}}function g(a){function c(a,b){var e=b?a.cloneNode(!1):a,p=a.parentNode;if(p){var p=c(p,1),d=a.nextSibling;\np.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,p.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var r=/(?:^|\\s)nocode(?:\\s|$)/,n=/\\r\\n?|\\n/,q=a.ownerDocument,k=q.createElement(\"li\");a.firstChild;)k.appendChild(a.firstChild);for(var b=[k],t=0;t<b.length;++t)c(b[t]);d===(d|0)&&b[0].setAttribute(\"value\",d);var l=q.createElement(\"ol\");l.className=\"linenums\";d=Math.max(0,d-1|0)||0;for(var t=\n0,u=b.length;t<u;++t)k=b[t],k.className=\"L\"+(t+d)%10,k.firstChild||k.appendChild(q.createTextNode(\"\\u00a0\")),l.appendChild(k);a.appendChild(l)}function n(a,d){for(var f=d.length;0<=--f;){var c=d[f];V.hasOwnProperty(c)?Q.console&&console.warn(\"cannot override language handler %s\",c):V[c]=a}}function F(a,d){a&&V.hasOwnProperty(a)||(a=/^\\s*</.test(d)?\"default-markup\":\"default-code\");return V[a]}function H(a){var d=a.j;try{var f=l(a.h,a.l),c=f.a;a.a=c;a.c=f.c;a.i=0;F(d,c)(a);var g=/\\bMSIE\\s(\\d+)/.exec(navigator.userAgent),\ng=g&&8>=+g[1],d=/\\n/g,r=a.a,k=r.length,f=0,q=a.c,n=q.length,c=0,b=a.g,t=b.length,v=0;b[t]=k;var u,e;for(e=u=0;e<t;)b[e]!==b[e+2]?(b[u++]=b[e++],b[u++]=b[e++]):e+=2;t=u;for(e=u=0;e<t;){for(var x=b[e],z=b[e+1],w=e+2;w+2<=t&&b[w+1]===z;)w+=2;b[u++]=x;b[u++]=z;e=w}b.length=u;var h=a.h;a=\"\";h&&(a=h.style.display,h.style.display=\"none\");try{for(;c<n;){var m=q[c+2]||k,p=b[v+2]||k,w=Math.min(m,p),C=q[c+1],G;if(1!==C.nodeType&&(G=r.substring(f,w))){g&&(G=G.replace(d,\"\\r\"));C.nodeValue=G;var Z=C.ownerDocument,\nW=Z.createElement(\"span\");W.className=b[v+1];var B=C.parentNode;B.replaceChild(W,C);W.appendChild(C);f<m&&(q[c+1]=C=Z.createTextNode(r.substring(w,m)),B.insertBefore(C,W.nextSibling))}f=w;f>=m&&(c+=2);f>=p&&(v+=2)}}finally{h&&(h.style.display=a)}}catch(y){Q.console&&console.log(y&&y.stack||y)}}var Q=\"undefined\"!==typeof window?window:{},J=[\"break,continue,do,else,for,if,return,while\"],K=[[J,\"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"],\n\"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof\"],R=[K,\"alignas,alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where\"],L=[K,\"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient\"],\nM=[K,\"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,internal,into,is,join,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,value,var,virtual,where,yield\"],K=[K,\"abstract,async,await,constructor,debugger,enum,eval,export,from,function,get,import,implements,instanceof,interface,let,null,of,set,undefined,var,with,yield,Infinity,NaN\"],\nN=[J,\"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None\"],O=[J,\"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END\"],J=[J,\"case,done,elif,esac,eval,fi,function,in,local,set,then,until\"],P=/^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/,\nS=/\\S/,T=v({keywords:[R,M,L,K,\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",N,O,J],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),V={};n(T,[\"default-code\"]);n(E([],[[\"pln\",/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[\"com\",/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[\"pun\",/^(?:<[%?]|[%?]>)/],[\"lang-\",\n/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),\"default-markup htm html mxml xhtml xml xsl\".split(\" \"));n(E([[\"pln\",/^[\\s]+/,null,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],\n[\"pun\",/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);n(E([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);n(v({keywords:R,hashComments:!0,cStyleComments:!0,types:P}),\"c cc cpp cxx cyc m\".split(\" \"));n(v({keywords:\"null,true,false\"}),[\"json\"]);n(v({keywords:M,hashComments:!0,cStyleComments:!0,\nverbatimStrings:!0,types:P}),[\"cs\"]);n(v({keywords:L,cStyleComments:!0}),[\"java\"]);n(v({keywords:J,hashComments:!0,multiLineStrings:!0}),[\"bash\",\"bsh\",\"csh\",\"sh\"]);n(v({keywords:N,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),[\"cv\",\"py\",\"python\"]);n(v({keywords:\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",hashComments:!0,multiLineStrings:!0,regexLiterals:2}),\n[\"perl\",\"pl\",\"pm\"]);n(v({keywords:O,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),[\"rb\",\"ruby\"]);n(v({keywords:K,cStyleComments:!0,regexLiterals:!0}),[\"javascript\",\"js\",\"ts\",\"typescript\"]);n(v({keywords:\"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes\",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),[\"coffee\"]);n(E([],[[\"str\",/^[\\s\\S]+/]]),\n[\"regex\"]);var U=Q.PR={createSimpleLexer:E,registerLangHandler:n,sourceDecorator:v,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:\"com\",PR_DECLARATION:\"dec\",PR_KEYWORD:\"kwd\",PR_LITERAL:\"lit\",PR_NOCODE:\"nocode\",PR_PLAIN:\"pln\",PR_PUNCTUATION:\"pun\",PR_SOURCE:\"src\",PR_STRING:\"str\",PR_TAG:\"tag\",PR_TYPE:\"typ\",prettyPrintOne:function(a,d,f){f=f||!1;d=d||null;var c=document.createElement(\"div\");c.innerHTML=\"<pre>\"+a+\"</pre>\";c=c.firstChild;f&&B(c,f,!0);H({j:d,m:f,h:c,l:1,a:null,i:null,c:null,g:null});\nreturn c.innerHTML},prettyPrint:g=function(a,d){function f(){for(var c=Q.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;t<r.length&&b.now()<c;t++){for(var d=r[t],k=h,n=d;n=n.previousSibling;){var q=n.nodeType,l=(7===q||8===q)&&n.nodeValue;if(l?!/^\\??prettify\\b/.test(l):3!==q||/\\S/.test(n.nodeValue))break;if(l){k={};l.replace(/\\b(\\w+)=([\\w:.%+-]+)/g,function(a,b,c){k[b]=c});break}}n=d.className;if((k!==h||u.test(n))&&!e.test(n)){q=!1;for(l=d.parentNode;l;l=l.parentNode)if(w.test(l.tagName)&&l.className&&\nu.test(l.className)){q=!0;break}if(!q){d.className+=\" prettyprinted\";q=k.lang;if(!q){var q=n.match(v),A;!q&&(A=z(d))&&D.test(A.tagName)&&(q=A.className.match(v));q&&(q=q[1])}if(x.test(d.tagName))l=1;else var l=d.currentStyle,y=g.defaultView,l=(l=l?l.whiteSpace:y&&y.getComputedStyle?y.getComputedStyle(d,null).getPropertyValue(\"white-space\"):0)&&\"pre\"===l.substring(0,3);y=k.linenums;(y=\"true\"===y||+y)||(y=(y=n.match(/\\blinenums\\b(?::(\\d+))?/))?y[1]&&y[1].length?+y[1]:!0:!1);y&&B(d,y,l);H({j:q,h:d,m:y,\nl:l,a:null,i:null,c:null,g:null})}}}t<r.length?Q.setTimeout(f,250):\"function\"===typeof a&&a()}for(var c=d||document.body,g=c.ownerDocument||document,c=[c.getElementsByTagName(\"pre\"),c.getElementsByTagName(\"code\"),c.getElementsByTagName(\"xmp\")],r=[],k=0;k<c.length;++k)for(var n=0,l=c[k].length;n<l;++n)r.push(c[k][n]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var t=0,v=/\\blang(?:uage)?-([\\w.]+)(?!\\S)/,u=/\\bprettyprint\\b/,e=/\\bprettyprinted\\b/,x=/pre|xmp/i,D=/^code$/i,w=/^(?:pre|code|xmp)$/i,\nh={};f()}},R=Q.define;\"function\"===typeof R&&R.amd&&R(\"google-code-prettify\",[],function(){return U})})();return g}();S||k.setTimeout(T,0)})();}()\n","source":"plugins/prettify/run_prettify.js","raw":"!function(){/*\n\n Copyright (C) 2013 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n(function(){function aa(g){function r(){try{L.doScroll(\"left\")}catch(ba){k.setTimeout(r,50);return}x(\"poll\")}function x(r){if(\"readystatechange\"!=r.type||\"complete\"==z.readyState)(\"load\"==r.type?k:z)[B](n+r.type,x,!1),!l&&(l=!0)&&g.call(k,r.type||r)}var X=z.addEventListener,l=!1,E=!0,v=X?\"addEventListener\":\"attachEvent\",B=X?\"removeEventListener\":\"detachEvent\",n=X?\"\":\"on\";if(\"complete\"==z.readyState)g.call(k,\"lazy\");else{if(z.createEventObject&&L.doScroll){try{E=!k.frameElement}catch(ba){}E&&r()}z[v](n+\n\"DOMContentLoaded\",x,!1);z[v](n+\"readystatechange\",x,!1);k[v](n+\"load\",x,!1)}}function T(){U&&aa(function(){var g=M.length;ca(g?function(){for(var r=0;r<g;++r)(function(g){k.setTimeout(function(){k.exports[M[g]].apply(k,arguments)},0)})(r)}:void 0)})}for(var k=window,z=document,L=z.documentElement,N=z.head||z.getElementsByTagName(\"head\")[0]||L,B=\"\",F=z.getElementsByTagName(\"script\"),l=F.length;0<=--l;){var O=F[l],Y=O.src.match(/^[^?#]*\\/run_prettify\\.js(\\?[^#]*)?(?:#.*)?$/);if(Y){B=Y[1]||\"\";O.parentNode.removeChild(O);\nbreak}}var U=!0,H=[],P=[],M=[];B.replace(/[?&]([^&=]+)=([^&]+)/g,function(g,r,x){x=decodeURIComponent(x);r=decodeURIComponent(r);\"autorun\"==r?U=!/^[0fn]/i.test(x):\"lang\"==r?H.push(x):\"skin\"==r?P.push(x):\"callback\"==r&&M.push(x)});l=0;for(B=H.length;l<B;++l)(function(){var g=z.createElement(\"script\");g.onload=g.onerror=g.onreadystatechange=function(){!g||g.readyState&&!/loaded|complete/.test(g.readyState)||(g.onerror=g.onload=g.onreadystatechange=null,--S,S||k.setTimeout(T,0),g.parentNode&&g.parentNode.removeChild(g),\ng=null)};g.type=\"text/javascript\";g.src=\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/lang-\"+encodeURIComponent(H[l])+\".js\";N.insertBefore(g,N.firstChild)})(H[l]);for(var S=H.length,F=[],l=0,B=P.length;l<B;++l)F.push(\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/skins/\"+encodeURIComponent(P[l])+\".css\");F.push(\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/prettify.css\");(function(g){function r(l){if(l!==x){var k=z.createElement(\"link\");k.rel=\"stylesheet\";\nk.type=\"text/css\";l+1<x&&(k.error=k.onerror=function(){r(l+1)});k.href=g[l];N.appendChild(k)}}var x=g.length;r(0)})(F);var ca=function(){\"undefined\"!==typeof window&&(window.PR_SHOULD_USE_CONTINUATION=!0);var g;(function(){function r(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=k[c])?a:\"0\"<=c&&\"7\">=c?parseInt(e.substring(1),8):\"u\"===c||\"x\"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function f(e){if(32>e)return(16>e?\"\\\\x0\":\"\\\\x\")+e.toString(16);e=String.fromCharCode(e);\nreturn\"\\\\\"===e||\"-\"===e||\"]\"===e||\"^\"===e?\"\\\\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));e=[];var a=\"^\"===c[0],b=[\"[\"];a&&b.push(\"^\");for(var a=a?1:0,h=c.length;a<h;++a){var m=c[a];if(/\\\\[bdsw]/i.test(m))b.push(m);else{var m=d(m),p;a+2<h&&\"-\"===c[a+1]?(p=d(c[a+2]),a+=2):p=m;e.push([m,p]);65>p||122<m||(65>p||90<m||e.push([Math.max(65,m)|32,Math.min(p,90)|32]),97>p||122<m||\ne.push([Math.max(97,m)&-33,Math.min(p,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];h=[];for(a=0;a<e.length;++a)m=e[a],m[0]<=h[1]+1?h[1]=Math.max(h[1],m[1]):c.push(h=m);for(a=0;a<c.length;++a)m=c[a],b.push(f(m[0])),m[1]>m[0]&&(m[1]+1>m[0]&&b.push(\"-\"),b.push(f(m[1])));b.push(\"]\");return b.join(\"\")}function g(e){for(var a=e.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\n\"g\")),b=a.length,d=[],h=0,m=0;h<b;++h){var p=a[h];\"(\"===p?++m:\"\\\\\"===p.charAt(0)&&(p=+p.substring(1))&&(p<=m?d[p]=-1:a[h]=f(p))}for(h=1;h<d.length;++h)-1===d[h]&&(d[h]=++r);for(m=h=0;h<b;++h)p=a[h],\"(\"===p?(++m,d[m]||(a[h]=\"(?:\")):\"\\\\\"===p.charAt(0)&&(p=+p.substring(1))&&p<=m&&(a[h]=\"\\\\\"+d[p]);for(h=0;h<b;++h)\"^\"===a[h]&&\"^\"!==a[h+1]&&(a[h]=\"\");if(e.ignoreCase&&A)for(h=0;h<b;++h)p=a[h],e=p.charAt(0),2<=p.length&&\"[\"===e?a[h]=c(p):\"\\\\\"!==e&&(a[h]=p.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);\nreturn\"[\"+String.fromCharCode(a&-33,a|32)+\"]\"}));return a.join(\"\")}for(var r=0,A=!1,q=!1,I=0,b=a.length;I<b;++I){var t=a[I];if(t.ignoreCase)q=!0;else if(/[a-z]/i.test(t.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\"\"))){A=!0;q=!1;break}}for(var k={b:8,t:9,n:10,v:11,f:12,r:13},u=[],I=0,b=a.length;I<b;++I){t=a[I];if(t.global||t.multiline)throw Error(\"\"+t);u.push(\"(?:\"+g(t)+\")\")}return new RegExp(u.join(\"|\"),q?\"gi\":\"g\")}function l(a,d){function f(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=\na.firstChild;b;b=b.nextSibling)f(b);b=a.nodeName.toLowerCase();if(\"br\"===b||\"li\"===b)g[q]=\"\\n\",A[q<<1]=r++,A[q++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\\r\\n?/g,\"\\n\"):b.replace(/[ \\t\\r\\n]+/g,\" \"),g[q]=b,A[q<<1]=r,r+=b.length,A[q++<<1|1]=a)}var c=/(?:^|\\s)nocode(?:\\s|$)/,g=[],r=0,A=[],q=0;f(a);return{a:g.join(\"\").replace(/\\n$/,\"\"),c:A}}function k(a,d,f,c,g){f&&(a={h:a,l:1,j:null,m:null,a:f,c:null,i:d,g:null},c(a),g.push.apply(g,a.g))}function z(a){for(var d=void 0,f=a.firstChild;f;f=\nf.nextSibling)var c=f.nodeType,d=1===c?d?a:f:3===c?S.test(f.nodeValue)?a:d:d;return d===a?void 0:d}function E(a,d){function f(a){for(var q=a.i,r=a.h,b=[q,\"pln\"],t=0,A=a.a.match(g)||[],u={},e=0,l=A.length;e<l;++e){var D=A[e],w=u[D],h=void 0,m;if(\"string\"===typeof w)m=!1;else{var p=c[D.charAt(0)];if(p)h=D.match(p[1]),w=p[0];else{for(m=0;m<n;++m)if(p=d[m],h=D.match(p[1])){w=p[0];break}h||(w=\"pln\")}!(m=5<=w.length&&\"lang-\"===w.substring(0,5))||h&&\"string\"===typeof h[1]||(m=!1,w=\"src\");m||(u[D]=w)}p=t;\nt+=D.length;if(m){m=h[1];var C=D.indexOf(m),G=C+m.length;h[2]&&(G=D.length-h[2].length,C=G-m.length);w=w.substring(5);k(r,q+p,D.substring(0,C),f,b);k(r,q+p+C,m,F(w,m),b);k(r,q+p+G,D.substring(G),f,b)}else b.push(q+p,w)}a.g=b}var c={},g;(function(){for(var f=a.concat(d),q=[],k={},b=0,t=f.length;b<t;++b){var n=f[b],u=n[3];if(u)for(var e=u.length;0<=--e;)c[u.charAt(e)]=n;n=n[1];u=\"\"+n;k.hasOwnProperty(u)||(q.push(n),k[u]=null)}q.push(/[\\0-\\uffff]/);g=r(q)})();var n=d.length;return f}function v(a){var d=\n[],f=[];a.tripleQuotedStrings?d.push([\"str\",/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,null,\"'\\\"\"]):a.multiLineStrings?d.push([\"str\",/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):d.push([\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);a.verbatimStrings&&\nf.push([\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push([\"com\",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,\"#\"]):d.push([\"com\",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"]),f.push([\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,null])):d.push([\"com\",/^#[^\\r\\n]*/,null,\"#\"]));a.cStyleComments&&(f.push([\"com\",/^\\/\\/[^\\r\\n]*/,null]),f.push([\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\nnull]));if(c=a.regexLiterals){var g=(c=1<c?\"\":\"\\n\\r\")?\".\":\"[\\\\S\\\\s]\";f.push([\"lang-regex\",RegExp(\"^(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*(\"+(\"/(?=[^/*\"+c+\"])(?:[^/\\\\x5B\\\\x5C\"+c+\"]|\\\\x5C\"+g+\"|\\\\x5B(?:[^\\\\x5C\\\\x5D\"+c+\"]|\\\\x5C\"+g+\")*(?:\\\\x5D|$))+/\")+\")\")])}(c=a.types)&&f.push([\"typ\",c]);c=(\"\"+a.keywords).replace(/^ | $/g,\"\");c.length&&f.push([\"kwd\",\nnew RegExp(\"^(?:\"+c.replace(/[\\s,]+/g,\"|\")+\")\\\\b\"),null]);d.push([\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);c=\"^.[^\\\\s\\\\w.$@'\\\"`/\\\\\\\\]*\";a.regexLiterals&&(c+=\"(?!s*/)\");f.push([\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null],[\"pln\",/^[a-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pln\",/^\\\\[\\s\\S]?/,null],[\"pun\",new RegExp(c),null]);return E(d,f)}function B(a,d,f){function c(a){var b=\na.nodeType;if(1==b&&!r.test(a.className))if(\"br\"===a.nodeName.toLowerCase())g(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&f){var e=a.nodeValue,d=e.match(n);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+d[0].length))&&a.parentNode.insertBefore(q.createTextNode(e),a.nextSibling),g(a),b||a.parentNode.removeChild(a))}}function g(a){function c(a,b){var e=b?a.cloneNode(!1):a,p=a.parentNode;if(p){var p=c(p,1),d=a.nextSibling;\np.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,p.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var r=/(?:^|\\s)nocode(?:\\s|$)/,n=/\\r\\n?|\\n/,q=a.ownerDocument,k=q.createElement(\"li\");a.firstChild;)k.appendChild(a.firstChild);for(var b=[k],t=0;t<b.length;++t)c(b[t]);d===(d|0)&&b[0].setAttribute(\"value\",d);var l=q.createElement(\"ol\");l.className=\"linenums\";d=Math.max(0,d-1|0)||0;for(var t=\n0,u=b.length;t<u;++t)k=b[t],k.className=\"L\"+(t+d)%10,k.firstChild||k.appendChild(q.createTextNode(\"\\u00a0\")),l.appendChild(k);a.appendChild(l)}function n(a,d){for(var f=d.length;0<=--f;){var c=d[f];V.hasOwnProperty(c)?Q.console&&console.warn(\"cannot override language handler %s\",c):V[c]=a}}function F(a,d){a&&V.hasOwnProperty(a)||(a=/^\\s*</.test(d)?\"default-markup\":\"default-code\");return V[a]}function H(a){var d=a.j;try{var f=l(a.h,a.l),c=f.a;a.a=c;a.c=f.c;a.i=0;F(d,c)(a);var g=/\\bMSIE\\s(\\d+)/.exec(navigator.userAgent),\ng=g&&8>=+g[1],d=/\\n/g,r=a.a,k=r.length,f=0,q=a.c,n=q.length,c=0,b=a.g,t=b.length,v=0;b[t]=k;var u,e;for(e=u=0;e<t;)b[e]!==b[e+2]?(b[u++]=b[e++],b[u++]=b[e++]):e+=2;t=u;for(e=u=0;e<t;){for(var x=b[e],z=b[e+1],w=e+2;w+2<=t&&b[w+1]===z;)w+=2;b[u++]=x;b[u++]=z;e=w}b.length=u;var h=a.h;a=\"\";h&&(a=h.style.display,h.style.display=\"none\");try{for(;c<n;){var m=q[c+2]||k,p=b[v+2]||k,w=Math.min(m,p),C=q[c+1],G;if(1!==C.nodeType&&(G=r.substring(f,w))){g&&(G=G.replace(d,\"\\r\"));C.nodeValue=G;var Z=C.ownerDocument,\nW=Z.createElement(\"span\");W.className=b[v+1];var B=C.parentNode;B.replaceChild(W,C);W.appendChild(C);f<m&&(q[c+1]=C=Z.createTextNode(r.substring(w,m)),B.insertBefore(C,W.nextSibling))}f=w;f>=m&&(c+=2);f>=p&&(v+=2)}}finally{h&&(h.style.display=a)}}catch(y){Q.console&&console.log(y&&y.stack||y)}}var Q=\"undefined\"!==typeof window?window:{},J=[\"break,continue,do,else,for,if,return,while\"],K=[[J,\"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"],\n\"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof\"],R=[K,\"alignas,alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where\"],L=[K,\"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient\"],\nM=[K,\"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,internal,into,is,join,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,value,var,virtual,where,yield\"],K=[K,\"abstract,async,await,constructor,debugger,enum,eval,export,from,function,get,import,implements,instanceof,interface,let,null,of,set,undefined,var,with,yield,Infinity,NaN\"],\nN=[J,\"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None\"],O=[J,\"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END\"],J=[J,\"case,done,elif,esac,eval,fi,function,in,local,set,then,until\"],P=/^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/,\nS=/\\S/,T=v({keywords:[R,M,L,K,\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",N,O,J],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),V={};n(T,[\"default-code\"]);n(E([],[[\"pln\",/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[\"com\",/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[\"pun\",/^(?:<[%?]|[%?]>)/],[\"lang-\",\n/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),\"default-markup htm html mxml xhtml xml xsl\".split(\" \"));n(E([[\"pln\",/^[\\s]+/,null,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],\n[\"pun\",/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);n(E([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);n(v({keywords:R,hashComments:!0,cStyleComments:!0,types:P}),\"c cc cpp cxx cyc m\".split(\" \"));n(v({keywords:\"null,true,false\"}),[\"json\"]);n(v({keywords:M,hashComments:!0,cStyleComments:!0,\nverbatimStrings:!0,types:P}),[\"cs\"]);n(v({keywords:L,cStyleComments:!0}),[\"java\"]);n(v({keywords:J,hashComments:!0,multiLineStrings:!0}),[\"bash\",\"bsh\",\"csh\",\"sh\"]);n(v({keywords:N,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),[\"cv\",\"py\",\"python\"]);n(v({keywords:\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",hashComments:!0,multiLineStrings:!0,regexLiterals:2}),\n[\"perl\",\"pl\",\"pm\"]);n(v({keywords:O,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),[\"rb\",\"ruby\"]);n(v({keywords:K,cStyleComments:!0,regexLiterals:!0}),[\"javascript\",\"js\",\"ts\",\"typescript\"]);n(v({keywords:\"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes\",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),[\"coffee\"]);n(E([],[[\"str\",/^[\\s\\S]+/]]),\n[\"regex\"]);var U=Q.PR={createSimpleLexer:E,registerLangHandler:n,sourceDecorator:v,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:\"com\",PR_DECLARATION:\"dec\",PR_KEYWORD:\"kwd\",PR_LITERAL:\"lit\",PR_NOCODE:\"nocode\",PR_PLAIN:\"pln\",PR_PUNCTUATION:\"pun\",PR_SOURCE:\"src\",PR_STRING:\"str\",PR_TAG:\"tag\",PR_TYPE:\"typ\",prettyPrintOne:function(a,d,f){f=f||!1;d=d||null;var c=document.createElement(\"div\");c.innerHTML=\"<pre>\"+a+\"</pre>\";c=c.firstChild;f&&B(c,f,!0);H({j:d,m:f,h:c,l:1,a:null,i:null,c:null,g:null});\nreturn c.innerHTML},prettyPrint:g=function(a,d){function f(){for(var c=Q.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;t<r.length&&b.now()<c;t++){for(var d=r[t],k=h,n=d;n=n.previousSibling;){var q=n.nodeType,l=(7===q||8===q)&&n.nodeValue;if(l?!/^\\??prettify\\b/.test(l):3!==q||/\\S/.test(n.nodeValue))break;if(l){k={};l.replace(/\\b(\\w+)=([\\w:.%+-]+)/g,function(a,b,c){k[b]=c});break}}n=d.className;if((k!==h||u.test(n))&&!e.test(n)){q=!1;for(l=d.parentNode;l;l=l.parentNode)if(w.test(l.tagName)&&l.className&&\nu.test(l.className)){q=!0;break}if(!q){d.className+=\" prettyprinted\";q=k.lang;if(!q){var q=n.match(v),A;!q&&(A=z(d))&&D.test(A.tagName)&&(q=A.className.match(v));q&&(q=q[1])}if(x.test(d.tagName))l=1;else var l=d.currentStyle,y=g.defaultView,l=(l=l?l.whiteSpace:y&&y.getComputedStyle?y.getComputedStyle(d,null).getPropertyValue(\"white-space\"):0)&&\"pre\"===l.substring(0,3);y=k.linenums;(y=\"true\"===y||+y)||(y=(y=n.match(/\\blinenums\\b(?::(\\d+))?/))?y[1]&&y[1].length?+y[1]:!0:!1);y&&B(d,y,l);H({j:q,h:d,m:y,\nl:l,a:null,i:null,c:null,g:null})}}}t<r.length?Q.setTimeout(f,250):\"function\"===typeof a&&a()}for(var c=d||document.body,g=c.ownerDocument||document,c=[c.getElementsByTagName(\"pre\"),c.getElementsByTagName(\"code\"),c.getElementsByTagName(\"xmp\")],r=[],k=0;k<c.length;++k)for(var n=0,l=c[k].length;n<l;++n)r.push(c[k][n]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var t=0,v=/\\blang(?:uage)?-([\\w.]+)(?!\\S)/,u=/\\bprettyprint\\b/,e=/\\bprettyprinted\\b/,x=/pre|xmp/i,D=/^code$/i,w=/^(?:pre|code|xmp)$/i,\nh={};f()}},R=Q.define;\"function\"===typeof R&&R.amd&&R(\"google-code-prettify\",[],function(){return U})})();return g}();S||k.setTimeout(T,0)})();}()\n","date":"2022-03-27T08:23:16.383Z","updated":"2018-12-17T07:44:02.000Z","path":"plugins/prettify/run_prettify.js","layout":"false","title":"","comments":1,"_id":"cl22h70vl007q5oss0v57gjpl","content":"!function(){/*\n\n Copyright (C) 2013 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n(function(){function aa(g){function r(){try{L.doScroll(\"left\")}catch(ba){k.setTimeout(r,50);return}x(\"poll\")}function x(r){if(\"readystatechange\"!=r.type||\"complete\"==z.readyState)(\"load\"==r.type?k:z)[B](n+r.type,x,!1),!l&&(l=!0)&&g.call(k,r.type||r)}var X=z.addEventListener,l=!1,E=!0,v=X?\"addEventListener\":\"attachEvent\",B=X?\"removeEventListener\":\"detachEvent\",n=X?\"\":\"on\";if(\"complete\"==z.readyState)g.call(k,\"lazy\");else{if(z.createEventObject&&L.doScroll){try{E=!k.frameElement}catch(ba){}E&&r()}z[v](n+\n\"DOMContentLoaded\",x,!1);z[v](n+\"readystatechange\",x,!1);k[v](n+\"load\",x,!1)}}function T(){U&&aa(function(){var g=M.length;ca(g?function(){for(var r=0;r<g;++r)(function(g){k.setTimeout(function(){k.exports[M[g]].apply(k,arguments)},0)})(r)}:void 0)})}for(var k=window,z=document,L=z.documentElement,N=z.head||z.getElementsByTagName(\"head\")[0]||L,B=\"\",F=z.getElementsByTagName(\"script\"),l=F.length;0<=--l;){var O=F[l],Y=O.src.match(/^[^?#]*\\/run_prettify\\.js(\\?[^#]*)?(?:#.*)?$/);if(Y){B=Y[1]||\"\";O.parentNode.removeChild(O);\nbreak}}var U=!0,H=[],P=[],M=[];B.replace(/[?&]([^&=]+)=([^&]+)/g,function(g,r,x){x=decodeURIComponent(x);r=decodeURIComponent(r);\"autorun\"==r?U=!/^[0fn]/i.test(x):\"lang\"==r?H.push(x):\"skin\"==r?P.push(x):\"callback\"==r&&M.push(x)});l=0;for(B=H.length;l<B;++l)(function(){var g=z.createElement(\"script\");g.onload=g.onerror=g.onreadystatechange=function(){!g||g.readyState&&!/loaded|complete/.test(g.readyState)||(g.onerror=g.onload=g.onreadystatechange=null,--S,S||k.setTimeout(T,0),g.parentNode&&g.parentNode.removeChild(g),\ng=null)};g.type=\"text/javascript\";g.src=\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/lang-\"+encodeURIComponent(H[l])+\".js\";N.insertBefore(g,N.firstChild)})(H[l]);for(var S=H.length,F=[],l=0,B=P.length;l<B;++l)F.push(\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/skins/\"+encodeURIComponent(P[l])+\".css\");F.push(\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/prettify.css\");(function(g){function r(l){if(l!==x){var k=z.createElement(\"link\");k.rel=\"stylesheet\";\nk.type=\"text/css\";l+1<x&&(k.error=k.onerror=function(){r(l+1)});k.href=g[l];N.appendChild(k)}}var x=g.length;r(0)})(F);var ca=function(){\"undefined\"!==typeof window&&(window.PR_SHOULD_USE_CONTINUATION=!0);var g;(function(){function r(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=k[c])?a:\"0\"<=c&&\"7\">=c?parseInt(e.substring(1),8):\"u\"===c||\"x\"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function f(e){if(32>e)return(16>e?\"\\\\x0\":\"\\\\x\")+e.toString(16);e=String.fromCharCode(e);\nreturn\"\\\\\"===e||\"-\"===e||\"]\"===e||\"^\"===e?\"\\\\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));e=[];var a=\"^\"===c[0],b=[\"[\"];a&&b.push(\"^\");for(var a=a?1:0,h=c.length;a<h;++a){var m=c[a];if(/\\\\[bdsw]/i.test(m))b.push(m);else{var m=d(m),p;a+2<h&&\"-\"===c[a+1]?(p=d(c[a+2]),a+=2):p=m;e.push([m,p]);65>p||122<m||(65>p||90<m||e.push([Math.max(65,m)|32,Math.min(p,90)|32]),97>p||122<m||\ne.push([Math.max(97,m)&-33,Math.min(p,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];h=[];for(a=0;a<e.length;++a)m=e[a],m[0]<=h[1]+1?h[1]=Math.max(h[1],m[1]):c.push(h=m);for(a=0;a<c.length;++a)m=c[a],b.push(f(m[0])),m[1]>m[0]&&(m[1]+1>m[0]&&b.push(\"-\"),b.push(f(m[1])));b.push(\"]\");return b.join(\"\")}function g(e){for(var a=e.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\n\"g\")),b=a.length,d=[],h=0,m=0;h<b;++h){var p=a[h];\"(\"===p?++m:\"\\\\\"===p.charAt(0)&&(p=+p.substring(1))&&(p<=m?d[p]=-1:a[h]=f(p))}for(h=1;h<d.length;++h)-1===d[h]&&(d[h]=++r);for(m=h=0;h<b;++h)p=a[h],\"(\"===p?(++m,d[m]||(a[h]=\"(?:\")):\"\\\\\"===p.charAt(0)&&(p=+p.substring(1))&&p<=m&&(a[h]=\"\\\\\"+d[p]);for(h=0;h<b;++h)\"^\"===a[h]&&\"^\"!==a[h+1]&&(a[h]=\"\");if(e.ignoreCase&&A)for(h=0;h<b;++h)p=a[h],e=p.charAt(0),2<=p.length&&\"[\"===e?a[h]=c(p):\"\\\\\"!==e&&(a[h]=p.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);\nreturn\"[\"+String.fromCharCode(a&-33,a|32)+\"]\"}));return a.join(\"\")}for(var r=0,A=!1,q=!1,I=0,b=a.length;I<b;++I){var t=a[I];if(t.ignoreCase)q=!0;else if(/[a-z]/i.test(t.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\"\"))){A=!0;q=!1;break}}for(var k={b:8,t:9,n:10,v:11,f:12,r:13},u=[],I=0,b=a.length;I<b;++I){t=a[I];if(t.global||t.multiline)throw Error(\"\"+t);u.push(\"(?:\"+g(t)+\")\")}return new RegExp(u.join(\"|\"),q?\"gi\":\"g\")}function l(a,d){function f(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=\na.firstChild;b;b=b.nextSibling)f(b);b=a.nodeName.toLowerCase();if(\"br\"===b||\"li\"===b)g[q]=\"\\n\",A[q<<1]=r++,A[q++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\\r\\n?/g,\"\\n\"):b.replace(/[ \\t\\r\\n]+/g,\" \"),g[q]=b,A[q<<1]=r,r+=b.length,A[q++<<1|1]=a)}var c=/(?:^|\\s)nocode(?:\\s|$)/,g=[],r=0,A=[],q=0;f(a);return{a:g.join(\"\").replace(/\\n$/,\"\"),c:A}}function k(a,d,f,c,g){f&&(a={h:a,l:1,j:null,m:null,a:f,c:null,i:d,g:null},c(a),g.push.apply(g,a.g))}function z(a){for(var d=void 0,f=a.firstChild;f;f=\nf.nextSibling)var c=f.nodeType,d=1===c?d?a:f:3===c?S.test(f.nodeValue)?a:d:d;return d===a?void 0:d}function E(a,d){function f(a){for(var q=a.i,r=a.h,b=[q,\"pln\"],t=0,A=a.a.match(g)||[],u={},e=0,l=A.length;e<l;++e){var D=A[e],w=u[D],h=void 0,m;if(\"string\"===typeof w)m=!1;else{var p=c[D.charAt(0)];if(p)h=D.match(p[1]),w=p[0];else{for(m=0;m<n;++m)if(p=d[m],h=D.match(p[1])){w=p[0];break}h||(w=\"pln\")}!(m=5<=w.length&&\"lang-\"===w.substring(0,5))||h&&\"string\"===typeof h[1]||(m=!1,w=\"src\");m||(u[D]=w)}p=t;\nt+=D.length;if(m){m=h[1];var C=D.indexOf(m),G=C+m.length;h[2]&&(G=D.length-h[2].length,C=G-m.length);w=w.substring(5);k(r,q+p,D.substring(0,C),f,b);k(r,q+p+C,m,F(w,m),b);k(r,q+p+G,D.substring(G),f,b)}else b.push(q+p,w)}a.g=b}var c={},g;(function(){for(var f=a.concat(d),q=[],k={},b=0,t=f.length;b<t;++b){var n=f[b],u=n[3];if(u)for(var e=u.length;0<=--e;)c[u.charAt(e)]=n;n=n[1];u=\"\"+n;k.hasOwnProperty(u)||(q.push(n),k[u]=null)}q.push(/[\\0-\\uffff]/);g=r(q)})();var n=d.length;return f}function v(a){var d=\n[],f=[];a.tripleQuotedStrings?d.push([\"str\",/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,null,\"'\\\"\"]):a.multiLineStrings?d.push([\"str\",/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):d.push([\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);a.verbatimStrings&&\nf.push([\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push([\"com\",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,\"#\"]):d.push([\"com\",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"]),f.push([\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,null])):d.push([\"com\",/^#[^\\r\\n]*/,null,\"#\"]));a.cStyleComments&&(f.push([\"com\",/^\\/\\/[^\\r\\n]*/,null]),f.push([\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\nnull]));if(c=a.regexLiterals){var g=(c=1<c?\"\":\"\\n\\r\")?\".\":\"[\\\\S\\\\s]\";f.push([\"lang-regex\",RegExp(\"^(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*(\"+(\"/(?=[^/*\"+c+\"])(?:[^/\\\\x5B\\\\x5C\"+c+\"]|\\\\x5C\"+g+\"|\\\\x5B(?:[^\\\\x5C\\\\x5D\"+c+\"]|\\\\x5C\"+g+\")*(?:\\\\x5D|$))+/\")+\")\")])}(c=a.types)&&f.push([\"typ\",c]);c=(\"\"+a.keywords).replace(/^ | $/g,\"\");c.length&&f.push([\"kwd\",\nnew RegExp(\"^(?:\"+c.replace(/[\\s,]+/g,\"|\")+\")\\\\b\"),null]);d.push([\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);c=\"^.[^\\\\s\\\\w.$@'\\\"`/\\\\\\\\]*\";a.regexLiterals&&(c+=\"(?!s*/)\");f.push([\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null],[\"pln\",/^[a-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pln\",/^\\\\[\\s\\S]?/,null],[\"pun\",new RegExp(c),null]);return E(d,f)}function B(a,d,f){function c(a){var b=\na.nodeType;if(1==b&&!r.test(a.className))if(\"br\"===a.nodeName.toLowerCase())g(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&f){var e=a.nodeValue,d=e.match(n);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+d[0].length))&&a.parentNode.insertBefore(q.createTextNode(e),a.nextSibling),g(a),b||a.parentNode.removeChild(a))}}function g(a){function c(a,b){var e=b?a.cloneNode(!1):a,p=a.parentNode;if(p){var p=c(p,1),d=a.nextSibling;\np.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,p.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var r=/(?:^|\\s)nocode(?:\\s|$)/,n=/\\r\\n?|\\n/,q=a.ownerDocument,k=q.createElement(\"li\");a.firstChild;)k.appendChild(a.firstChild);for(var b=[k],t=0;t<b.length;++t)c(b[t]);d===(d|0)&&b[0].setAttribute(\"value\",d);var l=q.createElement(\"ol\");l.className=\"linenums\";d=Math.max(0,d-1|0)||0;for(var t=\n0,u=b.length;t<u;++t)k=b[t],k.className=\"L\"+(t+d)%10,k.firstChild||k.appendChild(q.createTextNode(\"\\u00a0\")),l.appendChild(k);a.appendChild(l)}function n(a,d){for(var f=d.length;0<=--f;){var c=d[f];V.hasOwnProperty(c)?Q.console&&console.warn(\"cannot override language handler %s\",c):V[c]=a}}function F(a,d){a&&V.hasOwnProperty(a)||(a=/^\\s*</.test(d)?\"default-markup\":\"default-code\");return V[a]}function H(a){var d=a.j;try{var f=l(a.h,a.l),c=f.a;a.a=c;a.c=f.c;a.i=0;F(d,c)(a);var g=/\\bMSIE\\s(\\d+)/.exec(navigator.userAgent),\ng=g&&8>=+g[1],d=/\\n/g,r=a.a,k=r.length,f=0,q=a.c,n=q.length,c=0,b=a.g,t=b.length,v=0;b[t]=k;var u,e;for(e=u=0;e<t;)b[e]!==b[e+2]?(b[u++]=b[e++],b[u++]=b[e++]):e+=2;t=u;for(e=u=0;e<t;){for(var x=b[e],z=b[e+1],w=e+2;w+2<=t&&b[w+1]===z;)w+=2;b[u++]=x;b[u++]=z;e=w}b.length=u;var h=a.h;a=\"\";h&&(a=h.style.display,h.style.display=\"none\");try{for(;c<n;){var m=q[c+2]||k,p=b[v+2]||k,w=Math.min(m,p),C=q[c+1],G;if(1!==C.nodeType&&(G=r.substring(f,w))){g&&(G=G.replace(d,\"\\r\"));C.nodeValue=G;var Z=C.ownerDocument,\nW=Z.createElement(\"span\");W.className=b[v+1];var B=C.parentNode;B.replaceChild(W,C);W.appendChild(C);f<m&&(q[c+1]=C=Z.createTextNode(r.substring(w,m)),B.insertBefore(C,W.nextSibling))}f=w;f>=m&&(c+=2);f>=p&&(v+=2)}}finally{h&&(h.style.display=a)}}catch(y){Q.console&&console.log(y&&y.stack||y)}}var Q=\"undefined\"!==typeof window?window:{},J=[\"break,continue,do,else,for,if,return,while\"],K=[[J,\"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"],\n\"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof\"],R=[K,\"alignas,alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where\"],L=[K,\"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient\"],\nM=[K,\"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,internal,into,is,join,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,value,var,virtual,where,yield\"],K=[K,\"abstract,async,await,constructor,debugger,enum,eval,export,from,function,get,import,implements,instanceof,interface,let,null,of,set,undefined,var,with,yield,Infinity,NaN\"],\nN=[J,\"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None\"],O=[J,\"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END\"],J=[J,\"case,done,elif,esac,eval,fi,function,in,local,set,then,until\"],P=/^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/,\nS=/\\S/,T=v({keywords:[R,M,L,K,\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",N,O,J],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),V={};n(T,[\"default-code\"]);n(E([],[[\"pln\",/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[\"com\",/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[\"pun\",/^(?:<[%?]|[%?]>)/],[\"lang-\",\n/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),\"default-markup htm html mxml xhtml xml xsl\".split(\" \"));n(E([[\"pln\",/^[\\s]+/,null,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],\n[\"pun\",/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);n(E([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);n(v({keywords:R,hashComments:!0,cStyleComments:!0,types:P}),\"c cc cpp cxx cyc m\".split(\" \"));n(v({keywords:\"null,true,false\"}),[\"json\"]);n(v({keywords:M,hashComments:!0,cStyleComments:!0,\nverbatimStrings:!0,types:P}),[\"cs\"]);n(v({keywords:L,cStyleComments:!0}),[\"java\"]);n(v({keywords:J,hashComments:!0,multiLineStrings:!0}),[\"bash\",\"bsh\",\"csh\",\"sh\"]);n(v({keywords:N,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),[\"cv\",\"py\",\"python\"]);n(v({keywords:\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",hashComments:!0,multiLineStrings:!0,regexLiterals:2}),\n[\"perl\",\"pl\",\"pm\"]);n(v({keywords:O,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),[\"rb\",\"ruby\"]);n(v({keywords:K,cStyleComments:!0,regexLiterals:!0}),[\"javascript\",\"js\",\"ts\",\"typescript\"]);n(v({keywords:\"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes\",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),[\"coffee\"]);n(E([],[[\"str\",/^[\\s\\S]+/]]),\n[\"regex\"]);var U=Q.PR={createSimpleLexer:E,registerLangHandler:n,sourceDecorator:v,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:\"com\",PR_DECLARATION:\"dec\",PR_KEYWORD:\"kwd\",PR_LITERAL:\"lit\",PR_NOCODE:\"nocode\",PR_PLAIN:\"pln\",PR_PUNCTUATION:\"pun\",PR_SOURCE:\"src\",PR_STRING:\"str\",PR_TAG:\"tag\",PR_TYPE:\"typ\",prettyPrintOne:function(a,d,f){f=f||!1;d=d||null;var c=document.createElement(\"div\");c.innerHTML=\"<pre>\"+a+\"</pre>\";c=c.firstChild;f&&B(c,f,!0);H({j:d,m:f,h:c,l:1,a:null,i:null,c:null,g:null});\nreturn c.innerHTML},prettyPrint:g=function(a,d){function f(){for(var c=Q.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;t<r.length&&b.now()<c;t++){for(var d=r[t],k=h,n=d;n=n.previousSibling;){var q=n.nodeType,l=(7===q||8===q)&&n.nodeValue;if(l?!/^\\??prettify\\b/.test(l):3!==q||/\\S/.test(n.nodeValue))break;if(l){k={};l.replace(/\\b(\\w+)=([\\w:.%+-]+)/g,function(a,b,c){k[b]=c});break}}n=d.className;if((k!==h||u.test(n))&&!e.test(n)){q=!1;for(l=d.parentNode;l;l=l.parentNode)if(w.test(l.tagName)&&l.className&&\nu.test(l.className)){q=!0;break}if(!q){d.className+=\" prettyprinted\";q=k.lang;if(!q){var q=n.match(v),A;!q&&(A=z(d))&&D.test(A.tagName)&&(q=A.className.match(v));q&&(q=q[1])}if(x.test(d.tagName))l=1;else var l=d.currentStyle,y=g.defaultView,l=(l=l?l.whiteSpace:y&&y.getComputedStyle?y.getComputedStyle(d,null).getPropertyValue(\"white-space\"):0)&&\"pre\"===l.substring(0,3);y=k.linenums;(y=\"true\"===y||+y)||(y=(y=n.match(/\\blinenums\\b(?::(\\d+))?/))?y[1]&&y[1].length?+y[1]:!0:!1);y&&B(d,y,l);H({j:q,h:d,m:y,\nl:l,a:null,i:null,c:null,g:null})}}}t<r.length?Q.setTimeout(f,250):\"function\"===typeof a&&a()}for(var c=d||document.body,g=c.ownerDocument||document,c=[c.getElementsByTagName(\"pre\"),c.getElementsByTagName(\"code\"),c.getElementsByTagName(\"xmp\")],r=[],k=0;k<c.length;++k)for(var n=0,l=c[k].length;n<l;++n)r.push(c[k][n]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var t=0,v=/\\blang(?:uage)?-([\\w.]+)(?!\\S)/,u=/\\bprettyprint\\b/,e=/\\bprettyprinted\\b/,x=/pre|xmp/i,D=/^code$/i,w=/^(?:pre|code|xmp)$/i,\nh={};f()}},R=Q.define;\"function\"===typeof R&&R.amd&&R(\"google-code-prettify\",[],function(){return U})})();return g}();S||k.setTimeout(T,0)})();}()\n","site":{"data":{}},"excerpt":"","more":"!function(){/*\n\n Copyright (C) 2013 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n Copyright (C) 2006 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n(function(){function aa(g){function r(){try{L.doScroll(\"left\")}catch(ba){k.setTimeout(r,50);return}x(\"poll\")}function x(r){if(\"readystatechange\"!=r.type||\"complete\"==z.readyState)(\"load\"==r.type?k:z)[B](n+r.type,x,!1),!l&&(l=!0)&&g.call(k,r.type||r)}var X=z.addEventListener,l=!1,E=!0,v=X?\"addEventListener\":\"attachEvent\",B=X?\"removeEventListener\":\"detachEvent\",n=X?\"\":\"on\";if(\"complete\"==z.readyState)g.call(k,\"lazy\");else{if(z.createEventObject&&L.doScroll){try{E=!k.frameElement}catch(ba){}E&&r()}z[v](n+\n\"DOMContentLoaded\",x,!1);z[v](n+\"readystatechange\",x,!1);k[v](n+\"load\",x,!1)}}function T(){U&&aa(function(){var g=M.length;ca(g?function(){for(var r=0;r<g;++r)(function(g){k.setTimeout(function(){k.exports[M[g]].apply(k,arguments)},0)})(r)}:void 0)})}for(var k=window,z=document,L=z.documentElement,N=z.head||z.getElementsByTagName(\"head\")[0]||L,B=\"\",F=z.getElementsByTagName(\"script\"),l=F.length;0<=--l;){var O=F[l],Y=O.src.match(/^[^?#]*\\/run_prettify\\.js(\\?[^#]*)?(?:#.*)?$/);if(Y){B=Y[1]||\"\";O.parentNode.removeChild(O);\nbreak}}var U=!0,H=[],P=[],M=[];B.replace(/[?&]([^&=]+)=([^&]+)/g,function(g,r,x){x=decodeURIComponent(x);r=decodeURIComponent(r);\"autorun\"==r?U=!/^[0fn]/i.test(x):\"lang\"==r?H.push(x):\"skin\"==r?P.push(x):\"callback\"==r&&M.push(x)});l=0;for(B=H.length;l<B;++l)(function(){var g=z.createElement(\"script\");g.onload=g.onerror=g.onreadystatechange=function(){!g||g.readyState&&!/loaded|complete/.test(g.readyState)||(g.onerror=g.onload=g.onreadystatechange=null,--S,S||k.setTimeout(T,0),g.parentNode&&g.parentNode.removeChild(g),\ng=null)};g.type=\"text/javascript\";g.src=\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/lang-\"+encodeURIComponent(H[l])+\".js\";N.insertBefore(g,N.firstChild)})(H[l]);for(var S=H.length,F=[],l=0,B=P.length;l<B;++l)F.push(\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/skins/\"+encodeURIComponent(P[l])+\".css\");F.push(\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/prettify.css\");(function(g){function r(l){if(l!==x){var k=z.createElement(\"link\");k.rel=\"stylesheet\";\nk.type=\"text/css\";l+1<x&&(k.error=k.onerror=function(){r(l+1)});k.href=g[l];N.appendChild(k)}}var x=g.length;r(0)})(F);var ca=function(){\"undefined\"!==typeof window&&(window.PR_SHOULD_USE_CONTINUATION=!0);var g;(function(){function r(a){function d(e){var a=e.charCodeAt(0);if(92!==a)return a;var c=e.charAt(1);return(a=k[c])?a:\"0\"<=c&&\"7\">=c?parseInt(e.substring(1),8):\"u\"===c||\"x\"===c?parseInt(e.substring(2),16):e.charCodeAt(1)}function f(e){if(32>e)return(16>e?\"\\\\x0\":\"\\\\x\")+e.toString(16);e=String.fromCharCode(e);\nreturn\"\\\\\"===e||\"-\"===e||\"]\"===e||\"^\"===e?\"\\\\\"+e:e}function c(e){var c=e.substring(1,e.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));e=[];var a=\"^\"===c[0],b=[\"[\"];a&&b.push(\"^\");for(var a=a?1:0,h=c.length;a<h;++a){var m=c[a];if(/\\\\[bdsw]/i.test(m))b.push(m);else{var m=d(m),p;a+2<h&&\"-\"===c[a+1]?(p=d(c[a+2]),a+=2):p=m;e.push([m,p]);65>p||122<m||(65>p||90<m||e.push([Math.max(65,m)|32,Math.min(p,90)|32]),97>p||122<m||\ne.push([Math.max(97,m)&-33,Math.min(p,122)&-33]))}}e.sort(function(e,a){return e[0]-a[0]||a[1]-e[1]});c=[];h=[];for(a=0;a<e.length;++a)m=e[a],m[0]<=h[1]+1?h[1]=Math.max(h[1],m[1]):c.push(h=m);for(a=0;a<c.length;++a)m=c[a],b.push(f(m[0])),m[1]>m[0]&&(m[1]+1>m[0]&&b.push(\"-\"),b.push(f(m[1])));b.push(\"]\");return b.join(\"\")}function g(e){for(var a=e.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\n\"g\")),b=a.length,d=[],h=0,m=0;h<b;++h){var p=a[h];\"(\"===p?++m:\"\\\\\"===p.charAt(0)&&(p=+p.substring(1))&&(p<=m?d[p]=-1:a[h]=f(p))}for(h=1;h<d.length;++h)-1===d[h]&&(d[h]=++r);for(m=h=0;h<b;++h)p=a[h],\"(\"===p?(++m,d[m]||(a[h]=\"(?:\")):\"\\\\\"===p.charAt(0)&&(p=+p.substring(1))&&p<=m&&(a[h]=\"\\\\\"+d[p]);for(h=0;h<b;++h)\"^\"===a[h]&&\"^\"!==a[h+1]&&(a[h]=\"\");if(e.ignoreCase&&A)for(h=0;h<b;++h)p=a[h],e=p.charAt(0),2<=p.length&&\"[\"===e?a[h]=c(p):\"\\\\\"!==e&&(a[h]=p.replace(/[a-zA-Z]/g,function(a){a=a.charCodeAt(0);\nreturn\"[\"+String.fromCharCode(a&-33,a|32)+\"]\"}));return a.join(\"\")}for(var r=0,A=!1,q=!1,I=0,b=a.length;I<b;++I){var t=a[I];if(t.ignoreCase)q=!0;else if(/[a-z]/i.test(t.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\"\"))){A=!0;q=!1;break}}for(var k={b:8,t:9,n:10,v:11,f:12,r:13},u=[],I=0,b=a.length;I<b;++I){t=a[I];if(t.global||t.multiline)throw Error(\"\"+t);u.push(\"(?:\"+g(t)+\")\")}return new RegExp(u.join(\"|\"),q?\"gi\":\"g\")}function l(a,d){function f(a){var b=a.nodeType;if(1==b){if(!c.test(a.className)){for(b=\na.firstChild;b;b=b.nextSibling)f(b);b=a.nodeName.toLowerCase();if(\"br\"===b||\"li\"===b)g[q]=\"\\n\",A[q<<1]=r++,A[q++<<1|1]=a}}else if(3==b||4==b)b=a.nodeValue,b.length&&(b=d?b.replace(/\\r\\n?/g,\"\\n\"):b.replace(/[ \\t\\r\\n]+/g,\" \"),g[q]=b,A[q<<1]=r,r+=b.length,A[q++<<1|1]=a)}var c=/(?:^|\\s)nocode(?:\\s|$)/,g=[],r=0,A=[],q=0;f(a);return{a:g.join(\"\").replace(/\\n$/,\"\"),c:A}}function k(a,d,f,c,g){f&&(a={h:a,l:1,j:null,m:null,a:f,c:null,i:d,g:null},c(a),g.push.apply(g,a.g))}function z(a){for(var d=void 0,f=a.firstChild;f;f=\nf.nextSibling)var c=f.nodeType,d=1===c?d?a:f:3===c?S.test(f.nodeValue)?a:d:d;return d===a?void 0:d}function E(a,d){function f(a){for(var q=a.i,r=a.h,b=[q,\"pln\"],t=0,A=a.a.match(g)||[],u={},e=0,l=A.length;e<l;++e){var D=A[e],w=u[D],h=void 0,m;if(\"string\"===typeof w)m=!1;else{var p=c[D.charAt(0)];if(p)h=D.match(p[1]),w=p[0];else{for(m=0;m<n;++m)if(p=d[m],h=D.match(p[1])){w=p[0];break}h||(w=\"pln\")}!(m=5<=w.length&&\"lang-\"===w.substring(0,5))||h&&\"string\"===typeof h[1]||(m=!1,w=\"src\");m||(u[D]=w)}p=t;\nt+=D.length;if(m){m=h[1];var C=D.indexOf(m),G=C+m.length;h[2]&&(G=D.length-h[2].length,C=G-m.length);w=w.substring(5);k(r,q+p,D.substring(0,C),f,b);k(r,q+p+C,m,F(w,m),b);k(r,q+p+G,D.substring(G),f,b)}else b.push(q+p,w)}a.g=b}var c={},g;(function(){for(var f=a.concat(d),q=[],k={},b=0,t=f.length;b<t;++b){var n=f[b],u=n[3];if(u)for(var e=u.length;0<=--e;)c[u.charAt(e)]=n;n=n[1];u=\"\"+n;k.hasOwnProperty(u)||(q.push(n),k[u]=null)}q.push(/[\\0-\\uffff]/);g=r(q)})();var n=d.length;return f}function v(a){var d=\n[],f=[];a.tripleQuotedStrings?d.push([\"str\",/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,null,\"'\\\"\"]):a.multiLineStrings?d.push([\"str\",/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):d.push([\"str\",/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);a.verbatimStrings&&\nf.push([\"str\",/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);var c=a.hashComments;c&&(a.cStyleComments?(1<c?d.push([\"com\",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,\"#\"]):d.push([\"com\",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"]),f.push([\"str\",/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h(?:h|pp|\\+\\+)?|[a-z]\\w*)>/,null])):d.push([\"com\",/^#[^\\r\\n]*/,null,\"#\"]));a.cStyleComments&&(f.push([\"com\",/^\\/\\/[^\\r\\n]*/,null]),f.push([\"com\",/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\nnull]));if(c=a.regexLiterals){var g=(c=1<c?\"\":\"\\n\\r\")?\".\":\"[\\\\S\\\\s]\";f.push([\"lang-regex\",RegExp(\"^(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|<<?=?|>>?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*(\"+(\"/(?=[^/*\"+c+\"])(?:[^/\\\\x5B\\\\x5C\"+c+\"]|\\\\x5C\"+g+\"|\\\\x5B(?:[^\\\\x5C\\\\x5D\"+c+\"]|\\\\x5C\"+g+\")*(?:\\\\x5D|$))+/\")+\")\")])}(c=a.types)&&f.push([\"typ\",c]);c=(\"\"+a.keywords).replace(/^ | $/g,\"\");c.length&&f.push([\"kwd\",\nnew RegExp(\"^(?:\"+c.replace(/[\\s,]+/g,\"|\")+\")\\\\b\"),null]);d.push([\"pln\",/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);c=\"^.[^\\\\s\\\\w.$@'\\\"`/\\\\\\\\]*\";a.regexLiterals&&(c+=\"(?!s*/)\");f.push([\"lit\",/^@[a-z_$][a-z_$@0-9]*/i,null],[\"typ\",/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/,null],[\"pln\",/^[a-z_$][a-z_$@0-9]*/i,null],[\"lit\",/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[\"pln\",/^\\\\[\\s\\S]?/,null],[\"pun\",new RegExp(c),null]);return E(d,f)}function B(a,d,f){function c(a){var b=\na.nodeType;if(1==b&&!r.test(a.className))if(\"br\"===a.nodeName.toLowerCase())g(a),a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)c(a);else if((3==b||4==b)&&f){var e=a.nodeValue,d=e.match(n);d&&(b=e.substring(0,d.index),a.nodeValue=b,(e=e.substring(d.index+d[0].length))&&a.parentNode.insertBefore(q.createTextNode(e),a.nextSibling),g(a),b||a.parentNode.removeChild(a))}}function g(a){function c(a,b){var e=b?a.cloneNode(!1):a,p=a.parentNode;if(p){var p=c(p,1),d=a.nextSibling;\np.appendChild(e);for(var f=d;f;f=d)d=f.nextSibling,p.appendChild(f)}return e}for(;!a.nextSibling;)if(a=a.parentNode,!a)return;a=c(a.nextSibling,0);for(var e;(e=a.parentNode)&&1===e.nodeType;)a=e;b.push(a)}for(var r=/(?:^|\\s)nocode(?:\\s|$)/,n=/\\r\\n?|\\n/,q=a.ownerDocument,k=q.createElement(\"li\");a.firstChild;)k.appendChild(a.firstChild);for(var b=[k],t=0;t<b.length;++t)c(b[t]);d===(d|0)&&b[0].setAttribute(\"value\",d);var l=q.createElement(\"ol\");l.className=\"linenums\";d=Math.max(0,d-1|0)||0;for(var t=\n0,u=b.length;t<u;++t)k=b[t],k.className=\"L\"+(t+d)%10,k.firstChild||k.appendChild(q.createTextNode(\"\\u00a0\")),l.appendChild(k);a.appendChild(l)}function n(a,d){for(var f=d.length;0<=--f;){var c=d[f];V.hasOwnProperty(c)?Q.console&&console.warn(\"cannot override language handler %s\",c):V[c]=a}}function F(a,d){a&&V.hasOwnProperty(a)||(a=/^\\s*</.test(d)?\"default-markup\":\"default-code\");return V[a]}function H(a){var d=a.j;try{var f=l(a.h,a.l),c=f.a;a.a=c;a.c=f.c;a.i=0;F(d,c)(a);var g=/\\bMSIE\\s(\\d+)/.exec(navigator.userAgent),\ng=g&&8>=+g[1],d=/\\n/g,r=a.a,k=r.length,f=0,q=a.c,n=q.length,c=0,b=a.g,t=b.length,v=0;b[t]=k;var u,e;for(e=u=0;e<t;)b[e]!==b[e+2]?(b[u++]=b[e++],b[u++]=b[e++]):e+=2;t=u;for(e=u=0;e<t;){for(var x=b[e],z=b[e+1],w=e+2;w+2<=t&&b[w+1]===z;)w+=2;b[u++]=x;b[u++]=z;e=w}b.length=u;var h=a.h;a=\"\";h&&(a=h.style.display,h.style.display=\"none\");try{for(;c<n;){var m=q[c+2]||k,p=b[v+2]||k,w=Math.min(m,p),C=q[c+1],G;if(1!==C.nodeType&&(G=r.substring(f,w))){g&&(G=G.replace(d,\"\\r\"));C.nodeValue=G;var Z=C.ownerDocument,\nW=Z.createElement(\"span\");W.className=b[v+1];var B=C.parentNode;B.replaceChild(W,C);W.appendChild(C);f<m&&(q[c+1]=C=Z.createTextNode(r.substring(w,m)),B.insertBefore(C,W.nextSibling))}f=w;f>=m&&(c+=2);f>=p&&(v+=2)}}finally{h&&(h.style.display=a)}}catch(y){Q.console&&console.log(y&&y.stack||y)}}var Q=\"undefined\"!==typeof window?window:{},J=[\"break,continue,do,else,for,if,return,while\"],K=[[J,\"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"],\n\"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof\"],R=[K,\"alignas,alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where\"],L=[K,\"abstract,assert,boolean,byte,extends,finally,final,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient\"],\nM=[K,\"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,internal,into,is,join,let,lock,null,object,out,override,orderby,params,partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,value,var,virtual,where,yield\"],K=[K,\"abstract,async,await,constructor,debugger,enum,eval,export,from,function,get,import,implements,instanceof,interface,let,null,of,set,undefined,var,with,yield,Infinity,NaN\"],\nN=[J,\"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None\"],O=[J,\"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END\"],J=[J,\"case,done,elif,esac,eval,fi,function,in,local,set,then,until\"],P=/^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/,\nS=/\\S/,T=v({keywords:[R,M,L,K,\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",N,O,J],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),V={};n(T,[\"default-code\"]);n(E([],[[\"pln\",/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[\"com\",/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[\"pun\",/^(?:<[%?]|[%?]>)/],[\"lang-\",\n/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),\"default-markup htm html mxml xhtml xml xsl\".split(\" \"));n(E([[\"pln\",/^[\\s]+/,null,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],\n[\"pun\",/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);n(E([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);n(v({keywords:R,hashComments:!0,cStyleComments:!0,types:P}),\"c cc cpp cxx cyc m\".split(\" \"));n(v({keywords:\"null,true,false\"}),[\"json\"]);n(v({keywords:M,hashComments:!0,cStyleComments:!0,\nverbatimStrings:!0,types:P}),[\"cs\"]);n(v({keywords:L,cStyleComments:!0}),[\"java\"]);n(v({keywords:J,hashComments:!0,multiLineStrings:!0}),[\"bash\",\"bsh\",\"csh\",\"sh\"]);n(v({keywords:N,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),[\"cv\",\"py\",\"python\"]);n(v({keywords:\"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END\",hashComments:!0,multiLineStrings:!0,regexLiterals:2}),\n[\"perl\",\"pl\",\"pm\"]);n(v({keywords:O,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),[\"rb\",\"ruby\"]);n(v({keywords:K,cStyleComments:!0,regexLiterals:!0}),[\"javascript\",\"js\",\"ts\",\"typescript\"]);n(v({keywords:\"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes\",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),[\"coffee\"]);n(E([],[[\"str\",/^[\\s\\S]+/]]),\n[\"regex\"]);var U=Q.PR={createSimpleLexer:E,registerLangHandler:n,sourceDecorator:v,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:\"com\",PR_DECLARATION:\"dec\",PR_KEYWORD:\"kwd\",PR_LITERAL:\"lit\",PR_NOCODE:\"nocode\",PR_PLAIN:\"pln\",PR_PUNCTUATION:\"pun\",PR_SOURCE:\"src\",PR_STRING:\"str\",PR_TAG:\"tag\",PR_TYPE:\"typ\",prettyPrintOne:function(a,d,f){f=f||!1;d=d||null;var c=document.createElement(\"div\");c.innerHTML=\"<pre>\"+a+\"</pre>\";c=c.firstChild;f&&B(c,f,!0);H({j:d,m:f,h:c,l:1,a:null,i:null,c:null,g:null});\nreturn c.innerHTML},prettyPrint:g=function(a,d){function f(){for(var c=Q.PR_SHOULD_USE_CONTINUATION?b.now()+250:Infinity;t<r.length&&b.now()<c;t++){for(var d=r[t],k=h,n=d;n=n.previousSibling;){var q=n.nodeType,l=(7===q||8===q)&&n.nodeValue;if(l?!/^\\??prettify\\b/.test(l):3!==q||/\\S/.test(n.nodeValue))break;if(l){k={};l.replace(/\\b(\\w+)=([\\w:.%+-]+)/g,function(a,b,c){k[b]=c});break}}n=d.className;if((k!==h||u.test(n))&&!e.test(n)){q=!1;for(l=d.parentNode;l;l=l.parentNode)if(w.test(l.tagName)&&l.className&&\nu.test(l.className)){q=!0;break}if(!q){d.className+=\" prettyprinted\";q=k.lang;if(!q){var q=n.match(v),A;!q&&(A=z(d))&&D.test(A.tagName)&&(q=A.className.match(v));q&&(q=q[1])}if(x.test(d.tagName))l=1;else var l=d.currentStyle,y=g.defaultView,l=(l=l?l.whiteSpace:y&&y.getComputedStyle?y.getComputedStyle(d,null).getPropertyValue(\"white-space\"):0)&&\"pre\"===l.substring(0,3);y=k.linenums;(y=\"true\"===y||+y)||(y=(y=n.match(/\\blinenums\\b(?::(\\d+))?/))?y[1]&&y[1].length?+y[1]:!0:!1);y&&B(d,y,l);H({j:q,h:d,m:y,\nl:l,a:null,i:null,c:null,g:null})}}}t<r.length?Q.setTimeout(f,250):\"function\"===typeof a&&a()}for(var c=d||document.body,g=c.ownerDocument||document,c=[c.getElementsByTagName(\"pre\"),c.getElementsByTagName(\"code\"),c.getElementsByTagName(\"xmp\")],r=[],k=0;k<c.length;++k)for(var n=0,l=c[k].length;n<l;++n)r.push(c[k][n]);var c=null,b=Date;b.now||(b={now:function(){return+new Date}});var t=0,v=/\\blang(?:uage)?-([\\w.]+)(?!\\S)/,u=/\\bprettyprint\\b/,e=/\\bprettyprinted\\b/,x=/pre|xmp/i,D=/^code$/i,w=/^(?:pre|code|xmp)$/i,\nh={};f()}},R=Q.define;\"function\"===typeof R&&R.amd&&R(\"google-code-prettify\",[],function(){return U})})();return g}();S||k.setTimeout(T,0)})();}()\n"},{"_content":"/*\n\n Copyright (C) 2015 ribrdb @ code.google.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pun\",/^[:|>?]+/,null,\":|>?\"],[\"dec\",/^%(?:YAML|TAG)[^#\\r\\n]+/,null,\"%\"],[\"typ\",/^[&]\\S+/,null,\"&\"],[\"typ\",/^!\\S*/,null,\"!\"],[\"str\",/^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/,null,'\"'],[\"str\",/^'(?:[^']|'')*(?:'|$)/,null,\"'\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\t\\r\\n\"]],[[\"dec\",/^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/],[\"pun\",/^-/],[\"kwd\",/^[\\w-]+:[ \\r\\n]/],[\"pln\",\n/^\\w+/]]),[\"yaml\",\"yml\"]);\n","source":"plugins/prettify/lang-yaml.js","raw":"/*\n\n Copyright (C) 2015 ribrdb @ code.google.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pun\",/^[:|>?]+/,null,\":|>?\"],[\"dec\",/^%(?:YAML|TAG)[^#\\r\\n]+/,null,\"%\"],[\"typ\",/^[&]\\S+/,null,\"&\"],[\"typ\",/^!\\S*/,null,\"!\"],[\"str\",/^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/,null,'\"'],[\"str\",/^'(?:[^']|'')*(?:'|$)/,null,\"'\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\t\\r\\n\"]],[[\"dec\",/^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/],[\"pun\",/^-/],[\"kwd\",/^[\\w-]+:[ \\r\\n]/],[\"pln\",\n/^\\w+/]]),[\"yaml\",\"yml\"]);\n","date":"2022-03-27T08:23:16.378Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/lang-yaml.js","layout":"false","title":"","comments":1,"_id":"cl22h70vm007r5ossg9yr9yia","content":"/*\n\n Copyright (C) 2015 ribrdb @ code.google.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pun\",/^[:|>?]+/,null,\":|>?\"],[\"dec\",/^%(?:YAML|TAG)[^#\\r\\n]+/,null,\"%\"],[\"typ\",/^[&]\\S+/,null,\"&\"],[\"typ\",/^!\\S*/,null,\"!\"],[\"str\",/^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/,null,'\"'],[\"str\",/^'(?:[^']|'')*(?:'|$)/,null,\"'\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\t\\r\\n\"]],[[\"dec\",/^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/],[\"pun\",/^-/],[\"kwd\",/^[\\w-]+:[ \\r\\n]/],[\"pln\",\n/^\\w+/]]),[\"yaml\",\"yml\"]);\n","site":{"data":{}},"excerpt":"","more":"/*\n\n Copyright (C) 2015 ribrdb @ code.google.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nPR.registerLangHandler(PR.createSimpleLexer([[\"pun\",/^[:|>?]+/,null,\":|>?\"],[\"dec\",/^%(?:YAML|TAG)[^#\\r\\n]+/,null,\"%\"],[\"typ\",/^[&]\\S+/,null,\"&\"],[\"typ\",/^!\\S*/,null,\"!\"],[\"str\",/^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/,null,'\"'],[\"str\",/^'(?:[^']|'')*(?:'|$)/,null,\"'\"],[\"com\",/^#[^\\r\\n]*/,null,\"#\"],[\"pln\",/^\\s+/,null,\" \\t\\r\\n\"]],[[\"dec\",/^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/],[\"pun\",/^-/],[\"kwd\",/^[\\w-]+:[ \\r\\n]/],[\"pln\",\n/^\\w+/]]),[\"yaml\",\"yml\"]);\n"},{"_content":"code .str,pre .str{color:#65B042}code .kwd,pre .kwd{color:#E28964}code .com,pre .com{color:#AEAEAE;font-style:italic}code .typ,pre .typ{color:#89bdff}code .lit,pre .lit{color:#3387CC}code .pln,code .pun,pre .pln,pre .pun{color:#fff}code .tag,pre .tag{color:#89bdff}code .atn,pre .atn{color:#bdb76b}code .atv,pre .atv{color:#65B042}code .dec,pre .dec{color:#3387CC}code.prettyprint,pre.prettyprint{background-color:#000;border-radius:8px}pre.prettyprint{width:95%;margin:1em auto;padding:1em;white-space:pre-wrap}ol.linenums{margin-top:0;margin-bottom:0;color:#AEAEAE}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{code .str,pre .str{color:#060}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#600;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#006;font-weight:700}code .atn,pre .atn{color:#404}code .atv,pre .atv{color:#060}}","source":"plugins/prettify/skins/sunburst.css","raw":"code .str,pre .str{color:#65B042}code .kwd,pre .kwd{color:#E28964}code .com,pre .com{color:#AEAEAE;font-style:italic}code .typ,pre .typ{color:#89bdff}code .lit,pre .lit{color:#3387CC}code .pln,code .pun,pre .pln,pre .pun{color:#fff}code .tag,pre .tag{color:#89bdff}code .atn,pre .atn{color:#bdb76b}code .atv,pre .atv{color:#65B042}code .dec,pre .dec{color:#3387CC}code.prettyprint,pre.prettyprint{background-color:#000;border-radius:8px}pre.prettyprint{width:95%;margin:1em auto;padding:1em;white-space:pre-wrap}ol.linenums{margin-top:0;margin-bottom:0;color:#AEAEAE}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{code .str,pre .str{color:#060}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#600;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#006;font-weight:700}code .atn,pre .atn{color:#404}code .atv,pre .atv{color:#060}}","date":"2022-03-27T08:23:16.388Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/skins/sunburst.css","layout":"false","title":"","comments":1,"_id":"cl22h70vm007s5oss7a8i4116","content":"code .str,pre .str{color:#65B042}code .kwd,pre .kwd{color:#E28964}code .com,pre .com{color:#AEAEAE;font-style:italic}code .typ,pre .typ{color:#89bdff}code .lit,pre .lit{color:#3387CC}code .pln,code .pun,pre .pln,pre .pun{color:#fff}code .tag,pre .tag{color:#89bdff}code .atn,pre .atn{color:#bdb76b}code .atv,pre .atv{color:#65B042}code .dec,pre .dec{color:#3387CC}code.prettyprint,pre.prettyprint{background-color:#000;border-radius:8px}pre.prettyprint{width:95%;margin:1em auto;padding:1em;white-space:pre-wrap}ol.linenums{margin-top:0;margin-bottom:0;color:#AEAEAE}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{code .str,pre .str{color:#060}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#600;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#006;font-weight:700}code .atn,pre .atn{color:#404}code .atv,pre .atv{color:#060}}","site":{"data":{}},"excerpt":"","more":"code .str,pre .str{color:#65B042}code .kwd,pre .kwd{color:#E28964}code .com,pre .com{color:#AEAEAE;font-style:italic}code .typ,pre .typ{color:#89bdff}code .lit,pre .lit{color:#3387CC}code .pln,code .pun,pre .pln,pre .pun{color:#fff}code .tag,pre .tag{color:#89bdff}code .atn,pre .atn{color:#bdb76b}code .atv,pre .atv{color:#65B042}code .dec,pre .dec{color:#3387CC}code.prettyprint,pre.prettyprint{background-color:#000;border-radius:8px}pre.prettyprint{width:95%;margin:1em auto;padding:1em;white-space:pre-wrap}ol.linenums{margin-top:0;margin-bottom:0;color:#AEAEAE}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{code .str,pre .str{color:#060}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#600;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#006;font-weight:700}code .atn,pre .atn{color:#404}code .atv,pre .atv{color:#060}}"},{"_content":"a,code.prettyprint a,pre.prettyprint a{text-decoration:none}code .str,pre .str{color:#fec243}code .kwd,pre .kwd{color:#8470FF}code .com,pre .com{color:#32cd32;font-style:italic}code .typ,pre .typ{color:#6ecbcc}code .lit,pre .lit{color:#d06}code .pun,pre .pun{color:#8B8970}code .pln,pre .pln{color:#f0f0f0}code .tag,pre .tag{color:#9c9cff}code .htm,pre .htm{color:plum}code .xsl,pre .xsl{color:#d0a0d0}code .atn,pre .atn{color:#46eeee;font-weight:400}code .atv,pre .atv{color:#EEB4B4}code .dec,pre .dec{color:#3387CC}code.prettyprint,pre.prettyprint{font-family:'Droid Sans Mono','CPMono_v07 Bold','Droid Sans';font-weight:700;font-size:9pt;background-color:#0f0f0f;-moz-border-radius:8px;-webkit-border-radius:8px;-o-border-radius:8px;-ms-border-radius:8px;-khtml-border-radius:8px;border-radius:8px}pre.prettyprint{width:95%;margin:1em auto;padding:1em;white-space:pre-wrap}ol.linenums{margin-top:0;margin-bottom:0;color:#8B8970}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{code.prettyprint,pre.prettyprint{background-color:#fff}code .str,pre .str{color:#088}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#oc3;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#b66ff7;font-weight:700}code .htm,code .xsl,pre .htm,pre .xsl{color:#606;font-weight:700}code .atn,pre .atn{color:#c71585;font-weight:400}code .atv,pre .atv{color:#088;font-weight:400}}","source":"plugins/google-code-prettify/skins/doxy.css","raw":"a,code.prettyprint a,pre.prettyprint a{text-decoration:none}code .str,pre .str{color:#fec243}code .kwd,pre .kwd{color:#8470FF}code .com,pre .com{color:#32cd32;font-style:italic}code .typ,pre .typ{color:#6ecbcc}code .lit,pre .lit{color:#d06}code .pun,pre .pun{color:#8B8970}code .pln,pre .pln{color:#f0f0f0}code .tag,pre .tag{color:#9c9cff}code .htm,pre .htm{color:plum}code .xsl,pre .xsl{color:#d0a0d0}code .atn,pre .atn{color:#46eeee;font-weight:400}code .atv,pre .atv{color:#EEB4B4}code .dec,pre .dec{color:#3387CC}code.prettyprint,pre.prettyprint{font-family:'Droid Sans Mono','CPMono_v07 Bold','Droid Sans';font-weight:700;font-size:9pt;background-color:#0f0f0f;-moz-border-radius:8px;-webkit-border-radius:8px;-o-border-radius:8px;-ms-border-radius:8px;-khtml-border-radius:8px;border-radius:8px}pre.prettyprint{width:95%;margin:1em auto;padding:1em;white-space:pre-wrap}ol.linenums{margin-top:0;margin-bottom:0;color:#8B8970}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{code.prettyprint,pre.prettyprint{background-color:#fff}code .str,pre .str{color:#088}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#oc3;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#b66ff7;font-weight:700}code .htm,code .xsl,pre .htm,pre .xsl{color:#606;font-weight:700}code .atn,pre .atn{color:#c71585;font-weight:400}code .atv,pre .atv{color:#088;font-weight:400}}","date":"2022-03-27T08:23:16.386Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/skins/doxy.css","layout":"false","title":"","comments":1,"_id":"cl22h70vm007t5oss9ayogog0","content":"a,code.prettyprint a,pre.prettyprint a{text-decoration:none}code .str,pre .str{color:#fec243}code .kwd,pre .kwd{color:#8470FF}code .com,pre .com{color:#32cd32;font-style:italic}code .typ,pre .typ{color:#6ecbcc}code .lit,pre .lit{color:#d06}code .pun,pre .pun{color:#8B8970}code .pln,pre .pln{color:#f0f0f0}code .tag,pre .tag{color:#9c9cff}code .htm,pre .htm{color:plum}code .xsl,pre .xsl{color:#d0a0d0}code .atn,pre .atn{color:#46eeee;font-weight:400}code .atv,pre .atv{color:#EEB4B4}code .dec,pre .dec{color:#3387CC}code.prettyprint,pre.prettyprint{font-family:'Droid Sans Mono','CPMono_v07 Bold','Droid Sans';font-weight:700;font-size:9pt;background-color:#0f0f0f;-moz-border-radius:8px;-webkit-border-radius:8px;-o-border-radius:8px;-ms-border-radius:8px;-khtml-border-radius:8px;border-radius:8px}pre.prettyprint{width:95%;margin:1em auto;padding:1em;white-space:pre-wrap}ol.linenums{margin-top:0;margin-bottom:0;color:#8B8970}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{code.prettyprint,pre.prettyprint{background-color:#fff}code .str,pre .str{color:#088}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#oc3;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#b66ff7;font-weight:700}code .htm,code .xsl,pre .htm,pre .xsl{color:#606;font-weight:700}code .atn,pre .atn{color:#c71585;font-weight:400}code .atv,pre .atv{color:#088;font-weight:400}}","site":{"data":{}},"excerpt":"","more":"a,code.prettyprint a,pre.prettyprint a{text-decoration:none}code .str,pre .str{color:#fec243}code .kwd,pre .kwd{color:#8470FF}code .com,pre .com{color:#32cd32;font-style:italic}code .typ,pre .typ{color:#6ecbcc}code .lit,pre .lit{color:#d06}code .pun,pre .pun{color:#8B8970}code .pln,pre .pln{color:#f0f0f0}code .tag,pre .tag{color:#9c9cff}code .htm,pre .htm{color:plum}code .xsl,pre .xsl{color:#d0a0d0}code .atn,pre .atn{color:#46eeee;font-weight:400}code .atv,pre .atv{color:#EEB4B4}code .dec,pre .dec{color:#3387CC}code.prettyprint,pre.prettyprint{font-family:'Droid Sans Mono','CPMono_v07 Bold','Droid Sans';font-weight:700;font-size:9pt;background-color:#0f0f0f;-moz-border-radius:8px;-webkit-border-radius:8px;-o-border-radius:8px;-ms-border-radius:8px;-khtml-border-radius:8px;border-radius:8px}pre.prettyprint{width:95%;margin:1em auto;padding:1em;white-space:pre-wrap}ol.linenums{margin-top:0;margin-bottom:0;color:#8B8970}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{code.prettyprint,pre.prettyprint{background-color:#fff}code .str,pre .str{color:#088}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#oc3;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#b66ff7;font-weight:700}code .htm,code .xsl,pre .htm,pre .xsl{color:#606;font-weight:700}code .atn,pre .atn{color:#c71585;font-weight:400}code .atv,pre .atv{color:#088;font-weight:400}}"},{"_content":"a,code.prettyprint a,pre.prettyprint a{text-decoration:none}code .str,pre .str{color:#fec243}code .kwd,pre .kwd{color:#8470FF}code .com,pre .com{color:#32cd32;font-style:italic}code .typ,pre .typ{color:#6ecbcc}code .lit,pre .lit{color:#d06}code .pun,pre .pun{color:#8B8970}code .pln,pre .pln{color:#f0f0f0}code .tag,pre .tag{color:#9c9cff}code .htm,pre .htm{color:plum}code .xsl,pre .xsl{color:#d0a0d0}code .atn,pre .atn{color:#46eeee;font-weight:400}code .atv,pre .atv{color:#EEB4B4}code .dec,pre .dec{color:#3387CC}code.prettyprint,pre.prettyprint{font-family:'Droid Sans Mono','CPMono_v07 Bold','Droid Sans';font-weight:700;font-size:9pt;background-color:#0f0f0f;-moz-border-radius:8px;-webkit-border-radius:8px;-o-border-radius:8px;-ms-border-radius:8px;-khtml-border-radius:8px;border-radius:8px}pre.prettyprint{width:95%;margin:1em auto;padding:1em;white-space:pre-wrap}ol.linenums{margin-top:0;margin-bottom:0;color:#8B8970}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{code.prettyprint,pre.prettyprint{background-color:#fff}code .str,pre .str{color:#088}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#oc3;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#b66ff7;font-weight:700}code .htm,code .xsl,pre .htm,pre .xsl{color:#606;font-weight:700}code .atn,pre .atn{color:#c71585;font-weight:400}code .atv,pre .atv{color:#088;font-weight:400}}","source":"plugins/prettify/skins/doxy.css","raw":"a,code.prettyprint a,pre.prettyprint a{text-decoration:none}code .str,pre .str{color:#fec243}code .kwd,pre .kwd{color:#8470FF}code .com,pre .com{color:#32cd32;font-style:italic}code .typ,pre .typ{color:#6ecbcc}code .lit,pre .lit{color:#d06}code .pun,pre .pun{color:#8B8970}code .pln,pre .pln{color:#f0f0f0}code .tag,pre .tag{color:#9c9cff}code .htm,pre .htm{color:plum}code .xsl,pre .xsl{color:#d0a0d0}code .atn,pre .atn{color:#46eeee;font-weight:400}code .atv,pre .atv{color:#EEB4B4}code .dec,pre .dec{color:#3387CC}code.prettyprint,pre.prettyprint{font-family:'Droid Sans Mono','CPMono_v07 Bold','Droid Sans';font-weight:700;font-size:9pt;background-color:#0f0f0f;-moz-border-radius:8px;-webkit-border-radius:8px;-o-border-radius:8px;-ms-border-radius:8px;-khtml-border-radius:8px;border-radius:8px}pre.prettyprint{width:95%;margin:1em auto;padding:1em;white-space:pre-wrap}ol.linenums{margin-top:0;margin-bottom:0;color:#8B8970}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{code.prettyprint,pre.prettyprint{background-color:#fff}code .str,pre .str{color:#088}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#oc3;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#b66ff7;font-weight:700}code .htm,code .xsl,pre .htm,pre .xsl{color:#606;font-weight:700}code .atn,pre .atn{color:#c71585;font-weight:400}code .atv,pre .atv{color:#088;font-weight:400}}","date":"2022-03-27T08:23:16.386Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/skins/doxy.css","layout":"false","title":"","comments":1,"_id":"cl22h70vm007u5oss9y7r72qd","content":"a,code.prettyprint a,pre.prettyprint a{text-decoration:none}code .str,pre .str{color:#fec243}code .kwd,pre .kwd{color:#8470FF}code .com,pre .com{color:#32cd32;font-style:italic}code .typ,pre .typ{color:#6ecbcc}code .lit,pre .lit{color:#d06}code .pun,pre .pun{color:#8B8970}code .pln,pre .pln{color:#f0f0f0}code .tag,pre .tag{color:#9c9cff}code .htm,pre .htm{color:plum}code .xsl,pre .xsl{color:#d0a0d0}code .atn,pre .atn{color:#46eeee;font-weight:400}code .atv,pre .atv{color:#EEB4B4}code .dec,pre .dec{color:#3387CC}code.prettyprint,pre.prettyprint{font-family:'Droid Sans Mono','CPMono_v07 Bold','Droid Sans';font-weight:700;font-size:9pt;background-color:#0f0f0f;-moz-border-radius:8px;-webkit-border-radius:8px;-o-border-radius:8px;-ms-border-radius:8px;-khtml-border-radius:8px;border-radius:8px}pre.prettyprint{width:95%;margin:1em auto;padding:1em;white-space:pre-wrap}ol.linenums{margin-top:0;margin-bottom:0;color:#8B8970}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{code.prettyprint,pre.prettyprint{background-color:#fff}code .str,pre .str{color:#088}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#oc3;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#b66ff7;font-weight:700}code .htm,code .xsl,pre .htm,pre .xsl{color:#606;font-weight:700}code .atn,pre .atn{color:#c71585;font-weight:400}code .atv,pre .atv{color:#088;font-weight:400}}","site":{"data":{}},"excerpt":"","more":"a,code.prettyprint a,pre.prettyprint a{text-decoration:none}code .str,pre .str{color:#fec243}code .kwd,pre .kwd{color:#8470FF}code .com,pre .com{color:#32cd32;font-style:italic}code .typ,pre .typ{color:#6ecbcc}code .lit,pre .lit{color:#d06}code .pun,pre .pun{color:#8B8970}code .pln,pre .pln{color:#f0f0f0}code .tag,pre .tag{color:#9c9cff}code .htm,pre .htm{color:plum}code .xsl,pre .xsl{color:#d0a0d0}code .atn,pre .atn{color:#46eeee;font-weight:400}code .atv,pre .atv{color:#EEB4B4}code .dec,pre .dec{color:#3387CC}code.prettyprint,pre.prettyprint{font-family:'Droid Sans Mono','CPMono_v07 Bold','Droid Sans';font-weight:700;font-size:9pt;background-color:#0f0f0f;-moz-border-radius:8px;-webkit-border-radius:8px;-o-border-radius:8px;-ms-border-radius:8px;-khtml-border-radius:8px;border-radius:8px}pre.prettyprint{width:95%;margin:1em auto;padding:1em;white-space:pre-wrap}ol.linenums{margin-top:0;margin-bottom:0;color:#8B8970}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{code.prettyprint,pre.prettyprint{background-color:#fff}code .str,pre .str{color:#088}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#oc3;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#b66ff7;font-weight:700}code .htm,code .xsl,pre .htm,pre .xsl{color:#606;font-weight:700}code .atn,pre .atn{color:#c71585;font-weight:400}code .atv,pre .atv{color:#088;font-weight:400}}"},{"_content":".str{color:#EC7600}.kwd{color:#93C763}.com{color:#66747B}.typ{color:#678CB1}.lit{color:#FACD22}.pln,.pun{color:#F1F2F3}.tag{color:#8AC763}.atn{color:#E0E2E4}.atv{color:#EC7600}.dec{color:purple}pre.prettyprint{border:0 solid #888}ol.linenums{margin-top:0;margin-bottom:0}.prettyprint{background:#000}li.L0,li.L1,li.L2,li.L3,li.L4,li.L5,li.L6,li.L7,li.L8,li.L9{color:#555;list-style-type:decimal}li.L1,li.L3,li.L5,li.L7,li.L9{background:#111}@media print{.kwd,.tag,.typ{font-weight:700}.str{color:#060}.kwd{color:#006}.com{color:#600;font-style:italic}.typ{color:#404}.lit{color:#044}.pun{color:#440}.pln{color:#000}.tag{color:#006}.atn{color:#404}.atv{color:#060}}","source":"plugins/google-code-prettify/skins/sons-of-obsidian.css","raw":".str{color:#EC7600}.kwd{color:#93C763}.com{color:#66747B}.typ{color:#678CB1}.lit{color:#FACD22}.pln,.pun{color:#F1F2F3}.tag{color:#8AC763}.atn{color:#E0E2E4}.atv{color:#EC7600}.dec{color:purple}pre.prettyprint{border:0 solid #888}ol.linenums{margin-top:0;margin-bottom:0}.prettyprint{background:#000}li.L0,li.L1,li.L2,li.L3,li.L4,li.L5,li.L6,li.L7,li.L8,li.L9{color:#555;list-style-type:decimal}li.L1,li.L3,li.L5,li.L7,li.L9{background:#111}@media print{.kwd,.tag,.typ{font-weight:700}.str{color:#060}.kwd{color:#006}.com{color:#600;font-style:italic}.typ{color:#404}.lit{color:#044}.pun{color:#440}.pln{color:#000}.tag{color:#006}.atn{color:#404}.atv{color:#060}}","date":"2022-03-27T08:23:16.387Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/skins/sons-of-obsidian.css","layout":"false","title":"","comments":1,"_id":"cl22h70vn007v5oss46gbgqq2","content":".str{color:#EC7600}.kwd{color:#93C763}.com{color:#66747B}.typ{color:#678CB1}.lit{color:#FACD22}.pln,.pun{color:#F1F2F3}.tag{color:#8AC763}.atn{color:#E0E2E4}.atv{color:#EC7600}.dec{color:purple}pre.prettyprint{border:0 solid #888}ol.linenums{margin-top:0;margin-bottom:0}.prettyprint{background:#000}li.L0,li.L1,li.L2,li.L3,li.L4,li.L5,li.L6,li.L7,li.L8,li.L9{color:#555;list-style-type:decimal}li.L1,li.L3,li.L5,li.L7,li.L9{background:#111}@media print{.kwd,.tag,.typ{font-weight:700}.str{color:#060}.kwd{color:#006}.com{color:#600;font-style:italic}.typ{color:#404}.lit{color:#044}.pun{color:#440}.pln{color:#000}.tag{color:#006}.atn{color:#404}.atv{color:#060}}","site":{"data":{}},"excerpt":"","more":".str{color:#EC7600}.kwd{color:#93C763}.com{color:#66747B}.typ{color:#678CB1}.lit{color:#FACD22}.pln,.pun{color:#F1F2F3}.tag{color:#8AC763}.atn{color:#E0E2E4}.atv{color:#EC7600}.dec{color:purple}pre.prettyprint{border:0 solid #888}ol.linenums{margin-top:0;margin-bottom:0}.prettyprint{background:#000}li.L0,li.L1,li.L2,li.L3,li.L4,li.L5,li.L6,li.L7,li.L8,li.L9{color:#555;list-style-type:decimal}li.L1,li.L3,li.L5,li.L7,li.L9{background:#111}@media print{.kwd,.tag,.typ{font-weight:700}.str{color:#060}.kwd{color:#006}.com{color:#600;font-style:italic}.typ{color:#404}.lit{color:#044}.pun{color:#440}.pln{color:#000}.tag{color:#006}.atn{color:#404}.atv{color:#060}}"},{"_content":".str{color:#EC7600}.kwd{color:#93C763}.com{color:#66747B}.typ{color:#678CB1}.lit{color:#FACD22}.pln,.pun{color:#F1F2F3}.tag{color:#8AC763}.atn{color:#E0E2E4}.atv{color:#EC7600}.dec{color:purple}pre.prettyprint{border:0 solid #888}ol.linenums{margin-top:0;margin-bottom:0}.prettyprint{background:#000}li.L0,li.L1,li.L2,li.L3,li.L4,li.L5,li.L6,li.L7,li.L8,li.L9{color:#555;list-style-type:decimal}li.L1,li.L3,li.L5,li.L7,li.L9{background:#111}@media print{.kwd,.tag,.typ{font-weight:700}.str{color:#060}.kwd{color:#006}.com{color:#600;font-style:italic}.typ{color:#404}.lit{color:#044}.pun{color:#440}.pln{color:#000}.tag{color:#006}.atn{color:#404}.atv{color:#060}}","source":"plugins/prettify/skins/sons-of-obsidian.css","raw":".str{color:#EC7600}.kwd{color:#93C763}.com{color:#66747B}.typ{color:#678CB1}.lit{color:#FACD22}.pln,.pun{color:#F1F2F3}.tag{color:#8AC763}.atn{color:#E0E2E4}.atv{color:#EC7600}.dec{color:purple}pre.prettyprint{border:0 solid #888}ol.linenums{margin-top:0;margin-bottom:0}.prettyprint{background:#000}li.L0,li.L1,li.L2,li.L3,li.L4,li.L5,li.L6,li.L7,li.L8,li.L9{color:#555;list-style-type:decimal}li.L1,li.L3,li.L5,li.L7,li.L9{background:#111}@media print{.kwd,.tag,.typ{font-weight:700}.str{color:#060}.kwd{color:#006}.com{color:#600;font-style:italic}.typ{color:#404}.lit{color:#044}.pun{color:#440}.pln{color:#000}.tag{color:#006}.atn{color:#404}.atv{color:#060}}","date":"2022-03-27T08:23:16.387Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/skins/sons-of-obsidian.css","layout":"false","title":"","comments":1,"_id":"cl22h70vn007w5oss2vek77b9","content":".str{color:#EC7600}.kwd{color:#93C763}.com{color:#66747B}.typ{color:#678CB1}.lit{color:#FACD22}.pln,.pun{color:#F1F2F3}.tag{color:#8AC763}.atn{color:#E0E2E4}.atv{color:#EC7600}.dec{color:purple}pre.prettyprint{border:0 solid #888}ol.linenums{margin-top:0;margin-bottom:0}.prettyprint{background:#000}li.L0,li.L1,li.L2,li.L3,li.L4,li.L5,li.L6,li.L7,li.L8,li.L9{color:#555;list-style-type:decimal}li.L1,li.L3,li.L5,li.L7,li.L9{background:#111}@media print{.kwd,.tag,.typ{font-weight:700}.str{color:#060}.kwd{color:#006}.com{color:#600;font-style:italic}.typ{color:#404}.lit{color:#044}.pun{color:#440}.pln{color:#000}.tag{color:#006}.atn{color:#404}.atv{color:#060}}","site":{"data":{}},"excerpt":"","more":".str{color:#EC7600}.kwd{color:#93C763}.com{color:#66747B}.typ{color:#678CB1}.lit{color:#FACD22}.pln,.pun{color:#F1F2F3}.tag{color:#8AC763}.atn{color:#E0E2E4}.atv{color:#EC7600}.dec{color:purple}pre.prettyprint{border:0 solid #888}ol.linenums{margin-top:0;margin-bottom:0}.prettyprint{background:#000}li.L0,li.L1,li.L2,li.L3,li.L4,li.L5,li.L6,li.L7,li.L8,li.L9{color:#555;list-style-type:decimal}li.L1,li.L3,li.L5,li.L7,li.L9{background:#111}@media print{.kwd,.tag,.typ{font-weight:700}.str{color:#060}.kwd{color:#006}.com{color:#600;font-style:italic}.typ{color:#404}.lit{color:#044}.pun{color:#440}.pln{color:#000}.tag{color:#006}.atn{color:#404}.atv{color:#060}}"},{"_content":"pre .atn,pre .kwd,pre .tag{font-weight:700}pre.prettyprint{display:block;background-color:#333}pre .nocode{background-color:none;color:#000}pre .str{color:#ffa0a0}pre .kwd{color:khaki}pre .com{color:#87ceeb}pre .typ{color:#98fb98}pre .lit{color:#cd5c5c}pre .pln,pre .pun{color:#fff}pre .tag{color:khaki}pre .atn{color:#bdb76b}pre .atv{color:#ffa0a0}pre .dec{color:#98fb98}ol.linenums{margin-top:0;margin-bottom:0;color:#AEAEAE}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{pre.prettyprint{background-color:none}code .str,pre .str{color:#060}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#600;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#006;font-weight:700}code .atn,pre .atn{color:#404}code .atv,pre .atv{color:#060}}","source":"plugins/prettify/skins/desert.css","raw":"pre .atn,pre .kwd,pre .tag{font-weight:700}pre.prettyprint{display:block;background-color:#333}pre .nocode{background-color:none;color:#000}pre .str{color:#ffa0a0}pre .kwd{color:khaki}pre .com{color:#87ceeb}pre .typ{color:#98fb98}pre .lit{color:#cd5c5c}pre .pln,pre .pun{color:#fff}pre .tag{color:khaki}pre .atn{color:#bdb76b}pre .atv{color:#ffa0a0}pre .dec{color:#98fb98}ol.linenums{margin-top:0;margin-bottom:0;color:#AEAEAE}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{pre.prettyprint{background-color:none}code .str,pre .str{color:#060}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#600;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#006;font-weight:700}code .atn,pre .atn{color:#404}code .atv,pre .atv{color:#060}}","date":"2022-03-27T08:23:16.385Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/prettify/skins/desert.css","layout":"false","title":"","comments":1,"_id":"cl22h70vo007x5ossfif54g6i","content":"pre .atn,pre .kwd,pre .tag{font-weight:700}pre.prettyprint{display:block;background-color:#333}pre .nocode{background-color:none;color:#000}pre .str{color:#ffa0a0}pre .kwd{color:khaki}pre .com{color:#87ceeb}pre .typ{color:#98fb98}pre .lit{color:#cd5c5c}pre .pln,pre .pun{color:#fff}pre .tag{color:khaki}pre .atn{color:#bdb76b}pre .atv{color:#ffa0a0}pre .dec{color:#98fb98}ol.linenums{margin-top:0;margin-bottom:0;color:#AEAEAE}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{pre.prettyprint{background-color:none}code .str,pre .str{color:#060}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#600;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#006;font-weight:700}code .atn,pre .atn{color:#404}code .atv,pre .atv{color:#060}}","site":{"data":{}},"excerpt":"","more":"pre .atn,pre .kwd,pre .tag{font-weight:700}pre.prettyprint{display:block;background-color:#333}pre .nocode{background-color:none;color:#000}pre .str{color:#ffa0a0}pre .kwd{color:khaki}pre .com{color:#87ceeb}pre .typ{color:#98fb98}pre .lit{color:#cd5c5c}pre .pln,pre .pun{color:#fff}pre .tag{color:khaki}pre .atn{color:#bdb76b}pre .atv{color:#ffa0a0}pre .dec{color:#98fb98}ol.linenums{margin-top:0;margin-bottom:0;color:#AEAEAE}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{pre.prettyprint{background-color:none}code .str,pre .str{color:#060}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#600;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#006;font-weight:700}code .atn,pre .atn{color:#404}code .atv,pre .atv{color:#060}}"},{"_content":"code .str,pre .str{color:#65B042}code .kwd,pre .kwd{color:#E28964}code .com,pre .com{color:#AEAEAE;font-style:italic}code .typ,pre .typ{color:#89bdff}code .lit,pre .lit{color:#3387CC}code .pln,code .pun,pre .pln,pre .pun{color:#fff}code .tag,pre .tag{color:#89bdff}code .atn,pre .atn{color:#bdb76b}code .atv,pre .atv{color:#65B042}code .dec,pre .dec{color:#3387CC}code.prettyprint,pre.prettyprint{background-color:#000;border-radius:8px}pre.prettyprint{width:95%;margin:1em auto;padding:1em;white-space:pre-wrap}ol.linenums{margin-top:0;margin-bottom:0;color:#AEAEAE}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{code .str,pre .str{color:#060}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#600;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#006;font-weight:700}code .atn,pre .atn{color:#404}code .atv,pre .atv{color:#060}}","source":"plugins/google-code-prettify/skins/sunburst.css","raw":"code .str,pre .str{color:#65B042}code .kwd,pre .kwd{color:#E28964}code .com,pre .com{color:#AEAEAE;font-style:italic}code .typ,pre .typ{color:#89bdff}code .lit,pre .lit{color:#3387CC}code .pln,code .pun,pre .pln,pre .pun{color:#fff}code .tag,pre .tag{color:#89bdff}code .atn,pre .atn{color:#bdb76b}code .atv,pre .atv{color:#65B042}code .dec,pre .dec{color:#3387CC}code.prettyprint,pre.prettyprint{background-color:#000;border-radius:8px}pre.prettyprint{width:95%;margin:1em auto;padding:1em;white-space:pre-wrap}ol.linenums{margin-top:0;margin-bottom:0;color:#AEAEAE}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{code .str,pre .str{color:#060}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#600;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#006;font-weight:700}code .atn,pre .atn{color:#404}code .atv,pre .atv{color:#060}}","date":"2022-03-27T08:23:16.388Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/skins/sunburst.css","layout":"false","title":"","comments":1,"_id":"cl22h70vo007y5oss79s891my","content":"code .str,pre .str{color:#65B042}code .kwd,pre .kwd{color:#E28964}code .com,pre .com{color:#AEAEAE;font-style:italic}code .typ,pre .typ{color:#89bdff}code .lit,pre .lit{color:#3387CC}code .pln,code .pun,pre .pln,pre .pun{color:#fff}code .tag,pre .tag{color:#89bdff}code .atn,pre .atn{color:#bdb76b}code .atv,pre .atv{color:#65B042}code .dec,pre .dec{color:#3387CC}code.prettyprint,pre.prettyprint{background-color:#000;border-radius:8px}pre.prettyprint{width:95%;margin:1em auto;padding:1em;white-space:pre-wrap}ol.linenums{margin-top:0;margin-bottom:0;color:#AEAEAE}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{code .str,pre .str{color:#060}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#600;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#006;font-weight:700}code .atn,pre .atn{color:#404}code .atv,pre .atv{color:#060}}","site":{"data":{}},"excerpt":"","more":"code .str,pre .str{color:#65B042}code .kwd,pre .kwd{color:#E28964}code .com,pre .com{color:#AEAEAE;font-style:italic}code .typ,pre .typ{color:#89bdff}code .lit,pre .lit{color:#3387CC}code .pln,code .pun,pre .pln,pre .pun{color:#fff}code .tag,pre .tag{color:#89bdff}code .atn,pre .atn{color:#bdb76b}code .atv,pre .atv{color:#65B042}code .dec,pre .dec{color:#3387CC}code.prettyprint,pre.prettyprint{background-color:#000;border-radius:8px}pre.prettyprint{width:95%;margin:1em auto;padding:1em;white-space:pre-wrap}ol.linenums{margin-top:0;margin-bottom:0;color:#AEAEAE}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{code .str,pre .str{color:#060}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#600;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#006;font-weight:700}code .atn,pre .atn{color:#404}code .atv,pre .atv{color:#060}}"},{"_content":"pre .atn,pre .kwd,pre .tag{font-weight:700}pre.prettyprint{display:block;background-color:#333}pre .nocode{background-color:none;color:#000}pre .str{color:#ffa0a0}pre .kwd{color:khaki}pre .com{color:#87ceeb}pre .typ{color:#98fb98}pre .lit{color:#cd5c5c}pre .pln,pre .pun{color:#fff}pre .tag{color:khaki}pre .atn{color:#bdb76b}pre .atv{color:#ffa0a0}pre .dec{color:#98fb98}ol.linenums{margin-top:0;margin-bottom:0;color:#AEAEAE}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{pre.prettyprint{background-color:none}code .str,pre .str{color:#060}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#600;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#006;font-weight:700}code .atn,pre .atn{color:#404}code .atv,pre .atv{color:#060}}","source":"plugins/google-code-prettify/skins/desert.css","raw":"pre .atn,pre .kwd,pre .tag{font-weight:700}pre.prettyprint{display:block;background-color:#333}pre .nocode{background-color:none;color:#000}pre .str{color:#ffa0a0}pre .kwd{color:khaki}pre .com{color:#87ceeb}pre .typ{color:#98fb98}pre .lit{color:#cd5c5c}pre .pln,pre .pun{color:#fff}pre .tag{color:khaki}pre .atn{color:#bdb76b}pre .atv{color:#ffa0a0}pre .dec{color:#98fb98}ol.linenums{margin-top:0;margin-bottom:0;color:#AEAEAE}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{pre.prettyprint{background-color:none}code .str,pre .str{color:#060}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#600;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#006;font-weight:700}code .atn,pre .atn{color:#404}code .atv,pre .atv{color:#060}}","date":"2022-03-27T08:23:16.385Z","updated":"2018-12-17T07:47:10.000Z","path":"plugins/google-code-prettify/skins/desert.css","layout":"false","title":"","comments":1,"_id":"cl22h70vp007z5oss1mb1c7aa","content":"pre .atn,pre .kwd,pre .tag{font-weight:700}pre.prettyprint{display:block;background-color:#333}pre .nocode{background-color:none;color:#000}pre .str{color:#ffa0a0}pre .kwd{color:khaki}pre .com{color:#87ceeb}pre .typ{color:#98fb98}pre .lit{color:#cd5c5c}pre .pln,pre .pun{color:#fff}pre .tag{color:khaki}pre .atn{color:#bdb76b}pre .atv{color:#ffa0a0}pre .dec{color:#98fb98}ol.linenums{margin-top:0;margin-bottom:0;color:#AEAEAE}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{pre.prettyprint{background-color:none}code .str,pre .str{color:#060}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#600;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#006;font-weight:700}code .atn,pre .atn{color:#404}code .atv,pre .atv{color:#060}}","site":{"data":{}},"excerpt":"","more":"pre .atn,pre .kwd,pre .tag{font-weight:700}pre.prettyprint{display:block;background-color:#333}pre .nocode{background-color:none;color:#000}pre .str{color:#ffa0a0}pre .kwd{color:khaki}pre .com{color:#87ceeb}pre .typ{color:#98fb98}pre .lit{color:#cd5c5c}pre .pln,pre .pun{color:#fff}pre .tag{color:khaki}pre .atn{color:#bdb76b}pre .atv{color:#ffa0a0}pre .dec{color:#98fb98}ol.linenums{margin-top:0;margin-bottom:0;color:#AEAEAE}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}@media print{pre.prettyprint{background-color:none}code .str,pre .str{color:#060}code .kwd,pre .kwd{color:#006;font-weight:700}code .com,pre .com{color:#600;font-style:italic}code .typ,pre .typ{color:#404;font-weight:700}code .lit,pre .lit{color:#044}code .pun,pre .pun{color:#440}code .pln,pre .pln{color:#000}code .tag,pre .tag{color:#006;font-weight:700}code .atn,pre .atn{color:#404}code .atv,pre .atv{color:#060}}"}],"Post":[{"title":"Leetcode30天算法挑战","date":"2021-03-28T14:30:00.000Z","id":"leetcode1","_content":"\nleetcod的一个算法练习计划，一天一道算法题，一共30道题。\n\n跟着[Feis Studio](https://feis.studio/#/)的Feis Lee老师学的。视频链接：[【C 語言的 LeetCode 30 天挑戰】](https://www.bilibili.com/video/BV1764y1M7a6?spm_id_from=..search-card.all.click)\n\n实现语言：C\n\n<!-- more -->\n\n## April\n\n\n\n### 53. Maximum Subarray\n\nGiven an integer array `nums`, find the contiguous subarray (containing at least one number) which has the largest sum and return *its sum*.\n\nA **subarray** is a **contiguous** part of an array.\n\n \n\n**Example 1:**\n\n```\nInput: nums = [-2,1,-3,4,-1,2,1,-5,4]\nOutput: 6\nExplanation: [4,-1,2,1] has the largest sum = 6.\n```\n\n**Solution:**\n\n```c\nint cmp(int a, int b){\n    return (a > b) ? a : b;\n}\n\nint maxSubArray(int* nums, int numsSize){\n    int pre = 0;\n    int max = nums[0];\n    \n    for(int i = 0; i < numsSize; i++) {\n        pre = cmp(pre + nums[i], nums[i]);\n        max = cmp(pre, max);\n    }\n\n    return max;\n}\n```\n\n\n\n\n\n### 136. Single Number\n\nGiven a **non-empty** array of integers `nums`, every element appears *twice* except for one. Find that single one.\n\nYou must implement a solution with a linear runtime complexity and use only constant extra space.\n\n \n\n**Example 1:**\n\n```\nInput: nums = [2,2,1]\nOutput: 1\n```\n\n**Solution:**\n\n```c\n// 经典异或题目\n\nint singleNumber(int* nums, int numsSize) {   \n    \n    for (int i = 1; i < numsSize; i++) {\n        \n        nums[0] = nums[0] ^ nums[i];\n        \n    }    \n    \n    return nums[0];\n}\n```\n\n\n\n\n\n### 202. Happy Number\n\nWrite an algorithm to determine if a number `n` is happy.\n\nA **happy number** is a number defined by the following process:\n\n-   Starting with any positive integer, replace the number by the sum of the squares of its digits.\n-   Repeat the process until the number equals 1 (where it will stay), or it **loops endlessly in a cycle** which does not include 1.\n-   Those numbers for which this process **ends in 1** are happy.\n\nReturn `true` *if* `n` *is a happy number, and* `false` *if not*.\n\n \n\n**Example 1:**\n\n```\nInput: n = 19\nOutput: true\nExplanation:\n12 + 92 = 82\n82 + 22 = 68\n62 + 82 = 100\n12 + 02 + 02 = 1\n```\n\n**Solution:**\n\n```c\n// 龟兔赛跑 slow fast\n\nint next(int n) {\n    int n1 = 0;\n    while(n != 0) {\n        n1 += (n % 10) * (n % 10);\n        n /= 10;\n    }\n    return n1;\n}\n\n\nbool isHappy(int n){\n    int slow = n;\n    int fast = next(n);\n    while (slow != fast && fast != 1) {\n        slow = next(slow);\n        fast = next(next(fast));\n    }\n    if (fast == 1) return true;\n    return false;\n}\n```\n\n\n\n\n\n### 283. Move Zeroes\n\nGiven an integer array `nums`, move all `0`'s to the end of it while maintaining the relative order of the non-zero elements.\n\n**Note** that you must do this in-place without making a copy of the array.\n\n \n\n**Example 1:**\n\n```\nInput: nums = [0,1,0,3,12]\nOutput: [1,3,12,0,0]\n```\n\n**Solution:**\n\n```c\nvoid swap(int *a, int *b) {\n    int t = *a;\n    *a = *b, *b = t;\n}\n\nvoid moveZeroes(int *nums, int numsSize) {\n    int left = 0, right = 0;\n    while (right < numsSize) {\n        if (nums[right]) {\n            swap(nums + left, nums + right);\n            left++;\n        }\n        right++;\n    }\n}\n```\n\n\n\n\n\n### 122. Best Time to Buy and Sell Stock II\n\nYou are given an integer array `prices` where `prices[i]` is the price of a given stock on the `ith` day.\n\nOn each day, you may decide to buy and/or sell the stock. You can only hold **at most one** share of the stock at any time. However, you can buy it then immediately sell it on the **same day**.\n\nFind and return *the **maximum** profit you can achieve*.\n\n \n\n**Example 1:**\n\n```\nInput: prices = [7,1,5,3,6,4]\nOutput: 7\nExplanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\nThen buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.\nTotal profit is 4 + 3 = 7.\n```\n\n**Solution 1:**\n\n```c\n// The Limit Exceeded\n\nint maxProfit(int* prices, int pricesSize){\n    \n    if (pricesSize <= 1) return 0;\n    \n    int profit;\n    int max = 0;\n    \n    // 最后一天不卖\n    profit = maxProfit(prices, pricesSize - 1);\n    if (profit > max) max = profit;\n    \n    // 最后一天卖\n    for (int i = 0; i < pricesSize - 1; i++) {\n        profit = prices[pricesSize - 1] - prices[i] + maxProfit(prices, i);\n        if (profit > max) max = profit;\n    }\n     \n    return max;\n}\n```\n\n**Solution 2: Peak Valley Approach**\n\n![](https://zhenruyi.github.io/images/algo02Leetcode30daysApril122_1.png)\n\n```c\n// 所有波峰加波谷之和\n\nint maxProfit(int* prices, int pricesSize){\n    int i = 1;\n    int valley = prices[0];\n    int peak = prices[0];\n    int profit = 0;\n    \n    while(i < pricesSize) {\n        while(i < pricesSize && prices[i] <= prices[i-1])\n            i++;\n        valley = prices[i-1];\n        \n        while(i < pricesSize && prices[i] >= prices[i-1])\n            i++;\n        peak = prices[i-1];\n        profit += peak - valley;\n    }\n    return profit;\n}\n```\n\n改进：\n\n![](https://zhenruyi.github.io/images/algo02Leetcode30daysApril122_2.png)\n\n```java\nJAVA:\n\nclass Solution {\n    public int maxProfit(int[] prices) {\n        int maxprofit = 0;\n        for (int i = 1; i < prices.length; i++) {\n            if (prices[i] > prices[i - 1])\n                maxprofit += prices[i] - prices[i - 1];\n        }\n        return maxprofit;\n    }\n}\n```\n\n**Solution 2: 乐扣**\n\n```c\n// 动态规划\n// 0:手中没有股票, 1:手中有股票\nint maxProfit(int* prices, int pricesSize){\n    int profit[pricesSize][2];\n    // 手中没有股票\n    profit[0][0] = 0;\n    // 手中有股票\n    profit[0][1] = -prices[0];\n    \n    for(int i=1; i<pricesSize; i++) {\n        profit[i][0] = profit[i-1][0] > (profit[i-1][1]+prices[i]) ? profit[i-1][0] : (profit[i-1][1]+prices[i]);\n        profit[i][1] = profit[i-1][1] > (profit[i-1][0]-prices[i]) ? profit[i-1][1] : (profit[i-1][0]-prices[i]);\n    }\n    \n    return profit[pricesSize - 1][0];\n}\n```\n\n```c\n// 贪心算法\n// 在每个区间都是获得利润\nint maxProfit(int* prices, int pricesSize){\n    int profit = 0;\n    \n    for(int i = 1; i < pricesSize; i++) {\n        profit += (prices[i] - prices[i-1] > 0) ? prices[i] - prices[i-1] : 0;\n    }\n    return profit;\n}\n```\n\n\n\n\n\n\n\n### 49. Group Anagrams\n\nGiven an array of strings `strs`, group **the anagrams** together. You can return the answer in **any order**.\n\nAn **Anagram** is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n \n\n**Example 1:**\n\n```\nInput: strs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]\nOutput: [[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]]\n```\n\n**Solution 1:**\n\n用质数表示26个字母，把字符串的各个字母相乘，这样可保证字母异位词的乘积必定是相等的。其余步骤就是用map存储，和别人的一致了。\n\n\n\n\n\n### 876. Middle of the Linked List\n\nGiven the `head` of a singly linked list, return *the middle node of the linked list*.\n\nIf there are two middle nodes, return **the second middle** node.\n\n\n\n**Solution 1:**\n\n```c\nstruct ListNode* middleNode(struct ListNode* head){\n    int nodeSize = 0;\n    struct ListNode* p = head;\n    while(p != NULL) {\n        nodeSize++;\n        p = p->next;\n    }\n    \n    nodeSize /= 2;\n    for(int i=0; i<nodeSize; i++) {\n        head = head->next;\n    }\n    return head;\n}\n```\n\n**Solution 2: 快慢指针，快的比慢的快两倍**\n\n```c\nstruct ListNode* middleNode(struct ListNode* head){\n    struct ListNode *fast, *slow;\n    fast = head;\n    slow = head;\n    while(fast->next != NULL && fast != NULL) {\n        if(fast->next->next == NULL)\n            return slow->next;\n        fast = fast->next->next;\n        slow = slow->next;\n    }\n    return slow;\n}\n```\n\n\n\n\n\n### 844. Backspace String Compare\n\nGiven two strings `s` and `t`, return `true` *if they are equal when both are typed into empty text editors*. `'#'` means a backspace character.\n\nNote that after backspacing an empty text, the text will continue empty.\n\n \n\n**Example 1:**\n\n```\nInput: s = \"ab#c\", t = \"ad#c\"\nOutput: true\nExplanation: Both s and t become \"ac\".\n```\n\n**Solution 1: 重构字符串**\n\n```c\nbool backspaceCompare(char * s, char * t){\n    char sNew[201];\n    char tNew[201];\n    \n    int i = 0;\n    int j = 0;\n    while(s[i] != '\\0') {\n        if(s[i] == '#') {\n            if(j > 0)\n                j--;\n            i++;\n            continue;\n        }\n        sNew[j] = s[i];\n        j++;\n        i++;\n    }\n    sNew[j] = '\\0';\n    \n    i = 0;\n    j = 0;\n    while(t[i] != '\\0') {\n        if(t[i] == '#') {\n            if(j > 0)\n                j--;\n            i++;\n            continue;\n        }\n        tNew[j] = t[i];\n        j++;\n        i++;\n    }\n    tNew[j] = '\\0';\n    \n    i = 0;\n    while(sNew[i] != '\\0' || tNew[i] != '\\0') {\n        if(sNew[i] != tNew[i])\n            return false;\n    \ti++;\n    }\n    return true;\n}\n```\n\n**Solution 2: 双指针**\n\n```c\nbool backspaceCompare(char * s, char * t){\n    int ps = strlen(s) - 1;\n    int pt = strlen(t) - 1;\n    int sSkip = 0, tSkip = 0;\n    \n    while(ps >= 0 || pt >= 0) {\n        while(ps >= 0) {\n            if(s[ps] == '#') {\n                ps--;\n                sSkip++;\n            } else if(sSkip > 0) {\n                ps--;\n                sSkip--;\n            } else {\n                break;\n            }\n        }\n        \n        while(pt >= 0) {\n            if(t[pt] == '#') {\n                pt--;\n                tSkip++;\n            } else if (tSkip > 0) {\n                pt--;\n                tSkip--;\n            } else {\n                break;\n            }\n        }\n        \n        if (pt >= 0 && ps >= 0) {\n            if (s[ps] != t[pt]) {\n                return false;\n            }\n        } else {\n            if (ps >= 0 || pt >= 0) {\n                return false;\n            }\n        }\n        ps--, pt--;\n    }\n    return true;\n}\n```\n\n\n\n\n\n### 155. Min Stack\n\nDesign a stack that supports push, pop, top, and retrieving the minimum element in constant time.\n\nImplement the `MinStack` class:\n\n-   `MinStack()` initializes the stack object.\n-   `void push(int val)` pushes the element `val` onto the stack.\n-   `void pop()` removes the element on the top of the stack.\n-   `int top()` gets the top element of the stack.\n-   `int getMin()` retrieves the minimum element in the stack.\n\n \n\n**Example 1:**\n\n```\nInput\n[\"MinStack\",\"push\",\"push\",\"push\",\"getMin\",\"pop\",\"top\",\"getMin\"]\n[[],[-2],[0],[-3],[],[],[],[]]\n\nOutput\n[null,null,null,null,-3,null,0,-2]\n\nExplanation\nMinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.getMin(); // return -3\nminStack.pop();\nminStack.top();    // return 0\nminStack.getMin(); // return -2\n```\n\n**Solution 1:**\n\n```c\ntypedef struct {\n    int* data;\n    int* mins;\n    int size;\n} MinStack;\n\n\nMinStack* minStackCreate() {\n    MinStack* s = malloc(sizeof(MinStack));\n    s->data = NULL;\n    s->mins = NULL;\n    s->size = 0;\n    return s;\n}\n\nvoid minStackPush(MinStack* obj, int val) {\n    obj->size++;\n    obj->data = realloc(obj->data, sizeof(int)*(obj->size));\n    obj->mins = realloc(obj->mins, sizeof(int)*(obj->size));\n    obj->data[obj->size-1] = val;\n    if(obj->size == 1) {\n        obj->mins[obj->size-1] = val;\n    } else {\n        if(val < obj->mins[obj->size-2]) {\n            obj->mins[obj->size-1] = val;\n        } else {\n            obj->mins[obj->size-1] = obj->mins[obj->size-2];\n        }\n    }\n}\n\nvoid minStackPop(MinStack* obj) {\n    obj->size--;\n}\n\nint minStackTop(MinStack* obj) {\n    return obj->data[obj->size-1];\n}\n\nint minStackGetMin(MinStack* obj) {\n    return obj->mins[obj->size-1];\n}\n\nvoid minStackFree(MinStack* obj) {\n    free(obj->data);\n    free(obj->mins);\n    free(obj);\n}\n```\n\n**Solution 2: 辅助栈：力扣**\n\n\n\n\n\n### 543. Diameter of Binary Tree\n\nGiven the `root` of a binary tree, return *the length of the **diameter** of the tree*.\n\nThe **diameter** of a binary tree is the **length** of the longest path between any two nodes in a tree. This path may or may not pass through the `root`.\n\nThe **length** of a path between two nodes is represented by the number of edges between them.\n\n\n\n**Solution 1:**\n\n```c\n// 假定一个结点root，先求出左枝最大深度，再求右枝最大深度，相加就是最大半径\n// 最大半径不一定经过root，求出所有结点的最大半径，再比较就可以。\n\nint maxDepth(struct TreeNode* root) {\n    if(root == NULL) return 0;\n    \n    int left = maxDepth(root->left) + 1;\n    int right = maxDepth(root->right) + 1;\n    \n    if(left > right) return left;\n    return right;\n}\n\n\nint diameterOfBinaryTree(struct TreeNode* root){\n    \n    if(root == NULL) return 0;\n    \n    int leftDep = maxDepth(root->left);\n    int rightDep = maxDepth(root->right);\n    int middleDia = leftDep + rightDep;\n    int maxDia = middleDia;\n    \n    int leftDia = diameterOfBinaryTree(root->left);\n    int rightDia = diameterOfBinaryTree(root->right);\n    \n    if(leftDia > maxDia) maxDia = leftDia;\n    if(rightDia > maxDia) maxDia = rightDia;\n    \n    return maxDia;\n}\n```\n\n\n\n\n\n### 1046. Last Stone Weight\n\nYou are given an array of integers `stones` where `stones[i]` is the weight of the `ith` stone.\n\nWe are playing a game with the stones. On each turn, we choose the **heaviest two stones** and smash them together. Suppose the heaviest two stones have weights `x` and `y` with `x <= y`. The result of this smash is:\n\n-   If `x == y`, both stones are destroyed, and\n-   If `x != y`, the stone of weight `x` is destroyed, and the stone of weight `y` has new weight `y - x`.\n\nAt the end of the game, there is **at most one** stone left.\n\nReturn *the smallest possible weight of the left stone*. If there are no stones left, return `0`.\n\n \n\n**Example 1:**\n\n```\nInput: stones = [2,7,4,1,8,1]\nOutput: 1\nExplanation: \nWe combine 7 and 8 to get 1 so the array converts to [2,4,1,1,1] then,\nwe combine 2 and 4 to get 2 so the array converts to [2,1,1,1] then,\nwe combine 2 and 1 to get 1 so the array converts to [1,1,1] then,\nwe combine 1 and 1 to get 0 so the array converts to [1] then that's the value of the last stone.\n```\n\n**Solution 1:**\n\n```c\n// 返回最大重量\nint findBig(int* stonesN) {\n    for(int i = 1000; i > 0; i--) {\n        if(stonesN[i] > 0) {\n            stonesN[i]--;\n            return i;\n        }\n    }\n    return 0;\n}\n\nint lastStoneWeight(int* stones, int stonesSize){\n    // 该重量的石头有几个？\n    int stonesN[1001] = {0};\n    for(int i = 0; i < stonesSize; i++) {\n        stonesN[stones[i]]++;\n    }\n    // 最大重量y，第二大重量x\n    int y = findBig(stonesN);\n    int x = findBig(stonesN);\n    \n    while(x != 0) {\n        // 摧毁之后再放回去\n        stonesN[y-x]++;\n        y = findBig(stonesN);\n        x = findBig(stonesN);\n    }\n    return y;\n}\n```\n\n\n\n\n\n### 525. Contiguous Array\n\nGiven a binary array `nums`, return *the maximum length of a contiguous subarray with an equal number of* `0` *and* `1`.\n\n \n\n**Example 1:**\n\n```\nInput: nums = [0,1]\nOutput: 2\nExplanation: [0, 1] is the longest contiguous subarray with an equal number of 0 and 1.\n```\n\n**Example 2:**\n\n```\nInput: nums = [0,1,0]\nOutput: 2\nExplanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.\n```\n\n**Solution 1: 前缀和**\n\n```c\n// Time Limit Exceeded\nint findMaxLength(int* nums, int numsSize){\n    \n    for(int i = 0; i < numsSize; i++)\n        if(nums[i] == 0) nums[i] = -1;\n\n    int perSum[numsSize + 1];\n    perSum[0] = 0;\n    int counter = 0;\n    for(int i = 0; i < numsSize; i++) {\n        counter += nums[i];\n        perSum[i + 1] = counter;\n    }\n    \n    int maxLen = 0;\n    for(int i = 0; i < numsSize; i++) {\n        int len = 0;\n        for(int j = numsSize; j >= i; j--) {\n            if(perSum[i] == perSum[j]) {\n                len = j - i;\n                break;\n            }\n        }\n        if(len > maxLen) maxLen = len;\n    }\n    return maxLen;\n}\n```\n\n**Solution 2: 前缀和+哈希表**\n\n\n\n\n\n\n\n### 238. Product of Array Except Self\n\nGiven an integer array `nums`, return *an array* `answer` *such that* `answer[i]` *is equal to the product of all the elements of* `nums` *except* `nums[i]`.\n\nThe product of any prefix or suffix of `nums` is **guaranteed** to fit in a **32-bit** integer.\n\nYou must write an algorithm that runs in `O(n)` time and without using the division operation.\n\n \n\n**Example 1:**\n\n```\nInput: nums = [1,2,3,4]\nOutput: [24,12,8,6]\n```\n\n**Example 2:**\n\n```\nInput: nums = [-1,1,0,-3,3]\nOutput: [0,0,9,0,0]\n```\n\n**Constraints:**\n\n-   `2 <= nums.length <= 105`\n-   `-30 <= nums[i] <= 30`\n-   The product of any prefix or suffix of `nums` is **guaranteed** to fit in a **32-bit** integer.\n\n**Solution 1:**\n\n```c\nint* productExceptSelf(int* nums, int numsSize, int* returnSize){\n    int prefix[numsSize];\n    int suffix[numsSize];\n    int* ans = malloc(sizeof(int) * numsSize);\n    *returnSize = numsSize;\n    \n    prefix[0] = nums[0];\n    for(int i = 1; i < numsSize-1; i++) {\n        prefix[i] = prefix[i-1] * nums[i];\n    }\n    \n    suffix[numsSize-1] = nums[numsSize-1];\n    for(int i = numsSize-2; i > 0; i--) {\n        suffix[i] = suffix[i+1] * nums[i];\n    }\n    \n    ans[0] = suffix[1];\n    ans[numsSize-1] = prefix[numsSize-2];\n    for(int i = 1; i < numsSize - 1; i++) {\n        ans[i] = prefix[i-1] * suffix[i+1];\n    }\n    return ans;\n}\n```\n\n**Solution 2: **\n\n```c\nint* productExceptSelf(int* nums, int numsSize, int* returnSize){\n    *returnSize = numsSize;\n    \n    int* ans = malloc(sizeof(int) * numsSize);\n    int left=1, right=1;\n    \n    for(int i=0; i < numsSize; i++)\n        ans[i] = 1;\n    \n    for(int i=0; i<numsSize; i++) {\n        ans[i] *= left;\n        left *= nums[i];\n        \n        ans[numsSize-1-i] *= right;\n        right *= nums[numsSize-1-i];\n    }\n    return ans;\n}\n```\n\n\n\n\n\n\n\n### 20. Valid Parentheses\n\nGiven a string `s` containing just the characters `'('`, `')'`, `'{'`, `'}'`, `'['` and `']'`, determine if the input string is valid.\n\nAn input string is valid if:\n\n1.  Open brackets must be closed by the same type of brackets.\n2.  Open brackets must be closed in the correct order.\n\n \n\n**Example 1:**\n\n```\nInput: s = \"()\"\nOutput: true\n```\n\n**Example 2:**\n\n```\nInput: s = \"()[]{}\"\nOutput: true\n```\n\n**Example 3:**\n\n```\nInput: s = \"(]\"\nOutput: false\n```\n\n**Example 4:**\n\n```\nInput: s = \"([)]\"\nOutput: false\n```\n\n**Example 5:**\n\n```\nInput: s = \"{[]}\"\nOutput: true\n```\n\n**Solution 1: 栈**\n\n```c\nint trans(char ch) {\n    if(ch == '}') return '{';\n    if(ch == ']') return '[';\n    if(ch == ')') return '(';\n    return 0;\n}\n\nbool isValid(char * s){\n    int len = strlen(s);\n    int top = 0;\n    int stack[len];\n    int ch;\n    \n    for(int i = 0; i < len; i++) {\n        ch = trans(s[i]);\n        if(ch) {\n            top--;\n            if(top < 0 || stack[top] != ch) return false;  \n        } else {\n            stack[top++] = s[i];\n        }\n    }\n    return top == 0;\n}\n```\n\n","source":"_posts/algo-exec01Leetcode30daysApril.md","raw":"---\ntitle: Leetcode30天算法挑战\ndate: 2021-03-28 22:30:00\nid: leetcode1\ncategories:\n- algo\ntags:\n- exec\n---\n\nleetcod的一个算法练习计划，一天一道算法题，一共30道题。\n\n跟着[Feis Studio](https://feis.studio/#/)的Feis Lee老师学的。视频链接：[【C 語言的 LeetCode 30 天挑戰】](https://www.bilibili.com/video/BV1764y1M7a6?spm_id_from=..search-card.all.click)\n\n实现语言：C\n\n<!-- more -->\n\n## April\n\n\n\n### 53. Maximum Subarray\n\nGiven an integer array `nums`, find the contiguous subarray (containing at least one number) which has the largest sum and return *its sum*.\n\nA **subarray** is a **contiguous** part of an array.\n\n \n\n**Example 1:**\n\n```\nInput: nums = [-2,1,-3,4,-1,2,1,-5,4]\nOutput: 6\nExplanation: [4,-1,2,1] has the largest sum = 6.\n```\n\n**Solution:**\n\n```c\nint cmp(int a, int b){\n    return (a > b) ? a : b;\n}\n\nint maxSubArray(int* nums, int numsSize){\n    int pre = 0;\n    int max = nums[0];\n    \n    for(int i = 0; i < numsSize; i++) {\n        pre = cmp(pre + nums[i], nums[i]);\n        max = cmp(pre, max);\n    }\n\n    return max;\n}\n```\n\n\n\n\n\n### 136. Single Number\n\nGiven a **non-empty** array of integers `nums`, every element appears *twice* except for one. Find that single one.\n\nYou must implement a solution with a linear runtime complexity and use only constant extra space.\n\n \n\n**Example 1:**\n\n```\nInput: nums = [2,2,1]\nOutput: 1\n```\n\n**Solution:**\n\n```c\n// 经典异或题目\n\nint singleNumber(int* nums, int numsSize) {   \n    \n    for (int i = 1; i < numsSize; i++) {\n        \n        nums[0] = nums[0] ^ nums[i];\n        \n    }    \n    \n    return nums[0];\n}\n```\n\n\n\n\n\n### 202. Happy Number\n\nWrite an algorithm to determine if a number `n` is happy.\n\nA **happy number** is a number defined by the following process:\n\n-   Starting with any positive integer, replace the number by the sum of the squares of its digits.\n-   Repeat the process until the number equals 1 (where it will stay), or it **loops endlessly in a cycle** which does not include 1.\n-   Those numbers for which this process **ends in 1** are happy.\n\nReturn `true` *if* `n` *is a happy number, and* `false` *if not*.\n\n \n\n**Example 1:**\n\n```\nInput: n = 19\nOutput: true\nExplanation:\n12 + 92 = 82\n82 + 22 = 68\n62 + 82 = 100\n12 + 02 + 02 = 1\n```\n\n**Solution:**\n\n```c\n// 龟兔赛跑 slow fast\n\nint next(int n) {\n    int n1 = 0;\n    while(n != 0) {\n        n1 += (n % 10) * (n % 10);\n        n /= 10;\n    }\n    return n1;\n}\n\n\nbool isHappy(int n){\n    int slow = n;\n    int fast = next(n);\n    while (slow != fast && fast != 1) {\n        slow = next(slow);\n        fast = next(next(fast));\n    }\n    if (fast == 1) return true;\n    return false;\n}\n```\n\n\n\n\n\n### 283. Move Zeroes\n\nGiven an integer array `nums`, move all `0`'s to the end of it while maintaining the relative order of the non-zero elements.\n\n**Note** that you must do this in-place without making a copy of the array.\n\n \n\n**Example 1:**\n\n```\nInput: nums = [0,1,0,3,12]\nOutput: [1,3,12,0,0]\n```\n\n**Solution:**\n\n```c\nvoid swap(int *a, int *b) {\n    int t = *a;\n    *a = *b, *b = t;\n}\n\nvoid moveZeroes(int *nums, int numsSize) {\n    int left = 0, right = 0;\n    while (right < numsSize) {\n        if (nums[right]) {\n            swap(nums + left, nums + right);\n            left++;\n        }\n        right++;\n    }\n}\n```\n\n\n\n\n\n### 122. Best Time to Buy and Sell Stock II\n\nYou are given an integer array `prices` where `prices[i]` is the price of a given stock on the `ith` day.\n\nOn each day, you may decide to buy and/or sell the stock. You can only hold **at most one** share of the stock at any time. However, you can buy it then immediately sell it on the **same day**.\n\nFind and return *the **maximum** profit you can achieve*.\n\n \n\n**Example 1:**\n\n```\nInput: prices = [7,1,5,3,6,4]\nOutput: 7\nExplanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\nThen buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.\nTotal profit is 4 + 3 = 7.\n```\n\n**Solution 1:**\n\n```c\n// The Limit Exceeded\n\nint maxProfit(int* prices, int pricesSize){\n    \n    if (pricesSize <= 1) return 0;\n    \n    int profit;\n    int max = 0;\n    \n    // 最后一天不卖\n    profit = maxProfit(prices, pricesSize - 1);\n    if (profit > max) max = profit;\n    \n    // 最后一天卖\n    for (int i = 0; i < pricesSize - 1; i++) {\n        profit = prices[pricesSize - 1] - prices[i] + maxProfit(prices, i);\n        if (profit > max) max = profit;\n    }\n     \n    return max;\n}\n```\n\n**Solution 2: Peak Valley Approach**\n\n![](https://zhenruyi.github.io/images/algo02Leetcode30daysApril122_1.png)\n\n```c\n// 所有波峰加波谷之和\n\nint maxProfit(int* prices, int pricesSize){\n    int i = 1;\n    int valley = prices[0];\n    int peak = prices[0];\n    int profit = 0;\n    \n    while(i < pricesSize) {\n        while(i < pricesSize && prices[i] <= prices[i-1])\n            i++;\n        valley = prices[i-1];\n        \n        while(i < pricesSize && prices[i] >= prices[i-1])\n            i++;\n        peak = prices[i-1];\n        profit += peak - valley;\n    }\n    return profit;\n}\n```\n\n改进：\n\n![](https://zhenruyi.github.io/images/algo02Leetcode30daysApril122_2.png)\n\n```java\nJAVA:\n\nclass Solution {\n    public int maxProfit(int[] prices) {\n        int maxprofit = 0;\n        for (int i = 1; i < prices.length; i++) {\n            if (prices[i] > prices[i - 1])\n                maxprofit += prices[i] - prices[i - 1];\n        }\n        return maxprofit;\n    }\n}\n```\n\n**Solution 2: 乐扣**\n\n```c\n// 动态规划\n// 0:手中没有股票, 1:手中有股票\nint maxProfit(int* prices, int pricesSize){\n    int profit[pricesSize][2];\n    // 手中没有股票\n    profit[0][0] = 0;\n    // 手中有股票\n    profit[0][1] = -prices[0];\n    \n    for(int i=1; i<pricesSize; i++) {\n        profit[i][0] = profit[i-1][0] > (profit[i-1][1]+prices[i]) ? profit[i-1][0] : (profit[i-1][1]+prices[i]);\n        profit[i][1] = profit[i-1][1] > (profit[i-1][0]-prices[i]) ? profit[i-1][1] : (profit[i-1][0]-prices[i]);\n    }\n    \n    return profit[pricesSize - 1][0];\n}\n```\n\n```c\n// 贪心算法\n// 在每个区间都是获得利润\nint maxProfit(int* prices, int pricesSize){\n    int profit = 0;\n    \n    for(int i = 1; i < pricesSize; i++) {\n        profit += (prices[i] - prices[i-1] > 0) ? prices[i] - prices[i-1] : 0;\n    }\n    return profit;\n}\n```\n\n\n\n\n\n\n\n### 49. Group Anagrams\n\nGiven an array of strings `strs`, group **the anagrams** together. You can return the answer in **any order**.\n\nAn **Anagram** is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n \n\n**Example 1:**\n\n```\nInput: strs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]\nOutput: [[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]]\n```\n\n**Solution 1:**\n\n用质数表示26个字母，把字符串的各个字母相乘，这样可保证字母异位词的乘积必定是相等的。其余步骤就是用map存储，和别人的一致了。\n\n\n\n\n\n### 876. Middle of the Linked List\n\nGiven the `head` of a singly linked list, return *the middle node of the linked list*.\n\nIf there are two middle nodes, return **the second middle** node.\n\n\n\n**Solution 1:**\n\n```c\nstruct ListNode* middleNode(struct ListNode* head){\n    int nodeSize = 0;\n    struct ListNode* p = head;\n    while(p != NULL) {\n        nodeSize++;\n        p = p->next;\n    }\n    \n    nodeSize /= 2;\n    for(int i=0; i<nodeSize; i++) {\n        head = head->next;\n    }\n    return head;\n}\n```\n\n**Solution 2: 快慢指针，快的比慢的快两倍**\n\n```c\nstruct ListNode* middleNode(struct ListNode* head){\n    struct ListNode *fast, *slow;\n    fast = head;\n    slow = head;\n    while(fast->next != NULL && fast != NULL) {\n        if(fast->next->next == NULL)\n            return slow->next;\n        fast = fast->next->next;\n        slow = slow->next;\n    }\n    return slow;\n}\n```\n\n\n\n\n\n### 844. Backspace String Compare\n\nGiven two strings `s` and `t`, return `true` *if they are equal when both are typed into empty text editors*. `'#'` means a backspace character.\n\nNote that after backspacing an empty text, the text will continue empty.\n\n \n\n**Example 1:**\n\n```\nInput: s = \"ab#c\", t = \"ad#c\"\nOutput: true\nExplanation: Both s and t become \"ac\".\n```\n\n**Solution 1: 重构字符串**\n\n```c\nbool backspaceCompare(char * s, char * t){\n    char sNew[201];\n    char tNew[201];\n    \n    int i = 0;\n    int j = 0;\n    while(s[i] != '\\0') {\n        if(s[i] == '#') {\n            if(j > 0)\n                j--;\n            i++;\n            continue;\n        }\n        sNew[j] = s[i];\n        j++;\n        i++;\n    }\n    sNew[j] = '\\0';\n    \n    i = 0;\n    j = 0;\n    while(t[i] != '\\0') {\n        if(t[i] == '#') {\n            if(j > 0)\n                j--;\n            i++;\n            continue;\n        }\n        tNew[j] = t[i];\n        j++;\n        i++;\n    }\n    tNew[j] = '\\0';\n    \n    i = 0;\n    while(sNew[i] != '\\0' || tNew[i] != '\\0') {\n        if(sNew[i] != tNew[i])\n            return false;\n    \ti++;\n    }\n    return true;\n}\n```\n\n**Solution 2: 双指针**\n\n```c\nbool backspaceCompare(char * s, char * t){\n    int ps = strlen(s) - 1;\n    int pt = strlen(t) - 1;\n    int sSkip = 0, tSkip = 0;\n    \n    while(ps >= 0 || pt >= 0) {\n        while(ps >= 0) {\n            if(s[ps] == '#') {\n                ps--;\n                sSkip++;\n            } else if(sSkip > 0) {\n                ps--;\n                sSkip--;\n            } else {\n                break;\n            }\n        }\n        \n        while(pt >= 0) {\n            if(t[pt] == '#') {\n                pt--;\n                tSkip++;\n            } else if (tSkip > 0) {\n                pt--;\n                tSkip--;\n            } else {\n                break;\n            }\n        }\n        \n        if (pt >= 0 && ps >= 0) {\n            if (s[ps] != t[pt]) {\n                return false;\n            }\n        } else {\n            if (ps >= 0 || pt >= 0) {\n                return false;\n            }\n        }\n        ps--, pt--;\n    }\n    return true;\n}\n```\n\n\n\n\n\n### 155. Min Stack\n\nDesign a stack that supports push, pop, top, and retrieving the minimum element in constant time.\n\nImplement the `MinStack` class:\n\n-   `MinStack()` initializes the stack object.\n-   `void push(int val)` pushes the element `val` onto the stack.\n-   `void pop()` removes the element on the top of the stack.\n-   `int top()` gets the top element of the stack.\n-   `int getMin()` retrieves the minimum element in the stack.\n\n \n\n**Example 1:**\n\n```\nInput\n[\"MinStack\",\"push\",\"push\",\"push\",\"getMin\",\"pop\",\"top\",\"getMin\"]\n[[],[-2],[0],[-3],[],[],[],[]]\n\nOutput\n[null,null,null,null,-3,null,0,-2]\n\nExplanation\nMinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.getMin(); // return -3\nminStack.pop();\nminStack.top();    // return 0\nminStack.getMin(); // return -2\n```\n\n**Solution 1:**\n\n```c\ntypedef struct {\n    int* data;\n    int* mins;\n    int size;\n} MinStack;\n\n\nMinStack* minStackCreate() {\n    MinStack* s = malloc(sizeof(MinStack));\n    s->data = NULL;\n    s->mins = NULL;\n    s->size = 0;\n    return s;\n}\n\nvoid minStackPush(MinStack* obj, int val) {\n    obj->size++;\n    obj->data = realloc(obj->data, sizeof(int)*(obj->size));\n    obj->mins = realloc(obj->mins, sizeof(int)*(obj->size));\n    obj->data[obj->size-1] = val;\n    if(obj->size == 1) {\n        obj->mins[obj->size-1] = val;\n    } else {\n        if(val < obj->mins[obj->size-2]) {\n            obj->mins[obj->size-1] = val;\n        } else {\n            obj->mins[obj->size-1] = obj->mins[obj->size-2];\n        }\n    }\n}\n\nvoid minStackPop(MinStack* obj) {\n    obj->size--;\n}\n\nint minStackTop(MinStack* obj) {\n    return obj->data[obj->size-1];\n}\n\nint minStackGetMin(MinStack* obj) {\n    return obj->mins[obj->size-1];\n}\n\nvoid minStackFree(MinStack* obj) {\n    free(obj->data);\n    free(obj->mins);\n    free(obj);\n}\n```\n\n**Solution 2: 辅助栈：力扣**\n\n\n\n\n\n### 543. Diameter of Binary Tree\n\nGiven the `root` of a binary tree, return *the length of the **diameter** of the tree*.\n\nThe **diameter** of a binary tree is the **length** of the longest path between any two nodes in a tree. This path may or may not pass through the `root`.\n\nThe **length** of a path between two nodes is represented by the number of edges between them.\n\n\n\n**Solution 1:**\n\n```c\n// 假定一个结点root，先求出左枝最大深度，再求右枝最大深度，相加就是最大半径\n// 最大半径不一定经过root，求出所有结点的最大半径，再比较就可以。\n\nint maxDepth(struct TreeNode* root) {\n    if(root == NULL) return 0;\n    \n    int left = maxDepth(root->left) + 1;\n    int right = maxDepth(root->right) + 1;\n    \n    if(left > right) return left;\n    return right;\n}\n\n\nint diameterOfBinaryTree(struct TreeNode* root){\n    \n    if(root == NULL) return 0;\n    \n    int leftDep = maxDepth(root->left);\n    int rightDep = maxDepth(root->right);\n    int middleDia = leftDep + rightDep;\n    int maxDia = middleDia;\n    \n    int leftDia = diameterOfBinaryTree(root->left);\n    int rightDia = diameterOfBinaryTree(root->right);\n    \n    if(leftDia > maxDia) maxDia = leftDia;\n    if(rightDia > maxDia) maxDia = rightDia;\n    \n    return maxDia;\n}\n```\n\n\n\n\n\n### 1046. Last Stone Weight\n\nYou are given an array of integers `stones` where `stones[i]` is the weight of the `ith` stone.\n\nWe are playing a game with the stones. On each turn, we choose the **heaviest two stones** and smash them together. Suppose the heaviest two stones have weights `x` and `y` with `x <= y`. The result of this smash is:\n\n-   If `x == y`, both stones are destroyed, and\n-   If `x != y`, the stone of weight `x` is destroyed, and the stone of weight `y` has new weight `y - x`.\n\nAt the end of the game, there is **at most one** stone left.\n\nReturn *the smallest possible weight of the left stone*. If there are no stones left, return `0`.\n\n \n\n**Example 1:**\n\n```\nInput: stones = [2,7,4,1,8,1]\nOutput: 1\nExplanation: \nWe combine 7 and 8 to get 1 so the array converts to [2,4,1,1,1] then,\nwe combine 2 and 4 to get 2 so the array converts to [2,1,1,1] then,\nwe combine 2 and 1 to get 1 so the array converts to [1,1,1] then,\nwe combine 1 and 1 to get 0 so the array converts to [1] then that's the value of the last stone.\n```\n\n**Solution 1:**\n\n```c\n// 返回最大重量\nint findBig(int* stonesN) {\n    for(int i = 1000; i > 0; i--) {\n        if(stonesN[i] > 0) {\n            stonesN[i]--;\n            return i;\n        }\n    }\n    return 0;\n}\n\nint lastStoneWeight(int* stones, int stonesSize){\n    // 该重量的石头有几个？\n    int stonesN[1001] = {0};\n    for(int i = 0; i < stonesSize; i++) {\n        stonesN[stones[i]]++;\n    }\n    // 最大重量y，第二大重量x\n    int y = findBig(stonesN);\n    int x = findBig(stonesN);\n    \n    while(x != 0) {\n        // 摧毁之后再放回去\n        stonesN[y-x]++;\n        y = findBig(stonesN);\n        x = findBig(stonesN);\n    }\n    return y;\n}\n```\n\n\n\n\n\n### 525. Contiguous Array\n\nGiven a binary array `nums`, return *the maximum length of a contiguous subarray with an equal number of* `0` *and* `1`.\n\n \n\n**Example 1:**\n\n```\nInput: nums = [0,1]\nOutput: 2\nExplanation: [0, 1] is the longest contiguous subarray with an equal number of 0 and 1.\n```\n\n**Example 2:**\n\n```\nInput: nums = [0,1,0]\nOutput: 2\nExplanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.\n```\n\n**Solution 1: 前缀和**\n\n```c\n// Time Limit Exceeded\nint findMaxLength(int* nums, int numsSize){\n    \n    for(int i = 0; i < numsSize; i++)\n        if(nums[i] == 0) nums[i] = -1;\n\n    int perSum[numsSize + 1];\n    perSum[0] = 0;\n    int counter = 0;\n    for(int i = 0; i < numsSize; i++) {\n        counter += nums[i];\n        perSum[i + 1] = counter;\n    }\n    \n    int maxLen = 0;\n    for(int i = 0; i < numsSize; i++) {\n        int len = 0;\n        for(int j = numsSize; j >= i; j--) {\n            if(perSum[i] == perSum[j]) {\n                len = j - i;\n                break;\n            }\n        }\n        if(len > maxLen) maxLen = len;\n    }\n    return maxLen;\n}\n```\n\n**Solution 2: 前缀和+哈希表**\n\n\n\n\n\n\n\n### 238. Product of Array Except Self\n\nGiven an integer array `nums`, return *an array* `answer` *such that* `answer[i]` *is equal to the product of all the elements of* `nums` *except* `nums[i]`.\n\nThe product of any prefix or suffix of `nums` is **guaranteed** to fit in a **32-bit** integer.\n\nYou must write an algorithm that runs in `O(n)` time and without using the division operation.\n\n \n\n**Example 1:**\n\n```\nInput: nums = [1,2,3,4]\nOutput: [24,12,8,6]\n```\n\n**Example 2:**\n\n```\nInput: nums = [-1,1,0,-3,3]\nOutput: [0,0,9,0,0]\n```\n\n**Constraints:**\n\n-   `2 <= nums.length <= 105`\n-   `-30 <= nums[i] <= 30`\n-   The product of any prefix or suffix of `nums` is **guaranteed** to fit in a **32-bit** integer.\n\n**Solution 1:**\n\n```c\nint* productExceptSelf(int* nums, int numsSize, int* returnSize){\n    int prefix[numsSize];\n    int suffix[numsSize];\n    int* ans = malloc(sizeof(int) * numsSize);\n    *returnSize = numsSize;\n    \n    prefix[0] = nums[0];\n    for(int i = 1; i < numsSize-1; i++) {\n        prefix[i] = prefix[i-1] * nums[i];\n    }\n    \n    suffix[numsSize-1] = nums[numsSize-1];\n    for(int i = numsSize-2; i > 0; i--) {\n        suffix[i] = suffix[i+1] * nums[i];\n    }\n    \n    ans[0] = suffix[1];\n    ans[numsSize-1] = prefix[numsSize-2];\n    for(int i = 1; i < numsSize - 1; i++) {\n        ans[i] = prefix[i-1] * suffix[i+1];\n    }\n    return ans;\n}\n```\n\n**Solution 2: **\n\n```c\nint* productExceptSelf(int* nums, int numsSize, int* returnSize){\n    *returnSize = numsSize;\n    \n    int* ans = malloc(sizeof(int) * numsSize);\n    int left=1, right=1;\n    \n    for(int i=0; i < numsSize; i++)\n        ans[i] = 1;\n    \n    for(int i=0; i<numsSize; i++) {\n        ans[i] *= left;\n        left *= nums[i];\n        \n        ans[numsSize-1-i] *= right;\n        right *= nums[numsSize-1-i];\n    }\n    return ans;\n}\n```\n\n\n\n\n\n\n\n### 20. Valid Parentheses\n\nGiven a string `s` containing just the characters `'('`, `')'`, `'{'`, `'}'`, `'['` and `']'`, determine if the input string is valid.\n\nAn input string is valid if:\n\n1.  Open brackets must be closed by the same type of brackets.\n2.  Open brackets must be closed in the correct order.\n\n \n\n**Example 1:**\n\n```\nInput: s = \"()\"\nOutput: true\n```\n\n**Example 2:**\n\n```\nInput: s = \"()[]{}\"\nOutput: true\n```\n\n**Example 3:**\n\n```\nInput: s = \"(]\"\nOutput: false\n```\n\n**Example 4:**\n\n```\nInput: s = \"([)]\"\nOutput: false\n```\n\n**Example 5:**\n\n```\nInput: s = \"{[]}\"\nOutput: true\n```\n\n**Solution 1: 栈**\n\n```c\nint trans(char ch) {\n    if(ch == '}') return '{';\n    if(ch == ']') return '[';\n    if(ch == ')') return '(';\n    return 0;\n}\n\nbool isValid(char * s){\n    int len = strlen(s);\n    int top = 0;\n    int stack[len];\n    int ch;\n    \n    for(int i = 0; i < len; i++) {\n        ch = trans(s[i]);\n        if(ch) {\n            top--;\n            if(top < 0 || stack[top] != ch) return false;  \n        } else {\n            stack[top++] = s[i];\n        }\n    }\n    return top == 0;\n}\n```\n\n","slug":"algo-exec01Leetcode30daysApril","published":1,"updated":"2022-04-16T23:00:24.691Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70sb00015ossfi7r8sqz","content":"<p>leetcod的一个算法练习计划，一天一道算法题，一共30道题。</p>\n<p>跟着<a href=\"https://feis.studio/#/\">Feis Studio</a>的Feis Lee老师学的。视频链接：<a href=\"https://www.bilibili.com/video/BV1764y1M7a6?spm_id_from=..search-card.all.click\">【C 語言的 LeetCode 30 天挑戰】</a></p>\n<p>实现语言：C</p>\n<span id=\"more\"></span>\n\n<h2 id=\"April\"><a href=\"#April\" class=\"headerlink\" title=\"April\"></a>April</h2><h3 id=\"53-Maximum-Subarray\"><a href=\"#53-Maximum-Subarray\" class=\"headerlink\" title=\"53. Maximum Subarray\"></a>53. Maximum Subarray</h3><p>Given an integer array <code>nums</code>, find the contiguous subarray (containing at least one number) which has the largest sum and return <em>its sum</em>.</p>\n<p>A <strong>subarray</strong> is a <strong>contiguous</strong> part of an array.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Input: nums = [<span class=\"string\">-2</span>,1,<span class=\"string\">-3</span>,4,<span class=\"string\">-1</span>,2,1,<span class=\"string\">-5</span>,4]</span><br><span class=\"line\">Output: 6</span><br><span class=\"line\">Explanation: [4,<span class=\"string\">-1</span>,2,1] has the largest sum = 6.</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">cmp</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (a &gt; b) ? a : b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">maxSubArray</span><span class=\"params\">(<span class=\"type\">int</span>* nums, <span class=\"type\">int</span> numsSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> pre = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> max = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; numsSize; i++) &#123;</span><br><span class=\"line\">        pre = cmp(pre + nums[i], nums[i]);</span><br><span class=\"line\">        max = cmp(pre, max);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"136-Single-Number\"><a href=\"#136-Single-Number\" class=\"headerlink\" title=\"136. Single Number\"></a>136. Single Number</h3><p>Given a <strong>non-empty</strong> array of integers <code>nums</code>, every element appears <em>twice</em> except for one. Find that single one.</p>\n<p>You must implement a solution with a linear runtime complexity and use only constant extra space.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Input</span>: nums =<span class=\"meta\"> [2,2,1]</span></span><br><span class=\"line\"><span class=\"attribute\">Output</span>: <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 经典异或题目</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">singleNumber</span><span class=\"params\">(<span class=\"type\">int</span>* nums, <span class=\"type\">int</span> numsSize)</span> &#123;   </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; numsSize; i++) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        nums[<span class=\"number\">0</span>] = nums[<span class=\"number\">0</span>] ^ nums[i];</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"202-Happy-Number\"><a href=\"#202-Happy-Number\" class=\"headerlink\" title=\"202. Happy Number\"></a>202. Happy Number</h3><p>Write an algorithm to determine if a number <code>n</code> is happy.</p>\n<p>A <strong>happy number</strong> is a number defined by the following process:</p>\n<ul>\n<li>  Starting with any positive integer, replace the number by the sum of the squares of its digits.</li>\n<li>  Repeat the process until the number equals 1 (where it will stay), or it <strong>loops endlessly in a cycle</strong> which does not include 1.</li>\n<li>  Those numbers for which this process <strong>ends in 1</strong> are happy.</li>\n</ul>\n<p>Return <code>true</code> <em>if</em> <code>n</code> <em>is a happy number, and</em> <code>false</code> <em>if not</em>.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Input</span>: n = <span class=\"number\">19</span></span><br><span class=\"line\"><span class=\"attribute\">Output</span>: true</span><br><span class=\"line\"><span class=\"attribute\">Explanation</span>:</span><br><span class=\"line\"><span class=\"attribute\">12</span> + <span class=\"number\">92</span> = <span class=\"number\">82</span></span><br><span class=\"line\"><span class=\"attribute\">82</span> + <span class=\"number\">22</span> = <span class=\"number\">68</span></span><br><span class=\"line\"><span class=\"attribute\">62</span> + <span class=\"number\">82</span> = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"attribute\">12</span> + <span class=\"number\">02</span> + <span class=\"number\">02</span> = <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 龟兔赛跑 slow fast</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">next</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        n1 += (n % <span class=\"number\">10</span>) * (n % <span class=\"number\">10</span>);</span><br><span class=\"line\">        n /= <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">isHappy</span><span class=\"params\">(<span class=\"type\">int</span> n)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> slow = n;</span><br><span class=\"line\">    <span class=\"type\">int</span> fast = next(n);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (slow != fast &amp;&amp; fast != <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        slow = next(slow);</span><br><span class=\"line\">        fast = next(next(fast));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (fast == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"283-Move-Zeroes\"><a href=\"#283-Move-Zeroes\" class=\"headerlink\" title=\"283. Move Zeroes\"></a>283. Move Zeroes</h3><p>Given an integer array <code>nums</code>, move all <code>0</code>‘s to the end of it while maintaining the relative order of the non-zero elements.</p>\n<p><strong>Note</strong> that you must do this in-place without making a copy of the array.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Input: nums = <span class=\"string\">[0,1,0,3,12]</span></span><br><span class=\"line\">Output: <span class=\"string\">[1,3,12,0,0]</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">swap</span><span class=\"params\">(<span class=\"type\">int</span> *a, <span class=\"type\">int</span> *b)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t = *a;</span><br><span class=\"line\">    *a = *b, *b = t;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">moveZeroes</span><span class=\"params\">(<span class=\"type\">int</span> *nums, <span class=\"type\">int</span> numsSize)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> left = <span class=\"number\">0</span>, right = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (right &lt; numsSize) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[right]) &#123;</span><br><span class=\"line\">            swap(nums + left, nums + right);</span><br><span class=\"line\">            left++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        right++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"122-Best-Time-to-Buy-and-Sell-Stock-II\"><a href=\"#122-Best-Time-to-Buy-and-Sell-Stock-II\" class=\"headerlink\" title=\"122. Best Time to Buy and Sell Stock II\"></a>122. Best Time to Buy and Sell Stock II</h3><p>You are given an integer array <code>prices</code> where <code>prices[i]</code> is the price of a given stock on the <code>ith</code> day.</p>\n<p>On each day, you may decide to buy and/or sell the stock. You can only hold <strong>at most one</strong> share of the stock at any time. However, you can buy it then immediately sell it on the <strong>same day</strong>.</p>\n<p>Find and return <em>the <strong>maximum</strong> profit you can achieve</em>.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Input</span>: prices =<span class=\"meta\"> [7,1,5,3,6,4]</span></span><br><span class=\"line\"><span class=\"attribute\">Output</span>: <span class=\"number\">7</span></span><br><span class=\"line\"><span class=\"attribute\">Explanation</span>: Buy <span class=\"literal\">on</span> day <span class=\"number\">2</span> (price = <span class=\"number\">1</span>) and sell <span class=\"literal\">on</span> day <span class=\"number\">3</span> (price = <span class=\"number\">5</span>), profit = <span class=\"number\">5</span>-<span class=\"number\">1</span> = <span class=\"number\">4</span>.</span><br><span class=\"line\"><span class=\"attribute\">Then</span> buy <span class=\"literal\">on</span> day <span class=\"number\">4</span> (price = <span class=\"number\">3</span>) and sell <span class=\"literal\">on</span> day <span class=\"number\">5</span> (price = <span class=\"number\">6</span>), profit = <span class=\"number\">6</span>-<span class=\"number\">3</span> = <span class=\"number\">3</span>.</span><br><span class=\"line\"><span class=\"attribute\">Total</span> profit is <span class=\"number\">4</span> + <span class=\"number\">3</span> = <span class=\"number\">7</span>.</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 1:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// The Limit Exceeded</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">maxProfit</span><span class=\"params\">(<span class=\"type\">int</span>* prices, <span class=\"type\">int</span> pricesSize)</span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (pricesSize &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> profit;</span><br><span class=\"line\">    <span class=\"type\">int</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 最后一天不卖</span></span><br><span class=\"line\">    profit = maxProfit(prices, pricesSize - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (profit &gt; max) max = profit;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 最后一天卖</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; pricesSize - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        profit = prices[pricesSize - <span class=\"number\">1</span>] - prices[i] + maxProfit(prices, i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (profit &gt; max) max = profit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 2: Peak Valley Approach</strong></p>\n<p><img src=\"https://zhenruyi.github.io/images/algo02Leetcode30daysApril122_1.png\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 所有波峰加波谷之和</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">maxProfit</span><span class=\"params\">(<span class=\"type\">int</span>* prices, <span class=\"type\">int</span> pricesSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> valley = prices[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> peak = prices[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> profit = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i &lt; pricesSize) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &lt; pricesSize &amp;&amp; prices[i] &lt;= prices[i<span class=\"number\">-1</span>])</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        valley = prices[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &lt; pricesSize &amp;&amp; prices[i] &gt;= prices[i<span class=\"number\">-1</span>])</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        peak = prices[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">        profit += peak - valley;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> profit;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>改进：</p>\n<p><img src=\"https://zhenruyi.github.io/images/algo02Leetcode30daysApril122_2.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JAVA:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">maxProfit</span><span class=\"params\">(<span class=\"type\">int</span>[] prices)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">maxprofit</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; prices.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (prices[i] &gt; prices[i - <span class=\"number\">1</span>])</span><br><span class=\"line\">                maxprofit += prices[i] - prices[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> maxprofit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 2: 乐扣</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 动态规划</span></span><br><span class=\"line\"><span class=\"comment\">// 0:手中没有股票, 1:手中有股票</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">maxProfit</span><span class=\"params\">(<span class=\"type\">int</span>* prices, <span class=\"type\">int</span> pricesSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> profit[pricesSize][<span class=\"number\">2</span>];</span><br><span class=\"line\">    <span class=\"comment\">// 手中没有股票</span></span><br><span class=\"line\">    profit[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 手中有股票</span></span><br><span class=\"line\">    profit[<span class=\"number\">0</span>][<span class=\"number\">1</span>] = -prices[<span class=\"number\">0</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>; i&lt;pricesSize; i++) &#123;</span><br><span class=\"line\">        profit[i][<span class=\"number\">0</span>] = profit[i<span class=\"number\">-1</span>][<span class=\"number\">0</span>] &gt; (profit[i<span class=\"number\">-1</span>][<span class=\"number\">1</span>]+prices[i]) ? profit[i<span class=\"number\">-1</span>][<span class=\"number\">0</span>] : (profit[i<span class=\"number\">-1</span>][<span class=\"number\">1</span>]+prices[i]);</span><br><span class=\"line\">        profit[i][<span class=\"number\">1</span>] = profit[i<span class=\"number\">-1</span>][<span class=\"number\">1</span>] &gt; (profit[i<span class=\"number\">-1</span>][<span class=\"number\">0</span>]-prices[i]) ? profit[i<span class=\"number\">-1</span>][<span class=\"number\">1</span>] : (profit[i<span class=\"number\">-1</span>][<span class=\"number\">0</span>]-prices[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> profit[pricesSize - <span class=\"number\">1</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 贪心算法</span></span><br><span class=\"line\"><span class=\"comment\">// 在每个区间都是获得利润</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">maxProfit</span><span class=\"params\">(<span class=\"type\">int</span>* prices, <span class=\"type\">int</span> pricesSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> profit = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; pricesSize; i++) &#123;</span><br><span class=\"line\">        profit += (prices[i] - prices[i<span class=\"number\">-1</span>] &gt; <span class=\"number\">0</span>) ? prices[i] - prices[i<span class=\"number\">-1</span>] : <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> profit;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"49-Group-Anagrams\"><a href=\"#49-Group-Anagrams\" class=\"headerlink\" title=\"49. Group Anagrams\"></a>49. Group Anagrams</h3><p>Given an array of strings <code>strs</code>, group <strong>the anagrams</strong> together. You can return the answer in <strong>any order</strong>.</p>\n<p>An <strong>Anagram</strong> is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input</span>: strs = [<span class=\"string\">&quot;eat&quot;</span>,<span class=\"string\">&quot;tea&quot;</span>,<span class=\"string\">&quot;tan&quot;</span>,<span class=\"string\">&quot;ate&quot;</span>,<span class=\"string\">&quot;nat&quot;</span>,<span class=\"string\">&quot;bat&quot;</span>]</span><br><span class=\"line\"><span class=\"symbol\">Output</span>: [[<span class=\"string\">&quot;bat&quot;</span>],[<span class=\"string\">&quot;nat&quot;</span>,<span class=\"string\">&quot;tan&quot;</span>],[<span class=\"string\">&quot;ate&quot;</span>,<span class=\"string\">&quot;eat&quot;</span>,<span class=\"string\">&quot;tea&quot;</span>]]</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 1:</strong></p>\n<p>用质数表示26个字母，把字符串的各个字母相乘，这样可保证字母异位词的乘积必定是相等的。其余步骤就是用map存储，和别人的一致了。</p>\n<h3 id=\"876-Middle-of-the-Linked-List\"><a href=\"#876-Middle-of-the-Linked-List\" class=\"headerlink\" title=\"876. Middle of the Linked List\"></a>876. Middle of the Linked List</h3><p>Given the <code>head</code> of a singly linked list, return <em>the middle node of the linked list</em>.</p>\n<p>If there are two middle nodes, return <strong>the second middle</strong> node.</p>\n<p><strong>Solution 1:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> ListNode* <span class=\"title function_\">middleNode</span><span class=\"params\">(<span class=\"keyword\">struct</span> ListNode* head)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> nodeSize = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ListNode</span>* <span class=\"title\">p</span> =</span> head;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        nodeSize++;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    nodeSize /= <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;nodeSize; i++) &#123;</span><br><span class=\"line\">        head = head-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 2: 快慢指针，快的比慢的快两倍</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> ListNode* <span class=\"title function_\">middleNode</span><span class=\"params\">(<span class=\"keyword\">struct</span> ListNode* head)</span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ListNode</span> *<span class=\"title\">fast</span>, *<span class=\"title\">slow</span>;</span></span><br><span class=\"line\">    fast = head;</span><br><span class=\"line\">    slow = head;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(fast-&gt;next != <span class=\"literal\">NULL</span> &amp;&amp; fast != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(fast-&gt;next-&gt;next == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> slow-&gt;next;</span><br><span class=\"line\">        fast = fast-&gt;next-&gt;next;</span><br><span class=\"line\">        slow = slow-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> slow;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"844-Backspace-String-Compare\"><a href=\"#844-Backspace-String-Compare\" class=\"headerlink\" title=\"844. Backspace String Compare\"></a>844. Backspace String Compare</h3><p>Given two strings <code>s</code> and <code>t</code>, return <code>true</code> <em>if they are equal when both are typed into empty text editors</em>. <code>&#39;#&#39;</code> means a backspace character.</p>\n<p>Note that after backspacing an empty text, the text will continue empty.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input:</span> s = <span class=\"string\">&quot;ab#c&quot;</span>, t = <span class=\"string\">&quot;ad#c&quot;</span></span><br><span class=\"line\"><span class=\"symbol\">Output:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"symbol\">Explanation:</span> Both s <span class=\"built_in\">and</span> t become <span class=\"string\">&quot;ac&quot;</span>.</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 1: 重构字符串</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">backspaceCompare</span><span class=\"params\">(<span class=\"type\">char</span> * s, <span class=\"type\">char</span> * t)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> sNew[<span class=\"number\">201</span>];</span><br><span class=\"line\">    <span class=\"type\">char</span> tNew[<span class=\"number\">201</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(s[i] != <span class=\"string\">&#x27;\\0&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s[i] == <span class=\"string\">&#x27;#&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                j--;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sNew[j] = s[i];</span><br><span class=\"line\">        j++;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sNew[j] = <span class=\"string\">&#x27;\\0&#x27;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t[i] != <span class=\"string\">&#x27;\\0&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(t[i] == <span class=\"string\">&#x27;#&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                j--;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        tNew[j] = t[i];</span><br><span class=\"line\">        j++;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    tNew[j] = <span class=\"string\">&#x27;\\0&#x27;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(sNew[i] != <span class=\"string\">&#x27;\\0&#x27;</span> || tNew[i] != <span class=\"string\">&#x27;\\0&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sNew[i] != tNew[i])</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    \ti++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 2: 双指针</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">backspaceCompare</span><span class=\"params\">(<span class=\"type\">char</span> * s, <span class=\"type\">char</span> * t)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> ps = <span class=\"built_in\">strlen</span>(s) - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> pt = <span class=\"built_in\">strlen</span>(t) - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> sSkip = <span class=\"number\">0</span>, tSkip = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(ps &gt;= <span class=\"number\">0</span> || pt &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(ps &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(s[ps] == <span class=\"string\">&#x27;#&#x27;</span>) &#123;</span><br><span class=\"line\">                ps--;</span><br><span class=\"line\">                sSkip++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sSkip &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                ps--;</span><br><span class=\"line\">                sSkip--;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(pt &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(t[pt] == <span class=\"string\">&#x27;#&#x27;</span>) &#123;</span><br><span class=\"line\">                pt--;</span><br><span class=\"line\">                tSkip++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tSkip &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                pt--;</span><br><span class=\"line\">                tSkip--;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (pt &gt;= <span class=\"number\">0</span> &amp;&amp; ps &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s[ps] != t[pt]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ps &gt;= <span class=\"number\">0</span> || pt &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ps--, pt--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"155-Min-Stack\"><a href=\"#155-Min-Stack\" class=\"headerlink\" title=\"155. Min Stack\"></a>155. Min Stack</h3><p>Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.</p>\n<p>Implement the <code>MinStack</code> class:</p>\n<ul>\n<li>  <code>MinStack()</code> initializes the stack object.</li>\n<li>  <code>void push(int val)</code> pushes the element <code>val</code> onto the stack.</li>\n<li>  <code>void pop()</code> removes the element on the top of the stack.</li>\n<li>  <code>int top()</code> gets the top element of the stack.</li>\n<li><code>int getMin()</code> retrieves the minimum element in the stack.</li>\n</ul>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Input</span><br><span class=\"line\">[<span class=\"string\">&quot;MinStack&quot;</span>,<span class=\"string\">&quot;push&quot;</span>,<span class=\"string\">&quot;push&quot;</span>,<span class=\"string\">&quot;push&quot;</span>,<span class=\"string\">&quot;getMin&quot;</span>,<span class=\"string\">&quot;pop&quot;</span>,<span class=\"string\">&quot;top&quot;</span>,<span class=\"string\">&quot;getMin&quot;</span>]</span><br><span class=\"line\">[[],[<span class=\"number\">-2</span>],[<span class=\"number\">0</span>],[<span class=\"number\">-3</span>],[],[],[],[]]</span><br><span class=\"line\"></span><br><span class=\"line\">Output</span><br><span class=\"line\">[<span class=\"literal\">null</span>,<span class=\"literal\">null</span>,<span class=\"literal\">null</span>,<span class=\"literal\">null</span>,<span class=\"number\">-3</span>,<span class=\"literal\">null</span>,<span class=\"number\">0</span>,<span class=\"number\">-2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">Explanation</span><br><span class=\"line\">MinStack minStack = <span class=\"keyword\">new</span> MinStack();</span><br><span class=\"line\">minStack.<span class=\"built_in\">push</span>(<span class=\"number\">-2</span>);</span><br><span class=\"line\">minStack.<span class=\"built_in\">push</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">minStack.<span class=\"built_in\">push</span>(<span class=\"number\">-3</span>);</span><br><span class=\"line\">minStack.getMin(); <span class=\"comment\">// return -3</span></span><br><span class=\"line\">minStack.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">minStack.<span class=\"built_in\">top</span>();    <span class=\"comment\">// return 0</span></span><br><span class=\"line\">minStack.getMin(); <span class=\"comment\">// return -2</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 1:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span>* data;</span><br><span class=\"line\">    <span class=\"type\">int</span>* mins;</span><br><span class=\"line\">    <span class=\"type\">int</span> size;</span><br><span class=\"line\">&#125; MinStack;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">MinStack* <span class=\"title function_\">minStackCreate</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    MinStack* s = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(MinStack));</span><br><span class=\"line\">    s-&gt;data = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    s-&gt;mins = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    s-&gt;size = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">minStackPush</span><span class=\"params\">(MinStack* obj, <span class=\"type\">int</span> val)</span> &#123;</span><br><span class=\"line\">    obj-&gt;size++;</span><br><span class=\"line\">    obj-&gt;data = <span class=\"built_in\">realloc</span>(obj-&gt;data, <span class=\"keyword\">sizeof</span>(<span class=\"type\">int</span>)*(obj-&gt;size));</span><br><span class=\"line\">    obj-&gt;mins = <span class=\"built_in\">realloc</span>(obj-&gt;mins, <span class=\"keyword\">sizeof</span>(<span class=\"type\">int</span>)*(obj-&gt;size));</span><br><span class=\"line\">    obj-&gt;data[obj-&gt;size<span class=\"number\">-1</span>] = val;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(obj-&gt;size == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        obj-&gt;mins[obj-&gt;size<span class=\"number\">-1</span>] = val;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(val &lt; obj-&gt;mins[obj-&gt;size<span class=\"number\">-2</span>]) &#123;</span><br><span class=\"line\">            obj-&gt;mins[obj-&gt;size<span class=\"number\">-1</span>] = val;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            obj-&gt;mins[obj-&gt;size<span class=\"number\">-1</span>] = obj-&gt;mins[obj-&gt;size<span class=\"number\">-2</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">minStackPop</span><span class=\"params\">(MinStack* obj)</span> &#123;</span><br><span class=\"line\">    obj-&gt;size--;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">minStackTop</span><span class=\"params\">(MinStack* obj)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj-&gt;data[obj-&gt;size<span class=\"number\">-1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">minStackGetMin</span><span class=\"params\">(MinStack* obj)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj-&gt;mins[obj-&gt;size<span class=\"number\">-1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">minStackFree</span><span class=\"params\">(MinStack* obj)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(obj-&gt;data);</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(obj-&gt;mins);</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(obj);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 2: 辅助栈：力扣</strong></p>\n<h3 id=\"543-Diameter-of-Binary-Tree\"><a href=\"#543-Diameter-of-Binary-Tree\" class=\"headerlink\" title=\"543. Diameter of Binary Tree\"></a>543. Diameter of Binary Tree</h3><p>Given the <code>root</code> of a binary tree, return <em>the length of the <strong>diameter</strong> of the tree</em>.</p>\n<p>The <strong>diameter</strong> of a binary tree is the <strong>length</strong> of the longest path between any two nodes in a tree. This path may or may not pass through the <code>root</code>.</p>\n<p>The <strong>length</strong> of a path between two nodes is represented by the number of edges between them.</p>\n<p><strong>Solution 1:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 假定一个结点root，先求出左枝最大深度，再求右枝最大深度，相加就是最大半径</span></span><br><span class=\"line\"><span class=\"comment\">// 最大半径不一定经过root，求出所有结点的最大半径，再比较就可以。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">maxDepth</span><span class=\"params\">(<span class=\"keyword\">struct</span> TreeNode* root)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> left = maxDepth(root-&gt;left) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> right = maxDepth(root-&gt;right) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(left &gt; right) <span class=\"keyword\">return</span> left;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> right;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">diameterOfBinaryTree</span><span class=\"params\">(<span class=\"keyword\">struct</span> TreeNode* root)</span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> leftDep = maxDepth(root-&gt;left);</span><br><span class=\"line\">    <span class=\"type\">int</span> rightDep = maxDepth(root-&gt;right);</span><br><span class=\"line\">    <span class=\"type\">int</span> middleDia = leftDep + rightDep;</span><br><span class=\"line\">    <span class=\"type\">int</span> maxDia = middleDia;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> leftDia = diameterOfBinaryTree(root-&gt;left);</span><br><span class=\"line\">    <span class=\"type\">int</span> rightDia = diameterOfBinaryTree(root-&gt;right);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(leftDia &gt; maxDia) maxDia = leftDia;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(rightDia &gt; maxDia) maxDia = rightDia;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> maxDia;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"1046-Last-Stone-Weight\"><a href=\"#1046-Last-Stone-Weight\" class=\"headerlink\" title=\"1046. Last Stone Weight\"></a>1046. Last Stone Weight</h3><p>You are given an array of integers <code>stones</code> where <code>stones[i]</code> is the weight of the <code>ith</code> stone.</p>\n<p>We are playing a game with the stones. On each turn, we choose the <strong>heaviest two stones</strong> and smash them together. Suppose the heaviest two stones have weights <code>x</code> and <code>y</code> with <code>x &lt;= y</code>. The result of this smash is:</p>\n<ul>\n<li>  If <code>x == y</code>, both stones are destroyed, and</li>\n<li>  If <code>x != y</code>, the stone of weight <code>x</code> is destroyed, and the stone of weight <code>y</code> has new weight <code>y - x</code>.</li>\n</ul>\n<p>At the end of the game, there is <strong>at most one</strong> stone left.</p>\n<p>Return <em>the smallest possible weight of the left stone</em>. If there are no stones left, return <code>0</code>.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight smali\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Input: stones = [2,7,4,1,8,1]</span><br><span class=\"line\">Output: 1</span><br><span class=\"line\">Explanation: </span><br><span class=\"line\">We combine 7<span class=\"built_in\"> and </span>8 to get 1 so the<span class=\"built_in\"> array </span>converts to [2,4,1,1,1] then,</span><br><span class=\"line\">we combine 2<span class=\"built_in\"> and </span>4 to get 2 so the<span class=\"built_in\"> array </span>converts to [2,1,1,1] then,</span><br><span class=\"line\">we combine 2<span class=\"built_in\"> and </span>1 to get 1 so the<span class=\"built_in\"> array </span>converts to [1,1,1] then,</span><br><span class=\"line\">we combine 1<span class=\"built_in\"> and </span>1 to get 0 so the<span class=\"built_in\"> array </span>converts to [1] then that&#x27;s the value of the last stone.</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 1:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 返回最大重量</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">findBig</span><span class=\"params\">(<span class=\"type\">int</span>* stonesN)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1000</span>; i &gt; <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(stonesN[i] &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            stonesN[i]--;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">lastStoneWeight</span><span class=\"params\">(<span class=\"type\">int</span>* stones, <span class=\"type\">int</span> stonesSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 该重量的石头有几个？</span></span><br><span class=\"line\">    <span class=\"type\">int</span> stonesN[<span class=\"number\">1001</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; stonesSize; i++) &#123;</span><br><span class=\"line\">        stonesN[stones[i]]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 最大重量y，第二大重量x</span></span><br><span class=\"line\">    <span class=\"type\">int</span> y = findBig(stonesN);</span><br><span class=\"line\">    <span class=\"type\">int</span> x = findBig(stonesN);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(x != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 摧毁之后再放回去</span></span><br><span class=\"line\">        stonesN[y-x]++;</span><br><span class=\"line\">        y = findBig(stonesN);</span><br><span class=\"line\">        x = findBig(stonesN);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> y;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"525-Contiguous-Array\"><a href=\"#525-Contiguous-Array\" class=\"headerlink\" title=\"525. Contiguous Array\"></a>525. Contiguous Array</h3><p>Given a binary array <code>nums</code>, return <em>the maximum length of a contiguous subarray with an equal number of</em> <code>0</code> <em>and</em> <code>1</code>.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input:</span> nums = [<span class=\"number\">0</span>,<span class=\"number\">1</span>]</span><br><span class=\"line\"><span class=\"symbol\">Output:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"symbol\">Explanation:</span> [<span class=\"number\">0</span>, <span class=\"number\">1</span>] <span class=\"built_in\">is</span> the longest contiguous subarray <span class=\"keyword\">with</span> an equal number <span class=\"keyword\">of</span> <span class=\"number\">0</span> <span class=\"built_in\">and</span> <span class=\"number\">1</span>.</span><br></pre></td></tr></table></figure>\n\n<p><strong>Example 2:</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input:</span> nums = [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"symbol\">Output:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"symbol\">Explanation:</span> [<span class=\"number\">0</span>, <span class=\"number\">1</span>] (<span class=\"built_in\">or</span> [<span class=\"number\">1</span>, <span class=\"number\">0</span>]) <span class=\"built_in\">is</span> a longest contiguous subarray <span class=\"keyword\">with</span> equal number <span class=\"keyword\">of</span> <span class=\"number\">0</span> <span class=\"built_in\">and</span> <span class=\"number\">1</span>.</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 1: 前缀和</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Time Limit Exceeded</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">findMaxLength</span><span class=\"params\">(<span class=\"type\">int</span>* nums, <span class=\"type\">int</span> numsSize)</span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; numsSize; i++)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[i] == <span class=\"number\">0</span>) nums[i] = <span class=\"number\">-1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> perSum[numsSize + <span class=\"number\">1</span>];</span><br><span class=\"line\">    perSum[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> counter = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; numsSize; i++) &#123;</span><br><span class=\"line\">        counter += nums[i];</span><br><span class=\"line\">        perSum[i + <span class=\"number\">1</span>] = counter;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> maxLen = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; numsSize; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> len = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = numsSize; j &gt;= i; j--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(perSum[i] == perSum[j]) &#123;</span><br><span class=\"line\">                len = j - i;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(len &gt; maxLen) maxLen = len;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> maxLen;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 2: 前缀和+哈希表</strong></p>\n<h3 id=\"238-Product-of-Array-Except-Self\"><a href=\"#238-Product-of-Array-Except-Self\" class=\"headerlink\" title=\"238. Product of Array Except Self\"></a>238. Product of Array Except Self</h3><p>Given an integer array <code>nums</code>, return <em>an array</em> <code>answer</code> <em>such that</em> <code>answer[i]</code> <em>is equal to the product of all the elements of</em> <code>nums</code> <em>except</em> <code>nums[i]</code>.</p>\n<p>The product of any prefix or suffix of <code>nums</code> is <strong>guaranteed</strong> to fit in a <strong>32-bit</strong> integer.</p>\n<p>You must write an algorithm that runs in <code>O(n)</code> time and without using the division operation.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Input</span>: nums =<span class=\"meta\"> [1,2,3,4]</span></span><br><span class=\"line\"><span class=\"attribute\">Output</span>:<span class=\"meta\"> [24,12,8,6]</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Example 2:</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Input</span>: nums =<span class=\"meta\"> [-1,1,0,-3,3]</span></span><br><span class=\"line\"><span class=\"attribute\">Output</span>:<span class=\"meta\"> [0,0,9,0,0]</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>  <code>2 &lt;= nums.length &lt;= 105</code></li>\n<li>  <code>-30 &lt;= nums[i] &lt;= 30</code></li>\n<li>  The product of any prefix or suffix of <code>nums</code> is <strong>guaranteed</strong> to fit in a <strong>32-bit</strong> integer.</li>\n</ul>\n<p><strong>Solution 1:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span>* <span class=\"title function_\">productExceptSelf</span><span class=\"params\">(<span class=\"type\">int</span>* nums, <span class=\"type\">int</span> numsSize, <span class=\"type\">int</span>* returnSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> prefix[numsSize];</span><br><span class=\"line\">    <span class=\"type\">int</span> suffix[numsSize];</span><br><span class=\"line\">    <span class=\"type\">int</span>* ans = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"type\">int</span>) * numsSize);</span><br><span class=\"line\">    *returnSize = numsSize;</span><br><span class=\"line\">    </span><br><span class=\"line\">    prefix[<span class=\"number\">0</span>] = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; numsSize<span class=\"number\">-1</span>; i++) &#123;</span><br><span class=\"line\">        prefix[i] = prefix[i<span class=\"number\">-1</span>] * nums[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    suffix[numsSize<span class=\"number\">-1</span>] = nums[numsSize<span class=\"number\">-1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = numsSize<span class=\"number\">-2</span>; i &gt; <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        suffix[i] = suffix[i+<span class=\"number\">1</span>] * nums[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    ans[<span class=\"number\">0</span>] = suffix[<span class=\"number\">1</span>];</span><br><span class=\"line\">    ans[numsSize<span class=\"number\">-1</span>] = prefix[numsSize<span class=\"number\">-2</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; numsSize - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        ans[i] = prefix[i<span class=\"number\">-1</span>] * suffix[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>**Solution 2: **</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span>* <span class=\"title function_\">productExceptSelf</span><span class=\"params\">(<span class=\"type\">int</span>* nums, <span class=\"type\">int</span> numsSize, <span class=\"type\">int</span>* returnSize)</span>&#123;</span><br><span class=\"line\">    *returnSize = numsSize;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span>* ans = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"type\">int</span>) * numsSize);</span><br><span class=\"line\">    <span class=\"type\">int</span> left=<span class=\"number\">1</span>, right=<span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i &lt; numsSize; i++)</span><br><span class=\"line\">        ans[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;numsSize; i++) &#123;</span><br><span class=\"line\">        ans[i] *= left;</span><br><span class=\"line\">        left *= nums[i];</span><br><span class=\"line\">        </span><br><span class=\"line\">        ans[numsSize<span class=\"number\">-1</span>-i] *= right;</span><br><span class=\"line\">        right *= nums[numsSize<span class=\"number\">-1</span>-i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"20-Valid-Parentheses\"><a href=\"#20-Valid-Parentheses\" class=\"headerlink\" title=\"20. Valid Parentheses\"></a>20. Valid Parentheses</h3><p>Given a string <code>s</code> containing just the characters <code>&#39;(&#39;</code>, <code>&#39;)&#39;</code>, <code>&#39;&#123;&#39;</code>, <code>&#39;&#125;&#39;</code>, <code>&#39;[&#39;</code> and <code>&#39;]&#39;</code>, determine if the input string is valid.</p>\n<p>An input string is valid if:</p>\n<ol>\n<li> Open brackets must be closed by the same type of brackets.</li>\n<li>Open brackets must be closed in the correct order.</li>\n</ol>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input:</span> s = <span class=\"string\">&quot;()&quot;</span></span><br><span class=\"line\"><span class=\"symbol\">Output:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Example 2:</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input:</span> s = <span class=\"string\">&quot;()[]&#123;&#125;&quot;</span></span><br><span class=\"line\"><span class=\"symbol\">Output:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Example 3:</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input:</span> s = <span class=\"string\">&quot;(]&quot;</span></span><br><span class=\"line\"><span class=\"symbol\">Output:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Example 4:</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input:</span> s = <span class=\"string\">&quot;([)]&quot;</span></span><br><span class=\"line\"><span class=\"symbol\">Output:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Example 5:</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input:</span> s = <span class=\"string\">&quot;&#123;[]&#125;&quot;</span></span><br><span class=\"line\"><span class=\"symbol\">Output:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 1: 栈</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">trans</span><span class=\"params\">(<span class=\"type\">char</span> ch)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ch == <span class=\"string\">&#x27;&#125;&#x27;</span>) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#123;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ch == <span class=\"string\">&#x27;]&#x27;</span>) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;[&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ch == <span class=\"string\">&#x27;)&#x27;</span>) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;(&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">isValid</span><span class=\"params\">(<span class=\"type\">char</span> * s)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> len = <span class=\"built_in\">strlen</span>(s);</span><br><span class=\"line\">    <span class=\"type\">int</span> top = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"built_in\">stack</span>[len];</span><br><span class=\"line\">    <span class=\"type\">int</span> ch;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        ch = trans(s[i]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ch) &#123;</span><br><span class=\"line\">            top--;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(top &lt; <span class=\"number\">0</span> || <span class=\"built_in\">stack</span>[top] != ch) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;  </span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">stack</span>[top++] = s[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> top == <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>leetcod的一个算法练习计划，一天一道算法题，一共30道题。</p>\n<p>跟着<a href=\"https://feis.studio/#/\">Feis Studio</a>的Feis Lee老师学的。视频链接：<a href=\"https://www.bilibili.com/video/BV1764y1M7a6?spm_id_from=..search-card.all.click\">【C 語言的 LeetCode 30 天挑戰】</a></p>\n<p>实现语言：C</p>","more":"<h2 id=\"April\"><a href=\"#April\" class=\"headerlink\" title=\"April\"></a>April</h2><h3 id=\"53-Maximum-Subarray\"><a href=\"#53-Maximum-Subarray\" class=\"headerlink\" title=\"53. Maximum Subarray\"></a>53. Maximum Subarray</h3><p>Given an integer array <code>nums</code>, find the contiguous subarray (containing at least one number) which has the largest sum and return <em>its sum</em>.</p>\n<p>A <strong>subarray</strong> is a <strong>contiguous</strong> part of an array.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Input: nums = [<span class=\"string\">-2</span>,1,<span class=\"string\">-3</span>,4,<span class=\"string\">-1</span>,2,1,<span class=\"string\">-5</span>,4]</span><br><span class=\"line\">Output: 6</span><br><span class=\"line\">Explanation: [4,<span class=\"string\">-1</span>,2,1] has the largest sum = 6.</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">cmp</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (a &gt; b) ? a : b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">maxSubArray</span><span class=\"params\">(<span class=\"type\">int</span>* nums, <span class=\"type\">int</span> numsSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> pre = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> max = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; numsSize; i++) &#123;</span><br><span class=\"line\">        pre = cmp(pre + nums[i], nums[i]);</span><br><span class=\"line\">        max = cmp(pre, max);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"136-Single-Number\"><a href=\"#136-Single-Number\" class=\"headerlink\" title=\"136. Single Number\"></a>136. Single Number</h3><p>Given a <strong>non-empty</strong> array of integers <code>nums</code>, every element appears <em>twice</em> except for one. Find that single one.</p>\n<p>You must implement a solution with a linear runtime complexity and use only constant extra space.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Input</span>: nums =<span class=\"meta\"> [2,2,1]</span></span><br><span class=\"line\"><span class=\"attribute\">Output</span>: <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 经典异或题目</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">singleNumber</span><span class=\"params\">(<span class=\"type\">int</span>* nums, <span class=\"type\">int</span> numsSize)</span> &#123;   </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; numsSize; i++) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        nums[<span class=\"number\">0</span>] = nums[<span class=\"number\">0</span>] ^ nums[i];</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"202-Happy-Number\"><a href=\"#202-Happy-Number\" class=\"headerlink\" title=\"202. Happy Number\"></a>202. Happy Number</h3><p>Write an algorithm to determine if a number <code>n</code> is happy.</p>\n<p>A <strong>happy number</strong> is a number defined by the following process:</p>\n<ul>\n<li>  Starting with any positive integer, replace the number by the sum of the squares of its digits.</li>\n<li>  Repeat the process until the number equals 1 (where it will stay), or it <strong>loops endlessly in a cycle</strong> which does not include 1.</li>\n<li>  Those numbers for which this process <strong>ends in 1</strong> are happy.</li>\n</ul>\n<p>Return <code>true</code> <em>if</em> <code>n</code> <em>is a happy number, and</em> <code>false</code> <em>if not</em>.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Input</span>: n = <span class=\"number\">19</span></span><br><span class=\"line\"><span class=\"attribute\">Output</span>: true</span><br><span class=\"line\"><span class=\"attribute\">Explanation</span>:</span><br><span class=\"line\"><span class=\"attribute\">12</span> + <span class=\"number\">92</span> = <span class=\"number\">82</span></span><br><span class=\"line\"><span class=\"attribute\">82</span> + <span class=\"number\">22</span> = <span class=\"number\">68</span></span><br><span class=\"line\"><span class=\"attribute\">62</span> + <span class=\"number\">82</span> = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"attribute\">12</span> + <span class=\"number\">02</span> + <span class=\"number\">02</span> = <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 龟兔赛跑 slow fast</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">next</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        n1 += (n % <span class=\"number\">10</span>) * (n % <span class=\"number\">10</span>);</span><br><span class=\"line\">        n /= <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">isHappy</span><span class=\"params\">(<span class=\"type\">int</span> n)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> slow = n;</span><br><span class=\"line\">    <span class=\"type\">int</span> fast = next(n);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (slow != fast &amp;&amp; fast != <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        slow = next(slow);</span><br><span class=\"line\">        fast = next(next(fast));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (fast == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"283-Move-Zeroes\"><a href=\"#283-Move-Zeroes\" class=\"headerlink\" title=\"283. Move Zeroes\"></a>283. Move Zeroes</h3><p>Given an integer array <code>nums</code>, move all <code>0</code>‘s to the end of it while maintaining the relative order of the non-zero elements.</p>\n<p><strong>Note</strong> that you must do this in-place without making a copy of the array.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Input: nums = <span class=\"string\">[0,1,0,3,12]</span></span><br><span class=\"line\">Output: <span class=\"string\">[1,3,12,0,0]</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">swap</span><span class=\"params\">(<span class=\"type\">int</span> *a, <span class=\"type\">int</span> *b)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t = *a;</span><br><span class=\"line\">    *a = *b, *b = t;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">moveZeroes</span><span class=\"params\">(<span class=\"type\">int</span> *nums, <span class=\"type\">int</span> numsSize)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> left = <span class=\"number\">0</span>, right = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (right &lt; numsSize) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[right]) &#123;</span><br><span class=\"line\">            swap(nums + left, nums + right);</span><br><span class=\"line\">            left++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        right++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"122-Best-Time-to-Buy-and-Sell-Stock-II\"><a href=\"#122-Best-Time-to-Buy-and-Sell-Stock-II\" class=\"headerlink\" title=\"122. Best Time to Buy and Sell Stock II\"></a>122. Best Time to Buy and Sell Stock II</h3><p>You are given an integer array <code>prices</code> where <code>prices[i]</code> is the price of a given stock on the <code>ith</code> day.</p>\n<p>On each day, you may decide to buy and/or sell the stock. You can only hold <strong>at most one</strong> share of the stock at any time. However, you can buy it then immediately sell it on the <strong>same day</strong>.</p>\n<p>Find and return <em>the <strong>maximum</strong> profit you can achieve</em>.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Input</span>: prices =<span class=\"meta\"> [7,1,5,3,6,4]</span></span><br><span class=\"line\"><span class=\"attribute\">Output</span>: <span class=\"number\">7</span></span><br><span class=\"line\"><span class=\"attribute\">Explanation</span>: Buy <span class=\"literal\">on</span> day <span class=\"number\">2</span> (price = <span class=\"number\">1</span>) and sell <span class=\"literal\">on</span> day <span class=\"number\">3</span> (price = <span class=\"number\">5</span>), profit = <span class=\"number\">5</span>-<span class=\"number\">1</span> = <span class=\"number\">4</span>.</span><br><span class=\"line\"><span class=\"attribute\">Then</span> buy <span class=\"literal\">on</span> day <span class=\"number\">4</span> (price = <span class=\"number\">3</span>) and sell <span class=\"literal\">on</span> day <span class=\"number\">5</span> (price = <span class=\"number\">6</span>), profit = <span class=\"number\">6</span>-<span class=\"number\">3</span> = <span class=\"number\">3</span>.</span><br><span class=\"line\"><span class=\"attribute\">Total</span> profit is <span class=\"number\">4</span> + <span class=\"number\">3</span> = <span class=\"number\">7</span>.</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 1:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// The Limit Exceeded</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">maxProfit</span><span class=\"params\">(<span class=\"type\">int</span>* prices, <span class=\"type\">int</span> pricesSize)</span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (pricesSize &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> profit;</span><br><span class=\"line\">    <span class=\"type\">int</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 最后一天不卖</span></span><br><span class=\"line\">    profit = maxProfit(prices, pricesSize - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (profit &gt; max) max = profit;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 最后一天卖</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; pricesSize - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        profit = prices[pricesSize - <span class=\"number\">1</span>] - prices[i] + maxProfit(prices, i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (profit &gt; max) max = profit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 2: Peak Valley Approach</strong></p>\n<p><img src=\"https://zhenruyi.github.io/images/algo02Leetcode30daysApril122_1.png\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 所有波峰加波谷之和</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">maxProfit</span><span class=\"params\">(<span class=\"type\">int</span>* prices, <span class=\"type\">int</span> pricesSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> valley = prices[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> peak = prices[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> profit = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i &lt; pricesSize) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &lt; pricesSize &amp;&amp; prices[i] &lt;= prices[i<span class=\"number\">-1</span>])</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        valley = prices[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &lt; pricesSize &amp;&amp; prices[i] &gt;= prices[i<span class=\"number\">-1</span>])</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        peak = prices[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">        profit += peak - valley;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> profit;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>改进：</p>\n<p><img src=\"https://zhenruyi.github.io/images/algo02Leetcode30daysApril122_2.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JAVA:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">maxProfit</span><span class=\"params\">(<span class=\"type\">int</span>[] prices)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">maxprofit</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; prices.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (prices[i] &gt; prices[i - <span class=\"number\">1</span>])</span><br><span class=\"line\">                maxprofit += prices[i] - prices[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> maxprofit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 2: 乐扣</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 动态规划</span></span><br><span class=\"line\"><span class=\"comment\">// 0:手中没有股票, 1:手中有股票</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">maxProfit</span><span class=\"params\">(<span class=\"type\">int</span>* prices, <span class=\"type\">int</span> pricesSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> profit[pricesSize][<span class=\"number\">2</span>];</span><br><span class=\"line\">    <span class=\"comment\">// 手中没有股票</span></span><br><span class=\"line\">    profit[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 手中有股票</span></span><br><span class=\"line\">    profit[<span class=\"number\">0</span>][<span class=\"number\">1</span>] = -prices[<span class=\"number\">0</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>; i&lt;pricesSize; i++) &#123;</span><br><span class=\"line\">        profit[i][<span class=\"number\">0</span>] = profit[i<span class=\"number\">-1</span>][<span class=\"number\">0</span>] &gt; (profit[i<span class=\"number\">-1</span>][<span class=\"number\">1</span>]+prices[i]) ? profit[i<span class=\"number\">-1</span>][<span class=\"number\">0</span>] : (profit[i<span class=\"number\">-1</span>][<span class=\"number\">1</span>]+prices[i]);</span><br><span class=\"line\">        profit[i][<span class=\"number\">1</span>] = profit[i<span class=\"number\">-1</span>][<span class=\"number\">1</span>] &gt; (profit[i<span class=\"number\">-1</span>][<span class=\"number\">0</span>]-prices[i]) ? profit[i<span class=\"number\">-1</span>][<span class=\"number\">1</span>] : (profit[i<span class=\"number\">-1</span>][<span class=\"number\">0</span>]-prices[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> profit[pricesSize - <span class=\"number\">1</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 贪心算法</span></span><br><span class=\"line\"><span class=\"comment\">// 在每个区间都是获得利润</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">maxProfit</span><span class=\"params\">(<span class=\"type\">int</span>* prices, <span class=\"type\">int</span> pricesSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> profit = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; pricesSize; i++) &#123;</span><br><span class=\"line\">        profit += (prices[i] - prices[i<span class=\"number\">-1</span>] &gt; <span class=\"number\">0</span>) ? prices[i] - prices[i<span class=\"number\">-1</span>] : <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> profit;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"49-Group-Anagrams\"><a href=\"#49-Group-Anagrams\" class=\"headerlink\" title=\"49. Group Anagrams\"></a>49. Group Anagrams</h3><p>Given an array of strings <code>strs</code>, group <strong>the anagrams</strong> together. You can return the answer in <strong>any order</strong>.</p>\n<p>An <strong>Anagram</strong> is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input</span>: strs = [<span class=\"string\">&quot;eat&quot;</span>,<span class=\"string\">&quot;tea&quot;</span>,<span class=\"string\">&quot;tan&quot;</span>,<span class=\"string\">&quot;ate&quot;</span>,<span class=\"string\">&quot;nat&quot;</span>,<span class=\"string\">&quot;bat&quot;</span>]</span><br><span class=\"line\"><span class=\"symbol\">Output</span>: [[<span class=\"string\">&quot;bat&quot;</span>],[<span class=\"string\">&quot;nat&quot;</span>,<span class=\"string\">&quot;tan&quot;</span>],[<span class=\"string\">&quot;ate&quot;</span>,<span class=\"string\">&quot;eat&quot;</span>,<span class=\"string\">&quot;tea&quot;</span>]]</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 1:</strong></p>\n<p>用质数表示26个字母，把字符串的各个字母相乘，这样可保证字母异位词的乘积必定是相等的。其余步骤就是用map存储，和别人的一致了。</p>\n<h3 id=\"876-Middle-of-the-Linked-List\"><a href=\"#876-Middle-of-the-Linked-List\" class=\"headerlink\" title=\"876. Middle of the Linked List\"></a>876. Middle of the Linked List</h3><p>Given the <code>head</code> of a singly linked list, return <em>the middle node of the linked list</em>.</p>\n<p>If there are two middle nodes, return <strong>the second middle</strong> node.</p>\n<p><strong>Solution 1:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> ListNode* <span class=\"title function_\">middleNode</span><span class=\"params\">(<span class=\"keyword\">struct</span> ListNode* head)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> nodeSize = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ListNode</span>* <span class=\"title\">p</span> =</span> head;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        nodeSize++;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    nodeSize /= <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;nodeSize; i++) &#123;</span><br><span class=\"line\">        head = head-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 2: 快慢指针，快的比慢的快两倍</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> ListNode* <span class=\"title function_\">middleNode</span><span class=\"params\">(<span class=\"keyword\">struct</span> ListNode* head)</span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ListNode</span> *<span class=\"title\">fast</span>, *<span class=\"title\">slow</span>;</span></span><br><span class=\"line\">    fast = head;</span><br><span class=\"line\">    slow = head;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(fast-&gt;next != <span class=\"literal\">NULL</span> &amp;&amp; fast != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(fast-&gt;next-&gt;next == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> slow-&gt;next;</span><br><span class=\"line\">        fast = fast-&gt;next-&gt;next;</span><br><span class=\"line\">        slow = slow-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> slow;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"844-Backspace-String-Compare\"><a href=\"#844-Backspace-String-Compare\" class=\"headerlink\" title=\"844. Backspace String Compare\"></a>844. Backspace String Compare</h3><p>Given two strings <code>s</code> and <code>t</code>, return <code>true</code> <em>if they are equal when both are typed into empty text editors</em>. <code>&#39;#&#39;</code> means a backspace character.</p>\n<p>Note that after backspacing an empty text, the text will continue empty.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input:</span> s = <span class=\"string\">&quot;ab#c&quot;</span>, t = <span class=\"string\">&quot;ad#c&quot;</span></span><br><span class=\"line\"><span class=\"symbol\">Output:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"symbol\">Explanation:</span> Both s <span class=\"built_in\">and</span> t become <span class=\"string\">&quot;ac&quot;</span>.</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 1: 重构字符串</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">backspaceCompare</span><span class=\"params\">(<span class=\"type\">char</span> * s, <span class=\"type\">char</span> * t)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> sNew[<span class=\"number\">201</span>];</span><br><span class=\"line\">    <span class=\"type\">char</span> tNew[<span class=\"number\">201</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(s[i] != <span class=\"string\">&#x27;\\0&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s[i] == <span class=\"string\">&#x27;#&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                j--;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sNew[j] = s[i];</span><br><span class=\"line\">        j++;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sNew[j] = <span class=\"string\">&#x27;\\0&#x27;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t[i] != <span class=\"string\">&#x27;\\0&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(t[i] == <span class=\"string\">&#x27;#&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                j--;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        tNew[j] = t[i];</span><br><span class=\"line\">        j++;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    tNew[j] = <span class=\"string\">&#x27;\\0&#x27;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(sNew[i] != <span class=\"string\">&#x27;\\0&#x27;</span> || tNew[i] != <span class=\"string\">&#x27;\\0&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sNew[i] != tNew[i])</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    \ti++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 2: 双指针</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">backspaceCompare</span><span class=\"params\">(<span class=\"type\">char</span> * s, <span class=\"type\">char</span> * t)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> ps = <span class=\"built_in\">strlen</span>(s) - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> pt = <span class=\"built_in\">strlen</span>(t) - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> sSkip = <span class=\"number\">0</span>, tSkip = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(ps &gt;= <span class=\"number\">0</span> || pt &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(ps &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(s[ps] == <span class=\"string\">&#x27;#&#x27;</span>) &#123;</span><br><span class=\"line\">                ps--;</span><br><span class=\"line\">                sSkip++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sSkip &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                ps--;</span><br><span class=\"line\">                sSkip--;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(pt &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(t[pt] == <span class=\"string\">&#x27;#&#x27;</span>) &#123;</span><br><span class=\"line\">                pt--;</span><br><span class=\"line\">                tSkip++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tSkip &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                pt--;</span><br><span class=\"line\">                tSkip--;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (pt &gt;= <span class=\"number\">0</span> &amp;&amp; ps &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s[ps] != t[pt]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ps &gt;= <span class=\"number\">0</span> || pt &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ps--, pt--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"155-Min-Stack\"><a href=\"#155-Min-Stack\" class=\"headerlink\" title=\"155. Min Stack\"></a>155. Min Stack</h3><p>Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.</p>\n<p>Implement the <code>MinStack</code> class:</p>\n<ul>\n<li>  <code>MinStack()</code> initializes the stack object.</li>\n<li>  <code>void push(int val)</code> pushes the element <code>val</code> onto the stack.</li>\n<li>  <code>void pop()</code> removes the element on the top of the stack.</li>\n<li>  <code>int top()</code> gets the top element of the stack.</li>\n<li><code>int getMin()</code> retrieves the minimum element in the stack.</li>\n</ul>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Input</span><br><span class=\"line\">[<span class=\"string\">&quot;MinStack&quot;</span>,<span class=\"string\">&quot;push&quot;</span>,<span class=\"string\">&quot;push&quot;</span>,<span class=\"string\">&quot;push&quot;</span>,<span class=\"string\">&quot;getMin&quot;</span>,<span class=\"string\">&quot;pop&quot;</span>,<span class=\"string\">&quot;top&quot;</span>,<span class=\"string\">&quot;getMin&quot;</span>]</span><br><span class=\"line\">[[],[<span class=\"number\">-2</span>],[<span class=\"number\">0</span>],[<span class=\"number\">-3</span>],[],[],[],[]]</span><br><span class=\"line\"></span><br><span class=\"line\">Output</span><br><span class=\"line\">[<span class=\"literal\">null</span>,<span class=\"literal\">null</span>,<span class=\"literal\">null</span>,<span class=\"literal\">null</span>,<span class=\"number\">-3</span>,<span class=\"literal\">null</span>,<span class=\"number\">0</span>,<span class=\"number\">-2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">Explanation</span><br><span class=\"line\">MinStack minStack = <span class=\"keyword\">new</span> MinStack();</span><br><span class=\"line\">minStack.<span class=\"built_in\">push</span>(<span class=\"number\">-2</span>);</span><br><span class=\"line\">minStack.<span class=\"built_in\">push</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">minStack.<span class=\"built_in\">push</span>(<span class=\"number\">-3</span>);</span><br><span class=\"line\">minStack.getMin(); <span class=\"comment\">// return -3</span></span><br><span class=\"line\">minStack.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">minStack.<span class=\"built_in\">top</span>();    <span class=\"comment\">// return 0</span></span><br><span class=\"line\">minStack.getMin(); <span class=\"comment\">// return -2</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 1:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span>* data;</span><br><span class=\"line\">    <span class=\"type\">int</span>* mins;</span><br><span class=\"line\">    <span class=\"type\">int</span> size;</span><br><span class=\"line\">&#125; MinStack;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">MinStack* <span class=\"title function_\">minStackCreate</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    MinStack* s = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(MinStack));</span><br><span class=\"line\">    s-&gt;data = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    s-&gt;mins = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    s-&gt;size = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">minStackPush</span><span class=\"params\">(MinStack* obj, <span class=\"type\">int</span> val)</span> &#123;</span><br><span class=\"line\">    obj-&gt;size++;</span><br><span class=\"line\">    obj-&gt;data = <span class=\"built_in\">realloc</span>(obj-&gt;data, <span class=\"keyword\">sizeof</span>(<span class=\"type\">int</span>)*(obj-&gt;size));</span><br><span class=\"line\">    obj-&gt;mins = <span class=\"built_in\">realloc</span>(obj-&gt;mins, <span class=\"keyword\">sizeof</span>(<span class=\"type\">int</span>)*(obj-&gt;size));</span><br><span class=\"line\">    obj-&gt;data[obj-&gt;size<span class=\"number\">-1</span>] = val;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(obj-&gt;size == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        obj-&gt;mins[obj-&gt;size<span class=\"number\">-1</span>] = val;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(val &lt; obj-&gt;mins[obj-&gt;size<span class=\"number\">-2</span>]) &#123;</span><br><span class=\"line\">            obj-&gt;mins[obj-&gt;size<span class=\"number\">-1</span>] = val;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            obj-&gt;mins[obj-&gt;size<span class=\"number\">-1</span>] = obj-&gt;mins[obj-&gt;size<span class=\"number\">-2</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">minStackPop</span><span class=\"params\">(MinStack* obj)</span> &#123;</span><br><span class=\"line\">    obj-&gt;size--;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">minStackTop</span><span class=\"params\">(MinStack* obj)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj-&gt;data[obj-&gt;size<span class=\"number\">-1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">minStackGetMin</span><span class=\"params\">(MinStack* obj)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj-&gt;mins[obj-&gt;size<span class=\"number\">-1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">minStackFree</span><span class=\"params\">(MinStack* obj)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(obj-&gt;data);</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(obj-&gt;mins);</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(obj);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 2: 辅助栈：力扣</strong></p>\n<h3 id=\"543-Diameter-of-Binary-Tree\"><a href=\"#543-Diameter-of-Binary-Tree\" class=\"headerlink\" title=\"543. Diameter of Binary Tree\"></a>543. Diameter of Binary Tree</h3><p>Given the <code>root</code> of a binary tree, return <em>the length of the <strong>diameter</strong> of the tree</em>.</p>\n<p>The <strong>diameter</strong> of a binary tree is the <strong>length</strong> of the longest path between any two nodes in a tree. This path may or may not pass through the <code>root</code>.</p>\n<p>The <strong>length</strong> of a path between two nodes is represented by the number of edges between them.</p>\n<p><strong>Solution 1:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 假定一个结点root，先求出左枝最大深度，再求右枝最大深度，相加就是最大半径</span></span><br><span class=\"line\"><span class=\"comment\">// 最大半径不一定经过root，求出所有结点的最大半径，再比较就可以。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">maxDepth</span><span class=\"params\">(<span class=\"keyword\">struct</span> TreeNode* root)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> left = maxDepth(root-&gt;left) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> right = maxDepth(root-&gt;right) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(left &gt; right) <span class=\"keyword\">return</span> left;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> right;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">diameterOfBinaryTree</span><span class=\"params\">(<span class=\"keyword\">struct</span> TreeNode* root)</span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> leftDep = maxDepth(root-&gt;left);</span><br><span class=\"line\">    <span class=\"type\">int</span> rightDep = maxDepth(root-&gt;right);</span><br><span class=\"line\">    <span class=\"type\">int</span> middleDia = leftDep + rightDep;</span><br><span class=\"line\">    <span class=\"type\">int</span> maxDia = middleDia;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> leftDia = diameterOfBinaryTree(root-&gt;left);</span><br><span class=\"line\">    <span class=\"type\">int</span> rightDia = diameterOfBinaryTree(root-&gt;right);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(leftDia &gt; maxDia) maxDia = leftDia;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(rightDia &gt; maxDia) maxDia = rightDia;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> maxDia;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"1046-Last-Stone-Weight\"><a href=\"#1046-Last-Stone-Weight\" class=\"headerlink\" title=\"1046. Last Stone Weight\"></a>1046. Last Stone Weight</h3><p>You are given an array of integers <code>stones</code> where <code>stones[i]</code> is the weight of the <code>ith</code> stone.</p>\n<p>We are playing a game with the stones. On each turn, we choose the <strong>heaviest two stones</strong> and smash them together. Suppose the heaviest two stones have weights <code>x</code> and <code>y</code> with <code>x &lt;= y</code>. The result of this smash is:</p>\n<ul>\n<li>  If <code>x == y</code>, both stones are destroyed, and</li>\n<li>  If <code>x != y</code>, the stone of weight <code>x</code> is destroyed, and the stone of weight <code>y</code> has new weight <code>y - x</code>.</li>\n</ul>\n<p>At the end of the game, there is <strong>at most one</strong> stone left.</p>\n<p>Return <em>the smallest possible weight of the left stone</em>. If there are no stones left, return <code>0</code>.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight smali\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Input: stones = [2,7,4,1,8,1]</span><br><span class=\"line\">Output: 1</span><br><span class=\"line\">Explanation: </span><br><span class=\"line\">We combine 7<span class=\"built_in\"> and </span>8 to get 1 so the<span class=\"built_in\"> array </span>converts to [2,4,1,1,1] then,</span><br><span class=\"line\">we combine 2<span class=\"built_in\"> and </span>4 to get 2 so the<span class=\"built_in\"> array </span>converts to [2,1,1,1] then,</span><br><span class=\"line\">we combine 2<span class=\"built_in\"> and </span>1 to get 1 so the<span class=\"built_in\"> array </span>converts to [1,1,1] then,</span><br><span class=\"line\">we combine 1<span class=\"built_in\"> and </span>1 to get 0 so the<span class=\"built_in\"> array </span>converts to [1] then that&#x27;s the value of the last stone.</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 1:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 返回最大重量</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">findBig</span><span class=\"params\">(<span class=\"type\">int</span>* stonesN)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1000</span>; i &gt; <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(stonesN[i] &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            stonesN[i]--;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">lastStoneWeight</span><span class=\"params\">(<span class=\"type\">int</span>* stones, <span class=\"type\">int</span> stonesSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 该重量的石头有几个？</span></span><br><span class=\"line\">    <span class=\"type\">int</span> stonesN[<span class=\"number\">1001</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; stonesSize; i++) &#123;</span><br><span class=\"line\">        stonesN[stones[i]]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 最大重量y，第二大重量x</span></span><br><span class=\"line\">    <span class=\"type\">int</span> y = findBig(stonesN);</span><br><span class=\"line\">    <span class=\"type\">int</span> x = findBig(stonesN);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(x != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 摧毁之后再放回去</span></span><br><span class=\"line\">        stonesN[y-x]++;</span><br><span class=\"line\">        y = findBig(stonesN);</span><br><span class=\"line\">        x = findBig(stonesN);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> y;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"525-Contiguous-Array\"><a href=\"#525-Contiguous-Array\" class=\"headerlink\" title=\"525. Contiguous Array\"></a>525. Contiguous Array</h3><p>Given a binary array <code>nums</code>, return <em>the maximum length of a contiguous subarray with an equal number of</em> <code>0</code> <em>and</em> <code>1</code>.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input:</span> nums = [<span class=\"number\">0</span>,<span class=\"number\">1</span>]</span><br><span class=\"line\"><span class=\"symbol\">Output:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"symbol\">Explanation:</span> [<span class=\"number\">0</span>, <span class=\"number\">1</span>] <span class=\"built_in\">is</span> the longest contiguous subarray <span class=\"keyword\">with</span> an equal number <span class=\"keyword\">of</span> <span class=\"number\">0</span> <span class=\"built_in\">and</span> <span class=\"number\">1</span>.</span><br></pre></td></tr></table></figure>\n\n<p><strong>Example 2:</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input:</span> nums = [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"symbol\">Output:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"symbol\">Explanation:</span> [<span class=\"number\">0</span>, <span class=\"number\">1</span>] (<span class=\"built_in\">or</span> [<span class=\"number\">1</span>, <span class=\"number\">0</span>]) <span class=\"built_in\">is</span> a longest contiguous subarray <span class=\"keyword\">with</span> equal number <span class=\"keyword\">of</span> <span class=\"number\">0</span> <span class=\"built_in\">and</span> <span class=\"number\">1</span>.</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 1: 前缀和</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Time Limit Exceeded</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">findMaxLength</span><span class=\"params\">(<span class=\"type\">int</span>* nums, <span class=\"type\">int</span> numsSize)</span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; numsSize; i++)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[i] == <span class=\"number\">0</span>) nums[i] = <span class=\"number\">-1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> perSum[numsSize + <span class=\"number\">1</span>];</span><br><span class=\"line\">    perSum[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> counter = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; numsSize; i++) &#123;</span><br><span class=\"line\">        counter += nums[i];</span><br><span class=\"line\">        perSum[i + <span class=\"number\">1</span>] = counter;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> maxLen = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; numsSize; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> len = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = numsSize; j &gt;= i; j--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(perSum[i] == perSum[j]) &#123;</span><br><span class=\"line\">                len = j - i;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(len &gt; maxLen) maxLen = len;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> maxLen;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 2: 前缀和+哈希表</strong></p>\n<h3 id=\"238-Product-of-Array-Except-Self\"><a href=\"#238-Product-of-Array-Except-Self\" class=\"headerlink\" title=\"238. Product of Array Except Self\"></a>238. Product of Array Except Self</h3><p>Given an integer array <code>nums</code>, return <em>an array</em> <code>answer</code> <em>such that</em> <code>answer[i]</code> <em>is equal to the product of all the elements of</em> <code>nums</code> <em>except</em> <code>nums[i]</code>.</p>\n<p>The product of any prefix or suffix of <code>nums</code> is <strong>guaranteed</strong> to fit in a <strong>32-bit</strong> integer.</p>\n<p>You must write an algorithm that runs in <code>O(n)</code> time and without using the division operation.</p>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Input</span>: nums =<span class=\"meta\"> [1,2,3,4]</span></span><br><span class=\"line\"><span class=\"attribute\">Output</span>:<span class=\"meta\"> [24,12,8,6]</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Example 2:</strong></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Input</span>: nums =<span class=\"meta\"> [-1,1,0,-3,3]</span></span><br><span class=\"line\"><span class=\"attribute\">Output</span>:<span class=\"meta\"> [0,0,9,0,0]</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>  <code>2 &lt;= nums.length &lt;= 105</code></li>\n<li>  <code>-30 &lt;= nums[i] &lt;= 30</code></li>\n<li>  The product of any prefix or suffix of <code>nums</code> is <strong>guaranteed</strong> to fit in a <strong>32-bit</strong> integer.</li>\n</ul>\n<p><strong>Solution 1:</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span>* <span class=\"title function_\">productExceptSelf</span><span class=\"params\">(<span class=\"type\">int</span>* nums, <span class=\"type\">int</span> numsSize, <span class=\"type\">int</span>* returnSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> prefix[numsSize];</span><br><span class=\"line\">    <span class=\"type\">int</span> suffix[numsSize];</span><br><span class=\"line\">    <span class=\"type\">int</span>* ans = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"type\">int</span>) * numsSize);</span><br><span class=\"line\">    *returnSize = numsSize;</span><br><span class=\"line\">    </span><br><span class=\"line\">    prefix[<span class=\"number\">0</span>] = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; numsSize<span class=\"number\">-1</span>; i++) &#123;</span><br><span class=\"line\">        prefix[i] = prefix[i<span class=\"number\">-1</span>] * nums[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    suffix[numsSize<span class=\"number\">-1</span>] = nums[numsSize<span class=\"number\">-1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = numsSize<span class=\"number\">-2</span>; i &gt; <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        suffix[i] = suffix[i+<span class=\"number\">1</span>] * nums[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    ans[<span class=\"number\">0</span>] = suffix[<span class=\"number\">1</span>];</span><br><span class=\"line\">    ans[numsSize<span class=\"number\">-1</span>] = prefix[numsSize<span class=\"number\">-2</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; numsSize - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        ans[i] = prefix[i<span class=\"number\">-1</span>] * suffix[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>**Solution 2: **</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span>* <span class=\"title function_\">productExceptSelf</span><span class=\"params\">(<span class=\"type\">int</span>* nums, <span class=\"type\">int</span> numsSize, <span class=\"type\">int</span>* returnSize)</span>&#123;</span><br><span class=\"line\">    *returnSize = numsSize;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span>* ans = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"type\">int</span>) * numsSize);</span><br><span class=\"line\">    <span class=\"type\">int</span> left=<span class=\"number\">1</span>, right=<span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i &lt; numsSize; i++)</span><br><span class=\"line\">        ans[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;numsSize; i++) &#123;</span><br><span class=\"line\">        ans[i] *= left;</span><br><span class=\"line\">        left *= nums[i];</span><br><span class=\"line\">        </span><br><span class=\"line\">        ans[numsSize<span class=\"number\">-1</span>-i] *= right;</span><br><span class=\"line\">        right *= nums[numsSize<span class=\"number\">-1</span>-i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"20-Valid-Parentheses\"><a href=\"#20-Valid-Parentheses\" class=\"headerlink\" title=\"20. Valid Parentheses\"></a>20. Valid Parentheses</h3><p>Given a string <code>s</code> containing just the characters <code>&#39;(&#39;</code>, <code>&#39;)&#39;</code>, <code>&#39;&#123;&#39;</code>, <code>&#39;&#125;&#39;</code>, <code>&#39;[&#39;</code> and <code>&#39;]&#39;</code>, determine if the input string is valid.</p>\n<p>An input string is valid if:</p>\n<ol>\n<li> Open brackets must be closed by the same type of brackets.</li>\n<li>Open brackets must be closed in the correct order.</li>\n</ol>\n<p><strong>Example 1:</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input:</span> s = <span class=\"string\">&quot;()&quot;</span></span><br><span class=\"line\"><span class=\"symbol\">Output:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Example 2:</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input:</span> s = <span class=\"string\">&quot;()[]&#123;&#125;&quot;</span></span><br><span class=\"line\"><span class=\"symbol\">Output:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Example 3:</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input:</span> s = <span class=\"string\">&quot;(]&quot;</span></span><br><span class=\"line\"><span class=\"symbol\">Output:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Example 4:</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input:</span> s = <span class=\"string\">&quot;([)]&quot;</span></span><br><span class=\"line\"><span class=\"symbol\">Output:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Example 5:</strong></p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Input:</span> s = <span class=\"string\">&quot;&#123;[]&#125;&quot;</span></span><br><span class=\"line\"><span class=\"symbol\">Output:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Solution 1: 栈</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">trans</span><span class=\"params\">(<span class=\"type\">char</span> ch)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ch == <span class=\"string\">&#x27;&#125;&#x27;</span>) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#123;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ch == <span class=\"string\">&#x27;]&#x27;</span>) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;[&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ch == <span class=\"string\">&#x27;)&#x27;</span>) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;(&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">isValid</span><span class=\"params\">(<span class=\"type\">char</span> * s)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> len = <span class=\"built_in\">strlen</span>(s);</span><br><span class=\"line\">    <span class=\"type\">int</span> top = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"built_in\">stack</span>[len];</span><br><span class=\"line\">    <span class=\"type\">int</span> ch;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        ch = trans(s[i]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ch) &#123;</span><br><span class=\"line\">            top--;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(top &lt; <span class=\"number\">0</span> || <span class=\"built_in\">stack</span>[top] != ch) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;  </span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">stack</span>[top++] = s[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> top == <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Leetcode 动态规划入门","date":"2022-03-30T14:49:56.000Z","id":"leetcode3","_content":"\n\n\nLeetcode上的动态规划学习计划。\n\n最近备战蓝桥杯，所以用C实现的。\n\n\n\n<!-- more -->\n\n\n\n#### 509 斐波那契数\n\n斐波那契数 （通常用 F(n) 表示）形成的序列称为斐波那契数列。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：\nF(0) = 0，F(1) = 1\nF(n) = F(n - 1) + F(n - 2)，其中 n > 1\n给定 n ，请计算 F(n) 。\n\n```c\nint fib(int n) {\n    if(n <= 1) return n;\n    int pre1 = 0;\n    int pre2 = 1;\n    int res = 0;\n    for(int i = 2; i <= n; i++) {\n        res = pre1 + pre2;\n        pre1 = pre2;\n        pre2 = res;\n    }\n    return res;\n}\n```\n\n\n\n#### 1137 第N个泰波那锲数\n\n泰波那契序列 Tn 定义如下： \nT0 = 0, T1 = 1, T2 = 1, 且在 n >= 0 的条件下 Tn+3 = Tn + Tn+1 + Tn+2\n给你整数 n，请返回第 n 个泰波那契数 Tn 的值。\n\n```c\nint tribonacci(int n){\n    if(n == 0) return 0;\n    if(n <= 2) return 1;\n    int t1 = 0;\n    int t2 = 1;\n    int t3 = 1;\n    int res = 0;\n    for(int i = 3; i <= n; i++) {\n        res = t1 + t2 + t3;\n        t1 = t2;\n        t2 = t3;\n        t3 = res;\n    }\n    return res;\n}\n```\n\n\n\n#### 746 使用最小花费爬楼梯\n\n给你一个整数数组 cost ，其中 cost[i] 是从楼梯第 i 个台阶向上爬需要支付的费用。一旦你支付此费用，即可选择向上爬一个或者两个台阶。\n你可以选择从下标为 0 或下标为 1 的台阶开始爬楼梯。\n请你计算并返回达到楼梯顶部的最低花费。\n\n```c\nint minCostClimbingStairs(int* cost, int costSize){\n    if(costSize == 2) return cost[0] < cost[1] ? cost[0] : cost[1];\n    int pre1 = cost[0];\n    int pre2 = cost[1];\n    int min = 0;\n    for(int i = 2; i < costSize; i++) {\n        if(pre1 < pre2) min = pre1;\n        else min = pre2;\n        pre1 = pre2;\n        pre2 = min+cost[i];\n    }\n    if(pre1 < pre2) return pre1;\n    return pre2;\n}\n```\n\n\n\n#### 198 打家劫舍\n\n你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。\n给定一个代表每个房屋存放金额的非负整数数组，计算你 不触动警报装置的情况下 ，一夜之内能够偷窃到的最高金额。\n\n```c\nint rob(int* nums, int numsSize){\n\n    if(numsSize == 1) return nums[0];\n    if(numsSize == 2) return nums[0] > nums[1] ? nums[0] : nums[1];\n\n    int pre1 = nums[1];\n    int pre2 = nums[0];\n    int pre3 = 0;\n    int max = 0;\n    \n    for(int i=2; i < numsSize; i++) {\n        if(pre3 > pre2) max = pre3;\n        else max = pre2;\n        pre3 = pre2;\n        pre2 = pre1; \n        pre1 = max + nums[i];\n    }\n    return pre1 > pre2 ? pre1 : pre2;\n\n}\n```\n\n\n\n#### 213 打家劫舍2\n\n你是一个专业的小偷，计划偷窃沿街的房屋，每间房内都藏有一定的现金。这个地方所有的房屋都围成一圈，这意味着第一个房屋和最后一个房屋是紧挨着的。同时，相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。\n给定一个代表每个房屋存放金额的非负整数数组，计算你在不触动警报装置的情况下，今晚能够偷窃到的最高金额。\n\n```c\nint rob(int* nums, int numsSize){\n    // 分成两个数组，一个除去第一个元素，一个除去最后一个元素。\n\n    if(numsSize == 1) return nums[0];\n    if(numsSize == 2) return nums[0] > nums[1] ? nums[0] : nums[1];\n\n    int first = nums[0];\n    int second = nums[0] > nums[1] ? nums[0] : nums[1];\n    for(int i=2; i < numsSize-1; i++) {\n        int tmp = first;\n        first = second;\n        second = (tmp + nums[i]) > second ? (tmp + nums[i]) : second;\n    }\n    int max = second;\n    first = nums[1];\n    second = nums[1] > nums[2] ? nums[1] : nums[2];\n    for(int i=3; i < numsSize; i++) {\n        int tmp = first;\n        first = second;\n        second = (tmp + nums[i]) > second ? (tmp + nums[i]) : second;\n    }\n    return second > max ? second : max;\n\n}\n```\n\n\n\n#### 740 删除并获得点数\n\n给你一个整数数组 nums ，你可以对它进行一些操作。\n\n每次操作中，选择任意一个 nums[i] ，删除它并获得 nums[i] 的点数。之后，你必须删除 所有 等于 nums[i] - 1 和 nums[i] + 1 的元素。\n\n开始你拥有 0 个点数。返回你能通过这些操作获得的最大点数。\n\n```go\n// 我写的代码\nfunc deleteAndEarn(nums []int) int {\n\tlength := len(nums)\n\tif length == 1 {\n\t\treturn nums[0]\n\t}\n\tif length == 2 {\n\t\tif (nums[0] - nums[1]) * (nums[0] - nums[1]) == 1 {\n\t\t\tif nums[0] > nums[1] {\n\t\t\t\treturn nums[0]\n\t\t\t}\n\t\t\treturn nums[1]\n\t\t}\n\t\treturn nums[0] + nums[1]\n\t}\n\n\ttotal := map[int]int{}\n\tmax := nums[0]\n\tfor i:=0; i < length; i++ {\n\t\tnum := nums[i]\n\t\ttotal[num] += num\n\t\tif num > max {\n\t\t\tmax = num\n\t\t}\n\t}\n\tpre1 := 0\n\tpre2 := total[0]\n\tpre3 := total[1]\n\tres := total[2]\n\tm := 0\n\tfor i:=2; i <=max; i++ {\n\t\tres = total[i]\n\t\tif pre1 > pre2 {\n\t\t\tm = pre1\n\t\t} else {\n\t\t\tm = pre2\n\t\t}\n\t\tres += m\n\t\tpre1 = pre2\n\t\tpre2 = pre3\n\t\tpre3 = res\n\t}\n\tif pre3 > pre2 {\n\t\treturn pre3\n\t}\n\treturn pre2\n}\n```\n\n```go\n// 优化之后\nfunc deleteAndEarn(nums []int) int {\n\tmaxValue := nums[0]\n\tfor _, value := range nums {\n\t\tif value > maxValue {\n\t\t\tmaxValue = value\n\t\t}\n\t}\n\ttotal := make([]int, maxValue+1)\n\tfor _, value := range nums {\n\t\ttotal[value] += value\n\t}\n\treturn rob(total)\n}\n\nfunc rob(nums []int) int {\n\tfirst := nums[0]\n\tsecond := max(nums[0], nums[1])\n\tfor i:=2; i<len(nums); i++ {\n\t\tfirst, second = second, max(first+nums[i], second)\n\t}\n\treturn second\n}\n\nfunc max(a, b int) int {\n\tif a > b {\n\t\treturn a\n\t}\n\treturn b\n}\n```\n\n\n\n#### 55 跳跃游戏\n\n给定一个非负整数数组 `nums` ，你最初位于数组的 **第一个下标** 。\n\n数组中的每个元素代表你在该位置可以跳跃的最大长度。\n\n判断你是否能够到达最后一个下标。\n\n```go\nfunc canJump(nums []int) bool {\n\tfarthestJump := nums[0]\n\tfor i := 1; i < len(nums); i++ {\n\t\tfarthestJump--\n\t\tif farthestJump < 0 {\n\t\t\treturn false\n\t\t}\n\t\tfarthestJump = max(farthestJump, nums[i])\n\t}\n\treturn true\n}\n\nfunc max(a, b int) int {\n\tif a > b {\n\t\treturn a\n\t}\n\treturn b\n}\n```\n\n","source":"_posts/algo-exec03LeetCodeDPStart.md","raw":"---\ntitle: Leetcode 动态规划入门\ndate: 2022-03-30 22:49:56\nid: leetcode3\ncategories:\n- algo\ntags:\n- exec\n---\n\n\n\nLeetcode上的动态规划学习计划。\n\n最近备战蓝桥杯，所以用C实现的。\n\n\n\n<!-- more -->\n\n\n\n#### 509 斐波那契数\n\n斐波那契数 （通常用 F(n) 表示）形成的序列称为斐波那契数列。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：\nF(0) = 0，F(1) = 1\nF(n) = F(n - 1) + F(n - 2)，其中 n > 1\n给定 n ，请计算 F(n) 。\n\n```c\nint fib(int n) {\n    if(n <= 1) return n;\n    int pre1 = 0;\n    int pre2 = 1;\n    int res = 0;\n    for(int i = 2; i <= n; i++) {\n        res = pre1 + pre2;\n        pre1 = pre2;\n        pre2 = res;\n    }\n    return res;\n}\n```\n\n\n\n#### 1137 第N个泰波那锲数\n\n泰波那契序列 Tn 定义如下： \nT0 = 0, T1 = 1, T2 = 1, 且在 n >= 0 的条件下 Tn+3 = Tn + Tn+1 + Tn+2\n给你整数 n，请返回第 n 个泰波那契数 Tn 的值。\n\n```c\nint tribonacci(int n){\n    if(n == 0) return 0;\n    if(n <= 2) return 1;\n    int t1 = 0;\n    int t2 = 1;\n    int t3 = 1;\n    int res = 0;\n    for(int i = 3; i <= n; i++) {\n        res = t1 + t2 + t3;\n        t1 = t2;\n        t2 = t3;\n        t3 = res;\n    }\n    return res;\n}\n```\n\n\n\n#### 746 使用最小花费爬楼梯\n\n给你一个整数数组 cost ，其中 cost[i] 是从楼梯第 i 个台阶向上爬需要支付的费用。一旦你支付此费用，即可选择向上爬一个或者两个台阶。\n你可以选择从下标为 0 或下标为 1 的台阶开始爬楼梯。\n请你计算并返回达到楼梯顶部的最低花费。\n\n```c\nint minCostClimbingStairs(int* cost, int costSize){\n    if(costSize == 2) return cost[0] < cost[1] ? cost[0] : cost[1];\n    int pre1 = cost[0];\n    int pre2 = cost[1];\n    int min = 0;\n    for(int i = 2; i < costSize; i++) {\n        if(pre1 < pre2) min = pre1;\n        else min = pre2;\n        pre1 = pre2;\n        pre2 = min+cost[i];\n    }\n    if(pre1 < pre2) return pre1;\n    return pre2;\n}\n```\n\n\n\n#### 198 打家劫舍\n\n你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。\n给定一个代表每个房屋存放金额的非负整数数组，计算你 不触动警报装置的情况下 ，一夜之内能够偷窃到的最高金额。\n\n```c\nint rob(int* nums, int numsSize){\n\n    if(numsSize == 1) return nums[0];\n    if(numsSize == 2) return nums[0] > nums[1] ? nums[0] : nums[1];\n\n    int pre1 = nums[1];\n    int pre2 = nums[0];\n    int pre3 = 0;\n    int max = 0;\n    \n    for(int i=2; i < numsSize; i++) {\n        if(pre3 > pre2) max = pre3;\n        else max = pre2;\n        pre3 = pre2;\n        pre2 = pre1; \n        pre1 = max + nums[i];\n    }\n    return pre1 > pre2 ? pre1 : pre2;\n\n}\n```\n\n\n\n#### 213 打家劫舍2\n\n你是一个专业的小偷，计划偷窃沿街的房屋，每间房内都藏有一定的现金。这个地方所有的房屋都围成一圈，这意味着第一个房屋和最后一个房屋是紧挨着的。同时，相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。\n给定一个代表每个房屋存放金额的非负整数数组，计算你在不触动警报装置的情况下，今晚能够偷窃到的最高金额。\n\n```c\nint rob(int* nums, int numsSize){\n    // 分成两个数组，一个除去第一个元素，一个除去最后一个元素。\n\n    if(numsSize == 1) return nums[0];\n    if(numsSize == 2) return nums[0] > nums[1] ? nums[0] : nums[1];\n\n    int first = nums[0];\n    int second = nums[0] > nums[1] ? nums[0] : nums[1];\n    for(int i=2; i < numsSize-1; i++) {\n        int tmp = first;\n        first = second;\n        second = (tmp + nums[i]) > second ? (tmp + nums[i]) : second;\n    }\n    int max = second;\n    first = nums[1];\n    second = nums[1] > nums[2] ? nums[1] : nums[2];\n    for(int i=3; i < numsSize; i++) {\n        int tmp = first;\n        first = second;\n        second = (tmp + nums[i]) > second ? (tmp + nums[i]) : second;\n    }\n    return second > max ? second : max;\n\n}\n```\n\n\n\n#### 740 删除并获得点数\n\n给你一个整数数组 nums ，你可以对它进行一些操作。\n\n每次操作中，选择任意一个 nums[i] ，删除它并获得 nums[i] 的点数。之后，你必须删除 所有 等于 nums[i] - 1 和 nums[i] + 1 的元素。\n\n开始你拥有 0 个点数。返回你能通过这些操作获得的最大点数。\n\n```go\n// 我写的代码\nfunc deleteAndEarn(nums []int) int {\n\tlength := len(nums)\n\tif length == 1 {\n\t\treturn nums[0]\n\t}\n\tif length == 2 {\n\t\tif (nums[0] - nums[1]) * (nums[0] - nums[1]) == 1 {\n\t\t\tif nums[0] > nums[1] {\n\t\t\t\treturn nums[0]\n\t\t\t}\n\t\t\treturn nums[1]\n\t\t}\n\t\treturn nums[0] + nums[1]\n\t}\n\n\ttotal := map[int]int{}\n\tmax := nums[0]\n\tfor i:=0; i < length; i++ {\n\t\tnum := nums[i]\n\t\ttotal[num] += num\n\t\tif num > max {\n\t\t\tmax = num\n\t\t}\n\t}\n\tpre1 := 0\n\tpre2 := total[0]\n\tpre3 := total[1]\n\tres := total[2]\n\tm := 0\n\tfor i:=2; i <=max; i++ {\n\t\tres = total[i]\n\t\tif pre1 > pre2 {\n\t\t\tm = pre1\n\t\t} else {\n\t\t\tm = pre2\n\t\t}\n\t\tres += m\n\t\tpre1 = pre2\n\t\tpre2 = pre3\n\t\tpre3 = res\n\t}\n\tif pre3 > pre2 {\n\t\treturn pre3\n\t}\n\treturn pre2\n}\n```\n\n```go\n// 优化之后\nfunc deleteAndEarn(nums []int) int {\n\tmaxValue := nums[0]\n\tfor _, value := range nums {\n\t\tif value > maxValue {\n\t\t\tmaxValue = value\n\t\t}\n\t}\n\ttotal := make([]int, maxValue+1)\n\tfor _, value := range nums {\n\t\ttotal[value] += value\n\t}\n\treturn rob(total)\n}\n\nfunc rob(nums []int) int {\n\tfirst := nums[0]\n\tsecond := max(nums[0], nums[1])\n\tfor i:=2; i<len(nums); i++ {\n\t\tfirst, second = second, max(first+nums[i], second)\n\t}\n\treturn second\n}\n\nfunc max(a, b int) int {\n\tif a > b {\n\t\treturn a\n\t}\n\treturn b\n}\n```\n\n\n\n#### 55 跳跃游戏\n\n给定一个非负整数数组 `nums` ，你最初位于数组的 **第一个下标** 。\n\n数组中的每个元素代表你在该位置可以跳跃的最大长度。\n\n判断你是否能够到达最后一个下标。\n\n```go\nfunc canJump(nums []int) bool {\n\tfarthestJump := nums[0]\n\tfor i := 1; i < len(nums); i++ {\n\t\tfarthestJump--\n\t\tif farthestJump < 0 {\n\t\t\treturn false\n\t\t}\n\t\tfarthestJump = max(farthestJump, nums[i])\n\t}\n\treturn true\n}\n\nfunc max(a, b int) int {\n\tif a > b {\n\t\treturn a\n\t}\n\treturn b\n}\n```\n\n","slug":"algo-exec03LeetCodeDPStart","published":1,"updated":"2022-04-16T23:00:01.409Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70sk00035oss5xrhfs4y","content":"<p>Leetcode上的动态规划学习计划。</p>\n<p>最近备战蓝桥杯，所以用C实现的。</p>\n<span id=\"more\"></span>\n\n\n\n<h4 id=\"509-斐波那契数\"><a href=\"#509-斐波那契数\" class=\"headerlink\" title=\"509 斐波那契数\"></a>509 斐波那契数</h4><p>斐波那契数 （通常用 F(n) 表示）形成的序列称为斐波那契数列。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：<br>F(0) = 0，F(1) = 1<br>F(n) = F(n - 1) + F(n - 2)，其中 n &gt; 1<br>给定 n ，请计算 F(n) 。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">fib</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">    <span class=\"type\">int</span> pre1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> pre2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        res = pre1 + pre2;</span><br><span class=\"line\">        pre1 = pre2;</span><br><span class=\"line\">        pre2 = res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"1137-第N个泰波那锲数\"><a href=\"#1137-第N个泰波那锲数\" class=\"headerlink\" title=\"1137 第N个泰波那锲数\"></a>1137 第N个泰波那锲数</h4><p>泰波那契序列 Tn 定义如下： <br>T0 = 0, T1 = 1, T2 = 1, 且在 n &gt;= 0 的条件下 Tn+3 = Tn + Tn+1 + Tn+2<br>给你整数 n，请返回第 n 个泰波那契数 Tn 的值。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">tribonacci</span><span class=\"params\">(<span class=\"type\">int</span> n)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n &lt;= <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> t1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> t2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> t3 = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">3</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        res = t1 + t2 + t3;</span><br><span class=\"line\">        t1 = t2;</span><br><span class=\"line\">        t2 = t3;</span><br><span class=\"line\">        t3 = res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"746-使用最小花费爬楼梯\"><a href=\"#746-使用最小花费爬楼梯\" class=\"headerlink\" title=\"746 使用最小花费爬楼梯\"></a>746 使用最小花费爬楼梯</h4><p>给你一个整数数组 cost ，其中 cost[i] 是从楼梯第 i 个台阶向上爬需要支付的费用。一旦你支付此费用，即可选择向上爬一个或者两个台阶。<br>你可以选择从下标为 0 或下标为 1 的台阶开始爬楼梯。<br>请你计算并返回达到楼梯顶部的最低花费。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">minCostClimbingStairs</span><span class=\"params\">(<span class=\"type\">int</span>* cost, <span class=\"type\">int</span> costSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(costSize == <span class=\"number\">2</span>) <span class=\"keyword\">return</span> cost[<span class=\"number\">0</span>] &lt; cost[<span class=\"number\">1</span>] ? cost[<span class=\"number\">0</span>] : cost[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> pre1 = cost[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> pre2 = cost[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> min = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt; costSize; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pre1 &lt; pre2) min = pre1;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> min = pre2;</span><br><span class=\"line\">        pre1 = pre2;</span><br><span class=\"line\">        pre2 = min+cost[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(pre1 &lt; pre2) <span class=\"keyword\">return</span> pre1;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pre2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"198-打家劫舍\"><a href=\"#198-打家劫舍\" class=\"headerlink\" title=\"198 打家劫舍\"></a>198 打家劫舍</h4><p>你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。<br>给定一个代表每个房屋存放金额的非负整数数组，计算你 不触动警报装置的情况下 ，一夜之内能够偷窃到的最高金额。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">rob</span><span class=\"params\">(<span class=\"type\">int</span>* nums, <span class=\"type\">int</span> numsSize)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(numsSize == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(numsSize == <span class=\"number\">2</span>) <span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>] &gt; nums[<span class=\"number\">1</span>] ? nums[<span class=\"number\">0</span>] : nums[<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> pre1 = nums[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> pre2 = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> pre3 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">2</span>; i &lt; numsSize; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pre3 &gt; pre2) max = pre3;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> max = pre2;</span><br><span class=\"line\">        pre3 = pre2;</span><br><span class=\"line\">        pre2 = pre1; </span><br><span class=\"line\">        pre1 = max + nums[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pre1 &gt; pre2 ? pre1 : pre2;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"213-打家劫舍2\"><a href=\"#213-打家劫舍2\" class=\"headerlink\" title=\"213 打家劫舍2\"></a>213 打家劫舍2</h4><p>你是一个专业的小偷，计划偷窃沿街的房屋，每间房内都藏有一定的现金。这个地方所有的房屋都围成一圈，这意味着第一个房屋和最后一个房屋是紧挨着的。同时，相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。<br>给定一个代表每个房屋存放金额的非负整数数组，计算你在不触动警报装置的情况下，今晚能够偷窃到的最高金额。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">rob</span><span class=\"params\">(<span class=\"type\">int</span>* nums, <span class=\"type\">int</span> numsSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 分成两个数组，一个除去第一个元素，一个除去最后一个元素。</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(numsSize == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(numsSize == <span class=\"number\">2</span>) <span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>] &gt; nums[<span class=\"number\">1</span>] ? nums[<span class=\"number\">0</span>] : nums[<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> first = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> second = nums[<span class=\"number\">0</span>] &gt; nums[<span class=\"number\">1</span>] ? nums[<span class=\"number\">0</span>] : nums[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">2</span>; i &lt; numsSize<span class=\"number\">-1</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> tmp = first;</span><br><span class=\"line\">        first = second;</span><br><span class=\"line\">        second = (tmp + nums[i]) &gt; second ? (tmp + nums[i]) : second;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">int</span> max = second;</span><br><span class=\"line\">    first = nums[<span class=\"number\">1</span>];</span><br><span class=\"line\">    second = nums[<span class=\"number\">1</span>] &gt; nums[<span class=\"number\">2</span>] ? nums[<span class=\"number\">1</span>] : nums[<span class=\"number\">2</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">3</span>; i &lt; numsSize; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> tmp = first;</span><br><span class=\"line\">        first = second;</span><br><span class=\"line\">        second = (tmp + nums[i]) &gt; second ? (tmp + nums[i]) : second;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> second &gt; max ? second : max;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"740-删除并获得点数\"><a href=\"#740-删除并获得点数\" class=\"headerlink\" title=\"740 删除并获得点数\"></a>740 删除并获得点数</h4><p>给你一个整数数组 nums ，你可以对它进行一些操作。</p>\n<p>每次操作中，选择任意一个 nums[i] ，删除它并获得 nums[i] 的点数。之后，你必须删除 所有 等于 nums[i] - 1 和 nums[i] + 1 的元素。</p>\n<p>开始你拥有 0 个点数。返回你能通过这些操作获得的最大点数。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 我写的代码</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">deleteAndEarn</span><span class=\"params\">(nums []<span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\tlength := <span class=\"built_in\">len</span>(nums)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> length == <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> length == <span class=\"number\">2</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (nums[<span class=\"number\">0</span>] - nums[<span class=\"number\">1</span>]) * (nums[<span class=\"number\">0</span>] - nums[<span class=\"number\">1</span>]) == <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> nums[<span class=\"number\">0</span>] &gt; nums[<span class=\"number\">1</span>] &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> nums[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>] + nums[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\ttotal := <span class=\"keyword\">map</span>[<span class=\"type\">int</span>]<span class=\"type\">int</span>&#123;&#125;</span><br><span class=\"line\">\tmax := nums[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i:=<span class=\"number\">0</span>; i &lt; length; i++ &#123;</span><br><span class=\"line\">\t\tnum := nums[i]</span><br><span class=\"line\">\t\ttotal[num] += num</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> num &gt; max &#123;</span><br><span class=\"line\">\t\t\tmax = num</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpre1 := <span class=\"number\">0</span></span><br><span class=\"line\">\tpre2 := total[<span class=\"number\">0</span>]</span><br><span class=\"line\">\tpre3 := total[<span class=\"number\">1</span>]</span><br><span class=\"line\">\tres := total[<span class=\"number\">2</span>]</span><br><span class=\"line\">\tm := <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i:=<span class=\"number\">2</span>; i &lt;=max; i++ &#123;</span><br><span class=\"line\">\t\tres = total[i]</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> pre1 &gt; pre2 &#123;</span><br><span class=\"line\">\t\t\tm = pre1</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tm = pre2</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tres += m</span><br><span class=\"line\">\t\tpre1 = pre2</span><br><span class=\"line\">\t\tpre2 = pre3</span><br><span class=\"line\">\t\tpre3 = res</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> pre3 &gt; pre2 &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> pre3</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> pre2</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 优化之后</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">deleteAndEarn</span><span class=\"params\">(nums []<span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\tmaxValue := nums[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, value := <span class=\"keyword\">range</span> nums &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> value &gt; maxValue &#123;</span><br><span class=\"line\">\t\t\tmaxValue = value</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ttotal := <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, maxValue+<span class=\"number\">1</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, value := <span class=\"keyword\">range</span> nums &#123;</span><br><span class=\"line\">\t\ttotal[value] += value</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> rob(total)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">rob</span><span class=\"params\">(nums []<span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\tfirst := nums[<span class=\"number\">0</span>]</span><br><span class=\"line\">\tsecond := max(nums[<span class=\"number\">0</span>], nums[<span class=\"number\">1</span>])</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i:=<span class=\"number\">2</span>; i&lt;<span class=\"built_in\">len</span>(nums); i++ &#123;</span><br><span class=\"line\">\t\tfirst, second = second, max(first+nums[i], second)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> second</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(a, b <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> a &gt; b &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> b</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"55-跳跃游戏\"><a href=\"#55-跳跃游戏\" class=\"headerlink\" title=\"55 跳跃游戏\"></a>55 跳跃游戏</h4><p>给定一个非负整数数组 <code>nums</code> ，你最初位于数组的 <strong>第一个下标</strong> 。</p>\n<p>数组中的每个元素代表你在该位置可以跳跃的最大长度。</p>\n<p>判断你是否能够到达最后一个下标。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">canJump</span><span class=\"params\">(nums []<span class=\"type\">int</span>)</span></span> <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\tfarthestJump := nums[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt; <span class=\"built_in\">len</span>(nums); i++ &#123;</span><br><span class=\"line\">\t\tfarthestJump--</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> farthestJump &lt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tfarthestJump = max(farthestJump, nums[i])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(a, b <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> a &gt; b &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> b</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>Leetcode上的动态规划学习计划。</p>\n<p>最近备战蓝桥杯，所以用C实现的。</p>","more":"<h4 id=\"509-斐波那契数\"><a href=\"#509-斐波那契数\" class=\"headerlink\" title=\"509 斐波那契数\"></a>509 斐波那契数</h4><p>斐波那契数 （通常用 F(n) 表示）形成的序列称为斐波那契数列。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：<br>F(0) = 0，F(1) = 1<br>F(n) = F(n - 1) + F(n - 2)，其中 n &gt; 1<br>给定 n ，请计算 F(n) 。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">fib</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">    <span class=\"type\">int</span> pre1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> pre2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        res = pre1 + pre2;</span><br><span class=\"line\">        pre1 = pre2;</span><br><span class=\"line\">        pre2 = res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"1137-第N个泰波那锲数\"><a href=\"#1137-第N个泰波那锲数\" class=\"headerlink\" title=\"1137 第N个泰波那锲数\"></a>1137 第N个泰波那锲数</h4><p>泰波那契序列 Tn 定义如下： <br>T0 = 0, T1 = 1, T2 = 1, 且在 n &gt;= 0 的条件下 Tn+3 = Tn + Tn+1 + Tn+2<br>给你整数 n，请返回第 n 个泰波那契数 Tn 的值。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">tribonacci</span><span class=\"params\">(<span class=\"type\">int</span> n)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n &lt;= <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> t1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> t2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> t3 = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">3</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        res = t1 + t2 + t3;</span><br><span class=\"line\">        t1 = t2;</span><br><span class=\"line\">        t2 = t3;</span><br><span class=\"line\">        t3 = res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"746-使用最小花费爬楼梯\"><a href=\"#746-使用最小花费爬楼梯\" class=\"headerlink\" title=\"746 使用最小花费爬楼梯\"></a>746 使用最小花费爬楼梯</h4><p>给你一个整数数组 cost ，其中 cost[i] 是从楼梯第 i 个台阶向上爬需要支付的费用。一旦你支付此费用，即可选择向上爬一个或者两个台阶。<br>你可以选择从下标为 0 或下标为 1 的台阶开始爬楼梯。<br>请你计算并返回达到楼梯顶部的最低花费。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">minCostClimbingStairs</span><span class=\"params\">(<span class=\"type\">int</span>* cost, <span class=\"type\">int</span> costSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(costSize == <span class=\"number\">2</span>) <span class=\"keyword\">return</span> cost[<span class=\"number\">0</span>] &lt; cost[<span class=\"number\">1</span>] ? cost[<span class=\"number\">0</span>] : cost[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> pre1 = cost[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> pre2 = cost[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> min = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt; costSize; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pre1 &lt; pre2) min = pre1;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> min = pre2;</span><br><span class=\"line\">        pre1 = pre2;</span><br><span class=\"line\">        pre2 = min+cost[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(pre1 &lt; pre2) <span class=\"keyword\">return</span> pre1;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pre2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"198-打家劫舍\"><a href=\"#198-打家劫舍\" class=\"headerlink\" title=\"198 打家劫舍\"></a>198 打家劫舍</h4><p>你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。<br>给定一个代表每个房屋存放金额的非负整数数组，计算你 不触动警报装置的情况下 ，一夜之内能够偷窃到的最高金额。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">rob</span><span class=\"params\">(<span class=\"type\">int</span>* nums, <span class=\"type\">int</span> numsSize)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(numsSize == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(numsSize == <span class=\"number\">2</span>) <span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>] &gt; nums[<span class=\"number\">1</span>] ? nums[<span class=\"number\">0</span>] : nums[<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> pre1 = nums[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> pre2 = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> pre3 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">2</span>; i &lt; numsSize; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pre3 &gt; pre2) max = pre3;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> max = pre2;</span><br><span class=\"line\">        pre3 = pre2;</span><br><span class=\"line\">        pre2 = pre1; </span><br><span class=\"line\">        pre1 = max + nums[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pre1 &gt; pre2 ? pre1 : pre2;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"213-打家劫舍2\"><a href=\"#213-打家劫舍2\" class=\"headerlink\" title=\"213 打家劫舍2\"></a>213 打家劫舍2</h4><p>你是一个专业的小偷，计划偷窃沿街的房屋，每间房内都藏有一定的现金。这个地方所有的房屋都围成一圈，这意味着第一个房屋和最后一个房屋是紧挨着的。同时，相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。<br>给定一个代表每个房屋存放金额的非负整数数组，计算你在不触动警报装置的情况下，今晚能够偷窃到的最高金额。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">rob</span><span class=\"params\">(<span class=\"type\">int</span>* nums, <span class=\"type\">int</span> numsSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 分成两个数组，一个除去第一个元素，一个除去最后一个元素。</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(numsSize == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(numsSize == <span class=\"number\">2</span>) <span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>] &gt; nums[<span class=\"number\">1</span>] ? nums[<span class=\"number\">0</span>] : nums[<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> first = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> second = nums[<span class=\"number\">0</span>] &gt; nums[<span class=\"number\">1</span>] ? nums[<span class=\"number\">0</span>] : nums[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">2</span>; i &lt; numsSize<span class=\"number\">-1</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> tmp = first;</span><br><span class=\"line\">        first = second;</span><br><span class=\"line\">        second = (tmp + nums[i]) &gt; second ? (tmp + nums[i]) : second;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">int</span> max = second;</span><br><span class=\"line\">    first = nums[<span class=\"number\">1</span>];</span><br><span class=\"line\">    second = nums[<span class=\"number\">1</span>] &gt; nums[<span class=\"number\">2</span>] ? nums[<span class=\"number\">1</span>] : nums[<span class=\"number\">2</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">3</span>; i &lt; numsSize; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> tmp = first;</span><br><span class=\"line\">        first = second;</span><br><span class=\"line\">        second = (tmp + nums[i]) &gt; second ? (tmp + nums[i]) : second;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> second &gt; max ? second : max;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"740-删除并获得点数\"><a href=\"#740-删除并获得点数\" class=\"headerlink\" title=\"740 删除并获得点数\"></a>740 删除并获得点数</h4><p>给你一个整数数组 nums ，你可以对它进行一些操作。</p>\n<p>每次操作中，选择任意一个 nums[i] ，删除它并获得 nums[i] 的点数。之后，你必须删除 所有 等于 nums[i] - 1 和 nums[i] + 1 的元素。</p>\n<p>开始你拥有 0 个点数。返回你能通过这些操作获得的最大点数。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 我写的代码</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">deleteAndEarn</span><span class=\"params\">(nums []<span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\tlength := <span class=\"built_in\">len</span>(nums)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> length == <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> length == <span class=\"number\">2</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (nums[<span class=\"number\">0</span>] - nums[<span class=\"number\">1</span>]) * (nums[<span class=\"number\">0</span>] - nums[<span class=\"number\">1</span>]) == <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> nums[<span class=\"number\">0</span>] &gt; nums[<span class=\"number\">1</span>] &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> nums[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>] + nums[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\ttotal := <span class=\"keyword\">map</span>[<span class=\"type\">int</span>]<span class=\"type\">int</span>&#123;&#125;</span><br><span class=\"line\">\tmax := nums[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i:=<span class=\"number\">0</span>; i &lt; length; i++ &#123;</span><br><span class=\"line\">\t\tnum := nums[i]</span><br><span class=\"line\">\t\ttotal[num] += num</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> num &gt; max &#123;</span><br><span class=\"line\">\t\t\tmax = num</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpre1 := <span class=\"number\">0</span></span><br><span class=\"line\">\tpre2 := total[<span class=\"number\">0</span>]</span><br><span class=\"line\">\tpre3 := total[<span class=\"number\">1</span>]</span><br><span class=\"line\">\tres := total[<span class=\"number\">2</span>]</span><br><span class=\"line\">\tm := <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i:=<span class=\"number\">2</span>; i &lt;=max; i++ &#123;</span><br><span class=\"line\">\t\tres = total[i]</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> pre1 &gt; pre2 &#123;</span><br><span class=\"line\">\t\t\tm = pre1</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tm = pre2</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tres += m</span><br><span class=\"line\">\t\tpre1 = pre2</span><br><span class=\"line\">\t\tpre2 = pre3</span><br><span class=\"line\">\t\tpre3 = res</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> pre3 &gt; pre2 &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> pre3</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> pre2</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 优化之后</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">deleteAndEarn</span><span class=\"params\">(nums []<span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\tmaxValue := nums[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, value := <span class=\"keyword\">range</span> nums &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> value &gt; maxValue &#123;</span><br><span class=\"line\">\t\t\tmaxValue = value</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ttotal := <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, maxValue+<span class=\"number\">1</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, value := <span class=\"keyword\">range</span> nums &#123;</span><br><span class=\"line\">\t\ttotal[value] += value</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> rob(total)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">rob</span><span class=\"params\">(nums []<span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\tfirst := nums[<span class=\"number\">0</span>]</span><br><span class=\"line\">\tsecond := max(nums[<span class=\"number\">0</span>], nums[<span class=\"number\">1</span>])</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i:=<span class=\"number\">2</span>; i&lt;<span class=\"built_in\">len</span>(nums); i++ &#123;</span><br><span class=\"line\">\t\tfirst, second = second, max(first+nums[i], second)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> second</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(a, b <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> a &gt; b &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> b</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"55-跳跃游戏\"><a href=\"#55-跳跃游戏\" class=\"headerlink\" title=\"55 跳跃游戏\"></a>55 跳跃游戏</h4><p>给定一个非负整数数组 <code>nums</code> ，你最初位于数组的 <strong>第一个下标</strong> 。</p>\n<p>数组中的每个元素代表你在该位置可以跳跃的最大长度。</p>\n<p>判断你是否能够到达最后一个下标。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">canJump</span><span class=\"params\">(nums []<span class=\"type\">int</span>)</span></span> <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\tfarthestJump := nums[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt; <span class=\"built_in\">len</span>(nums); i++ &#123;</span><br><span class=\"line\">\t\tfarthestJump--</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> farthestJump &lt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tfarthestJump = max(farthestJump, nums[i])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(a, b <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> a &gt; b &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> b</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"2022年2月刷的几类Leetcode题","date":"2022-02-01T15:00:00.000Z","id":"leetcode2","_content":"\n\n\n2022年2月刷的几类Leetcode题：Binary Search，Two Pointers，Sliding Window。\n\n\n\n<!-- more -->\n\n\n\nAlgorithm 1\n\n1. Binary Search\n\n   ```\n   总结\n   1. 用于查找 某个元素的位置 不产生新的集合\n   2. 输入：已经排好序的集合 目标元素\n   3. 输出：目标元素的位置\n   4. 时间复杂度：O(log n)\n   ```\n\n   ```\n   题目\n   1. Binary Search\n   Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1.\n   经典的二分查找\n   \n   2. First Bad Version\n   Suppose you have n versions [1, 2, ..., n] and you want to find out the first bad one, which causes all the following ones to be bad.\n   You are given an API bool isBadVersion(version) which returns whether version is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.\n   提示：先把具体情况列出来，然后分析mid在不同情况下left和right的变化情况\n   \n   3. Search Insert Position\n   Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.\n   You must write an algorithm with O(log n) runtime complexity.\n   情况很多，所以可以返回right\n   ```\n\n   \n\n2. Two Pointers\n\n   ```\n   总结\n   1. 会产生一个新的集合，然后输出这个集合。\n   2. 集合可以分段，例如分成正负数两段。\n   3. 输入：一个集合\n   4. 输出：符合要求的集合\n   ```\n\n   ```\n   题目\n   1. Squares of a Sorted Array\n   Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.\n   Input: nums = [-4,-1,0,3,10]\n   Output: [0,1,9,16,100]\n   分成正负两段，然后分别用不同的指针处理。\n   知道集合长度的话，不一定要正序的，还可以倒序处理。\n   \n   2. Rotate Array\n   Given an array, rotate the array to the right by k steps, where k is non-negative.\n   Input: nums = [1,2,3,4,5,6,7], k = 3\n   Output: [5,6,7,1,2,3,4]\n   小心k>n，处理：k = k % n\n   一种方法是建立一个临时数组，长度为k\n   另一种方法是，分成1234和567两段，然后分别逆转\n   \n   3. Move Zeroes\n   Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.\n   一种方法是先覆盖零，最后在结尾补充。用两个指针（一个指向遍历到的位置，一个是除去零该元素应该在的位置）。\n   另一种方法是两个指针，一个指向零，另一个遍历，如果遇到非零，则和当前零交换位置。\n   \n   4. Two Sum II - Input Array Is Sorted\n   给一个已经排好序的数组，然后找到两个数之和为目标数的位置。\n   \n   5. Middle of the Linked List\n   快慢指针\n   ```\n\n   \n\n3. Sliding Window\n\n   ```\n   总结\n   1. 窗口：一组连续元素\n   ```\n\n   ```\n   题目\n   1. Longest Substring Without Repeating Characters\n   Given a string s, find the length of the longest substring without repeating characters.\n   用一个数组记录元素出现的次数，如果重复的话，则窗口移动。\n   \n   2. Permutation in String\n   Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.\n   In other words, return true if one of s1's permutations is the substring of s2.\n   两个数组存字符串，最后不断移动窗口，找到数组1==数组2的地方。\n   ```\n\n   \n\n","source":"_posts/algo-exec02LeetcodeFeb.md","raw":"---\ntitle: 2022年2月刷的几类Leetcode题\ndate: 2022-02-01 23:00:00\nid: leetcode2\ncategories:\n- algo\ntags:\n- exec\n---\n\n\n\n2022年2月刷的几类Leetcode题：Binary Search，Two Pointers，Sliding Window。\n\n\n\n<!-- more -->\n\n\n\nAlgorithm 1\n\n1. Binary Search\n\n   ```\n   总结\n   1. 用于查找 某个元素的位置 不产生新的集合\n   2. 输入：已经排好序的集合 目标元素\n   3. 输出：目标元素的位置\n   4. 时间复杂度：O(log n)\n   ```\n\n   ```\n   题目\n   1. Binary Search\n   Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1.\n   经典的二分查找\n   \n   2. First Bad Version\n   Suppose you have n versions [1, 2, ..., n] and you want to find out the first bad one, which causes all the following ones to be bad.\n   You are given an API bool isBadVersion(version) which returns whether version is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.\n   提示：先把具体情况列出来，然后分析mid在不同情况下left和right的变化情况\n   \n   3. Search Insert Position\n   Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.\n   You must write an algorithm with O(log n) runtime complexity.\n   情况很多，所以可以返回right\n   ```\n\n   \n\n2. Two Pointers\n\n   ```\n   总结\n   1. 会产生一个新的集合，然后输出这个集合。\n   2. 集合可以分段，例如分成正负数两段。\n   3. 输入：一个集合\n   4. 输出：符合要求的集合\n   ```\n\n   ```\n   题目\n   1. Squares of a Sorted Array\n   Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.\n   Input: nums = [-4,-1,0,3,10]\n   Output: [0,1,9,16,100]\n   分成正负两段，然后分别用不同的指针处理。\n   知道集合长度的话，不一定要正序的，还可以倒序处理。\n   \n   2. Rotate Array\n   Given an array, rotate the array to the right by k steps, where k is non-negative.\n   Input: nums = [1,2,3,4,5,6,7], k = 3\n   Output: [5,6,7,1,2,3,4]\n   小心k>n，处理：k = k % n\n   一种方法是建立一个临时数组，长度为k\n   另一种方法是，分成1234和567两段，然后分别逆转\n   \n   3. Move Zeroes\n   Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.\n   一种方法是先覆盖零，最后在结尾补充。用两个指针（一个指向遍历到的位置，一个是除去零该元素应该在的位置）。\n   另一种方法是两个指针，一个指向零，另一个遍历，如果遇到非零，则和当前零交换位置。\n   \n   4. Two Sum II - Input Array Is Sorted\n   给一个已经排好序的数组，然后找到两个数之和为目标数的位置。\n   \n   5. Middle of the Linked List\n   快慢指针\n   ```\n\n   \n\n3. Sliding Window\n\n   ```\n   总结\n   1. 窗口：一组连续元素\n   ```\n\n   ```\n   题目\n   1. Longest Substring Without Repeating Characters\n   Given a string s, find the length of the longest substring without repeating characters.\n   用一个数组记录元素出现的次数，如果重复的话，则窗口移动。\n   \n   2. Permutation in String\n   Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.\n   In other words, return true if one of s1's permutations is the substring of s2.\n   两个数组存字符串，最后不断移动窗口，找到数组1==数组2的地方。\n   ```\n\n   \n\n","slug":"algo-exec02LeetcodeFeb","published":1,"updated":"2022-04-16T23:00:12.200Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70st00075ossgd82h7cz","content":"<p>2022年2月刷的几类Leetcode题：Binary Search，Two Pointers，Sliding Window。</p>\n<span id=\"more\"></span>\n\n\n\n<p>Algorithm 1</p>\n<ol>\n<li><p>Binary Search</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">总结</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 用于查找 某个元素的位置 不产生新的集合</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 输入：已经排好序的集合 目标元素</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 输出：目标元素的位置</span><br><span class=\"line\"><span class=\"bullet\">4.</span> 时间复杂度：O(log n)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">题目</span><br><span class=\"line\"><span class=\"number\">1.</span> Binary Search</span><br><span class=\"line\">Given <span class=\"keyword\">an</span> array <span class=\"keyword\">of</span> integers nums which is sorted <span class=\"keyword\">in</span> <span class=\"keyword\">ascending</span> order, <span class=\"keyword\">and</span> <span class=\"keyword\">an</span> <span class=\"keyword\">integer</span> target, <span class=\"built_in\">write</span> <span class=\"keyword\">a</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">to</span> <span class=\"title\">search</span> <span class=\"title\">target</span> <span class=\"title\">in</span> <span class=\"title\">nums</span>. <span class=\"title\">If</span> <span class=\"title\">target</span> <span class=\"title\">exists</span>, <span class=\"title\">then</span> <span class=\"title\">return</span> <span class=\"title\">its</span> <span class=\"title\">index</span>. <span class=\"title\">Otherwise</span>, <span class=\"title\">return</span> <span class=\"number\">-1.</span></span></span><br><span class=\"line\">经典的二分查找</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> First Bad Version</span><br><span class=\"line\">Suppose you have n versions [<span class=\"number\">1</span>, <span class=\"number\">2</span>, ..., n] <span class=\"keyword\">and</span> you want <span class=\"built_in\">to</span> find out <span class=\"keyword\">the</span> <span class=\"keyword\">first</span> bad <span class=\"literal\">one</span>, which causes all <span class=\"keyword\">the</span> following ones <span class=\"built_in\">to</span> be bad.</span><br><span class=\"line\">You are given <span class=\"keyword\">an</span> API bool isBadVersion(<span class=\"built_in\">version</span>) which returns whether <span class=\"built_in\">version</span> is bad. Implement <span class=\"keyword\">a</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">to</span> <span class=\"title\">find</span> <span class=\"title\">the</span> <span class=\"title\">first</span> <span class=\"title\">bad</span> <span class=\"title\">version</span>. <span class=\"title\">You</span> <span class=\"title\">should</span> <span class=\"title\">minimize</span> <span class=\"title\">the</span> <span class=\"title\">number</span> <span class=\"title\">of</span> <span class=\"title\">calls</span> <span class=\"title\">to</span> <span class=\"title\">the</span> <span class=\"title\">API</span>.</span></span><br><span class=\"line\">提示：先把具体情况列出来，然后分析<span class=\"keyword\">mid</span>在不同情况下left和<span class=\"literal\">right</span>的变化情况</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3.</span> Search Insert Position</span><br><span class=\"line\">Given <span class=\"keyword\">a</span> sorted array <span class=\"keyword\">of</span> distinct integers <span class=\"keyword\">and</span> <span class=\"keyword\">a</span> target <span class=\"built_in\">value</span>, <span class=\"literal\">return</span> <span class=\"keyword\">the</span> index <span class=\"keyword\">if</span> <span class=\"keyword\">the</span> target is found. If <span class=\"keyword\">not</span>, <span class=\"literal\">return</span> <span class=\"keyword\">the</span> index where <span class=\"keyword\">it</span> would be <span class=\"keyword\">if</span> <span class=\"keyword\">it</span> were inserted <span class=\"keyword\">in</span> order.</span><br><span class=\"line\">You must <span class=\"built_in\">write</span> <span class=\"keyword\">an</span> algorithm <span class=\"keyword\">with</span> O(<span class=\"built_in\">log</span> n) runtime complexity.</span><br><span class=\"line\">情况很多，所以可以返回<span class=\"literal\">right</span></span><br></pre></td></tr></table></figure></li>\n<li><p>Two Pointers</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">总结</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 会产生一个新的集合，然后输出这个集合。</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 集合可以分段，例如分成正负数两段。</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 输入：一个集合</span><br><span class=\"line\"><span class=\"bullet\">4.</span> 输出：符合要求的集合</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight smali\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">题目</span><br><span class=\"line\">1. Squares of a Sorted Array</span><br><span class=\"line\">Given an integer<span class=\"built_in\"> array </span>nums sorted in non-decreasing order,<span class=\"built_in\"> return </span>an<span class=\"built_in\"> array </span>of the squares of each number sorted in non-decreasing order.</span><br><span class=\"line\">Input: nums = [-4,-1,0,3,10]</span><br><span class=\"line\">Output: [0,1,9,16,100]</span><br><span class=\"line\">分成正负两段，然后分别用不同的指针处理。</span><br><span class=\"line\">知道集合长度的话，不一定要正序的，还可以倒序处理。</span><br><span class=\"line\"></span><br><span class=\"line\">2. Rotate Array</span><br><span class=\"line\">Given an array, rotate the<span class=\"built_in\"> array </span>to the right by k steps, where k is non-negative.</span><br><span class=\"line\">Input: nums = [1,2,3,4,5,6,7], k = 3</span><br><span class=\"line\">Output: [5,6,7,1,2,3,4]</span><br><span class=\"line\">小心k&gt;n，处理：k = k % n</span><br><span class=\"line\">一种方法是建立一个临时数组，长度为k</span><br><span class=\"line\">另一种方法是，分成1234和567两段，然后分别逆转</span><br><span class=\"line\"></span><br><span class=\"line\">3. Move Zeroes</span><br><span class=\"line\">Given an integer<span class=\"built_in\"> array </span>nums,<span class=\"built_in\"> move </span>all 0&#x27;s to the end of it while maintaining the relative order of the non-zero elements.</span><br><span class=\"line\">一种方法是先覆盖零，最后在结尾补充。用两个指针（一个指向遍历到的位置，一个是除去零该元素应该在的位置）。</span><br><span class=\"line\">另一种方法是两个指针，一个指向零，另一个遍历，如果遇到非零，则和当前零交换位置。</span><br><span class=\"line\"></span><br><span class=\"line\">4. Two Sum II - Input Array Is Sorted</span><br><span class=\"line\">给一个已经排好序的数组，然后找到两个数之和为目标数的位置。</span><br><span class=\"line\"></span><br><span class=\"line\">5. Middle of the Linked List</span><br><span class=\"line\">快慢指针</span><br></pre></td></tr></table></figure></li>\n<li><p>Sliding Window</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">总结</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 窗口：一组连续元素</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">题目</span><br><span class=\"line\"><span class=\"number\">1.</span> Longest Substring Without Repeating Characters</span><br><span class=\"line\">Given a <span class=\"built_in\">string</span> s, find <span class=\"keyword\">the</span> <span class=\"built_in\">length</span> <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> longest substring <span class=\"keyword\">without</span> repeating <span class=\"built_in\">characters</span>.</span><br><span class=\"line\">用一个数组记录元素出现的次数，如果重复的话，则窗口移动。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> Permutation <span class=\"keyword\">in</span> String</span><br><span class=\"line\">Given two strings s1 <span class=\"keyword\">and</span> s2, <span class=\"literal\">return</span> <span class=\"literal\">true</span> <span class=\"keyword\">if</span> s2 <span class=\"keyword\">contains</span> a permutation <span class=\"keyword\">of</span> s1, <span class=\"keyword\">or</span> <span class=\"literal\">false</span> otherwise.</span><br><span class=\"line\">In other <span class=\"built_in\">words</span>, <span class=\"literal\">return</span> <span class=\"literal\">true</span> <span class=\"keyword\">if</span> one <span class=\"keyword\">of</span> s1&#x27;s permutations <span class=\"keyword\">is</span> <span class=\"keyword\">the</span> substring <span class=\"keyword\">of</span> s2.</span><br><span class=\"line\">两个数组存字符串，最后不断移动窗口，找到数组<span class=\"number\">1</span>==数组<span class=\"number\">2</span>的地方。</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>2022年2月刷的几类Leetcode题：Binary Search，Two Pointers，Sliding Window。</p>","more":"<p>Algorithm 1</p>\n<ol>\n<li><p>Binary Search</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">总结</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 用于查找 某个元素的位置 不产生新的集合</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 输入：已经排好序的集合 目标元素</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 输出：目标元素的位置</span><br><span class=\"line\"><span class=\"bullet\">4.</span> 时间复杂度：O(log n)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">题目</span><br><span class=\"line\"><span class=\"number\">1.</span> Binary Search</span><br><span class=\"line\">Given <span class=\"keyword\">an</span> array <span class=\"keyword\">of</span> integers nums which is sorted <span class=\"keyword\">in</span> <span class=\"keyword\">ascending</span> order, <span class=\"keyword\">and</span> <span class=\"keyword\">an</span> <span class=\"keyword\">integer</span> target, <span class=\"built_in\">write</span> <span class=\"keyword\">a</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">to</span> <span class=\"title\">search</span> <span class=\"title\">target</span> <span class=\"title\">in</span> <span class=\"title\">nums</span>. <span class=\"title\">If</span> <span class=\"title\">target</span> <span class=\"title\">exists</span>, <span class=\"title\">then</span> <span class=\"title\">return</span> <span class=\"title\">its</span> <span class=\"title\">index</span>. <span class=\"title\">Otherwise</span>, <span class=\"title\">return</span> <span class=\"number\">-1.</span></span></span><br><span class=\"line\">经典的二分查找</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> First Bad Version</span><br><span class=\"line\">Suppose you have n versions [<span class=\"number\">1</span>, <span class=\"number\">2</span>, ..., n] <span class=\"keyword\">and</span> you want <span class=\"built_in\">to</span> find out <span class=\"keyword\">the</span> <span class=\"keyword\">first</span> bad <span class=\"literal\">one</span>, which causes all <span class=\"keyword\">the</span> following ones <span class=\"built_in\">to</span> be bad.</span><br><span class=\"line\">You are given <span class=\"keyword\">an</span> API bool isBadVersion(<span class=\"built_in\">version</span>) which returns whether <span class=\"built_in\">version</span> is bad. Implement <span class=\"keyword\">a</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">to</span> <span class=\"title\">find</span> <span class=\"title\">the</span> <span class=\"title\">first</span> <span class=\"title\">bad</span> <span class=\"title\">version</span>. <span class=\"title\">You</span> <span class=\"title\">should</span> <span class=\"title\">minimize</span> <span class=\"title\">the</span> <span class=\"title\">number</span> <span class=\"title\">of</span> <span class=\"title\">calls</span> <span class=\"title\">to</span> <span class=\"title\">the</span> <span class=\"title\">API</span>.</span></span><br><span class=\"line\">提示：先把具体情况列出来，然后分析<span class=\"keyword\">mid</span>在不同情况下left和<span class=\"literal\">right</span>的变化情况</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3.</span> Search Insert Position</span><br><span class=\"line\">Given <span class=\"keyword\">a</span> sorted array <span class=\"keyword\">of</span> distinct integers <span class=\"keyword\">and</span> <span class=\"keyword\">a</span> target <span class=\"built_in\">value</span>, <span class=\"literal\">return</span> <span class=\"keyword\">the</span> index <span class=\"keyword\">if</span> <span class=\"keyword\">the</span> target is found. If <span class=\"keyword\">not</span>, <span class=\"literal\">return</span> <span class=\"keyword\">the</span> index where <span class=\"keyword\">it</span> would be <span class=\"keyword\">if</span> <span class=\"keyword\">it</span> were inserted <span class=\"keyword\">in</span> order.</span><br><span class=\"line\">You must <span class=\"built_in\">write</span> <span class=\"keyword\">an</span> algorithm <span class=\"keyword\">with</span> O(<span class=\"built_in\">log</span> n) runtime complexity.</span><br><span class=\"line\">情况很多，所以可以返回<span class=\"literal\">right</span></span><br></pre></td></tr></table></figure></li>\n<li><p>Two Pointers</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">总结</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 会产生一个新的集合，然后输出这个集合。</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 集合可以分段，例如分成正负数两段。</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 输入：一个集合</span><br><span class=\"line\"><span class=\"bullet\">4.</span> 输出：符合要求的集合</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight smali\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">题目</span><br><span class=\"line\">1. Squares of a Sorted Array</span><br><span class=\"line\">Given an integer<span class=\"built_in\"> array </span>nums sorted in non-decreasing order,<span class=\"built_in\"> return </span>an<span class=\"built_in\"> array </span>of the squares of each number sorted in non-decreasing order.</span><br><span class=\"line\">Input: nums = [-4,-1,0,3,10]</span><br><span class=\"line\">Output: [0,1,9,16,100]</span><br><span class=\"line\">分成正负两段，然后分别用不同的指针处理。</span><br><span class=\"line\">知道集合长度的话，不一定要正序的，还可以倒序处理。</span><br><span class=\"line\"></span><br><span class=\"line\">2. Rotate Array</span><br><span class=\"line\">Given an array, rotate the<span class=\"built_in\"> array </span>to the right by k steps, where k is non-negative.</span><br><span class=\"line\">Input: nums = [1,2,3,4,5,6,7], k = 3</span><br><span class=\"line\">Output: [5,6,7,1,2,3,4]</span><br><span class=\"line\">小心k&gt;n，处理：k = k % n</span><br><span class=\"line\">一种方法是建立一个临时数组，长度为k</span><br><span class=\"line\">另一种方法是，分成1234和567两段，然后分别逆转</span><br><span class=\"line\"></span><br><span class=\"line\">3. Move Zeroes</span><br><span class=\"line\">Given an integer<span class=\"built_in\"> array </span>nums,<span class=\"built_in\"> move </span>all 0&#x27;s to the end of it while maintaining the relative order of the non-zero elements.</span><br><span class=\"line\">一种方法是先覆盖零，最后在结尾补充。用两个指针（一个指向遍历到的位置，一个是除去零该元素应该在的位置）。</span><br><span class=\"line\">另一种方法是两个指针，一个指向零，另一个遍历，如果遇到非零，则和当前零交换位置。</span><br><span class=\"line\"></span><br><span class=\"line\">4. Two Sum II - Input Array Is Sorted</span><br><span class=\"line\">给一个已经排好序的数组，然后找到两个数之和为目标数的位置。</span><br><span class=\"line\"></span><br><span class=\"line\">5. Middle of the Linked List</span><br><span class=\"line\">快慢指针</span><br></pre></td></tr></table></figure></li>\n<li><p>Sliding Window</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">总结</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 窗口：一组连续元素</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">题目</span><br><span class=\"line\"><span class=\"number\">1.</span> Longest Substring Without Repeating Characters</span><br><span class=\"line\">Given a <span class=\"built_in\">string</span> s, find <span class=\"keyword\">the</span> <span class=\"built_in\">length</span> <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> longest substring <span class=\"keyword\">without</span> repeating <span class=\"built_in\">characters</span>.</span><br><span class=\"line\">用一个数组记录元素出现的次数，如果重复的话，则窗口移动。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> Permutation <span class=\"keyword\">in</span> String</span><br><span class=\"line\">Given two strings s1 <span class=\"keyword\">and</span> s2, <span class=\"literal\">return</span> <span class=\"literal\">true</span> <span class=\"keyword\">if</span> s2 <span class=\"keyword\">contains</span> a permutation <span class=\"keyword\">of</span> s1, <span class=\"keyword\">or</span> <span class=\"literal\">false</span> otherwise.</span><br><span class=\"line\">In other <span class=\"built_in\">words</span>, <span class=\"literal\">return</span> <span class=\"literal\">true</span> <span class=\"keyword\">if</span> one <span class=\"keyword\">of</span> s1&#x27;s permutations <span class=\"keyword\">is</span> <span class=\"keyword\">the</span> substring <span class=\"keyword\">of</span> s2.</span><br><span class=\"line\">两个数组存字符串，最后不断移动窗口，找到数组<span class=\"number\">1</span>==数组<span class=\"number\">2</span>的地方。</span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"十大排序算法","date":"2022-03-27T02:26:01.000Z","id":"tenSort","_content":"\n\n\n八种常见的排序算法的代码实现，各算法的时间复杂度和空间复杂度，各自的优缺点，以及应用场景。\n\n八种排序算法包括：选择排序，插入排序，希尔排序，冒泡排序，快速排序，归并排序，堆排序，基数排序。\n\n2022-04-05：新增桶排序和计数排序。\n\n实现语言：Golang。\n\n<!-- more -->\n\n---\n\n#### 0 代码实现\n\n[八种排序算法的代码实现](https://github.com/zhenruyi/SortingAlgos/)\n\n---\n\n#### 1 选择排序\n\n##### 算法原理\n\n- 首先在数组中找到最小的元素，将该元素和数组第一个元素交换位置；\n- 依次从剩余数组元素中找到最小的，放到剩余的数组范围开头位置；\n- 重复上一步，直到所有元素排序完毕。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：O(n^2)\n\n  - 最坏的情况：O(n^2)\n\n  - 平均：O(n^2)\n\n- 空间复杂度：O(1)，in-place\n\n- 不稳定：如果两个元素相等，先被选择的是后面的元素，所以后面的元素会被放到更前面。\n\n##### 优缺点\n\n- 优点\n  - 简单\n  - 移动次数已知：n-1\n- 缺点\n  - 慢，比较次数多\n\n##### 应用场景\n\n当数据规模较小时，选择排序性能较好。\n\n---\n\n#### 2 插入排序\n\n##### 算法原理\n\n- 从数组的第二个元素开始，如果前一个元素比该元素大，则交换元素位置，即把该元素插入到适合的位置上；\n- 从头到尾，把所有的元素插入到适当的位置；\n- 如果该元素与前面某个元素相等，则插在其后面。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：O(n)\n\n  - 最坏的情况：O(n^2)\n\n  - 平均：O(n^2)\n\n- 空间复杂度：O(1)，in-place\n\n- 稳定：算法原理第三点。\n\n##### 优缺点\n\n- 优点\n  - 简单，稳定\n- 缺点\n  - 慢\n  - 比较次数不一定，比较次数越少，插入点后的数据移动越多\n\n##### 应用场景\n\n基本有序且数据规模较小时，选用插入排序较好。\n\n---\n\n#### 3 希尔排序\n\n##### 算法原理\n\n- （对插入排序的改进，数组越大，优势越大。）\n- 选择一个间隔 interval = 3 * interval + 1 (1, 4, 13, 40, ...)；\n- 每轮interval /= 3。该轮中，间隔interval的元素均实行插入排序；\n- 当 interval = 1 时，整个数组当成一个组来处理，因为已经基本有序，所以比插入排序高效。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度：难以度量，O(n^(3/2))\n- 空间复杂度：O(1)，in-place\n- 不稳定：interval不确定。\n\n##### 优缺点\n\n- 优点\n  - 快，数据移动少\n- 缺点\n  - 不稳定\n\n##### 应用场景\n\n数据量较小且基本有序时。\n\n---\n\n#### 4 冒泡排序\n\n##### 算法原理\n\n- 从第一个元素开始，比较相邻元素，如果第一个比第二个大，交换位置；\n- 对每一对相邻元素都这样操作，知道最大的元素到达数组尾；\n- 重复以上两个步骤，已经有序的元素不进行操作；\n- 直到所有元素都已经有序。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：我觉得是O(n^2)，有说O(n)\n\n  - 最坏的情况：O(n^2)\n\n  - 平均：O(n^2)\n\n- 空间复杂度：O(1)，in-place\n\n- 稳定：小于才交换，等于不交换。\n\n##### 优缺点\n\n- 优点\n  - 简单\n- 缺点\n  - 慢\n  - 每次值移动相邻两个元素\n\n##### 应用场景\n\n用于当数据已经基本有序，且数据量较小时。\n\n---\n\n#### 5 快速排序\n\n##### 算法原理\n\n- （递归、分治）\n- 从数组中选取一个key，比key大的元素放在key右边，比key小的元素放在key左边；\n- 第一次的key选择为第一个元素，第一次排序好了后，以key为界分成两个数组；\n- 两个数组分别重复上面的步骤。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：O(n log n)\n\n  - 最坏的情况：O(n^2)\n\n  - 平均：O(n log n)\n\n- 空间复杂度：O(log n)递归的深度，每次递归都会保存一些数据，in-place\n\n- 不稳定\n\n##### 优缺点\n\n- 优点\n  - 已知最快的排序，数据移动少\n- 缺点\n  - 不稳定，不适合对象排序\n\n##### 应用场景\n\n快速排序适合处理大量数据排序时的场景。\n\n---\n\n#### 6 归并排序\n\n##### 算法原理\n\n- （归并就是将两个有序的数组合并成一个有序的数组）\n- 将数组分成两个子数组，分别排序，最后归并；\n- 子数组内又分成两个数组，最后归并；\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：O(n log n)\n\n  - 最坏的情况：O(n log n)\n\n  - 平均：O(n log n)\n\n- 空间复杂度：O(n)，out-place\n\n- 稳定\n\n##### 优缺点\n\n- 优点\n  - 稳定，适合对象排序\n- 缺点\n  - 辅存很大\n\n##### 应用场景\n\n数据量较大且要求排序稳定时。\n\n---\n\n#### 7 堆排序\n\n##### 算法原理\n\n- 建立最大堆，把根节点和最后一个节点交换；\n- 重复上述步骤。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：O(n log n)\n\n  - 最坏的情况：O(n log n)\n\n  - 平均：O(n log n)\n\n- 空间复杂度：O(1)，in-place\n\n- 不稳定\n\n##### 优缺点\n\n- 优点\n  - 最坏的条件下性能很优越，辅存少\n- 缺点\n  - 不适合太小的序列，不稳定不适合对象排序\n\n##### 应用场景\n\n堆排序适合处理数据量大的情况，数据呈流式输入时用堆排序也很方便。\n\n---\n\n#### 8 基数排序\n\n##### 算法原理\n\n- 将所有待比较数值（正整数）统一为同样的数位长度，数位较短的数前面补零。然后，从最低位开始，依次进行一次排序。这样从最低位排序一直到最高位排序完成以后，数列就变成一个有序序列。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：O(n * k)\n\n  - 最坏的情况：O(n * k)\n\n  - 平均：O(n * k)\n\n- 空间复杂度：O(n + k)，out-place\n\n- 稳定\n\n##### 优缺点\n\n- 稳定，快，但是空间复杂度大\n\n##### 应用场景\n\n计数排序虽然时间复杂度较低，但需要满足的条件较多，如果能满足限制条件与空间需求，计数排序自然很快。\n\n---\n\n#### 9 计数排序\n\n##### 算法原理\n\n- 找出数组中元素的最大值和最小值；\n- 新建一个计数字典，把数组元素的值作为key，等于这个值的元素的个数作为value；\n- 根据key从小到大遍历字典，将value个数的key放到数组中。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：O(n + k)\n\n  - 最坏的情况：O(n + k)\n\n  - 平均：O(n + k)\n\n- 空间复杂度：O(k)，out-place\n\n- 稳定\n\n##### 优缺点\n\n- 稳定，快，但是空间复杂度大\n\n##### 应用场景\n\n计数排序虽然时间复杂度较低，但需要满足的条件较多，如果能满足限制条件与空间需求，计数排序自然很快。\n\n---\n\n#### 10 桶排序\n\n##### 算法原理\n\n- 设置若干个桶，把符合的元素放入桶中；\n- 桶内排序；\n- 把结果复制回数组中。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：O(n + k)\n\n  - 最坏的情况：O(n^2)\n\n  - 平均：O(n + k)\n\n- 空间复杂度：O(n + k)，out-place\n\n- 稳定\n\n##### 优缺点\n\n- 稳定，快，但是空间复杂度大\n\n##### 应用场景\n\n如果满足桶排序的假设条件，即均匀分布，那么桶排序的速度是非常快的。\n\n---\n\n#### 总结\n\n- 基于比较的排序算法\n  - 简单排序：适用于数据量小的序列\n    - 插入：基本有序时，性能比较好。O(n)\n    - 选择：不稳定。当数据量很大时，选择排序性能会更好。\n    - 冒泡：基本有序时，性能比较好。O(n)\n  - nlogn时间复杂度\n    - 快排：内部排序，对随机分布数据时间最短。不稳定。空间复杂度O(log n)。\n    - 堆：空间复杂度比快排小O(1)，没有快排的最坏情况。不稳定。\n    - 归并：稳定，没有快排的最坏情况，但是空间复杂度为O(n)。\n    - 希尔：最差情况多。\n- 线性时间排序算法：如果满足了线性时间排序算法的限制条件，使用线性时间排序将会使排序性能得到极大提升。\n  - 计数排序：表现最好，只能处理范围内的正整数。\n  - 桶排序：\n  - 基数排序\n\n\n\n---\n\n#### 参考\n\n[1.0 十大经典排序算法 | 菜鸟教程 (runoob.com)](https://www.runoob.com/w3cnote/ten-sorting-algorithm.html#:~:text=排序算法是《数据结构与算法》中最基本的算法之一。,排序算法可以分为内部排序和外部排序，内部排序是数据记录在内存中进行排序，而外部排序是因排序的数据很大，一次不能容纳全部的排序记录，在排序过程中需要访问外存。)\n\n[Go排序算法及其性能比较 - 基数排序 - 《Go学习手册（For learning Go Tutorial）》 - 书栈网 · BookStack](https://www.bookstack.cn/read/For-learning-Go-Tutorial/spilt.11.src-chapter16-01.0.md)\n\n[排序算法总结 | 菜鸟教程 (runoob.com)](https://www.runoob.com/w3cnote/sort-algorithm-summary.html)\n\n[图解排序算法(三)之堆排序 - dreamcatcher-cx - 博客园 (cnblogs.com)](https://www.cnblogs.com/chengxiao/articles/6129630.html)\n\nhttps://blog.csdn.net/Hairy_Monsters/article/details/80154391\n\nhttps://blog.csdn.net/MBuger/article/details/67643185\n\n[(12条消息) 十大经典排序算法的复杂度分析_阿尔兹的博客-CSDN博客_排序算法复杂度](https://blog.csdn.net/alzzw/article/details/98100378)\n\n\n\n","source":"_posts/algo-learn01SortingAlgo.md","raw":"---\ntitle: 十大排序算法\ndate: 2022-03-27 10:26:01\nid: tenSort\ncategories:\n- algo\ntags:\n- learn\n---\n\n\n\n八种常见的排序算法的代码实现，各算法的时间复杂度和空间复杂度，各自的优缺点，以及应用场景。\n\n八种排序算法包括：选择排序，插入排序，希尔排序，冒泡排序，快速排序，归并排序，堆排序，基数排序。\n\n2022-04-05：新增桶排序和计数排序。\n\n实现语言：Golang。\n\n<!-- more -->\n\n---\n\n#### 0 代码实现\n\n[八种排序算法的代码实现](https://github.com/zhenruyi/SortingAlgos/)\n\n---\n\n#### 1 选择排序\n\n##### 算法原理\n\n- 首先在数组中找到最小的元素，将该元素和数组第一个元素交换位置；\n- 依次从剩余数组元素中找到最小的，放到剩余的数组范围开头位置；\n- 重复上一步，直到所有元素排序完毕。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：O(n^2)\n\n  - 最坏的情况：O(n^2)\n\n  - 平均：O(n^2)\n\n- 空间复杂度：O(1)，in-place\n\n- 不稳定：如果两个元素相等，先被选择的是后面的元素，所以后面的元素会被放到更前面。\n\n##### 优缺点\n\n- 优点\n  - 简单\n  - 移动次数已知：n-1\n- 缺点\n  - 慢，比较次数多\n\n##### 应用场景\n\n当数据规模较小时，选择排序性能较好。\n\n---\n\n#### 2 插入排序\n\n##### 算法原理\n\n- 从数组的第二个元素开始，如果前一个元素比该元素大，则交换元素位置，即把该元素插入到适合的位置上；\n- 从头到尾，把所有的元素插入到适当的位置；\n- 如果该元素与前面某个元素相等，则插在其后面。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：O(n)\n\n  - 最坏的情况：O(n^2)\n\n  - 平均：O(n^2)\n\n- 空间复杂度：O(1)，in-place\n\n- 稳定：算法原理第三点。\n\n##### 优缺点\n\n- 优点\n  - 简单，稳定\n- 缺点\n  - 慢\n  - 比较次数不一定，比较次数越少，插入点后的数据移动越多\n\n##### 应用场景\n\n基本有序且数据规模较小时，选用插入排序较好。\n\n---\n\n#### 3 希尔排序\n\n##### 算法原理\n\n- （对插入排序的改进，数组越大，优势越大。）\n- 选择一个间隔 interval = 3 * interval + 1 (1, 4, 13, 40, ...)；\n- 每轮interval /= 3。该轮中，间隔interval的元素均实行插入排序；\n- 当 interval = 1 时，整个数组当成一个组来处理，因为已经基本有序，所以比插入排序高效。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度：难以度量，O(n^(3/2))\n- 空间复杂度：O(1)，in-place\n- 不稳定：interval不确定。\n\n##### 优缺点\n\n- 优点\n  - 快，数据移动少\n- 缺点\n  - 不稳定\n\n##### 应用场景\n\n数据量较小且基本有序时。\n\n---\n\n#### 4 冒泡排序\n\n##### 算法原理\n\n- 从第一个元素开始，比较相邻元素，如果第一个比第二个大，交换位置；\n- 对每一对相邻元素都这样操作，知道最大的元素到达数组尾；\n- 重复以上两个步骤，已经有序的元素不进行操作；\n- 直到所有元素都已经有序。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：我觉得是O(n^2)，有说O(n)\n\n  - 最坏的情况：O(n^2)\n\n  - 平均：O(n^2)\n\n- 空间复杂度：O(1)，in-place\n\n- 稳定：小于才交换，等于不交换。\n\n##### 优缺点\n\n- 优点\n  - 简单\n- 缺点\n  - 慢\n  - 每次值移动相邻两个元素\n\n##### 应用场景\n\n用于当数据已经基本有序，且数据量较小时。\n\n---\n\n#### 5 快速排序\n\n##### 算法原理\n\n- （递归、分治）\n- 从数组中选取一个key，比key大的元素放在key右边，比key小的元素放在key左边；\n- 第一次的key选择为第一个元素，第一次排序好了后，以key为界分成两个数组；\n- 两个数组分别重复上面的步骤。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：O(n log n)\n\n  - 最坏的情况：O(n^2)\n\n  - 平均：O(n log n)\n\n- 空间复杂度：O(log n)递归的深度，每次递归都会保存一些数据，in-place\n\n- 不稳定\n\n##### 优缺点\n\n- 优点\n  - 已知最快的排序，数据移动少\n- 缺点\n  - 不稳定，不适合对象排序\n\n##### 应用场景\n\n快速排序适合处理大量数据排序时的场景。\n\n---\n\n#### 6 归并排序\n\n##### 算法原理\n\n- （归并就是将两个有序的数组合并成一个有序的数组）\n- 将数组分成两个子数组，分别排序，最后归并；\n- 子数组内又分成两个数组，最后归并；\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：O(n log n)\n\n  - 最坏的情况：O(n log n)\n\n  - 平均：O(n log n)\n\n- 空间复杂度：O(n)，out-place\n\n- 稳定\n\n##### 优缺点\n\n- 优点\n  - 稳定，适合对象排序\n- 缺点\n  - 辅存很大\n\n##### 应用场景\n\n数据量较大且要求排序稳定时。\n\n---\n\n#### 7 堆排序\n\n##### 算法原理\n\n- 建立最大堆，把根节点和最后一个节点交换；\n- 重复上述步骤。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：O(n log n)\n\n  - 最坏的情况：O(n log n)\n\n  - 平均：O(n log n)\n\n- 空间复杂度：O(1)，in-place\n\n- 不稳定\n\n##### 优缺点\n\n- 优点\n  - 最坏的条件下性能很优越，辅存少\n- 缺点\n  - 不适合太小的序列，不稳定不适合对象排序\n\n##### 应用场景\n\n堆排序适合处理数据量大的情况，数据呈流式输入时用堆排序也很方便。\n\n---\n\n#### 8 基数排序\n\n##### 算法原理\n\n- 将所有待比较数值（正整数）统一为同样的数位长度，数位较短的数前面补零。然后，从最低位开始，依次进行一次排序。这样从最低位排序一直到最高位排序完成以后，数列就变成一个有序序列。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：O(n * k)\n\n  - 最坏的情况：O(n * k)\n\n  - 平均：O(n * k)\n\n- 空间复杂度：O(n + k)，out-place\n\n- 稳定\n\n##### 优缺点\n\n- 稳定，快，但是空间复杂度大\n\n##### 应用场景\n\n计数排序虽然时间复杂度较低，但需要满足的条件较多，如果能满足限制条件与空间需求，计数排序自然很快。\n\n---\n\n#### 9 计数排序\n\n##### 算法原理\n\n- 找出数组中元素的最大值和最小值；\n- 新建一个计数字典，把数组元素的值作为key，等于这个值的元素的个数作为value；\n- 根据key从小到大遍历字典，将value个数的key放到数组中。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：O(n + k)\n\n  - 最坏的情况：O(n + k)\n\n  - 平均：O(n + k)\n\n- 空间复杂度：O(k)，out-place\n\n- 稳定\n\n##### 优缺点\n\n- 稳定，快，但是空间复杂度大\n\n##### 应用场景\n\n计数排序虽然时间复杂度较低，但需要满足的条件较多，如果能满足限制条件与空间需求，计数排序自然很快。\n\n---\n\n#### 10 桶排序\n\n##### 算法原理\n\n- 设置若干个桶，把符合的元素放入桶中；\n- 桶内排序；\n- 把结果复制回数组中。\n\n##### 时间复杂度和空间复杂度\n\n- 时间复杂度\n\n  - 最好的情况：O(n + k)\n\n  - 最坏的情况：O(n^2)\n\n  - 平均：O(n + k)\n\n- 空间复杂度：O(n + k)，out-place\n\n- 稳定\n\n##### 优缺点\n\n- 稳定，快，但是空间复杂度大\n\n##### 应用场景\n\n如果满足桶排序的假设条件，即均匀分布，那么桶排序的速度是非常快的。\n\n---\n\n#### 总结\n\n- 基于比较的排序算法\n  - 简单排序：适用于数据量小的序列\n    - 插入：基本有序时，性能比较好。O(n)\n    - 选择：不稳定。当数据量很大时，选择排序性能会更好。\n    - 冒泡：基本有序时，性能比较好。O(n)\n  - nlogn时间复杂度\n    - 快排：内部排序，对随机分布数据时间最短。不稳定。空间复杂度O(log n)。\n    - 堆：空间复杂度比快排小O(1)，没有快排的最坏情况。不稳定。\n    - 归并：稳定，没有快排的最坏情况，但是空间复杂度为O(n)。\n    - 希尔：最差情况多。\n- 线性时间排序算法：如果满足了线性时间排序算法的限制条件，使用线性时间排序将会使排序性能得到极大提升。\n  - 计数排序：表现最好，只能处理范围内的正整数。\n  - 桶排序：\n  - 基数排序\n\n\n\n---\n\n#### 参考\n\n[1.0 十大经典排序算法 | 菜鸟教程 (runoob.com)](https://www.runoob.com/w3cnote/ten-sorting-algorithm.html#:~:text=排序算法是《数据结构与算法》中最基本的算法之一。,排序算法可以分为内部排序和外部排序，内部排序是数据记录在内存中进行排序，而外部排序是因排序的数据很大，一次不能容纳全部的排序记录，在排序过程中需要访问外存。)\n\n[Go排序算法及其性能比较 - 基数排序 - 《Go学习手册（For learning Go Tutorial）》 - 书栈网 · BookStack](https://www.bookstack.cn/read/For-learning-Go-Tutorial/spilt.11.src-chapter16-01.0.md)\n\n[排序算法总结 | 菜鸟教程 (runoob.com)](https://www.runoob.com/w3cnote/sort-algorithm-summary.html)\n\n[图解排序算法(三)之堆排序 - dreamcatcher-cx - 博客园 (cnblogs.com)](https://www.cnblogs.com/chengxiao/articles/6129630.html)\n\nhttps://blog.csdn.net/Hairy_Monsters/article/details/80154391\n\nhttps://blog.csdn.net/MBuger/article/details/67643185\n\n[(12条消息) 十大经典排序算法的复杂度分析_阿尔兹的博客-CSDN博客_排序算法复杂度](https://blog.csdn.net/alzzw/article/details/98100378)\n\n\n\n","slug":"algo-learn01SortingAlgo","published":1,"updated":"2022-04-16T23:01:33.361Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70sx00095ossbezd3qo0","content":"<p>八种常见的排序算法的代码实现，各算法的时间复杂度和空间复杂度，各自的优缺点，以及应用场景。</p>\n<p>八种排序算法包括：选择排序，插入排序，希尔排序，冒泡排序，快速排序，归并排序，堆排序，基数排序。</p>\n<p>2022-04-05：新增桶排序和计数排序。</p>\n<p>实现语言：Golang。</p>\n<span id=\"more\"></span>\n\n<hr>\n<h4 id=\"0-代码实现\"><a href=\"#0-代码实现\" class=\"headerlink\" title=\"0 代码实现\"></a>0 代码实现</h4><p><a href=\"https://github.com/zhenruyi/SortingAlgos/\">八种排序算法的代码实现</a></p>\n<hr>\n<h4 id=\"1-选择排序\"><a href=\"#1-选择排序\" class=\"headerlink\" title=\"1 选择排序\"></a>1 选择排序</h4><h5 id=\"算法原理\"><a href=\"#算法原理\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>首先在数组中找到最小的元素，将该元素和数组第一个元素交换位置；</li>\n<li>依次从剩余数组元素中找到最小的，放到剩余的数组范围开头位置；</li>\n<li>重复上一步，直到所有元素排序完毕。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度\"><a href=\"#时间复杂度和空间复杂度\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：O(n^2)</p>\n</li>\n<li><p>最坏的情况：O(n^2)</p>\n</li>\n<li><p>平均：O(n^2)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(1)，in-place</p>\n</li>\n<li><p>不稳定：如果两个元素相等，先被选择的是后面的元素，所以后面的元素会被放到更前面。</p>\n</li>\n</ul>\n<h5 id=\"优缺点\"><a href=\"#优缺点\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>优点<ul>\n<li>简单</li>\n<li>移动次数已知：n-1</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>慢，比较次数多</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>当数据规模较小时，选择排序性能较好。</p>\n<hr>\n<h4 id=\"2-插入排序\"><a href=\"#2-插入排序\" class=\"headerlink\" title=\"2 插入排序\"></a>2 插入排序</h4><h5 id=\"算法原理-1\"><a href=\"#算法原理-1\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>从数组的第二个元素开始，如果前一个元素比该元素大，则交换元素位置，即把该元素插入到适合的位置上；</li>\n<li>从头到尾，把所有的元素插入到适当的位置；</li>\n<li>如果该元素与前面某个元素相等，则插在其后面。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-1\"><a href=\"#时间复杂度和空间复杂度-1\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：O(n)</p>\n</li>\n<li><p>最坏的情况：O(n^2)</p>\n</li>\n<li><p>平均：O(n^2)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(1)，in-place</p>\n</li>\n<li><p>稳定：算法原理第三点。</p>\n</li>\n</ul>\n<h5 id=\"优缺点-1\"><a href=\"#优缺点-1\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>优点<ul>\n<li>简单，稳定</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>慢</li>\n<li>比较次数不一定，比较次数越少，插入点后的数据移动越多</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"应用场景-1\"><a href=\"#应用场景-1\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>基本有序且数据规模较小时，选用插入排序较好。</p>\n<hr>\n<h4 id=\"3-希尔排序\"><a href=\"#3-希尔排序\" class=\"headerlink\" title=\"3 希尔排序\"></a>3 希尔排序</h4><h5 id=\"算法原理-2\"><a href=\"#算法原理-2\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>（对插入排序的改进，数组越大，优势越大。）</li>\n<li>选择一个间隔 interval = 3 * interval + 1 (1, 4, 13, 40, …)；</li>\n<li>每轮interval /= 3。该轮中，间隔interval的元素均实行插入排序；</li>\n<li>当 interval = 1 时，整个数组当成一个组来处理，因为已经基本有序，所以比插入排序高效。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-2\"><a href=\"#时间复杂度和空间复杂度-2\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li>时间复杂度：难以度量，O(n^(3/2))</li>\n<li>空间复杂度：O(1)，in-place</li>\n<li>不稳定：interval不确定。</li>\n</ul>\n<h5 id=\"优缺点-2\"><a href=\"#优缺点-2\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>优点<ul>\n<li>快，数据移动少</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>不稳定</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"应用场景-2\"><a href=\"#应用场景-2\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>数据量较小且基本有序时。</p>\n<hr>\n<h4 id=\"4-冒泡排序\"><a href=\"#4-冒泡排序\" class=\"headerlink\" title=\"4 冒泡排序\"></a>4 冒泡排序</h4><h5 id=\"算法原理-3\"><a href=\"#算法原理-3\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>从第一个元素开始，比较相邻元素，如果第一个比第二个大，交换位置；</li>\n<li>对每一对相邻元素都这样操作，知道最大的元素到达数组尾；</li>\n<li>重复以上两个步骤，已经有序的元素不进行操作；</li>\n<li>直到所有元素都已经有序。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-3\"><a href=\"#时间复杂度和空间复杂度-3\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：我觉得是O(n^2)，有说O(n)</p>\n</li>\n<li><p>最坏的情况：O(n^2)</p>\n</li>\n<li><p>平均：O(n^2)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(1)，in-place</p>\n</li>\n<li><p>稳定：小于才交换，等于不交换。</p>\n</li>\n</ul>\n<h5 id=\"优缺点-3\"><a href=\"#优缺点-3\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>优点<ul>\n<li>简单</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>慢</li>\n<li>每次值移动相邻两个元素</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"应用场景-3\"><a href=\"#应用场景-3\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>用于当数据已经基本有序，且数据量较小时。</p>\n<hr>\n<h4 id=\"5-快速排序\"><a href=\"#5-快速排序\" class=\"headerlink\" title=\"5 快速排序\"></a>5 快速排序</h4><h5 id=\"算法原理-4\"><a href=\"#算法原理-4\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>（递归、分治）</li>\n<li>从数组中选取一个key，比key大的元素放在key右边，比key小的元素放在key左边；</li>\n<li>第一次的key选择为第一个元素，第一次排序好了后，以key为界分成两个数组；</li>\n<li>两个数组分别重复上面的步骤。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-4\"><a href=\"#时间复杂度和空间复杂度-4\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：O(n log n)</p>\n</li>\n<li><p>最坏的情况：O(n^2)</p>\n</li>\n<li><p>平均：O(n log n)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(log n)递归的深度，每次递归都会保存一些数据，in-place</p>\n</li>\n<li><p>不稳定</p>\n</li>\n</ul>\n<h5 id=\"优缺点-4\"><a href=\"#优缺点-4\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>优点<ul>\n<li>已知最快的排序，数据移动少</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>不稳定，不适合对象排序</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"应用场景-4\"><a href=\"#应用场景-4\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>快速排序适合处理大量数据排序时的场景。</p>\n<hr>\n<h4 id=\"6-归并排序\"><a href=\"#6-归并排序\" class=\"headerlink\" title=\"6 归并排序\"></a>6 归并排序</h4><h5 id=\"算法原理-5\"><a href=\"#算法原理-5\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>（归并就是将两个有序的数组合并成一个有序的数组）</li>\n<li>将数组分成两个子数组，分别排序，最后归并；</li>\n<li>子数组内又分成两个数组，最后归并；</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-5\"><a href=\"#时间复杂度和空间复杂度-5\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：O(n log n)</p>\n</li>\n<li><p>最坏的情况：O(n log n)</p>\n</li>\n<li><p>平均：O(n log n)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(n)，out-place</p>\n</li>\n<li><p>稳定</p>\n</li>\n</ul>\n<h5 id=\"优缺点-5\"><a href=\"#优缺点-5\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>优点<ul>\n<li>稳定，适合对象排序</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>辅存很大</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"应用场景-5\"><a href=\"#应用场景-5\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>数据量较大且要求排序稳定时。</p>\n<hr>\n<h4 id=\"7-堆排序\"><a href=\"#7-堆排序\" class=\"headerlink\" title=\"7 堆排序\"></a>7 堆排序</h4><h5 id=\"算法原理-6\"><a href=\"#算法原理-6\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>建立最大堆，把根节点和最后一个节点交换；</li>\n<li>重复上述步骤。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-6\"><a href=\"#时间复杂度和空间复杂度-6\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：O(n log n)</p>\n</li>\n<li><p>最坏的情况：O(n log n)</p>\n</li>\n<li><p>平均：O(n log n)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(1)，in-place</p>\n</li>\n<li><p>不稳定</p>\n</li>\n</ul>\n<h5 id=\"优缺点-6\"><a href=\"#优缺点-6\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>优点<ul>\n<li>最坏的条件下性能很优越，辅存少</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>不适合太小的序列，不稳定不适合对象排序</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"应用场景-6\"><a href=\"#应用场景-6\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>堆排序适合处理数据量大的情况，数据呈流式输入时用堆排序也很方便。</p>\n<hr>\n<h4 id=\"8-基数排序\"><a href=\"#8-基数排序\" class=\"headerlink\" title=\"8 基数排序\"></a>8 基数排序</h4><h5 id=\"算法原理-7\"><a href=\"#算法原理-7\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>将所有待比较数值（正整数）统一为同样的数位长度，数位较短的数前面补零。然后，从最低位开始，依次进行一次排序。这样从最低位排序一直到最高位排序完成以后，数列就变成一个有序序列。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-7\"><a href=\"#时间复杂度和空间复杂度-7\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：O(n * k)</p>\n</li>\n<li><p>最坏的情况：O(n * k)</p>\n</li>\n<li><p>平均：O(n * k)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(n + k)，out-place</p>\n</li>\n<li><p>稳定</p>\n</li>\n</ul>\n<h5 id=\"优缺点-7\"><a href=\"#优缺点-7\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>稳定，快，但是空间复杂度大</li>\n</ul>\n<h5 id=\"应用场景-7\"><a href=\"#应用场景-7\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>计数排序虽然时间复杂度较低，但需要满足的条件较多，如果能满足限制条件与空间需求，计数排序自然很快。</p>\n<hr>\n<h4 id=\"9-计数排序\"><a href=\"#9-计数排序\" class=\"headerlink\" title=\"9 计数排序\"></a>9 计数排序</h4><h5 id=\"算法原理-8\"><a href=\"#算法原理-8\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>找出数组中元素的最大值和最小值；</li>\n<li>新建一个计数字典，把数组元素的值作为key，等于这个值的元素的个数作为value；</li>\n<li>根据key从小到大遍历字典，将value个数的key放到数组中。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-8\"><a href=\"#时间复杂度和空间复杂度-8\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：O(n + k)</p>\n</li>\n<li><p>最坏的情况：O(n + k)</p>\n</li>\n<li><p>平均：O(n + k)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(k)，out-place</p>\n</li>\n<li><p>稳定</p>\n</li>\n</ul>\n<h5 id=\"优缺点-8\"><a href=\"#优缺点-8\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>稳定，快，但是空间复杂度大</li>\n</ul>\n<h5 id=\"应用场景-8\"><a href=\"#应用场景-8\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>计数排序虽然时间复杂度较低，但需要满足的条件较多，如果能满足限制条件与空间需求，计数排序自然很快。</p>\n<hr>\n<h4 id=\"10-桶排序\"><a href=\"#10-桶排序\" class=\"headerlink\" title=\"10 桶排序\"></a>10 桶排序</h4><h5 id=\"算法原理-9\"><a href=\"#算法原理-9\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>设置若干个桶，把符合的元素放入桶中；</li>\n<li>桶内排序；</li>\n<li>把结果复制回数组中。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-9\"><a href=\"#时间复杂度和空间复杂度-9\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：O(n + k)</p>\n</li>\n<li><p>最坏的情况：O(n^2)</p>\n</li>\n<li><p>平均：O(n + k)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(n + k)，out-place</p>\n</li>\n<li><p>稳定</p>\n</li>\n</ul>\n<h5 id=\"优缺点-9\"><a href=\"#优缺点-9\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>稳定，快，但是空间复杂度大</li>\n</ul>\n<h5 id=\"应用场景-9\"><a href=\"#应用场景-9\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>如果满足桶排序的假设条件，即均匀分布，那么桶排序的速度是非常快的。</p>\n<hr>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><ul>\n<li>基于比较的排序算法<ul>\n<li>简单排序：适用于数据量小的序列<ul>\n<li>插入：基本有序时，性能比较好。O(n)</li>\n<li>选择：不稳定。当数据量很大时，选择排序性能会更好。</li>\n<li>冒泡：基本有序时，性能比较好。O(n)</li>\n</ul>\n</li>\n<li>nlogn时间复杂度<ul>\n<li>快排：内部排序，对随机分布数据时间最短。不稳定。空间复杂度O(log n)。</li>\n<li>堆：空间复杂度比快排小O(1)，没有快排的最坏情况。不稳定。</li>\n<li>归并：稳定，没有快排的最坏情况，但是空间复杂度为O(n)。</li>\n<li>希尔：最差情况多。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>线性时间排序算法：如果满足了线性时间排序算法的限制条件，使用线性时间排序将会使排序性能得到极大提升。<ul>\n<li>计数排序：表现最好，只能处理范围内的正整数。</li>\n<li>桶排序：</li>\n<li>基数排序</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><p><a href=\"https://www.runoob.com/w3cnote/ten-sorting-algorithm.html#:~:text=%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%98%AF%E3%80%8A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E3%80%8B%E4%B8%AD%E6%9C%80%E5%9F%BA%E6%9C%AC%E7%9A%84%E7%AE%97%E6%B3%95%E4%B9%8B%E4%B8%80%E3%80%82,%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%8F%AF%E4%BB%A5%E5%88%86%E4%B8%BA%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F%E5%92%8C%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F%EF%BC%8C%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F%E6%98%AF%E6%95%B0%E6%8D%AE%E8%AE%B0%E5%BD%95%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E8%BF%9B%E8%A1%8C%E6%8E%92%E5%BA%8F%EF%BC%8C%E8%80%8C%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F%E6%98%AF%E5%9B%A0%E6%8E%92%E5%BA%8F%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BE%88%E5%A4%A7%EF%BC%8C%E4%B8%80%E6%AC%A1%E4%B8%8D%E8%83%BD%E5%AE%B9%E7%BA%B3%E5%85%A8%E9%83%A8%E7%9A%84%E6%8E%92%E5%BA%8F%E8%AE%B0%E5%BD%95%EF%BC%8C%E5%9C%A8%E6%8E%92%E5%BA%8F%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%9C%80%E8%A6%81%E8%AE%BF%E9%97%AE%E5%A4%96%E5%AD%98%E3%80%82\">1.0 十大经典排序算法 | 菜鸟教程 (runoob.com)</a></p>\n<p><a href=\"https://www.bookstack.cn/read/For-learning-Go-Tutorial/spilt.11.src-chapter16-01.0.md\">Go排序算法及其性能比较 - 基数排序 - 《Go学习手册（For learning Go Tutorial）》 - 书栈网 · BookStack</a></p>\n<p><a href=\"https://www.runoob.com/w3cnote/sort-algorithm-summary.html\">排序算法总结 | 菜鸟教程 (runoob.com)</a></p>\n<p><a href=\"https://www.cnblogs.com/chengxiao/articles/6129630.html\">图解排序算法(三)之堆排序 - dreamcatcher-cx - 博客园 (cnblogs.com)</a></p>\n<p><a href=\"https://blog.csdn.net/Hairy_Monsters/article/details/80154391\">https://blog.csdn.net/Hairy_Monsters/article/details/80154391</a></p>\n<p><a href=\"https://blog.csdn.net/MBuger/article/details/67643185\">https://blog.csdn.net/MBuger/article/details/67643185</a></p>\n<p><a href=\"https://blog.csdn.net/alzzw/article/details/98100378\">(12条消息) 十大经典排序算法的复杂度分析_阿尔兹的博客-CSDN博客_排序算法复杂度</a></p>\n","site":{"data":{}},"excerpt":"<p>八种常见的排序算法的代码实现，各算法的时间复杂度和空间复杂度，各自的优缺点，以及应用场景。</p>\n<p>八种排序算法包括：选择排序，插入排序，希尔排序，冒泡排序，快速排序，归并排序，堆排序，基数排序。</p>\n<p>2022-04-05：新增桶排序和计数排序。</p>\n<p>实现语言：Golang。</p>","more":"<hr>\n<h4 id=\"0-代码实现\"><a href=\"#0-代码实现\" class=\"headerlink\" title=\"0 代码实现\"></a>0 代码实现</h4><p><a href=\"https://github.com/zhenruyi/SortingAlgos/\">八种排序算法的代码实现</a></p>\n<hr>\n<h4 id=\"1-选择排序\"><a href=\"#1-选择排序\" class=\"headerlink\" title=\"1 选择排序\"></a>1 选择排序</h4><h5 id=\"算法原理\"><a href=\"#算法原理\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>首先在数组中找到最小的元素，将该元素和数组第一个元素交换位置；</li>\n<li>依次从剩余数组元素中找到最小的，放到剩余的数组范围开头位置；</li>\n<li>重复上一步，直到所有元素排序完毕。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度\"><a href=\"#时间复杂度和空间复杂度\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：O(n^2)</p>\n</li>\n<li><p>最坏的情况：O(n^2)</p>\n</li>\n<li><p>平均：O(n^2)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(1)，in-place</p>\n</li>\n<li><p>不稳定：如果两个元素相等，先被选择的是后面的元素，所以后面的元素会被放到更前面。</p>\n</li>\n</ul>\n<h5 id=\"优缺点\"><a href=\"#优缺点\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>优点<ul>\n<li>简单</li>\n<li>移动次数已知：n-1</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>慢，比较次数多</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>当数据规模较小时，选择排序性能较好。</p>\n<hr>\n<h4 id=\"2-插入排序\"><a href=\"#2-插入排序\" class=\"headerlink\" title=\"2 插入排序\"></a>2 插入排序</h4><h5 id=\"算法原理-1\"><a href=\"#算法原理-1\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>从数组的第二个元素开始，如果前一个元素比该元素大，则交换元素位置，即把该元素插入到适合的位置上；</li>\n<li>从头到尾，把所有的元素插入到适当的位置；</li>\n<li>如果该元素与前面某个元素相等，则插在其后面。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-1\"><a href=\"#时间复杂度和空间复杂度-1\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：O(n)</p>\n</li>\n<li><p>最坏的情况：O(n^2)</p>\n</li>\n<li><p>平均：O(n^2)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(1)，in-place</p>\n</li>\n<li><p>稳定：算法原理第三点。</p>\n</li>\n</ul>\n<h5 id=\"优缺点-1\"><a href=\"#优缺点-1\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>优点<ul>\n<li>简单，稳定</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>慢</li>\n<li>比较次数不一定，比较次数越少，插入点后的数据移动越多</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"应用场景-1\"><a href=\"#应用场景-1\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>基本有序且数据规模较小时，选用插入排序较好。</p>\n<hr>\n<h4 id=\"3-希尔排序\"><a href=\"#3-希尔排序\" class=\"headerlink\" title=\"3 希尔排序\"></a>3 希尔排序</h4><h5 id=\"算法原理-2\"><a href=\"#算法原理-2\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>（对插入排序的改进，数组越大，优势越大。）</li>\n<li>选择一个间隔 interval = 3 * interval + 1 (1, 4, 13, 40, …)；</li>\n<li>每轮interval /= 3。该轮中，间隔interval的元素均实行插入排序；</li>\n<li>当 interval = 1 时，整个数组当成一个组来处理，因为已经基本有序，所以比插入排序高效。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-2\"><a href=\"#时间复杂度和空间复杂度-2\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li>时间复杂度：难以度量，O(n^(3/2))</li>\n<li>空间复杂度：O(1)，in-place</li>\n<li>不稳定：interval不确定。</li>\n</ul>\n<h5 id=\"优缺点-2\"><a href=\"#优缺点-2\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>优点<ul>\n<li>快，数据移动少</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>不稳定</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"应用场景-2\"><a href=\"#应用场景-2\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>数据量较小且基本有序时。</p>\n<hr>\n<h4 id=\"4-冒泡排序\"><a href=\"#4-冒泡排序\" class=\"headerlink\" title=\"4 冒泡排序\"></a>4 冒泡排序</h4><h5 id=\"算法原理-3\"><a href=\"#算法原理-3\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>从第一个元素开始，比较相邻元素，如果第一个比第二个大，交换位置；</li>\n<li>对每一对相邻元素都这样操作，知道最大的元素到达数组尾；</li>\n<li>重复以上两个步骤，已经有序的元素不进行操作；</li>\n<li>直到所有元素都已经有序。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-3\"><a href=\"#时间复杂度和空间复杂度-3\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：我觉得是O(n^2)，有说O(n)</p>\n</li>\n<li><p>最坏的情况：O(n^2)</p>\n</li>\n<li><p>平均：O(n^2)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(1)，in-place</p>\n</li>\n<li><p>稳定：小于才交换，等于不交换。</p>\n</li>\n</ul>\n<h5 id=\"优缺点-3\"><a href=\"#优缺点-3\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>优点<ul>\n<li>简单</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>慢</li>\n<li>每次值移动相邻两个元素</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"应用场景-3\"><a href=\"#应用场景-3\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>用于当数据已经基本有序，且数据量较小时。</p>\n<hr>\n<h4 id=\"5-快速排序\"><a href=\"#5-快速排序\" class=\"headerlink\" title=\"5 快速排序\"></a>5 快速排序</h4><h5 id=\"算法原理-4\"><a href=\"#算法原理-4\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>（递归、分治）</li>\n<li>从数组中选取一个key，比key大的元素放在key右边，比key小的元素放在key左边；</li>\n<li>第一次的key选择为第一个元素，第一次排序好了后，以key为界分成两个数组；</li>\n<li>两个数组分别重复上面的步骤。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-4\"><a href=\"#时间复杂度和空间复杂度-4\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：O(n log n)</p>\n</li>\n<li><p>最坏的情况：O(n^2)</p>\n</li>\n<li><p>平均：O(n log n)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(log n)递归的深度，每次递归都会保存一些数据，in-place</p>\n</li>\n<li><p>不稳定</p>\n</li>\n</ul>\n<h5 id=\"优缺点-4\"><a href=\"#优缺点-4\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>优点<ul>\n<li>已知最快的排序，数据移动少</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>不稳定，不适合对象排序</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"应用场景-4\"><a href=\"#应用场景-4\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>快速排序适合处理大量数据排序时的场景。</p>\n<hr>\n<h4 id=\"6-归并排序\"><a href=\"#6-归并排序\" class=\"headerlink\" title=\"6 归并排序\"></a>6 归并排序</h4><h5 id=\"算法原理-5\"><a href=\"#算法原理-5\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>（归并就是将两个有序的数组合并成一个有序的数组）</li>\n<li>将数组分成两个子数组，分别排序，最后归并；</li>\n<li>子数组内又分成两个数组，最后归并；</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-5\"><a href=\"#时间复杂度和空间复杂度-5\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：O(n log n)</p>\n</li>\n<li><p>最坏的情况：O(n log n)</p>\n</li>\n<li><p>平均：O(n log n)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(n)，out-place</p>\n</li>\n<li><p>稳定</p>\n</li>\n</ul>\n<h5 id=\"优缺点-5\"><a href=\"#优缺点-5\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>优点<ul>\n<li>稳定，适合对象排序</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>辅存很大</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"应用场景-5\"><a href=\"#应用场景-5\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>数据量较大且要求排序稳定时。</p>\n<hr>\n<h4 id=\"7-堆排序\"><a href=\"#7-堆排序\" class=\"headerlink\" title=\"7 堆排序\"></a>7 堆排序</h4><h5 id=\"算法原理-6\"><a href=\"#算法原理-6\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>建立最大堆，把根节点和最后一个节点交换；</li>\n<li>重复上述步骤。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-6\"><a href=\"#时间复杂度和空间复杂度-6\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：O(n log n)</p>\n</li>\n<li><p>最坏的情况：O(n log n)</p>\n</li>\n<li><p>平均：O(n log n)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(1)，in-place</p>\n</li>\n<li><p>不稳定</p>\n</li>\n</ul>\n<h5 id=\"优缺点-6\"><a href=\"#优缺点-6\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>优点<ul>\n<li>最坏的条件下性能很优越，辅存少</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>不适合太小的序列，不稳定不适合对象排序</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"应用场景-6\"><a href=\"#应用场景-6\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>堆排序适合处理数据量大的情况，数据呈流式输入时用堆排序也很方便。</p>\n<hr>\n<h4 id=\"8-基数排序\"><a href=\"#8-基数排序\" class=\"headerlink\" title=\"8 基数排序\"></a>8 基数排序</h4><h5 id=\"算法原理-7\"><a href=\"#算法原理-7\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>将所有待比较数值（正整数）统一为同样的数位长度，数位较短的数前面补零。然后，从最低位开始，依次进行一次排序。这样从最低位排序一直到最高位排序完成以后，数列就变成一个有序序列。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-7\"><a href=\"#时间复杂度和空间复杂度-7\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：O(n * k)</p>\n</li>\n<li><p>最坏的情况：O(n * k)</p>\n</li>\n<li><p>平均：O(n * k)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(n + k)，out-place</p>\n</li>\n<li><p>稳定</p>\n</li>\n</ul>\n<h5 id=\"优缺点-7\"><a href=\"#优缺点-7\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>稳定，快，但是空间复杂度大</li>\n</ul>\n<h5 id=\"应用场景-7\"><a href=\"#应用场景-7\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>计数排序虽然时间复杂度较低，但需要满足的条件较多，如果能满足限制条件与空间需求，计数排序自然很快。</p>\n<hr>\n<h4 id=\"9-计数排序\"><a href=\"#9-计数排序\" class=\"headerlink\" title=\"9 计数排序\"></a>9 计数排序</h4><h5 id=\"算法原理-8\"><a href=\"#算法原理-8\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>找出数组中元素的最大值和最小值；</li>\n<li>新建一个计数字典，把数组元素的值作为key，等于这个值的元素的个数作为value；</li>\n<li>根据key从小到大遍历字典，将value个数的key放到数组中。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-8\"><a href=\"#时间复杂度和空间复杂度-8\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：O(n + k)</p>\n</li>\n<li><p>最坏的情况：O(n + k)</p>\n</li>\n<li><p>平均：O(n + k)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(k)，out-place</p>\n</li>\n<li><p>稳定</p>\n</li>\n</ul>\n<h5 id=\"优缺点-8\"><a href=\"#优缺点-8\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>稳定，快，但是空间复杂度大</li>\n</ul>\n<h5 id=\"应用场景-8\"><a href=\"#应用场景-8\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>计数排序虽然时间复杂度较低，但需要满足的条件较多，如果能满足限制条件与空间需求，计数排序自然很快。</p>\n<hr>\n<h4 id=\"10-桶排序\"><a href=\"#10-桶排序\" class=\"headerlink\" title=\"10 桶排序\"></a>10 桶排序</h4><h5 id=\"算法原理-9\"><a href=\"#算法原理-9\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h5><ul>\n<li>设置若干个桶，把符合的元素放入桶中；</li>\n<li>桶内排序；</li>\n<li>把结果复制回数组中。</li>\n</ul>\n<h5 id=\"时间复杂度和空间复杂度-9\"><a href=\"#时间复杂度和空间复杂度-9\" class=\"headerlink\" title=\"时间复杂度和空间复杂度\"></a>时间复杂度和空间复杂度</h5><ul>\n<li><p>时间复杂度</p>\n<ul>\n<li><p>最好的情况：O(n + k)</p>\n</li>\n<li><p>最坏的情况：O(n^2)</p>\n</li>\n<li><p>平均：O(n + k)</p>\n</li>\n</ul>\n</li>\n<li><p>空间复杂度：O(n + k)，out-place</p>\n</li>\n<li><p>稳定</p>\n</li>\n</ul>\n<h5 id=\"优缺点-9\"><a href=\"#优缺点-9\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h5><ul>\n<li>稳定，快，但是空间复杂度大</li>\n</ul>\n<h5 id=\"应用场景-9\"><a href=\"#应用场景-9\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h5><p>如果满足桶排序的假设条件，即均匀分布，那么桶排序的速度是非常快的。</p>\n<hr>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><ul>\n<li>基于比较的排序算法<ul>\n<li>简单排序：适用于数据量小的序列<ul>\n<li>插入：基本有序时，性能比较好。O(n)</li>\n<li>选择：不稳定。当数据量很大时，选择排序性能会更好。</li>\n<li>冒泡：基本有序时，性能比较好。O(n)</li>\n</ul>\n</li>\n<li>nlogn时间复杂度<ul>\n<li>快排：内部排序，对随机分布数据时间最短。不稳定。空间复杂度O(log n)。</li>\n<li>堆：空间复杂度比快排小O(1)，没有快排的最坏情况。不稳定。</li>\n<li>归并：稳定，没有快排的最坏情况，但是空间复杂度为O(n)。</li>\n<li>希尔：最差情况多。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>线性时间排序算法：如果满足了线性时间排序算法的限制条件，使用线性时间排序将会使排序性能得到极大提升。<ul>\n<li>计数排序：表现最好，只能处理范围内的正整数。</li>\n<li>桶排序：</li>\n<li>基数排序</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><p><a href=\"https://www.runoob.com/w3cnote/ten-sorting-algorithm.html#:~:text=%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%98%AF%E3%80%8A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E3%80%8B%E4%B8%AD%E6%9C%80%E5%9F%BA%E6%9C%AC%E7%9A%84%E7%AE%97%E6%B3%95%E4%B9%8B%E4%B8%80%E3%80%82,%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%8F%AF%E4%BB%A5%E5%88%86%E4%B8%BA%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F%E5%92%8C%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F%EF%BC%8C%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F%E6%98%AF%E6%95%B0%E6%8D%AE%E8%AE%B0%E5%BD%95%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E8%BF%9B%E8%A1%8C%E6%8E%92%E5%BA%8F%EF%BC%8C%E8%80%8C%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F%E6%98%AF%E5%9B%A0%E6%8E%92%E5%BA%8F%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BE%88%E5%A4%A7%EF%BC%8C%E4%B8%80%E6%AC%A1%E4%B8%8D%E8%83%BD%E5%AE%B9%E7%BA%B3%E5%85%A8%E9%83%A8%E7%9A%84%E6%8E%92%E5%BA%8F%E8%AE%B0%E5%BD%95%EF%BC%8C%E5%9C%A8%E6%8E%92%E5%BA%8F%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%9C%80%E8%A6%81%E8%AE%BF%E9%97%AE%E5%A4%96%E5%AD%98%E3%80%82\">1.0 十大经典排序算法 | 菜鸟教程 (runoob.com)</a></p>\n<p><a href=\"https://www.bookstack.cn/read/For-learning-Go-Tutorial/spilt.11.src-chapter16-01.0.md\">Go排序算法及其性能比较 - 基数排序 - 《Go学习手册（For learning Go Tutorial）》 - 书栈网 · BookStack</a></p>\n<p><a href=\"https://www.runoob.com/w3cnote/sort-algorithm-summary.html\">排序算法总结 | 菜鸟教程 (runoob.com)</a></p>\n<p><a href=\"https://www.cnblogs.com/chengxiao/articles/6129630.html\">图解排序算法(三)之堆排序 - dreamcatcher-cx - 博客园 (cnblogs.com)</a></p>\n<p><a href=\"https://blog.csdn.net/Hairy_Monsters/article/details/80154391\">https://blog.csdn.net/Hairy_Monsters/article/details/80154391</a></p>\n<p><a href=\"https://blog.csdn.net/MBuger/article/details/67643185\">https://blog.csdn.net/MBuger/article/details/67643185</a></p>\n<p><a href=\"https://blog.csdn.net/alzzw/article/details/98100378\">(12条消息) 十大经典排序算法的复杂度分析_阿尔兹的博客-CSDN博客_排序算法复杂度</a></p>"},{"title":"理解动态规划","date":"2022-03-30T12:20:48.000Z","id":"DP","_content":"\n\n\n动态规划，通过把原问题分解为相对简单的子问题的方式求解复杂问题的方法。\n\n动态规划简介，核心思想，案例，解题思路。\n\n\n\n<!-- more -->\n\n\n\n#### 1 什么是动态规划\n\n动态规划（Dynamic programming，DP），通过把原问题分解为相对简单的子问题的方式求解复杂问题的方法（自底向上）。动态规划常常适用于有重叠子问题和最优子结构性质的问题。\n\n动态规划把子问题的答案保存起来，以减少重复计算。再根据子问题答案反推，得出原问题解的一种方法。\n\n#### 2 核心思想\n\n动态规划最核心的思想，就在于拆分子问题，记住过往，减少重复计算。\n\n#### 3 例子\n\n```\n题目：\n假设你正在爬楼梯。需要 n 阶你才能到达楼顶。\n每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？\n```\n\n```go\n// 方法一：暴力递归\n// time limit\n// 时间复杂度：O(2^n) 每次递归复杂度*2，一共有n次\nfunc climbStairs(n int) int {\n\tif n <= 2 {\n\t\treturn n\n\t}\n\treturn climbStairs(n-1) + climbStairs(n-2)\n}\n```\n\n```go\n// 方法二：带备忘录的递归（自顶向下）\n// 声明备忘录，记录计算过的答案 此时为nil\nvar memo map[int]int\nfunc climbStairs(n int) int {\n    // 申请一个空间\n\tif memo == nil {\n\t\tmemo = make(map[int]int)\n\t}\n    // 边界\n\tif n <= 2 {\n\t\treturn n\n\t}\n    // 备忘录中存在\n\tif tmp := memo[n]; tmp != 0 {\n\t\treturn tmp\n\t}\n    // 不存在\n\tmemo[n] = climbStairs(n-1) + climbStairs(n-2)\n\treturn memo[n]\n}\n```\n\n```go\n// 方法三：动态规划（自底向上）\n// 最优子结构：f(n-1)，f(n-2)\n// 状态转移方程：f(n) = f(n-1) + f(n-2)\n// 边界：f(1) = 1，f(2) = 2\n// 重叠子问题：f(10) = f(9) + f(8)，f(9) = f(8) + f(7)\nfunc climbStairs(n int) int {\n\tif n <= 2 {\n\t\treturn n\n\t}\n\tbefore1 := 1\n\tbefore2 := 2\n\tres := 0\n\tfor i := 3; i <= n; i++ {\n\t\tres = before1 + before2\n\t\tbefore1 = before2\n\t\tbefore2 = res\n\t}\n\treturn res\n```\n\n\n\n#### 4 解题思路\n\n- 穷举分析\n- 确定边界\n- 找规律（确定最优子结构）\n- 写出状态转移方程\n","source":"_posts/algo-learn02DynamicProgramming.md","raw":"---\ntitle: 理解动态规划\ndate: 2022-03-30 20:20:48\nid: DP\ncategories:\n- algo\ntags:\n- learn\n---\n\n\n\n动态规划，通过把原问题分解为相对简单的子问题的方式求解复杂问题的方法。\n\n动态规划简介，核心思想，案例，解题思路。\n\n\n\n<!-- more -->\n\n\n\n#### 1 什么是动态规划\n\n动态规划（Dynamic programming，DP），通过把原问题分解为相对简单的子问题的方式求解复杂问题的方法（自底向上）。动态规划常常适用于有重叠子问题和最优子结构性质的问题。\n\n动态规划把子问题的答案保存起来，以减少重复计算。再根据子问题答案反推，得出原问题解的一种方法。\n\n#### 2 核心思想\n\n动态规划最核心的思想，就在于拆分子问题，记住过往，减少重复计算。\n\n#### 3 例子\n\n```\n题目：\n假设你正在爬楼梯。需要 n 阶你才能到达楼顶。\n每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？\n```\n\n```go\n// 方法一：暴力递归\n// time limit\n// 时间复杂度：O(2^n) 每次递归复杂度*2，一共有n次\nfunc climbStairs(n int) int {\n\tif n <= 2 {\n\t\treturn n\n\t}\n\treturn climbStairs(n-1) + climbStairs(n-2)\n}\n```\n\n```go\n// 方法二：带备忘录的递归（自顶向下）\n// 声明备忘录，记录计算过的答案 此时为nil\nvar memo map[int]int\nfunc climbStairs(n int) int {\n    // 申请一个空间\n\tif memo == nil {\n\t\tmemo = make(map[int]int)\n\t}\n    // 边界\n\tif n <= 2 {\n\t\treturn n\n\t}\n    // 备忘录中存在\n\tif tmp := memo[n]; tmp != 0 {\n\t\treturn tmp\n\t}\n    // 不存在\n\tmemo[n] = climbStairs(n-1) + climbStairs(n-2)\n\treturn memo[n]\n}\n```\n\n```go\n// 方法三：动态规划（自底向上）\n// 最优子结构：f(n-1)，f(n-2)\n// 状态转移方程：f(n) = f(n-1) + f(n-2)\n// 边界：f(1) = 1，f(2) = 2\n// 重叠子问题：f(10) = f(9) + f(8)，f(9) = f(8) + f(7)\nfunc climbStairs(n int) int {\n\tif n <= 2 {\n\t\treturn n\n\t}\n\tbefore1 := 1\n\tbefore2 := 2\n\tres := 0\n\tfor i := 3; i <= n; i++ {\n\t\tres = before1 + before2\n\t\tbefore1 = before2\n\t\tbefore2 = res\n\t}\n\treturn res\n```\n\n\n\n#### 4 解题思路\n\n- 穷举分析\n- 确定边界\n- 找规律（确定最优子结构）\n- 写出状态转移方程\n","slug":"algo-learn02DynamicProgramming","published":1,"updated":"2022-04-16T23:02:48.099Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70t0000b5oss2zsshis9","content":"<p>动态规划，通过把原问题分解为相对简单的子问题的方式求解复杂问题的方法。</p>\n<p>动态规划简介，核心思想，案例，解题思路。</p>\n<span id=\"more\"></span>\n\n\n\n<h4 id=\"1-什么是动态规划\"><a href=\"#1-什么是动态规划\" class=\"headerlink\" title=\"1 什么是动态规划\"></a>1 什么是动态规划</h4><p>动态规划（Dynamic programming，DP），通过把原问题分解为相对简单的子问题的方式求解复杂问题的方法（自底向上）。动态规划常常适用于有重叠子问题和最优子结构性质的问题。</p>\n<p>动态规划把子问题的答案保存起来，以减少重复计算。再根据子问题答案反推，得出原问题解的一种方法。</p>\n<h4 id=\"2-核心思想\"><a href=\"#2-核心思想\" class=\"headerlink\" title=\"2 核心思想\"></a>2 核心思想</h4><p>动态规划最核心的思想，就在于拆分子问题，记住过往，减少重复计算。</p>\n<h4 id=\"3-例子\"><a href=\"#3-例子\" class=\"headerlink\" title=\"3 例子\"></a>3 例子</h4><figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">题目：</span><br><span class=\"line\">假设你正在爬楼梯。需要 n 阶你才能到达楼顶。</span><br><span class=\"line\">每次你可以爬<span class=\"number\"> 1 </span>或<span class=\"number\"> 2 </span>个台阶。你有多少种不同的方法可以爬到楼顶呢？</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法一：暴力递归</span></span><br><span class=\"line\"><span class=\"comment\">// time limit</span></span><br><span class=\"line\"><span class=\"comment\">// 时间复杂度：O(2^n) 每次递归复杂度*2，一共有n次</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">climbStairs</span><span class=\"params\">(n <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> n &lt;= <span class=\"number\">2</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> n</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> climbStairs(n<span class=\"number\">-1</span>) + climbStairs(n<span class=\"number\">-2</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法二：带备忘录的递归（自顶向下）</span></span><br><span class=\"line\"><span class=\"comment\">// 声明备忘录，记录计算过的答案 此时为nil</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> memo <span class=\"keyword\">map</span>[<span class=\"type\">int</span>]<span class=\"type\">int</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">climbStairs</span><span class=\"params\">(n <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 申请一个空间</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> memo == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tmemo = <span class=\"built_in\">make</span>(<span class=\"keyword\">map</span>[<span class=\"type\">int</span>]<span class=\"type\">int</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 边界</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> n &lt;= <span class=\"number\">2</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> n</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 备忘录中存在</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> tmp := memo[n]; tmp != <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> tmp</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 不存在</span></span><br><span class=\"line\">\tmemo[n] = climbStairs(n<span class=\"number\">-1</span>) + climbStairs(n<span class=\"number\">-2</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> memo[n]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法三：动态规划（自底向上）</span></span><br><span class=\"line\"><span class=\"comment\">// 最优子结构：f(n-1)，f(n-2)</span></span><br><span class=\"line\"><span class=\"comment\">// 状态转移方程：f(n) = f(n-1) + f(n-2)</span></span><br><span class=\"line\"><span class=\"comment\">// 边界：f(1) = 1，f(2) = 2</span></span><br><span class=\"line\"><span class=\"comment\">// 重叠子问题：f(10) = f(9) + f(8)，f(9) = f(8) + f(7)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">climbStairs</span><span class=\"params\">(n <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> n &lt;= <span class=\"number\">2</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> n</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tbefore1 := <span class=\"number\">1</span></span><br><span class=\"line\">\tbefore2 := <span class=\"number\">2</span></span><br><span class=\"line\">\tres := <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">3</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tres = before1 + before2</span><br><span class=\"line\">\t\tbefore1 = before2</span><br><span class=\"line\">\t\tbefore2 = res</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-解题思路\"><a href=\"#4-解题思路\" class=\"headerlink\" title=\"4 解题思路\"></a>4 解题思路</h4><ul>\n<li>穷举分析</li>\n<li>确定边界</li>\n<li>找规律（确定最优子结构）</li>\n<li>写出状态转移方程</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>动态规划，通过把原问题分解为相对简单的子问题的方式求解复杂问题的方法。</p>\n<p>动态规划简介，核心思想，案例，解题思路。</p>","more":"<h4 id=\"1-什么是动态规划\"><a href=\"#1-什么是动态规划\" class=\"headerlink\" title=\"1 什么是动态规划\"></a>1 什么是动态规划</h4><p>动态规划（Dynamic programming，DP），通过把原问题分解为相对简单的子问题的方式求解复杂问题的方法（自底向上）。动态规划常常适用于有重叠子问题和最优子结构性质的问题。</p>\n<p>动态规划把子问题的答案保存起来，以减少重复计算。再根据子问题答案反推，得出原问题解的一种方法。</p>\n<h4 id=\"2-核心思想\"><a href=\"#2-核心思想\" class=\"headerlink\" title=\"2 核心思想\"></a>2 核心思想</h4><p>动态规划最核心的思想，就在于拆分子问题，记住过往，减少重复计算。</p>\n<h4 id=\"3-例子\"><a href=\"#3-例子\" class=\"headerlink\" title=\"3 例子\"></a>3 例子</h4><figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">题目：</span><br><span class=\"line\">假设你正在爬楼梯。需要 n 阶你才能到达楼顶。</span><br><span class=\"line\">每次你可以爬<span class=\"number\"> 1 </span>或<span class=\"number\"> 2 </span>个台阶。你有多少种不同的方法可以爬到楼顶呢？</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法一：暴力递归</span></span><br><span class=\"line\"><span class=\"comment\">// time limit</span></span><br><span class=\"line\"><span class=\"comment\">// 时间复杂度：O(2^n) 每次递归复杂度*2，一共有n次</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">climbStairs</span><span class=\"params\">(n <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> n &lt;= <span class=\"number\">2</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> n</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> climbStairs(n<span class=\"number\">-1</span>) + climbStairs(n<span class=\"number\">-2</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法二：带备忘录的递归（自顶向下）</span></span><br><span class=\"line\"><span class=\"comment\">// 声明备忘录，记录计算过的答案 此时为nil</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> memo <span class=\"keyword\">map</span>[<span class=\"type\">int</span>]<span class=\"type\">int</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">climbStairs</span><span class=\"params\">(n <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 申请一个空间</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> memo == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tmemo = <span class=\"built_in\">make</span>(<span class=\"keyword\">map</span>[<span class=\"type\">int</span>]<span class=\"type\">int</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 边界</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> n &lt;= <span class=\"number\">2</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> n</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 备忘录中存在</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> tmp := memo[n]; tmp != <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> tmp</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 不存在</span></span><br><span class=\"line\">\tmemo[n] = climbStairs(n<span class=\"number\">-1</span>) + climbStairs(n<span class=\"number\">-2</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> memo[n]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法三：动态规划（自底向上）</span></span><br><span class=\"line\"><span class=\"comment\">// 最优子结构：f(n-1)，f(n-2)</span></span><br><span class=\"line\"><span class=\"comment\">// 状态转移方程：f(n) = f(n-1) + f(n-2)</span></span><br><span class=\"line\"><span class=\"comment\">// 边界：f(1) = 1，f(2) = 2</span></span><br><span class=\"line\"><span class=\"comment\">// 重叠子问题：f(10) = f(9) + f(8)，f(9) = f(8) + f(7)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">climbStairs</span><span class=\"params\">(n <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> n &lt;= <span class=\"number\">2</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> n</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tbefore1 := <span class=\"number\">1</span></span><br><span class=\"line\">\tbefore2 := <span class=\"number\">2</span></span><br><span class=\"line\">\tres := <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">3</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tres = before1 + before2</span><br><span class=\"line\">\t\tbefore1 = before2</span><br><span class=\"line\">\t\tbefore2 = res</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-解题思路\"><a href=\"#4-解题思路\" class=\"headerlink\" title=\"4 解题思路\"></a>4 解题思路</h4><ul>\n<li>穷举分析</li>\n<li>确定边界</li>\n<li>找规律（确定最优子结构）</li>\n<li>写出状态转移方程</li>\n</ul>"},{"title":"《算法》笔记：全书框架","date":"2022-04-11T07:00:29.000Z","id":"algorithms0","_content":"\n\n\n《算法》这本书的介绍、全书的框架，以及笔记的索引。\n\n\n\n<!-- more -->\n\n\n\n#### 1 算法\n\n计算机程序：实现一种已有的**方法**来解决某个问题。\n\n这种方法和编程语言无关，是这种方法而非程序本身描述了解决问题的步骤。\n\n---\n\n#### 2 本书框架\n\n##### 第1章：基础\n\n讲解在随后章节中用来实现、分析和比较算法的基本原则和方法。\n\n##### 第2章：排序\n\n有序地重新排列数组中的元素是非常重要的基础算法。研究各种排序算法，包括插入排序、选择排序、希尔排序、快速排序、归并排序和堆排序。同时还会讨论另外一些算法，用于解决几个和排序相关的问题，例如优先队列、选举以及归并。\n\n##### 第3章：查找\n\n从庞大的数据集中找到指定的条目十分重要。基本的和高级的查找算法，包括二叉查找树、平衡查找树和散列表。\n\n##### 第4章：图\n\n图的主要内容是对象和它的连接，连接可能有权重和方向。利用图可以为大量重要而困难的问题建模。研究深度优先搜索、广度优先搜索、连通性问题和若干那其他算法和应用。\n\n##### 第5章：字符串\n\n字符串是现代应用程序中的重要数据类型。研究一系列字符串的算法，首先对字符串进行排序和查找的快速算法，然后是子字符串查找、正则表达式模式匹配和数据压缩算法。\n\n##### 第6章：背景\n\n前沿研究。\n\n---\n\n#### 3 我的学习笔记\n\n原书使用的是Java语言。我会使用Go或者C++重新复现。\n\n[第1章：基础](https://zhenruyi.github.io/algo/algorithms1/)\n\n[第2章：排序](https://zhenruyi.github.io/algo/algorithms2/)\n\n[第3章：查找](https://zhenruyi.github.io/algo/algorithms3/)\n\n[第4章：图](https://zhenruyi.github.io/algo/algorithms4/)\n\n[第5章：字符串](https://zhenruyi.github.io/algo/algorithms5/)\n","source":"_posts/algo-learn03Algorithms00Framework.md","raw":"---\ntitle: 《算法》笔记：全书框架\ndate: 2022-04-11 15:00:29\nid: algorithms0\ncategories:\n- algo\ntags:\n- learn\n---\n\n\n\n《算法》这本书的介绍、全书的框架，以及笔记的索引。\n\n\n\n<!-- more -->\n\n\n\n#### 1 算法\n\n计算机程序：实现一种已有的**方法**来解决某个问题。\n\n这种方法和编程语言无关，是这种方法而非程序本身描述了解决问题的步骤。\n\n---\n\n#### 2 本书框架\n\n##### 第1章：基础\n\n讲解在随后章节中用来实现、分析和比较算法的基本原则和方法。\n\n##### 第2章：排序\n\n有序地重新排列数组中的元素是非常重要的基础算法。研究各种排序算法，包括插入排序、选择排序、希尔排序、快速排序、归并排序和堆排序。同时还会讨论另外一些算法，用于解决几个和排序相关的问题，例如优先队列、选举以及归并。\n\n##### 第3章：查找\n\n从庞大的数据集中找到指定的条目十分重要。基本的和高级的查找算法，包括二叉查找树、平衡查找树和散列表。\n\n##### 第4章：图\n\n图的主要内容是对象和它的连接，连接可能有权重和方向。利用图可以为大量重要而困难的问题建模。研究深度优先搜索、广度优先搜索、连通性问题和若干那其他算法和应用。\n\n##### 第5章：字符串\n\n字符串是现代应用程序中的重要数据类型。研究一系列字符串的算法，首先对字符串进行排序和查找的快速算法，然后是子字符串查找、正则表达式模式匹配和数据压缩算法。\n\n##### 第6章：背景\n\n前沿研究。\n\n---\n\n#### 3 我的学习笔记\n\n原书使用的是Java语言。我会使用Go或者C++重新复现。\n\n[第1章：基础](https://zhenruyi.github.io/algo/algorithms1/)\n\n[第2章：排序](https://zhenruyi.github.io/algo/algorithms2/)\n\n[第3章：查找](https://zhenruyi.github.io/algo/algorithms3/)\n\n[第4章：图](https://zhenruyi.github.io/algo/algorithms4/)\n\n[第5章：字符串](https://zhenruyi.github.io/algo/algorithms5/)\n","slug":"algo-learn03Algorithms00Framework","published":1,"updated":"2022-04-16T23:26:23.651Z","_id":"cl22h70t6000g5oss664ffi9o","comments":1,"layout":"post","photos":[],"link":"","content":"<p>《算法》这本书的介绍、全书的框架，以及笔记的索引。</p>\n<span id=\"more\"></span>\n\n\n\n<h4 id=\"1-算法\"><a href=\"#1-算法\" class=\"headerlink\" title=\"1 算法\"></a>1 算法</h4><p>计算机程序：实现一种已有的<strong>方法</strong>来解决某个问题。</p>\n<p>这种方法和编程语言无关，是这种方法而非程序本身描述了解决问题的步骤。</p>\n<hr>\n<h4 id=\"2-本书框架\"><a href=\"#2-本书框架\" class=\"headerlink\" title=\"2 本书框架\"></a>2 本书框架</h4><h5 id=\"第1章：基础\"><a href=\"#第1章：基础\" class=\"headerlink\" title=\"第1章：基础\"></a>第1章：基础</h5><p>讲解在随后章节中用来实现、分析和比较算法的基本原则和方法。</p>\n<h5 id=\"第2章：排序\"><a href=\"#第2章：排序\" class=\"headerlink\" title=\"第2章：排序\"></a>第2章：排序</h5><p>有序地重新排列数组中的元素是非常重要的基础算法。研究各种排序算法，包括插入排序、选择排序、希尔排序、快速排序、归并排序和堆排序。同时还会讨论另外一些算法，用于解决几个和排序相关的问题，例如优先队列、选举以及归并。</p>\n<h5 id=\"第3章：查找\"><a href=\"#第3章：查找\" class=\"headerlink\" title=\"第3章：查找\"></a>第3章：查找</h5><p>从庞大的数据集中找到指定的条目十分重要。基本的和高级的查找算法，包括二叉查找树、平衡查找树和散列表。</p>\n<h5 id=\"第4章：图\"><a href=\"#第4章：图\" class=\"headerlink\" title=\"第4章：图\"></a>第4章：图</h5><p>图的主要内容是对象和它的连接，连接可能有权重和方向。利用图可以为大量重要而困难的问题建模。研究深度优先搜索、广度优先搜索、连通性问题和若干那其他算法和应用。</p>\n<h5 id=\"第5章：字符串\"><a href=\"#第5章：字符串\" class=\"headerlink\" title=\"第5章：字符串\"></a>第5章：字符串</h5><p>字符串是现代应用程序中的重要数据类型。研究一系列字符串的算法，首先对字符串进行排序和查找的快速算法，然后是子字符串查找、正则表达式模式匹配和数据压缩算法。</p>\n<h5 id=\"第6章：背景\"><a href=\"#第6章：背景\" class=\"headerlink\" title=\"第6章：背景\"></a>第6章：背景</h5><p>前沿研究。</p>\n<hr>\n<h4 id=\"3-我的学习笔记\"><a href=\"#3-我的学习笔记\" class=\"headerlink\" title=\"3 我的学习笔记\"></a>3 我的学习笔记</h4><p>原书使用的是Java语言。我会使用Go或者C++重新复现。</p>\n<p><a href=\"https://zhenruyi.github.io/algo/algorithms1/\">第1章：基础</a></p>\n<p><a href=\"https://zhenruyi.github.io/algo/algorithms2/\">第2章：排序</a></p>\n<p><a href=\"https://zhenruyi.github.io/algo/algorithms3/\">第3章：查找</a></p>\n<p><a href=\"https://zhenruyi.github.io/algo/algorithms4/\">第4章：图</a></p>\n<p><a href=\"https://zhenruyi.github.io/algo/algorithms5/\">第5章：字符串</a></p>\n","site":{"data":{}},"excerpt":"<p>《算法》这本书的介绍、全书的框架，以及笔记的索引。</p>","more":"<h4 id=\"1-算法\"><a href=\"#1-算法\" class=\"headerlink\" title=\"1 算法\"></a>1 算法</h4><p>计算机程序：实现一种已有的<strong>方法</strong>来解决某个问题。</p>\n<p>这种方法和编程语言无关，是这种方法而非程序本身描述了解决问题的步骤。</p>\n<hr>\n<h4 id=\"2-本书框架\"><a href=\"#2-本书框架\" class=\"headerlink\" title=\"2 本书框架\"></a>2 本书框架</h4><h5 id=\"第1章：基础\"><a href=\"#第1章：基础\" class=\"headerlink\" title=\"第1章：基础\"></a>第1章：基础</h5><p>讲解在随后章节中用来实现、分析和比较算法的基本原则和方法。</p>\n<h5 id=\"第2章：排序\"><a href=\"#第2章：排序\" class=\"headerlink\" title=\"第2章：排序\"></a>第2章：排序</h5><p>有序地重新排列数组中的元素是非常重要的基础算法。研究各种排序算法，包括插入排序、选择排序、希尔排序、快速排序、归并排序和堆排序。同时还会讨论另外一些算法，用于解决几个和排序相关的问题，例如优先队列、选举以及归并。</p>\n<h5 id=\"第3章：查找\"><a href=\"#第3章：查找\" class=\"headerlink\" title=\"第3章：查找\"></a>第3章：查找</h5><p>从庞大的数据集中找到指定的条目十分重要。基本的和高级的查找算法，包括二叉查找树、平衡查找树和散列表。</p>\n<h5 id=\"第4章：图\"><a href=\"#第4章：图\" class=\"headerlink\" title=\"第4章：图\"></a>第4章：图</h5><p>图的主要内容是对象和它的连接，连接可能有权重和方向。利用图可以为大量重要而困难的问题建模。研究深度优先搜索、广度优先搜索、连通性问题和若干那其他算法和应用。</p>\n<h5 id=\"第5章：字符串\"><a href=\"#第5章：字符串\" class=\"headerlink\" title=\"第5章：字符串\"></a>第5章：字符串</h5><p>字符串是现代应用程序中的重要数据类型。研究一系列字符串的算法，首先对字符串进行排序和查找的快速算法，然后是子字符串查找、正则表达式模式匹配和数据压缩算法。</p>\n<h5 id=\"第6章：背景\"><a href=\"#第6章：背景\" class=\"headerlink\" title=\"第6章：背景\"></a>第6章：背景</h5><p>前沿研究。</p>\n<hr>\n<h4 id=\"3-我的学习笔记\"><a href=\"#3-我的学习笔记\" class=\"headerlink\" title=\"3 我的学习笔记\"></a>3 我的学习笔记</h4><p>原书使用的是Java语言。我会使用Go或者C++重新复现。</p>\n<p><a href=\"https://zhenruyi.github.io/algo/algorithms1/\">第1章：基础</a></p>\n<p><a href=\"https://zhenruyi.github.io/algo/algorithms2/\">第2章：排序</a></p>\n<p><a href=\"https://zhenruyi.github.io/algo/algorithms3/\">第3章：查找</a></p>\n<p><a href=\"https://zhenruyi.github.io/algo/algorithms4/\">第4章：图</a></p>\n<p><a href=\"https://zhenruyi.github.io/algo/algorithms5/\">第5章：字符串</a></p>"},{"title":"《算法》笔记：第1章  基础","date":"2022-04-11T07:53:17.000Z","id":"algorithms1","_content":"\n\n\n《算法》第1章：基础。\n\n基础编程模型，数据抽象，背包、队列和栈，算法分析，案例研究。\n\n\n\n<!-- more -->\n\n\n\n---\n\n\n\n算法是适合用计算机实现的解决问题的方法。和算法关系最密切的是数据结构，数据结构是便于算法操作的组织数据的方法。\n\n本章内容：\n\n- 基础编程模型：语法，语言特性，库；\n- 数据抽象：抽象数据类型，模块化编程；\n- 三种基础的抽象数据类型：背包、队列和栈；\n- 算法分析：性能；\n- 例子：union-find算法。\n\n---\n\n### 1.1 基础编程模型\n\n使用编程语言实现算法，出于以下原因：\n\n- 程序是对算法精确、优雅和完全的描述；\n- 通过运行程序学习算法的各种性质；\n- 直接使用这些算法。\n\n这样做的一个缺点是，使用特定语言，使分离算法的思想和实现细节变得困难。\n\n基础编程模型：描述和实现算法所用到的语言特性、软件库和操作系统特性的总称。\n\n#### 1.1.1 程序的基本结构\n\n语法，是大多数现代语言共有的：\n\n- 原始数据类型：精确定义了整数、浮点数和布尔值，定义包括取值范围和操作。\n- 语句：六种语句，包括声明、赋值、条件、循环、调用和返回。\n- 数组、字符串。\n- 函数/方法。\n- 标准输入输出。\n- 数据抽象：数据抽象封装和重用，定义非原始数据类型，进而支持面向对象编程。\n\n####  1.1.2 原始数据类型与表达式\n\n语言的基础知识：表达式、类型转换、比较和其他原始数据类型。\n\n#### 1.1.3 语句\n\n六种语句。\n\n#### 1.1.4 简便记法\n\n目的：追求清晰、优雅和高效的代码：\n\n- 声明并初始化。在golang中，使用符号:=。\n- 隐式赋值：i++，+=。\n\n#### 1.1.5 数组/切片\n\n顺序存储同类型的多个数据。\n\n- 创建并初始化：注意初始值。\n- 注意指针和引用。\n- 二维数组\n\n#### 1.1.6 方法/函数\n\n外部库使用import导入。\n\n#### 1.1.7 API\n\n模块化编程的一个重要的组成部分就是记录库方法的用法并提供其他人参考的文档。统一使用应用程序编程接口。\n\n#### 1.1.8 字符串\n\n字符串拼接+，类型转换strconv。\n\n自动转换：+的一边是字符串，会自动将其他转换成字符串。\n\n#### 1.1.9 输入输出\n\n标准输入输出：fmt。\n\n#### 1.1.10 二分查找\n\n#### 1.1.11 展望\n\n数据抽象，有时也被称为面向对象编程。使用数据抽象的理由：\n\n- 允许通过模块化编程复用代码。\n- 轻易构造更多链式数据结构，它们比数组更灵活，是高效算法的基础。\n- 准确定义算法问题。\n\n---\n\n\n\n### 1.2 数据抽象\n\n数据类型：一组值和一组对这些值的操作的集合。\n\n数据抽象：定义和使用数据类型的过程。\n\n抽象数据类型：封装后的数据类型。\n\n#### 1.2.1 使用抽象数据类型\n\n要使用一种数据类型并不一定非得知道它是怎么实现的。\n\n#### 1.2.2 抽象数据类型举例\n\n各类库。\n\n#### 1.2.3 抽象数据类型的实现\n\n- 实例变量：类的实例。\n- 构造函数：跟类同名的函数。\n- 实例方法。\n- 作用域：参数变量，局部变量，实例变量。\n\n#### 1.2.4 更多抽象数据类型的实现\n\n第三方库。\n\n#### 1.2.5 数据类型的设计\n\n抽象数据类型是一种向用例隐藏内部表示的数据类型。这种思想强有力地影响了现代编程。\n\n- 封装：并不需要知道怎么实现的。\n- 设计API：构建现代软件最重要也是最有挑战的一项任务就是设计API。\n- 算法与抽象数据类型。\n- 接口继承。\n- 实现继承。\n- 等价性。\n- 内存管理。\n- 不可变性。\n- 异常处理。\n- 断言。\n\n\n\n---\n\n\n\n### 1.3 背包、队列和栈\n\n许多基础数据类型都和对象的集合有关，所有的操作都是对对象的增删改查。\n\n三种数据类型：背包(Bag)、队列(Queue)、栈(Stack)，它们不同之处就是删除或者访问对象的顺序不同。\n\n本节目标：\n\n- 说明对集合的表示方法，直接影响到各种操作的效率，要设计适用于对象的数据结构并高效地实现所需要的方法。\n- 介绍泛型和迭代，Java概念。\n- 说明链式数据结构的重要性，特别是经典的链表，有了它才能高效实现上述三种数据结构。\n\n#### 1.3.1 API\n\n| Bag                                                | Queue         | Stack      |\n| -------------------------------------------------- | ------------- | ---------- |\n| NewBag()<br />go语言没有构造函数，所以使用该方法。 | NewQueue()    | NewStack() |\n| add(item)                                          | enQueue(item) | push(item) |\n|                                                    | deQueue()     | pop()      |\n| isEmpty()                                          | isEmpty()     | isEmpty()  |\n| size()                                             | size()        | size()     |\n\n##### 1.3.1.1 泛型\n\n只需要一份API就能处理所有类型的数据。\n\ngo1.18开始支持泛型。\n\n##### 1.3.1.2 自动装箱\n\n自动将一个原始数据类型转换为一个封装类型被称为自动装箱。例如，int -> Interger。\n\n自动拆箱。\n\n##### 1.3.1.3 可迭代的集合类型\n\n处理集合中的每一个元素，或者叫做迭代访问集合中的所有元素。\n\n```go\n切片：\nfor index, value := range slice {\n\n}\n字典：\nfor key, value := range map{\n\n}\n```\n\n##### 1.3.1.4 背包\n\n- 不支持删除元素的集合数据类型。\n- 目的：帮助收集元素并迭代遍历所有元素。迭代的顺序不确定且与用例无关。\n- 也可以使用队列和栈，只用背包说明处理顺序不重要。\n\n##### 1.3.1.5 队列\n\n- 先进先出。\n- 可以使用数组实现，循环的指针。可以使用链表实现。\n\n##### 1.3.1.6 栈\n\n下压栈，简称栈。\n\n##### 1.3.1.7 算术表达式\n\n如何按照正确的顺序处理算术表达式。20世纪60年代，Dijkstra发明了一个非常简单的算法，使用两个栈，一个保存运算符，一个保存操作数。\n\n- 将操作数压入操作数栈。\n- 将运算符压入运算符栈。\n- 忽略左括号。\n- 遇到右括号，弹出一个运算符，弹出所需数量的操作数，并将运算结果压入操作数栈。\n\n```go\n// Dijkstra的双栈算术表达式求值算法\nfunc Evaluate(exp string) float64 {\n\t// 双栈\n\tops := list.New()\n\tvals := list.New()\n\t// 处理数字\n\tval := \"\"\n\tfor i := 0; i < len(exp); i++ {\n\t\t// 不处理空格和(\n\t\tif exp[i] == ' ' || exp[i] == '('{\n\t\t\tcontinue\n\t\t}\n\t\t// 如果是数字，则拼接\n\t\tval += string(exp[i])\n\t\tif i+1 < len(exp) && isNum(exp[i]) && isNum(exp[i+1]) {\n\t\t\tcontinue\n\t\t}\n\t\t// 算术表达式处理\n\t\tswitch {\n\t\t// 数字的处理\n\t\tcase len(val) > 1 || (exp[i] >= '0' && exp[i] <= '9'):\n\t\t\tv, _ := strconv.ParseFloat(val, 64)\n\t\t\tvals.PushBack(v)\n\t\t// 运算符的处理\n\t\tcase exp[i] == '+' || exp[i] == '-' || exp[i] == '*' || exp[i] == '/':\n\t\t\tops.PushBack(exp[i])\n\t\t// 遇到反括号，进行一次运算\n\t\tcase exp[i] == ')':\n\t\t\t// 运算符出栈\n\t\t\tcurOp := ops.Remove(ops.Back()).(uint8)\n\t\t\t// 操作数出栈\n\t\t\tcurVal2 := vals.Remove(vals.Back()).(float64)\n\t\t\tcurVal1 := vals.Remove(vals.Back()).(float64)\n\t\t\tswitch curOp {\n\t\t\tcase '+': vals.PushBack(curVal1 + curVal2)\n\t\t\tcase '-': vals.PushBack(curVal1 - curVal2)\n\t\t\tcase '*': vals.PushBack(curVal1 * curVal2)\n\t\t\tcase '/': vals.PushBack(curVal1 / curVal2)\n\t\t\t}\n\t\tdefault:\n\t\t}\n\t\tval = \"\"\n\t}\n\treturn vals.Front().Value.(float64)\n}\n// 判断是不是数字\nfunc isNum(val uint8) bool {\n\tif val >= '0' && val <= '9' {\n\t\treturn true\n\t}\n\t// 可能是浮点数\n\tif val == '.' {\n\t\treturn true\n\t}\n\treturn false\n}\n```\n\n#### 1.3.2 集合类数据类型的实现\n\n在讨论Bag、Stack和Queue的实现之前，先给出一个简单而经典的实现，它的改进就得到我们所要的结果。\n\n##### 1.3.2.1 定容栈\n\n表示容量固定的字符串栈，只处理string，需要指定一个容量且不支持迭代。\n\n| FixedCapStackOfStrings             |                         |\n| ---------------------------------- | ----------------------- |\n| newFixedCapStackOfStrings(cap int) | 创建一个容量为cap的空栈 |\n| push(item)                         | 添加一个字符串          |\n| pop()                              | 删除最近添加的字符串    |\n| isEmpty()                          | 栈是否为空              |\n| size()                             | 字符串数量              |\n\n```go\ntype FixedCapStackOfStrings struct {\n\tStrs []string\n\tN int\n}\n\nfunc NewFixedCapStackOfStrings(capacity int) *FixedCapStackOfStrings {\n\treturn &FixedCapStackOfStrings{\n\t\tN: capacity,\n\t\tStrs: make([]string, 0),\n\t}\n}\n\nfunc (s *FixedCapStackOfStrings) IsEmpty() bool {\n\treturn len(s.Strs) == 0\n}\n\nfunc (s *FixedCapStackOfStrings) Size() int {\n\treturn len(s.Strs)\n}\n\nfunc (s *FixedCapStackOfStrings) Push(item string) bool {\n\tif s.Size() >= s.N {\n\t\treturn false\n\t}\n\ts.Strs = append(s.Strs, item)\n\treturn true\n}\n\nfunc (s *FixedCapStackOfStrings) Pop() string {\n\tif s.Size() == 0 {\n\t\treturn \"\"\n\t}\n\tres := s.Strs[s.Size()-1]\n\ts.Strs = s.Strs[:s.Size()-1]\n\treturn res\n}\n```\n\n##### 1.3.2.2 泛型（这里用interface{}）\n\n```go\ntype FixedCapStack struct {\n\tdata []interface{}\n\tcapa int\n}\n\nfunc NewFixedCapStack(capacity int) *FixedCapStack {\n\treturn &FixedCapStack{\n\t\tcapa: capacity,\n\t\tdata: make([]interface{}, 0),\n\t}\n}\n\nfunc (s *FixedCapStack) IsEmpty() bool {\n\treturn len(s.data) == 0\n}\n\nfunc (s *FixedCapStack) Size() int {\n\treturn len(s.data)\n}\n\nfunc (s *FixedCapStack) Push(d interface{}) bool {\n\tif len(s.data) >= s.capa {\n\t\treturn false\n\t}\n\ts.data = append(s.data, d)\n\treturn true\n}\n\nfunc (s *FixedCapStack) Pop() interface{} {\n\tif s.Size() == 0 {\n\t\treturn nil\n\t}\n\tres := s.data[s.Size()-1]\n\ts.data = s.data[:s.Size()-1]\n\treturn res\n}\n```\n\n##### 1.3.2.3 调整数组大小\n\n使用一个resize方法。\n\n```go\nfunc (s *FixedCapStack) Resize(size int) {\n\ts.capa *= 2\n}\n```\n\n##### 1.3.2.4 对象游离\n\n在Java中，被弹出的元素的引用还在数组中，这个元素已经不会再被访问，但Java垃圾收集器没办法知道这一点，除非引用被覆盖。\n\n解决办法：弹出时设为null。\n\n#### 1.3.3 链表\n\n链表是一种递归的数据结构，它或者为空，或者指向下一个节点的引用。\n\n##### 1.3.3.1 结点记录\n\n```go\ntype Node struct {\n    Data interface{}\n    Next *Node\n}\n```\n\n##### 1.3.3.2 构造链表\n\n```go\nNodeName := new(Node)\nNodeName.data = interface{}\nNodeName.Next = .......\n```\n\n##### 1.3.3.3 表头插入结点\n\n```go\nNewNode := new(Node)\nNewNode.Next = first\nfirst = NewNode\n```\n\n##### 1.3.3.4 从表头删除结点\n\n```go\nfirst = first.Next\n```\n\n##### 1.3.3.5 从表尾插入结点\n\n```go\nLast := new(Node)\nOldLast.Next = Last\n```\n\n##### 1.3.3.6 其他位置的插入和删除操作\n\n```\n先遍历，找到位置进行插入和删除操作。\n```\n\n##### 1.3.3.7 遍历操作\n\n```go\nfor p := first; p ! = nil; p = p.Next {\n    do something\n}\n```\n\n##### 1.3.3.8 栈的实现\n\n```go\ntype Node struct {\n\tdata interface{}\n\tnext *Node\n}\n\ntype ListStack struct {\n\tfirst *Node\n\tlength int\n}\n\nfunc (l *ListStack) IsEmpty() bool {\n\treturn l.length == 0\n}\n\nfunc (l *ListStack) Size() int {\n\treturn l.length\n}\n\nfunc (l *ListStack) Push(elem interface{}) {\n\tnode := new(Node)\n\tnode.data = elem\n\tnode.next = l.first\n\tl.first = node\n\tl.length++\n}\n\nfunc (l *ListStack) Pop() interface{} {\n\tret := l.first\n\tl.first = l.first.next\n\tl.length--\n\treturn ret.data\n}\n```\n\n##### 1.3.3.9 队列的实现\n\n```go\ntype ListQueue struct {\n\tfirst *Node\n\tlast *Node\n\tlength int\n}\n\nfunc (l *ListQueue) IsEmpty() bool {\n\treturn l.length == 0\n}\n\nfunc (l *ListQueue) Size() int {\n\treturn l.length\n}\n\nfunc (l *ListQueue) Enqueue(item interface{}) {\n\tnode := new(Node)\n\tnode.data = item\n\tnode.next = nil\n\tif l.length == 0 {\n\t\tl.first = node\n\t\tl.last = node\n\t} else {\n\t\tl.last.next = node\n\t\tl.last = node\n\t}\n\tl.length++\n}\n\nfunc (l *ListQueue) Dequeue() interface{} {\n\tif l.IsEmpty() {\n\t\treturn nil\n\t}\n\tret := l.first.data\n\tl.first = l.first.next\n\tl.length--\n\tif l.IsEmpty() {\n\t\tl.last = nil\n\t}\n\treturn ret\n}\n```\n\n##### 1.3.3.10 背包的实现\n\n```go\ntype ListBag struct {\n\tfirst *Node\n}\n\nfunc (l *ListBag) Add(item interface{}) {\n\tnode := new(Node)\n\tnode.data = item\n\tnode.next = l.first\n\tl.first = node\n}\n\n// 迭代，返回一个切片\nfunc (l *ListBag) Iterator() []interface{} {\n\tret := make([]interface{}, 0)\n\tfor node := l.first; node != nil; node = node.next {\n\t\tret = append(ret, node.data)\n\t}\n\treturn ret\n}\n```\n\n\n\n#### 1.3.4 综述\n\n- 数组\n  - 优点：通过索引直接访问任意元素。\n  - 缺点：初始化需要知道元素的数量，但在go可以使用切片。\n- 链表\n  - 使用空间大小和元素数量成正比。\n  - 需要通过遍历访问元素。\n\n\n\n---\n\n\n\n### 1.4 算法分析\n\n#### 1.4.1 科学方法\n\n爱因斯坦：“再多的实验也不一定能够证明我是对的，但只需要一个实验就能证明我是错的。”\n\n我们永远也没法知道某个假设是否绝对正确，我们只能验证它和我们的观察的一致性。\n\n#### 1.4.2 观察\n\n计算性任务的困难程度可以用问题的规模来衡量。使用不同的规模来观察计算性任务的变化。\n\n#### 1.4.3 数学模型\n\n尽管很多复杂因素影响运行时间，原则上我们仍然可能构造出一个数学模型来描述任意程序的运行时间。Knuth认为，一个程序运行的总时间主要和两点有关：\n\n- 执行每条语句的耗时；\n- 执行每条语句的频率。\n\n前者取决于计算机、编译器和操作系统，后者取决于程序本身和输入。\n\n##### 1.4.3.1 近似\n\n首项之后的其他项相对较小，使用约等于号(~)来忽略较小的项。\n\n| 函数                      | 近似     | 增长数量级 |\n| ------------------------- | -------- | ---------- |\n| N^3 / 6 + N^2 / 2 + N / 3 | ~N^3 / 6 | N^3        |\n| lg N + 1                  | ~lg N    | lg N       |\n| 3                         | ~3       | 1          |\n\n##### 1.4.3.2 近似运行时间\n\n许多程序的运行时间都只却决于其中的一小部分指令。\n\n##### 1.4.3.3 对增长数量级的猜想\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms01Foundation1.png)\n\n#### 1.4.4 增长数量级的分类\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms01Foundation2.png)\n\n- 常数级别：不依赖于N。\n- 对数级别：比常数时间稍慢，对数的底数和增长的数量级无关。\n- 线性级别：单个for循环，增长时线性的，和N成正比。\n- 线性对数级别：常见的是归并排序和快排。\n- 平方级别：两个嵌套的for循环。\n- 立方级别：三个嵌套的for循环。\n- 指数界别：不可能用于解决大规模的问题，但某些领域也很重要。\n\n#### 1.4.7 注意事项\n\n- 大常数：公式的系数如果很小就可以忽略，但是很大就不要忽略。\n- 非决定性的内循环：有些程序在内循环之外也有大量指令需要考虑。\n- 指令时间：每条指令所需的时间不同。\n- 系统因素：只是计算机争夺资源的众多应用程序之一。\n- 不分伯仲：有些程序员喜欢投入大量精力找出“最佳”实现，这类工作最好还是留给专家。\n\n---\n\n\n\n### 1.5 案例研究：union-find算法\n\n合并-查找，应用于连通性问题当中。\n\n#### union-find的实现\n\n```go\ntype UnionFind struct {\n\tid []int\n\tcount int\n}\n\nfunc NewUnionFind() *UnionFind {\n\treturn &UnionFind{\n\t\tid: nil,\n\t\tcount: 0,\n\t}\n}\n\nfunc (uf *UnionFind) Count() int {\n\treturn uf.count\n}\n\nfunc (uf *UnionFind) Connected(p, q int) bool {\n\treturn find(p) == find(q)\n}\n\nfunc (uf *UnionFind) find(p int) int {\n}\n\nfunc (uf *UnionFind) union(p, q int) {\n}\n```\n\n#### union方法和find方法的实现\n\n##### quick-find算法\n\n```go\nfunc (uf *UnionFind) QuickFindFind(p int) int {\n\treturn uf.id[p]\n}\n\n// 将p和q归并到相同的分量中\nfunc (uf *UnionFind) QuickFindUnion(p, q int) {\n\t// p和q的分量\n\tpID := uf.find(p)\n\tqID := uf.find(q)\n\t// 相同则返回\n\tif pID == qID {\n\t\treturn\n\t}\n\t// 将和p分量相同的变成q的分量\n\tfor i := 0; i < len(uf.id); i++ {\n\t\tif uf.id[i] == pID {\n\t\t\tuf.id[i] = qID\n\t\t}\n\t}\n\t// 分量减少一个\n\tuf.count--\n}\n```\n\nfind()的操作很快，但是quick-find算法无法处理大型问题，因为对于每一次union都需要扫描整个id切片。\n\n##### quick-union算法\n\n```go\nfunc (uf *UnionFind) QuickUnionFind(p int) int {\n\t// 找到根触点\n\tfor p != uf.id[p] {\n\t\tp = uf.id[p]\n\t}\n\treturn p\n}\n\nfunc (uf *UnionFind) QuickUnionUnion(p, q int) {\n\tpRoot := uf.QuickUnionFind(p)\n\tqRoot := uf.QuickUnionFind(q)\n\tif pRoot == qRoot {\n\t\treturn\n\t}\n    // 只需要修改根触点的指向就行\n\tuf.id[pRoot] = qRoot\n\tuf.count--\n}\n```\n\n\n\n##### 加权quick-union算法\n\n```go\ntype WeightedQuickUnionUF struct {\n\tid []int\n\tsize []int\n\tcount int\n}\n\nfunc (uf *WeightedQuickUnionUF) Count() int {\n\treturn uf.count\n}\n\nfunc (uf *WeightedQuickUnionUF) connected(p, q int) bool {\n\treturn uf.find(q) == uf.find(q)\n}\n\nfunc (uf *WeightedQuickUnionUF) find(p int) int {\n\tfor p != uf.id[p] {\n\t\tp = uf.id[p]\n\t}\n\treturn p\n}\n\nfunc (uf *WeightedQuickUnionUF) union(p, q int) {\n\tpRoot := uf.find(p)\n\tqRoot := uf.find(q)\n\tif pRoot == qRoot {\n\t\treturn\n\t}\n\tif uf.size[qRoot] < uf.size[pRoot] {\n\t\tuf.id[qRoot] = pRoot\n\t\tuf.size[pRoot] += uf.size[qRoot]\n\t} else {\n\t\tuf.id[pRoot] = qRoot\n\t\tuf.size[qRoot] += uf.size[pRoot]\n\t}\n\tuf.count--\n}\n```\n\n##### 性能特点\n\n| 算法                 | union()  | find()   |\n| -------------------- | -------- | -------- |\n| quick-find           | N        | 1        |\n| quick-union          | 树的高度 | 树的高度 |\n| weighted quick-union | log      | log      |\n\n\n\n\n\n\n\n---\n\n","source":"_posts/algo-learn03Algorithms01Foundation.md","raw":"---\ntitle: 《算法》笔记：第1章  基础\ndate: 2022-04-11 15:53:17\nid: algorithms1\ncategories:\n- algo\ntags:\n- learn\n---\n\n\n\n《算法》第1章：基础。\n\n基础编程模型，数据抽象，背包、队列和栈，算法分析，案例研究。\n\n\n\n<!-- more -->\n\n\n\n---\n\n\n\n算法是适合用计算机实现的解决问题的方法。和算法关系最密切的是数据结构，数据结构是便于算法操作的组织数据的方法。\n\n本章内容：\n\n- 基础编程模型：语法，语言特性，库；\n- 数据抽象：抽象数据类型，模块化编程；\n- 三种基础的抽象数据类型：背包、队列和栈；\n- 算法分析：性能；\n- 例子：union-find算法。\n\n---\n\n### 1.1 基础编程模型\n\n使用编程语言实现算法，出于以下原因：\n\n- 程序是对算法精确、优雅和完全的描述；\n- 通过运行程序学习算法的各种性质；\n- 直接使用这些算法。\n\n这样做的一个缺点是，使用特定语言，使分离算法的思想和实现细节变得困难。\n\n基础编程模型：描述和实现算法所用到的语言特性、软件库和操作系统特性的总称。\n\n#### 1.1.1 程序的基本结构\n\n语法，是大多数现代语言共有的：\n\n- 原始数据类型：精确定义了整数、浮点数和布尔值，定义包括取值范围和操作。\n- 语句：六种语句，包括声明、赋值、条件、循环、调用和返回。\n- 数组、字符串。\n- 函数/方法。\n- 标准输入输出。\n- 数据抽象：数据抽象封装和重用，定义非原始数据类型，进而支持面向对象编程。\n\n####  1.1.2 原始数据类型与表达式\n\n语言的基础知识：表达式、类型转换、比较和其他原始数据类型。\n\n#### 1.1.3 语句\n\n六种语句。\n\n#### 1.1.4 简便记法\n\n目的：追求清晰、优雅和高效的代码：\n\n- 声明并初始化。在golang中，使用符号:=。\n- 隐式赋值：i++，+=。\n\n#### 1.1.5 数组/切片\n\n顺序存储同类型的多个数据。\n\n- 创建并初始化：注意初始值。\n- 注意指针和引用。\n- 二维数组\n\n#### 1.1.6 方法/函数\n\n外部库使用import导入。\n\n#### 1.1.7 API\n\n模块化编程的一个重要的组成部分就是记录库方法的用法并提供其他人参考的文档。统一使用应用程序编程接口。\n\n#### 1.1.8 字符串\n\n字符串拼接+，类型转换strconv。\n\n自动转换：+的一边是字符串，会自动将其他转换成字符串。\n\n#### 1.1.9 输入输出\n\n标准输入输出：fmt。\n\n#### 1.1.10 二分查找\n\n#### 1.1.11 展望\n\n数据抽象，有时也被称为面向对象编程。使用数据抽象的理由：\n\n- 允许通过模块化编程复用代码。\n- 轻易构造更多链式数据结构，它们比数组更灵活，是高效算法的基础。\n- 准确定义算法问题。\n\n---\n\n\n\n### 1.2 数据抽象\n\n数据类型：一组值和一组对这些值的操作的集合。\n\n数据抽象：定义和使用数据类型的过程。\n\n抽象数据类型：封装后的数据类型。\n\n#### 1.2.1 使用抽象数据类型\n\n要使用一种数据类型并不一定非得知道它是怎么实现的。\n\n#### 1.2.2 抽象数据类型举例\n\n各类库。\n\n#### 1.2.3 抽象数据类型的实现\n\n- 实例变量：类的实例。\n- 构造函数：跟类同名的函数。\n- 实例方法。\n- 作用域：参数变量，局部变量，实例变量。\n\n#### 1.2.4 更多抽象数据类型的实现\n\n第三方库。\n\n#### 1.2.5 数据类型的设计\n\n抽象数据类型是一种向用例隐藏内部表示的数据类型。这种思想强有力地影响了现代编程。\n\n- 封装：并不需要知道怎么实现的。\n- 设计API：构建现代软件最重要也是最有挑战的一项任务就是设计API。\n- 算法与抽象数据类型。\n- 接口继承。\n- 实现继承。\n- 等价性。\n- 内存管理。\n- 不可变性。\n- 异常处理。\n- 断言。\n\n\n\n---\n\n\n\n### 1.3 背包、队列和栈\n\n许多基础数据类型都和对象的集合有关，所有的操作都是对对象的增删改查。\n\n三种数据类型：背包(Bag)、队列(Queue)、栈(Stack)，它们不同之处就是删除或者访问对象的顺序不同。\n\n本节目标：\n\n- 说明对集合的表示方法，直接影响到各种操作的效率，要设计适用于对象的数据结构并高效地实现所需要的方法。\n- 介绍泛型和迭代，Java概念。\n- 说明链式数据结构的重要性，特别是经典的链表，有了它才能高效实现上述三种数据结构。\n\n#### 1.3.1 API\n\n| Bag                                                | Queue         | Stack      |\n| -------------------------------------------------- | ------------- | ---------- |\n| NewBag()<br />go语言没有构造函数，所以使用该方法。 | NewQueue()    | NewStack() |\n| add(item)                                          | enQueue(item) | push(item) |\n|                                                    | deQueue()     | pop()      |\n| isEmpty()                                          | isEmpty()     | isEmpty()  |\n| size()                                             | size()        | size()     |\n\n##### 1.3.1.1 泛型\n\n只需要一份API就能处理所有类型的数据。\n\ngo1.18开始支持泛型。\n\n##### 1.3.1.2 自动装箱\n\n自动将一个原始数据类型转换为一个封装类型被称为自动装箱。例如，int -> Interger。\n\n自动拆箱。\n\n##### 1.3.1.3 可迭代的集合类型\n\n处理集合中的每一个元素，或者叫做迭代访问集合中的所有元素。\n\n```go\n切片：\nfor index, value := range slice {\n\n}\n字典：\nfor key, value := range map{\n\n}\n```\n\n##### 1.3.1.4 背包\n\n- 不支持删除元素的集合数据类型。\n- 目的：帮助收集元素并迭代遍历所有元素。迭代的顺序不确定且与用例无关。\n- 也可以使用队列和栈，只用背包说明处理顺序不重要。\n\n##### 1.3.1.5 队列\n\n- 先进先出。\n- 可以使用数组实现，循环的指针。可以使用链表实现。\n\n##### 1.3.1.6 栈\n\n下压栈，简称栈。\n\n##### 1.3.1.7 算术表达式\n\n如何按照正确的顺序处理算术表达式。20世纪60年代，Dijkstra发明了一个非常简单的算法，使用两个栈，一个保存运算符，一个保存操作数。\n\n- 将操作数压入操作数栈。\n- 将运算符压入运算符栈。\n- 忽略左括号。\n- 遇到右括号，弹出一个运算符，弹出所需数量的操作数，并将运算结果压入操作数栈。\n\n```go\n// Dijkstra的双栈算术表达式求值算法\nfunc Evaluate(exp string) float64 {\n\t// 双栈\n\tops := list.New()\n\tvals := list.New()\n\t// 处理数字\n\tval := \"\"\n\tfor i := 0; i < len(exp); i++ {\n\t\t// 不处理空格和(\n\t\tif exp[i] == ' ' || exp[i] == '('{\n\t\t\tcontinue\n\t\t}\n\t\t// 如果是数字，则拼接\n\t\tval += string(exp[i])\n\t\tif i+1 < len(exp) && isNum(exp[i]) && isNum(exp[i+1]) {\n\t\t\tcontinue\n\t\t}\n\t\t// 算术表达式处理\n\t\tswitch {\n\t\t// 数字的处理\n\t\tcase len(val) > 1 || (exp[i] >= '0' && exp[i] <= '9'):\n\t\t\tv, _ := strconv.ParseFloat(val, 64)\n\t\t\tvals.PushBack(v)\n\t\t// 运算符的处理\n\t\tcase exp[i] == '+' || exp[i] == '-' || exp[i] == '*' || exp[i] == '/':\n\t\t\tops.PushBack(exp[i])\n\t\t// 遇到反括号，进行一次运算\n\t\tcase exp[i] == ')':\n\t\t\t// 运算符出栈\n\t\t\tcurOp := ops.Remove(ops.Back()).(uint8)\n\t\t\t// 操作数出栈\n\t\t\tcurVal2 := vals.Remove(vals.Back()).(float64)\n\t\t\tcurVal1 := vals.Remove(vals.Back()).(float64)\n\t\t\tswitch curOp {\n\t\t\tcase '+': vals.PushBack(curVal1 + curVal2)\n\t\t\tcase '-': vals.PushBack(curVal1 - curVal2)\n\t\t\tcase '*': vals.PushBack(curVal1 * curVal2)\n\t\t\tcase '/': vals.PushBack(curVal1 / curVal2)\n\t\t\t}\n\t\tdefault:\n\t\t}\n\t\tval = \"\"\n\t}\n\treturn vals.Front().Value.(float64)\n}\n// 判断是不是数字\nfunc isNum(val uint8) bool {\n\tif val >= '0' && val <= '9' {\n\t\treturn true\n\t}\n\t// 可能是浮点数\n\tif val == '.' {\n\t\treturn true\n\t}\n\treturn false\n}\n```\n\n#### 1.3.2 集合类数据类型的实现\n\n在讨论Bag、Stack和Queue的实现之前，先给出一个简单而经典的实现，它的改进就得到我们所要的结果。\n\n##### 1.3.2.1 定容栈\n\n表示容量固定的字符串栈，只处理string，需要指定一个容量且不支持迭代。\n\n| FixedCapStackOfStrings             |                         |\n| ---------------------------------- | ----------------------- |\n| newFixedCapStackOfStrings(cap int) | 创建一个容量为cap的空栈 |\n| push(item)                         | 添加一个字符串          |\n| pop()                              | 删除最近添加的字符串    |\n| isEmpty()                          | 栈是否为空              |\n| size()                             | 字符串数量              |\n\n```go\ntype FixedCapStackOfStrings struct {\n\tStrs []string\n\tN int\n}\n\nfunc NewFixedCapStackOfStrings(capacity int) *FixedCapStackOfStrings {\n\treturn &FixedCapStackOfStrings{\n\t\tN: capacity,\n\t\tStrs: make([]string, 0),\n\t}\n}\n\nfunc (s *FixedCapStackOfStrings) IsEmpty() bool {\n\treturn len(s.Strs) == 0\n}\n\nfunc (s *FixedCapStackOfStrings) Size() int {\n\treturn len(s.Strs)\n}\n\nfunc (s *FixedCapStackOfStrings) Push(item string) bool {\n\tif s.Size() >= s.N {\n\t\treturn false\n\t}\n\ts.Strs = append(s.Strs, item)\n\treturn true\n}\n\nfunc (s *FixedCapStackOfStrings) Pop() string {\n\tif s.Size() == 0 {\n\t\treturn \"\"\n\t}\n\tres := s.Strs[s.Size()-1]\n\ts.Strs = s.Strs[:s.Size()-1]\n\treturn res\n}\n```\n\n##### 1.3.2.2 泛型（这里用interface{}）\n\n```go\ntype FixedCapStack struct {\n\tdata []interface{}\n\tcapa int\n}\n\nfunc NewFixedCapStack(capacity int) *FixedCapStack {\n\treturn &FixedCapStack{\n\t\tcapa: capacity,\n\t\tdata: make([]interface{}, 0),\n\t}\n}\n\nfunc (s *FixedCapStack) IsEmpty() bool {\n\treturn len(s.data) == 0\n}\n\nfunc (s *FixedCapStack) Size() int {\n\treturn len(s.data)\n}\n\nfunc (s *FixedCapStack) Push(d interface{}) bool {\n\tif len(s.data) >= s.capa {\n\t\treturn false\n\t}\n\ts.data = append(s.data, d)\n\treturn true\n}\n\nfunc (s *FixedCapStack) Pop() interface{} {\n\tif s.Size() == 0 {\n\t\treturn nil\n\t}\n\tres := s.data[s.Size()-1]\n\ts.data = s.data[:s.Size()-1]\n\treturn res\n}\n```\n\n##### 1.3.2.3 调整数组大小\n\n使用一个resize方法。\n\n```go\nfunc (s *FixedCapStack) Resize(size int) {\n\ts.capa *= 2\n}\n```\n\n##### 1.3.2.4 对象游离\n\n在Java中，被弹出的元素的引用还在数组中，这个元素已经不会再被访问，但Java垃圾收集器没办法知道这一点，除非引用被覆盖。\n\n解决办法：弹出时设为null。\n\n#### 1.3.3 链表\n\n链表是一种递归的数据结构，它或者为空，或者指向下一个节点的引用。\n\n##### 1.3.3.1 结点记录\n\n```go\ntype Node struct {\n    Data interface{}\n    Next *Node\n}\n```\n\n##### 1.3.3.2 构造链表\n\n```go\nNodeName := new(Node)\nNodeName.data = interface{}\nNodeName.Next = .......\n```\n\n##### 1.3.3.3 表头插入结点\n\n```go\nNewNode := new(Node)\nNewNode.Next = first\nfirst = NewNode\n```\n\n##### 1.3.3.4 从表头删除结点\n\n```go\nfirst = first.Next\n```\n\n##### 1.3.3.5 从表尾插入结点\n\n```go\nLast := new(Node)\nOldLast.Next = Last\n```\n\n##### 1.3.3.6 其他位置的插入和删除操作\n\n```\n先遍历，找到位置进行插入和删除操作。\n```\n\n##### 1.3.3.7 遍历操作\n\n```go\nfor p := first; p ! = nil; p = p.Next {\n    do something\n}\n```\n\n##### 1.3.3.8 栈的实现\n\n```go\ntype Node struct {\n\tdata interface{}\n\tnext *Node\n}\n\ntype ListStack struct {\n\tfirst *Node\n\tlength int\n}\n\nfunc (l *ListStack) IsEmpty() bool {\n\treturn l.length == 0\n}\n\nfunc (l *ListStack) Size() int {\n\treturn l.length\n}\n\nfunc (l *ListStack) Push(elem interface{}) {\n\tnode := new(Node)\n\tnode.data = elem\n\tnode.next = l.first\n\tl.first = node\n\tl.length++\n}\n\nfunc (l *ListStack) Pop() interface{} {\n\tret := l.first\n\tl.first = l.first.next\n\tl.length--\n\treturn ret.data\n}\n```\n\n##### 1.3.3.9 队列的实现\n\n```go\ntype ListQueue struct {\n\tfirst *Node\n\tlast *Node\n\tlength int\n}\n\nfunc (l *ListQueue) IsEmpty() bool {\n\treturn l.length == 0\n}\n\nfunc (l *ListQueue) Size() int {\n\treturn l.length\n}\n\nfunc (l *ListQueue) Enqueue(item interface{}) {\n\tnode := new(Node)\n\tnode.data = item\n\tnode.next = nil\n\tif l.length == 0 {\n\t\tl.first = node\n\t\tl.last = node\n\t} else {\n\t\tl.last.next = node\n\t\tl.last = node\n\t}\n\tl.length++\n}\n\nfunc (l *ListQueue) Dequeue() interface{} {\n\tif l.IsEmpty() {\n\t\treturn nil\n\t}\n\tret := l.first.data\n\tl.first = l.first.next\n\tl.length--\n\tif l.IsEmpty() {\n\t\tl.last = nil\n\t}\n\treturn ret\n}\n```\n\n##### 1.3.3.10 背包的实现\n\n```go\ntype ListBag struct {\n\tfirst *Node\n}\n\nfunc (l *ListBag) Add(item interface{}) {\n\tnode := new(Node)\n\tnode.data = item\n\tnode.next = l.first\n\tl.first = node\n}\n\n// 迭代，返回一个切片\nfunc (l *ListBag) Iterator() []interface{} {\n\tret := make([]interface{}, 0)\n\tfor node := l.first; node != nil; node = node.next {\n\t\tret = append(ret, node.data)\n\t}\n\treturn ret\n}\n```\n\n\n\n#### 1.3.4 综述\n\n- 数组\n  - 优点：通过索引直接访问任意元素。\n  - 缺点：初始化需要知道元素的数量，但在go可以使用切片。\n- 链表\n  - 使用空间大小和元素数量成正比。\n  - 需要通过遍历访问元素。\n\n\n\n---\n\n\n\n### 1.4 算法分析\n\n#### 1.4.1 科学方法\n\n爱因斯坦：“再多的实验也不一定能够证明我是对的，但只需要一个实验就能证明我是错的。”\n\n我们永远也没法知道某个假设是否绝对正确，我们只能验证它和我们的观察的一致性。\n\n#### 1.4.2 观察\n\n计算性任务的困难程度可以用问题的规模来衡量。使用不同的规模来观察计算性任务的变化。\n\n#### 1.4.3 数学模型\n\n尽管很多复杂因素影响运行时间，原则上我们仍然可能构造出一个数学模型来描述任意程序的运行时间。Knuth认为，一个程序运行的总时间主要和两点有关：\n\n- 执行每条语句的耗时；\n- 执行每条语句的频率。\n\n前者取决于计算机、编译器和操作系统，后者取决于程序本身和输入。\n\n##### 1.4.3.1 近似\n\n首项之后的其他项相对较小，使用约等于号(~)来忽略较小的项。\n\n| 函数                      | 近似     | 增长数量级 |\n| ------------------------- | -------- | ---------- |\n| N^3 / 6 + N^2 / 2 + N / 3 | ~N^3 / 6 | N^3        |\n| lg N + 1                  | ~lg N    | lg N       |\n| 3                         | ~3       | 1          |\n\n##### 1.4.3.2 近似运行时间\n\n许多程序的运行时间都只却决于其中的一小部分指令。\n\n##### 1.4.3.3 对增长数量级的猜想\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms01Foundation1.png)\n\n#### 1.4.4 增长数量级的分类\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms01Foundation2.png)\n\n- 常数级别：不依赖于N。\n- 对数级别：比常数时间稍慢，对数的底数和增长的数量级无关。\n- 线性级别：单个for循环，增长时线性的，和N成正比。\n- 线性对数级别：常见的是归并排序和快排。\n- 平方级别：两个嵌套的for循环。\n- 立方级别：三个嵌套的for循环。\n- 指数界别：不可能用于解决大规模的问题，但某些领域也很重要。\n\n#### 1.4.7 注意事项\n\n- 大常数：公式的系数如果很小就可以忽略，但是很大就不要忽略。\n- 非决定性的内循环：有些程序在内循环之外也有大量指令需要考虑。\n- 指令时间：每条指令所需的时间不同。\n- 系统因素：只是计算机争夺资源的众多应用程序之一。\n- 不分伯仲：有些程序员喜欢投入大量精力找出“最佳”实现，这类工作最好还是留给专家。\n\n---\n\n\n\n### 1.5 案例研究：union-find算法\n\n合并-查找，应用于连通性问题当中。\n\n#### union-find的实现\n\n```go\ntype UnionFind struct {\n\tid []int\n\tcount int\n}\n\nfunc NewUnionFind() *UnionFind {\n\treturn &UnionFind{\n\t\tid: nil,\n\t\tcount: 0,\n\t}\n}\n\nfunc (uf *UnionFind) Count() int {\n\treturn uf.count\n}\n\nfunc (uf *UnionFind) Connected(p, q int) bool {\n\treturn find(p) == find(q)\n}\n\nfunc (uf *UnionFind) find(p int) int {\n}\n\nfunc (uf *UnionFind) union(p, q int) {\n}\n```\n\n#### union方法和find方法的实现\n\n##### quick-find算法\n\n```go\nfunc (uf *UnionFind) QuickFindFind(p int) int {\n\treturn uf.id[p]\n}\n\n// 将p和q归并到相同的分量中\nfunc (uf *UnionFind) QuickFindUnion(p, q int) {\n\t// p和q的分量\n\tpID := uf.find(p)\n\tqID := uf.find(q)\n\t// 相同则返回\n\tif pID == qID {\n\t\treturn\n\t}\n\t// 将和p分量相同的变成q的分量\n\tfor i := 0; i < len(uf.id); i++ {\n\t\tif uf.id[i] == pID {\n\t\t\tuf.id[i] = qID\n\t\t}\n\t}\n\t// 分量减少一个\n\tuf.count--\n}\n```\n\nfind()的操作很快，但是quick-find算法无法处理大型问题，因为对于每一次union都需要扫描整个id切片。\n\n##### quick-union算法\n\n```go\nfunc (uf *UnionFind) QuickUnionFind(p int) int {\n\t// 找到根触点\n\tfor p != uf.id[p] {\n\t\tp = uf.id[p]\n\t}\n\treturn p\n}\n\nfunc (uf *UnionFind) QuickUnionUnion(p, q int) {\n\tpRoot := uf.QuickUnionFind(p)\n\tqRoot := uf.QuickUnionFind(q)\n\tif pRoot == qRoot {\n\t\treturn\n\t}\n    // 只需要修改根触点的指向就行\n\tuf.id[pRoot] = qRoot\n\tuf.count--\n}\n```\n\n\n\n##### 加权quick-union算法\n\n```go\ntype WeightedQuickUnionUF struct {\n\tid []int\n\tsize []int\n\tcount int\n}\n\nfunc (uf *WeightedQuickUnionUF) Count() int {\n\treturn uf.count\n}\n\nfunc (uf *WeightedQuickUnionUF) connected(p, q int) bool {\n\treturn uf.find(q) == uf.find(q)\n}\n\nfunc (uf *WeightedQuickUnionUF) find(p int) int {\n\tfor p != uf.id[p] {\n\t\tp = uf.id[p]\n\t}\n\treturn p\n}\n\nfunc (uf *WeightedQuickUnionUF) union(p, q int) {\n\tpRoot := uf.find(p)\n\tqRoot := uf.find(q)\n\tif pRoot == qRoot {\n\t\treturn\n\t}\n\tif uf.size[qRoot] < uf.size[pRoot] {\n\t\tuf.id[qRoot] = pRoot\n\t\tuf.size[pRoot] += uf.size[qRoot]\n\t} else {\n\t\tuf.id[pRoot] = qRoot\n\t\tuf.size[qRoot] += uf.size[pRoot]\n\t}\n\tuf.count--\n}\n```\n\n##### 性能特点\n\n| 算法                 | union()  | find()   |\n| -------------------- | -------- | -------- |\n| quick-find           | N        | 1        |\n| quick-union          | 树的高度 | 树的高度 |\n| weighted quick-union | log      | log      |\n\n\n\n\n\n\n\n---\n\n","slug":"algo-learn03Algorithms01Foundation","published":1,"updated":"2022-04-16T23:03:43.310Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70t9000i5oss9f5jey71","content":"<p>《算法》第1章：基础。</p>\n<p>基础编程模型，数据抽象，背包、队列和栈，算法分析，案例研究。</p>\n<span id=\"more\"></span>\n\n\n\n<hr>\n<p>算法是适合用计算机实现的解决问题的方法。和算法关系最密切的是数据结构，数据结构是便于算法操作的组织数据的方法。</p>\n<p>本章内容：</p>\n<ul>\n<li>基础编程模型：语法，语言特性，库；</li>\n<li>数据抽象：抽象数据类型，模块化编程；</li>\n<li>三种基础的抽象数据类型：背包、队列和栈；</li>\n<li>算法分析：性能；</li>\n<li>例子：union-find算法。</li>\n</ul>\n<hr>\n<h3 id=\"1-1-基础编程模型\"><a href=\"#1-1-基础编程模型\" class=\"headerlink\" title=\"1.1 基础编程模型\"></a>1.1 基础编程模型</h3><p>使用编程语言实现算法，出于以下原因：</p>\n<ul>\n<li>程序是对算法精确、优雅和完全的描述；</li>\n<li>通过运行程序学习算法的各种性质；</li>\n<li>直接使用这些算法。</li>\n</ul>\n<p>这样做的一个缺点是，使用特定语言，使分离算法的思想和实现细节变得困难。</p>\n<p>基础编程模型：描述和实现算法所用到的语言特性、软件库和操作系统特性的总称。</p>\n<h4 id=\"1-1-1-程序的基本结构\"><a href=\"#1-1-1-程序的基本结构\" class=\"headerlink\" title=\"1.1.1 程序的基本结构\"></a>1.1.1 程序的基本结构</h4><p>语法，是大多数现代语言共有的：</p>\n<ul>\n<li>原始数据类型：精确定义了整数、浮点数和布尔值，定义包括取值范围和操作。</li>\n<li>语句：六种语句，包括声明、赋值、条件、循环、调用和返回。</li>\n<li>数组、字符串。</li>\n<li>函数/方法。</li>\n<li>标准输入输出。</li>\n<li>数据抽象：数据抽象封装和重用，定义非原始数据类型，进而支持面向对象编程。</li>\n</ul>\n<h4 id=\"1-1-2-原始数据类型与表达式\"><a href=\"#1-1-2-原始数据类型与表达式\" class=\"headerlink\" title=\"1.1.2 原始数据类型与表达式\"></a>1.1.2 原始数据类型与表达式</h4><p>语言的基础知识：表达式、类型转换、比较和其他原始数据类型。</p>\n<h4 id=\"1-1-3-语句\"><a href=\"#1-1-3-语句\" class=\"headerlink\" title=\"1.1.3 语句\"></a>1.1.3 语句</h4><p>六种语句。</p>\n<h4 id=\"1-1-4-简便记法\"><a href=\"#1-1-4-简便记法\" class=\"headerlink\" title=\"1.1.4 简便记法\"></a>1.1.4 简便记法</h4><p>目的：追求清晰、优雅和高效的代码：</p>\n<ul>\n<li>声明并初始化。在golang中，使用符号:=。</li>\n<li>隐式赋值：i++，+=。</li>\n</ul>\n<h4 id=\"1-1-5-数组-切片\"><a href=\"#1-1-5-数组-切片\" class=\"headerlink\" title=\"1.1.5 数组/切片\"></a>1.1.5 数组/切片</h4><p>顺序存储同类型的多个数据。</p>\n<ul>\n<li>创建并初始化：注意初始值。</li>\n<li>注意指针和引用。</li>\n<li>二维数组</li>\n</ul>\n<h4 id=\"1-1-6-方法-函数\"><a href=\"#1-1-6-方法-函数\" class=\"headerlink\" title=\"1.1.6 方法/函数\"></a>1.1.6 方法/函数</h4><p>外部库使用import导入。</p>\n<h4 id=\"1-1-7-API\"><a href=\"#1-1-7-API\" class=\"headerlink\" title=\"1.1.7 API\"></a>1.1.7 API</h4><p>模块化编程的一个重要的组成部分就是记录库方法的用法并提供其他人参考的文档。统一使用应用程序编程接口。</p>\n<h4 id=\"1-1-8-字符串\"><a href=\"#1-1-8-字符串\" class=\"headerlink\" title=\"1.1.8 字符串\"></a>1.1.8 字符串</h4><p>字符串拼接+，类型转换strconv。</p>\n<p>自动转换：+的一边是字符串，会自动将其他转换成字符串。</p>\n<h4 id=\"1-1-9-输入输出\"><a href=\"#1-1-9-输入输出\" class=\"headerlink\" title=\"1.1.9 输入输出\"></a>1.1.9 输入输出</h4><p>标准输入输出：fmt。</p>\n<h4 id=\"1-1-10-二分查找\"><a href=\"#1-1-10-二分查找\" class=\"headerlink\" title=\"1.1.10 二分查找\"></a>1.1.10 二分查找</h4><h4 id=\"1-1-11-展望\"><a href=\"#1-1-11-展望\" class=\"headerlink\" title=\"1.1.11 展望\"></a>1.1.11 展望</h4><p>数据抽象，有时也被称为面向对象编程。使用数据抽象的理由：</p>\n<ul>\n<li>允许通过模块化编程复用代码。</li>\n<li>轻易构造更多链式数据结构，它们比数组更灵活，是高效算法的基础。</li>\n<li>准确定义算法问题。</li>\n</ul>\n<hr>\n<h3 id=\"1-2-数据抽象\"><a href=\"#1-2-数据抽象\" class=\"headerlink\" title=\"1.2 数据抽象\"></a>1.2 数据抽象</h3><p>数据类型：一组值和一组对这些值的操作的集合。</p>\n<p>数据抽象：定义和使用数据类型的过程。</p>\n<p>抽象数据类型：封装后的数据类型。</p>\n<h4 id=\"1-2-1-使用抽象数据类型\"><a href=\"#1-2-1-使用抽象数据类型\" class=\"headerlink\" title=\"1.2.1 使用抽象数据类型\"></a>1.2.1 使用抽象数据类型</h4><p>要使用一种数据类型并不一定非得知道它是怎么实现的。</p>\n<h4 id=\"1-2-2-抽象数据类型举例\"><a href=\"#1-2-2-抽象数据类型举例\" class=\"headerlink\" title=\"1.2.2 抽象数据类型举例\"></a>1.2.2 抽象数据类型举例</h4><p>各类库。</p>\n<h4 id=\"1-2-3-抽象数据类型的实现\"><a href=\"#1-2-3-抽象数据类型的实现\" class=\"headerlink\" title=\"1.2.3 抽象数据类型的实现\"></a>1.2.3 抽象数据类型的实现</h4><ul>\n<li>实例变量：类的实例。</li>\n<li>构造函数：跟类同名的函数。</li>\n<li>实例方法。</li>\n<li>作用域：参数变量，局部变量，实例变量。</li>\n</ul>\n<h4 id=\"1-2-4-更多抽象数据类型的实现\"><a href=\"#1-2-4-更多抽象数据类型的实现\" class=\"headerlink\" title=\"1.2.4 更多抽象数据类型的实现\"></a>1.2.4 更多抽象数据类型的实现</h4><p>第三方库。</p>\n<h4 id=\"1-2-5-数据类型的设计\"><a href=\"#1-2-5-数据类型的设计\" class=\"headerlink\" title=\"1.2.5 数据类型的设计\"></a>1.2.5 数据类型的设计</h4><p>抽象数据类型是一种向用例隐藏内部表示的数据类型。这种思想强有力地影响了现代编程。</p>\n<ul>\n<li>封装：并不需要知道怎么实现的。</li>\n<li>设计API：构建现代软件最重要也是最有挑战的一项任务就是设计API。</li>\n<li>算法与抽象数据类型。</li>\n<li>接口继承。</li>\n<li>实现继承。</li>\n<li>等价性。</li>\n<li>内存管理。</li>\n<li>不可变性。</li>\n<li>异常处理。</li>\n<li>断言。</li>\n</ul>\n<hr>\n<h3 id=\"1-3-背包、队列和栈\"><a href=\"#1-3-背包、队列和栈\" class=\"headerlink\" title=\"1.3 背包、队列和栈\"></a>1.3 背包、队列和栈</h3><p>许多基础数据类型都和对象的集合有关，所有的操作都是对对象的增删改查。</p>\n<p>三种数据类型：背包(Bag)、队列(Queue)、栈(Stack)，它们不同之处就是删除或者访问对象的顺序不同。</p>\n<p>本节目标：</p>\n<ul>\n<li>说明对集合的表示方法，直接影响到各种操作的效率，要设计适用于对象的数据结构并高效地实现所需要的方法。</li>\n<li>介绍泛型和迭代，Java概念。</li>\n<li>说明链式数据结构的重要性，特别是经典的链表，有了它才能高效实现上述三种数据结构。</li>\n</ul>\n<h4 id=\"1-3-1-API\"><a href=\"#1-3-1-API\" class=\"headerlink\" title=\"1.3.1 API\"></a>1.3.1 API</h4><table>\n<thead>\n<tr>\n<th>Bag</th>\n<th>Queue</th>\n<th>Stack</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>NewBag()<br />go语言没有构造函数，所以使用该方法。</td>\n<td>NewQueue()</td>\n<td>NewStack()</td>\n</tr>\n<tr>\n<td>add(item)</td>\n<td>enQueue(item)</td>\n<td>push(item)</td>\n</tr>\n<tr>\n<td></td>\n<td>deQueue()</td>\n<td>pop()</td>\n</tr>\n<tr>\n<td>isEmpty()</td>\n<td>isEmpty()</td>\n<td>isEmpty()</td>\n</tr>\n<tr>\n<td>size()</td>\n<td>size()</td>\n<td>size()</td>\n</tr>\n</tbody></table>\n<h5 id=\"1-3-1-1-泛型\"><a href=\"#1-3-1-1-泛型\" class=\"headerlink\" title=\"1.3.1.1 泛型\"></a>1.3.1.1 泛型</h5><p>只需要一份API就能处理所有类型的数据。</p>\n<p>go1.18开始支持泛型。</p>\n<h5 id=\"1-3-1-2-自动装箱\"><a href=\"#1-3-1-2-自动装箱\" class=\"headerlink\" title=\"1.3.1.2 自动装箱\"></a>1.3.1.2 自动装箱</h5><p>自动将一个原始数据类型转换为一个封装类型被称为自动装箱。例如，int -&gt; Interger。</p>\n<p>自动拆箱。</p>\n<h5 id=\"1-3-1-3-可迭代的集合类型\"><a href=\"#1-3-1-3-可迭代的集合类型\" class=\"headerlink\" title=\"1.3.1.3 可迭代的集合类型\"></a>1.3.1.3 可迭代的集合类型</h5><p>处理集合中的每一个元素，或者叫做迭代访问集合中的所有元素。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">切片：</span><br><span class=\"line\"><span class=\"keyword\">for</span> index, value := <span class=\"keyword\">range</span> slice &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">字典：</span><br><span class=\"line\"><span class=\"keyword\">for</span> key, value := <span class=\"keyword\">range</span> <span class=\"keyword\">map</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-1-4-背包\"><a href=\"#1-3-1-4-背包\" class=\"headerlink\" title=\"1.3.1.4 背包\"></a>1.3.1.4 背包</h5><ul>\n<li>不支持删除元素的集合数据类型。</li>\n<li>目的：帮助收集元素并迭代遍历所有元素。迭代的顺序不确定且与用例无关。</li>\n<li>也可以使用队列和栈，只用背包说明处理顺序不重要。</li>\n</ul>\n<h5 id=\"1-3-1-5-队列\"><a href=\"#1-3-1-5-队列\" class=\"headerlink\" title=\"1.3.1.5 队列\"></a>1.3.1.5 队列</h5><ul>\n<li>先进先出。</li>\n<li>可以使用数组实现，循环的指针。可以使用链表实现。</li>\n</ul>\n<h5 id=\"1-3-1-6-栈\"><a href=\"#1-3-1-6-栈\" class=\"headerlink\" title=\"1.3.1.6 栈\"></a>1.3.1.6 栈</h5><p>下压栈，简称栈。</p>\n<h5 id=\"1-3-1-7-算术表达式\"><a href=\"#1-3-1-7-算术表达式\" class=\"headerlink\" title=\"1.3.1.7 算术表达式\"></a>1.3.1.7 算术表达式</h5><p>如何按照正确的顺序处理算术表达式。20世纪60年代，Dijkstra发明了一个非常简单的算法，使用两个栈，一个保存运算符，一个保存操作数。</p>\n<ul>\n<li>将操作数压入操作数栈。</li>\n<li>将运算符压入运算符栈。</li>\n<li>忽略左括号。</li>\n<li>遇到右括号，弹出一个运算符，弹出所需数量的操作数，并将运算结果压入操作数栈。</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Dijkstra的双栈算术表达式求值算法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Evaluate</span><span class=\"params\">(exp <span class=\"type\">string</span>)</span></span> <span class=\"type\">float64</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 双栈</span></span><br><span class=\"line\">\tops := list.New()</span><br><span class=\"line\">\tvals := list.New()</span><br><span class=\"line\">\t<span class=\"comment\">// 处理数字</span></span><br><span class=\"line\">\tval := <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">len</span>(exp); i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 不处理空格和(</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> exp[i] == <span class=\"string\">&#x27; &#x27;</span> || exp[i] == <span class=\"string\">&#x27;(&#x27;</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 如果是数字，则拼接</span></span><br><span class=\"line\">\t\tval += <span class=\"type\">string</span>(exp[i])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i+<span class=\"number\">1</span> &lt; <span class=\"built_in\">len</span>(exp) &amp;&amp; isNum(exp[i]) &amp;&amp; isNum(exp[i+<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 算术表达式处理</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 数字的处理</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"built_in\">len</span>(val) &gt; <span class=\"number\">1</span> || (exp[i] &gt;= <span class=\"string\">&#x27;0&#x27;</span> &amp;&amp; exp[i] &lt;= <span class=\"string\">&#x27;9&#x27;</span>):</span><br><span class=\"line\">\t\t\tv, _ := strconv.ParseFloat(val, <span class=\"number\">64</span>)</span><br><span class=\"line\">\t\t\tvals.PushBack(v)</span><br><span class=\"line\">\t\t<span class=\"comment\">// 运算符的处理</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> exp[i] == <span class=\"string\">&#x27;+&#x27;</span> || exp[i] == <span class=\"string\">&#x27;-&#x27;</span> || exp[i] == <span class=\"string\">&#x27;*&#x27;</span> || exp[i] == <span class=\"string\">&#x27;/&#x27;</span>:</span><br><span class=\"line\">\t\t\tops.PushBack(exp[i])</span><br><span class=\"line\">\t\t<span class=\"comment\">// 遇到反括号，进行一次运算</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> exp[i] == <span class=\"string\">&#x27;)&#x27;</span>:</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 运算符出栈</span></span><br><span class=\"line\">\t\t\tcurOp := ops.Remove(ops.Back()).(<span class=\"type\">uint8</span>)</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 操作数出栈</span></span><br><span class=\"line\">\t\t\tcurVal2 := vals.Remove(vals.Back()).(<span class=\"type\">float64</span>)</span><br><span class=\"line\">\t\t\tcurVal1 := vals.Remove(vals.Back()).(<span class=\"type\">float64</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">switch</span> curOp &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;+&#x27;</span>: vals.PushBack(curVal1 + curVal2)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;-&#x27;</span>: vals.PushBack(curVal1 - curVal2)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;*&#x27;</span>: vals.PushBack(curVal1 * curVal2)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;/&#x27;</span>: vals.PushBack(curVal1 / curVal2)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tval = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> vals.Front().Value.(<span class=\"type\">float64</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 判断是不是数字</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">isNum</span><span class=\"params\">(val <span class=\"type\">uint8</span>)</span></span> <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> val &gt;= <span class=\"string\">&#x27;0&#x27;</span> &amp;&amp; val &lt;= <span class=\"string\">&#x27;9&#x27;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 可能是浮点数</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> val == <span class=\"string\">&#x27;.&#x27;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-2-集合类数据类型的实现\"><a href=\"#1-3-2-集合类数据类型的实现\" class=\"headerlink\" title=\"1.3.2 集合类数据类型的实现\"></a>1.3.2 集合类数据类型的实现</h4><p>在讨论Bag、Stack和Queue的实现之前，先给出一个简单而经典的实现，它的改进就得到我们所要的结果。</p>\n<h5 id=\"1-3-2-1-定容栈\"><a href=\"#1-3-2-1-定容栈\" class=\"headerlink\" title=\"1.3.2.1 定容栈\"></a>1.3.2.1 定容栈</h5><p>表示容量固定的字符串栈，只处理string，需要指定一个容量且不支持迭代。</p>\n<table>\n<thead>\n<tr>\n<th>FixedCapStackOfStrings</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>newFixedCapStackOfStrings(cap int)</td>\n<td>创建一个容量为cap的空栈</td>\n</tr>\n<tr>\n<td>push(item)</td>\n<td>添加一个字符串</td>\n</tr>\n<tr>\n<td>pop()</td>\n<td>删除最近添加的字符串</td>\n</tr>\n<tr>\n<td>isEmpty()</td>\n<td>栈是否为空</td>\n</tr>\n<tr>\n<td>size()</td>\n<td>字符串数量</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> FixedCapStackOfStrings <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tStrs []<span class=\"type\">string</span></span><br><span class=\"line\">\tN <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewFixedCapStackOfStrings</span><span class=\"params\">(capacity <span class=\"type\">int</span>)</span></span> *FixedCapStackOfStrings &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;FixedCapStackOfStrings&#123;</span><br><span class=\"line\">\t\tN: capacity,</span><br><span class=\"line\">\t\tStrs: <span class=\"built_in\">make</span>([]<span class=\"type\">string</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStackOfStrings)</span></span> IsEmpty() <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">len</span>(s.Strs) == <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStackOfStrings)</span></span> Size() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">len</span>(s.Strs)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStackOfStrings)</span></span> Push(item <span class=\"type\">string</span>) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> s.Size() &gt;= s.N &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts.Strs = <span class=\"built_in\">append</span>(s.Strs, item)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStackOfStrings)</span></span> Pop() <span class=\"type\">string</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> s.Size() == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tres := s.Strs[s.Size()<span class=\"number\">-1</span>]</span><br><span class=\"line\">\ts.Strs = s.Strs[:s.Size()<span class=\"number\">-1</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-2-2-泛型（这里用interface-）\"><a href=\"#1-3-2-2-泛型（这里用interface-）\" class=\"headerlink\" title=\"1.3.2.2 泛型（这里用interface{}）\"></a>1.3.2.2 泛型（这里用interface{}）</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> FixedCapStack <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tdata []<span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">\tcapa <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewFixedCapStack</span><span class=\"params\">(capacity <span class=\"type\">int</span>)</span></span> *FixedCapStack &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;FixedCapStack&#123;</span><br><span class=\"line\">\t\tcapa: capacity,</span><br><span class=\"line\">\t\tdata: <span class=\"built_in\">make</span>([]<span class=\"keyword\">interface</span>&#123;&#125;, <span class=\"number\">0</span>),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStack)</span></span> IsEmpty() <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">len</span>(s.data) == <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStack)</span></span> Size() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">len</span>(s.data)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStack)</span></span> Push(d <span class=\"keyword\">interface</span>&#123;&#125;) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(s.data) &gt;= s.capa &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts.data = <span class=\"built_in\">append</span>(s.data, d)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStack)</span></span> Pop() <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> s.Size() == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tres := s.data[s.Size()<span class=\"number\">-1</span>]</span><br><span class=\"line\">\ts.data = s.data[:s.Size()<span class=\"number\">-1</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-2-3-调整数组大小\"><a href=\"#1-3-2-3-调整数组大小\" class=\"headerlink\" title=\"1.3.2.3 调整数组大小\"></a>1.3.2.3 调整数组大小</h5><p>使用一个resize方法。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStack)</span></span> Resize(size <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\ts.capa *= <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-2-4-对象游离\"><a href=\"#1-3-2-4-对象游离\" class=\"headerlink\" title=\"1.3.2.4 对象游离\"></a>1.3.2.4 对象游离</h5><p>在Java中，被弹出的元素的引用还在数组中，这个元素已经不会再被访问，但Java垃圾收集器没办法知道这一点，除非引用被覆盖。</p>\n<p>解决办法：弹出时设为null。</p>\n<h4 id=\"1-3-3-链表\"><a href=\"#1-3-3-链表\" class=\"headerlink\" title=\"1.3.3 链表\"></a>1.3.3 链表</h4><p>链表是一种递归的数据结构，它或者为空，或者指向下一个节点的引用。</p>\n<h5 id=\"1-3-3-1-结点记录\"><a href=\"#1-3-3-1-结点记录\" class=\"headerlink\" title=\"1.3.3.1 结点记录\"></a>1.3.3.1 结点记录</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Node <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">    Data <span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">    Next *Node</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-2-构造链表\"><a href=\"#1-3-3-2-构造链表\" class=\"headerlink\" title=\"1.3.3.2 构造链表\"></a>1.3.3.2 构造链表</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NodeName := <span class=\"built_in\">new</span>(Node)</span><br><span class=\"line\">NodeName.data = <span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">NodeName.Next = .......</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-3-表头插入结点\"><a href=\"#1-3-3-3-表头插入结点\" class=\"headerlink\" title=\"1.3.3.3 表头插入结点\"></a>1.3.3.3 表头插入结点</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NewNode := <span class=\"built_in\">new</span>(Node)</span><br><span class=\"line\">NewNode.Next = first</span><br><span class=\"line\">first = NewNode</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-4-从表头删除结点\"><a href=\"#1-3-3-4-从表头删除结点\" class=\"headerlink\" title=\"1.3.3.4 从表头删除结点\"></a>1.3.3.4 从表头删除结点</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">first = first.Next</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-5-从表尾插入结点\"><a href=\"#1-3-3-5-从表尾插入结点\" class=\"headerlink\" title=\"1.3.3.5 从表尾插入结点\"></a>1.3.3.5 从表尾插入结点</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Last := <span class=\"built_in\">new</span>(Node)</span><br><span class=\"line\">OldLast.Next = Last</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-6-其他位置的插入和删除操作\"><a href=\"#1-3-3-6-其他位置的插入和删除操作\" class=\"headerlink\" title=\"1.3.3.6 其他位置的插入和删除操作\"></a>1.3.3.6 其他位置的插入和删除操作</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">先遍历，找到位置进行插入和删除操作。</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-7-遍历操作\"><a href=\"#1-3-3-7-遍历操作\" class=\"headerlink\" title=\"1.3.3.7 遍历操作\"></a>1.3.3.7 遍历操作</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> p := first; p ! = <span class=\"literal\">nil</span>; p = p.Next &#123;</span><br><span class=\"line\">    do something</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-8-栈的实现\"><a href=\"#1-3-3-8-栈的实现\" class=\"headerlink\" title=\"1.3.3.8 栈的实现\"></a>1.3.3.8 栈的实现</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Node <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tdata <span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">\tnext *Node</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> ListStack <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tfirst *Node</span><br><span class=\"line\">\tlength <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListStack)</span></span> IsEmpty() <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> l.length == <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListStack)</span></span> Size() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> l.length</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListStack)</span></span> Push(elem <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\tnode := <span class=\"built_in\">new</span>(Node)</span><br><span class=\"line\">\tnode.data = elem</span><br><span class=\"line\">\tnode.next = l.first</span><br><span class=\"line\">\tl.first = node</span><br><span class=\"line\">\tl.length++</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListStack)</span></span> Pop() <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\tret := l.first</span><br><span class=\"line\">\tl.first = l.first.next</span><br><span class=\"line\">\tl.length--</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret.data</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-9-队列的实现\"><a href=\"#1-3-3-9-队列的实现\" class=\"headerlink\" title=\"1.3.3.9 队列的实现\"></a>1.3.3.9 队列的实现</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> ListQueue <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tfirst *Node</span><br><span class=\"line\">\tlast *Node</span><br><span class=\"line\">\tlength <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListQueue)</span></span> IsEmpty() <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> l.length == <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListQueue)</span></span> Size() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> l.length</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListQueue)</span></span> Enqueue(item <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\tnode := <span class=\"built_in\">new</span>(Node)</span><br><span class=\"line\">\tnode.data = item</span><br><span class=\"line\">\tnode.next = <span class=\"literal\">nil</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> l.length == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\tl.first = node</span><br><span class=\"line\">\t\tl.last = node</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tl.last.next = node</span><br><span class=\"line\">\t\tl.last = node</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tl.length++</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListQueue)</span></span> Dequeue() <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> l.IsEmpty() &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tret := l.first.data</span><br><span class=\"line\">\tl.first = l.first.next</span><br><span class=\"line\">\tl.length--</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> l.IsEmpty() &#123;</span><br><span class=\"line\">\t\tl.last = <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-10-背包的实现\"><a href=\"#1-3-3-10-背包的实现\" class=\"headerlink\" title=\"1.3.3.10 背包的实现\"></a>1.3.3.10 背包的实现</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> ListBag <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tfirst *Node</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListBag)</span></span> Add(item <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\tnode := <span class=\"built_in\">new</span>(Node)</span><br><span class=\"line\">\tnode.data = item</span><br><span class=\"line\">\tnode.next = l.first</span><br><span class=\"line\">\tl.first = node</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 迭代，返回一个切片</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListBag)</span></span> Iterator() []<span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\tret := <span class=\"built_in\">make</span>([]<span class=\"keyword\">interface</span>&#123;&#125;, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> node := l.first; node != <span class=\"literal\">nil</span>; node = node.next &#123;</span><br><span class=\"line\">\t\tret = <span class=\"built_in\">append</span>(ret, node.data)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"1-3-4-综述\"><a href=\"#1-3-4-综述\" class=\"headerlink\" title=\"1.3.4 综述\"></a>1.3.4 综述</h4><ul>\n<li>数组<ul>\n<li>优点：通过索引直接访问任意元素。</li>\n<li>缺点：初始化需要知道元素的数量，但在go可以使用切片。</li>\n</ul>\n</li>\n<li>链表<ul>\n<li>使用空间大小和元素数量成正比。</li>\n<li>需要通过遍历访问元素。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"1-4-算法分析\"><a href=\"#1-4-算法分析\" class=\"headerlink\" title=\"1.4 算法分析\"></a>1.4 算法分析</h3><h4 id=\"1-4-1-科学方法\"><a href=\"#1-4-1-科学方法\" class=\"headerlink\" title=\"1.4.1 科学方法\"></a>1.4.1 科学方法</h4><p>爱因斯坦：“再多的实验也不一定能够证明我是对的，但只需要一个实验就能证明我是错的。”</p>\n<p>我们永远也没法知道某个假设是否绝对正确，我们只能验证它和我们的观察的一致性。</p>\n<h4 id=\"1-4-2-观察\"><a href=\"#1-4-2-观察\" class=\"headerlink\" title=\"1.4.2 观察\"></a>1.4.2 观察</h4><p>计算性任务的困难程度可以用问题的规模来衡量。使用不同的规模来观察计算性任务的变化。</p>\n<h4 id=\"1-4-3-数学模型\"><a href=\"#1-4-3-数学模型\" class=\"headerlink\" title=\"1.4.3 数学模型\"></a>1.4.3 数学模型</h4><p>尽管很多复杂因素影响运行时间，原则上我们仍然可能构造出一个数学模型来描述任意程序的运行时间。Knuth认为，一个程序运行的总时间主要和两点有关：</p>\n<ul>\n<li>执行每条语句的耗时；</li>\n<li>执行每条语句的频率。</li>\n</ul>\n<p>前者取决于计算机、编译器和操作系统，后者取决于程序本身和输入。</p>\n<h5 id=\"1-4-3-1-近似\"><a href=\"#1-4-3-1-近似\" class=\"headerlink\" title=\"1.4.3.1 近似\"></a>1.4.3.1 近似</h5><p>首项之后的其他项相对较小，使用约等于号(~)来忽略较小的项。</p>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>近似</th>\n<th>增长数量级</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>N^3 / 6 + N^2 / 2 + N / 3</td>\n<td>~N^3 / 6</td>\n<td>N^3</td>\n</tr>\n<tr>\n<td>lg N + 1</td>\n<td>~lg N</td>\n<td>lg N</td>\n</tr>\n<tr>\n<td>3</td>\n<td>~3</td>\n<td>1</td>\n</tr>\n</tbody></table>\n<h5 id=\"1-4-3-2-近似运行时间\"><a href=\"#1-4-3-2-近似运行时间\" class=\"headerlink\" title=\"1.4.3.2 近似运行时间\"></a>1.4.3.2 近似运行时间</h5><p>许多程序的运行时间都只却决于其中的一小部分指令。</p>\n<h5 id=\"1-4-3-3-对增长数量级的猜想\"><a href=\"#1-4-3-3-对增长数量级的猜想\" class=\"headerlink\" title=\"1.4.3.3 对增长数量级的猜想\"></a>1.4.3.3 对增长数量级的猜想</h5><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms01Foundation1.png\"></p>\n<h4 id=\"1-4-4-增长数量级的分类\"><a href=\"#1-4-4-增长数量级的分类\" class=\"headerlink\" title=\"1.4.4 增长数量级的分类\"></a>1.4.4 增长数量级的分类</h4><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms01Foundation2.png\"></p>\n<ul>\n<li>常数级别：不依赖于N。</li>\n<li>对数级别：比常数时间稍慢，对数的底数和增长的数量级无关。</li>\n<li>线性级别：单个for循环，增长时线性的，和N成正比。</li>\n<li>线性对数级别：常见的是归并排序和快排。</li>\n<li>平方级别：两个嵌套的for循环。</li>\n<li>立方级别：三个嵌套的for循环。</li>\n<li>指数界别：不可能用于解决大规模的问题，但某些领域也很重要。</li>\n</ul>\n<h4 id=\"1-4-7-注意事项\"><a href=\"#1-4-7-注意事项\" class=\"headerlink\" title=\"1.4.7 注意事项\"></a>1.4.7 注意事项</h4><ul>\n<li>大常数：公式的系数如果很小就可以忽略，但是很大就不要忽略。</li>\n<li>非决定性的内循环：有些程序在内循环之外也有大量指令需要考虑。</li>\n<li>指令时间：每条指令所需的时间不同。</li>\n<li>系统因素：只是计算机争夺资源的众多应用程序之一。</li>\n<li>不分伯仲：有些程序员喜欢投入大量精力找出“最佳”实现，这类工作最好还是留给专家。</li>\n</ul>\n<hr>\n<h3 id=\"1-5-案例研究：union-find算法\"><a href=\"#1-5-案例研究：union-find算法\" class=\"headerlink\" title=\"1.5 案例研究：union-find算法\"></a>1.5 案例研究：union-find算法</h3><p>合并-查找，应用于连通性问题当中。</p>\n<h4 id=\"union-find的实现\"><a href=\"#union-find的实现\" class=\"headerlink\" title=\"union-find的实现\"></a>union-find的实现</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> UnionFind <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tid []<span class=\"type\">int</span></span><br><span class=\"line\">\tcount <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewUnionFind</span><span class=\"params\">()</span></span> *UnionFind &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;UnionFind&#123;</span><br><span class=\"line\">\t\tid: <span class=\"literal\">nil</span>,</span><br><span class=\"line\">\t\tcount: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *UnionFind)</span></span> Count() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> uf.count</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *UnionFind)</span></span> Connected(p, q <span class=\"type\">int</span>) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> find(p) == find(q)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *UnionFind)</span></span> find(p <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *UnionFind)</span></span> union(p, q <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"union方法和find方法的实现\"><a href=\"#union方法和find方法的实现\" class=\"headerlink\" title=\"union方法和find方法的实现\"></a>union方法和find方法的实现</h4><h5 id=\"quick-find算法\"><a href=\"#quick-find算法\" class=\"headerlink\" title=\"quick-find算法\"></a>quick-find算法</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *UnionFind)</span></span> QuickFindFind(p <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> uf.id[p]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将p和q归并到相同的分量中</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *UnionFind)</span></span> QuickFindUnion(p, q <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// p和q的分量</span></span><br><span class=\"line\">\tpID := uf.find(p)</span><br><span class=\"line\">\tqID := uf.find(q)</span><br><span class=\"line\">\t<span class=\"comment\">// 相同则返回</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> pID == qID &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 将和p分量相同的变成q的分量</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">len</span>(uf.id); i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> uf.id[i] == pID &#123;</span><br><span class=\"line\">\t\t\tuf.id[i] = qID</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 分量减少一个</span></span><br><span class=\"line\">\tuf.count--</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>find()的操作很快，但是quick-find算法无法处理大型问题，因为对于每一次union都需要扫描整个id切片。</p>\n<h5 id=\"quick-union算法\"><a href=\"#quick-union算法\" class=\"headerlink\" title=\"quick-union算法\"></a>quick-union算法</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *UnionFind)</span></span> QuickUnionFind(p <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 找到根触点</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> p != uf.id[p] &#123;</span><br><span class=\"line\">\t\tp = uf.id[p]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> p</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *UnionFind)</span></span> QuickUnionUnion(p, q <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tpRoot := uf.QuickUnionFind(p)</span><br><span class=\"line\">\tqRoot := uf.QuickUnionFind(q)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> pRoot == qRoot &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 只需要修改根触点的指向就行</span></span><br><span class=\"line\">\tuf.id[pRoot] = qRoot</span><br><span class=\"line\">\tuf.count--</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"加权quick-union算法\"><a href=\"#加权quick-union算法\" class=\"headerlink\" title=\"加权quick-union算法\"></a>加权quick-union算法</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> WeightedQuickUnionUF <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tid []<span class=\"type\">int</span></span><br><span class=\"line\">\tsize []<span class=\"type\">int</span></span><br><span class=\"line\">\tcount <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *WeightedQuickUnionUF)</span></span> Count() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> uf.count</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *WeightedQuickUnionUF)</span></span> connected(p, q <span class=\"type\">int</span>) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> uf.find(q) == uf.find(q)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *WeightedQuickUnionUF)</span></span> find(p <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> p != uf.id[p] &#123;</span><br><span class=\"line\">\t\tp = uf.id[p]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> p</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *WeightedQuickUnionUF)</span></span> union(p, q <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tpRoot := uf.find(p)</span><br><span class=\"line\">\tqRoot := uf.find(q)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> pRoot == qRoot &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> uf.size[qRoot] &lt; uf.size[pRoot] &#123;</span><br><span class=\"line\">\t\tuf.id[qRoot] = pRoot</span><br><span class=\"line\">\t\tuf.size[pRoot] += uf.size[qRoot]</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tuf.id[pRoot] = qRoot</span><br><span class=\"line\">\t\tuf.size[qRoot] += uf.size[pRoot]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tuf.count--</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"性能特点\"><a href=\"#性能特点\" class=\"headerlink\" title=\"性能特点\"></a>性能特点</h5><table>\n<thead>\n<tr>\n<th>算法</th>\n<th>union()</th>\n<th>find()</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>quick-find</td>\n<td>N</td>\n<td>1</td>\n</tr>\n<tr>\n<td>quick-union</td>\n<td>树的高度</td>\n<td>树的高度</td>\n</tr>\n<tr>\n<td>weighted quick-union</td>\n<td>log</td>\n<td>log</td>\n</tr>\n</tbody></table>\n<hr>\n","site":{"data":{}},"excerpt":"<p>《算法》第1章：基础。</p>\n<p>基础编程模型，数据抽象，背包、队列和栈，算法分析，案例研究。</p>","more":"<hr>\n<p>算法是适合用计算机实现的解决问题的方法。和算法关系最密切的是数据结构，数据结构是便于算法操作的组织数据的方法。</p>\n<p>本章内容：</p>\n<ul>\n<li>基础编程模型：语法，语言特性，库；</li>\n<li>数据抽象：抽象数据类型，模块化编程；</li>\n<li>三种基础的抽象数据类型：背包、队列和栈；</li>\n<li>算法分析：性能；</li>\n<li>例子：union-find算法。</li>\n</ul>\n<hr>\n<h3 id=\"1-1-基础编程模型\"><a href=\"#1-1-基础编程模型\" class=\"headerlink\" title=\"1.1 基础编程模型\"></a>1.1 基础编程模型</h3><p>使用编程语言实现算法，出于以下原因：</p>\n<ul>\n<li>程序是对算法精确、优雅和完全的描述；</li>\n<li>通过运行程序学习算法的各种性质；</li>\n<li>直接使用这些算法。</li>\n</ul>\n<p>这样做的一个缺点是，使用特定语言，使分离算法的思想和实现细节变得困难。</p>\n<p>基础编程模型：描述和实现算法所用到的语言特性、软件库和操作系统特性的总称。</p>\n<h4 id=\"1-1-1-程序的基本结构\"><a href=\"#1-1-1-程序的基本结构\" class=\"headerlink\" title=\"1.1.1 程序的基本结构\"></a>1.1.1 程序的基本结构</h4><p>语法，是大多数现代语言共有的：</p>\n<ul>\n<li>原始数据类型：精确定义了整数、浮点数和布尔值，定义包括取值范围和操作。</li>\n<li>语句：六种语句，包括声明、赋值、条件、循环、调用和返回。</li>\n<li>数组、字符串。</li>\n<li>函数/方法。</li>\n<li>标准输入输出。</li>\n<li>数据抽象：数据抽象封装和重用，定义非原始数据类型，进而支持面向对象编程。</li>\n</ul>\n<h4 id=\"1-1-2-原始数据类型与表达式\"><a href=\"#1-1-2-原始数据类型与表达式\" class=\"headerlink\" title=\"1.1.2 原始数据类型与表达式\"></a>1.1.2 原始数据类型与表达式</h4><p>语言的基础知识：表达式、类型转换、比较和其他原始数据类型。</p>\n<h4 id=\"1-1-3-语句\"><a href=\"#1-1-3-语句\" class=\"headerlink\" title=\"1.1.3 语句\"></a>1.1.3 语句</h4><p>六种语句。</p>\n<h4 id=\"1-1-4-简便记法\"><a href=\"#1-1-4-简便记法\" class=\"headerlink\" title=\"1.1.4 简便记法\"></a>1.1.4 简便记法</h4><p>目的：追求清晰、优雅和高效的代码：</p>\n<ul>\n<li>声明并初始化。在golang中，使用符号:=。</li>\n<li>隐式赋值：i++，+=。</li>\n</ul>\n<h4 id=\"1-1-5-数组-切片\"><a href=\"#1-1-5-数组-切片\" class=\"headerlink\" title=\"1.1.5 数组/切片\"></a>1.1.5 数组/切片</h4><p>顺序存储同类型的多个数据。</p>\n<ul>\n<li>创建并初始化：注意初始值。</li>\n<li>注意指针和引用。</li>\n<li>二维数组</li>\n</ul>\n<h4 id=\"1-1-6-方法-函数\"><a href=\"#1-1-6-方法-函数\" class=\"headerlink\" title=\"1.1.6 方法/函数\"></a>1.1.6 方法/函数</h4><p>外部库使用import导入。</p>\n<h4 id=\"1-1-7-API\"><a href=\"#1-1-7-API\" class=\"headerlink\" title=\"1.1.7 API\"></a>1.1.7 API</h4><p>模块化编程的一个重要的组成部分就是记录库方法的用法并提供其他人参考的文档。统一使用应用程序编程接口。</p>\n<h4 id=\"1-1-8-字符串\"><a href=\"#1-1-8-字符串\" class=\"headerlink\" title=\"1.1.8 字符串\"></a>1.1.8 字符串</h4><p>字符串拼接+，类型转换strconv。</p>\n<p>自动转换：+的一边是字符串，会自动将其他转换成字符串。</p>\n<h4 id=\"1-1-9-输入输出\"><a href=\"#1-1-9-输入输出\" class=\"headerlink\" title=\"1.1.9 输入输出\"></a>1.1.9 输入输出</h4><p>标准输入输出：fmt。</p>\n<h4 id=\"1-1-10-二分查找\"><a href=\"#1-1-10-二分查找\" class=\"headerlink\" title=\"1.1.10 二分查找\"></a>1.1.10 二分查找</h4><h4 id=\"1-1-11-展望\"><a href=\"#1-1-11-展望\" class=\"headerlink\" title=\"1.1.11 展望\"></a>1.1.11 展望</h4><p>数据抽象，有时也被称为面向对象编程。使用数据抽象的理由：</p>\n<ul>\n<li>允许通过模块化编程复用代码。</li>\n<li>轻易构造更多链式数据结构，它们比数组更灵活，是高效算法的基础。</li>\n<li>准确定义算法问题。</li>\n</ul>\n<hr>\n<h3 id=\"1-2-数据抽象\"><a href=\"#1-2-数据抽象\" class=\"headerlink\" title=\"1.2 数据抽象\"></a>1.2 数据抽象</h3><p>数据类型：一组值和一组对这些值的操作的集合。</p>\n<p>数据抽象：定义和使用数据类型的过程。</p>\n<p>抽象数据类型：封装后的数据类型。</p>\n<h4 id=\"1-2-1-使用抽象数据类型\"><a href=\"#1-2-1-使用抽象数据类型\" class=\"headerlink\" title=\"1.2.1 使用抽象数据类型\"></a>1.2.1 使用抽象数据类型</h4><p>要使用一种数据类型并不一定非得知道它是怎么实现的。</p>\n<h4 id=\"1-2-2-抽象数据类型举例\"><a href=\"#1-2-2-抽象数据类型举例\" class=\"headerlink\" title=\"1.2.2 抽象数据类型举例\"></a>1.2.2 抽象数据类型举例</h4><p>各类库。</p>\n<h4 id=\"1-2-3-抽象数据类型的实现\"><a href=\"#1-2-3-抽象数据类型的实现\" class=\"headerlink\" title=\"1.2.3 抽象数据类型的实现\"></a>1.2.3 抽象数据类型的实现</h4><ul>\n<li>实例变量：类的实例。</li>\n<li>构造函数：跟类同名的函数。</li>\n<li>实例方法。</li>\n<li>作用域：参数变量，局部变量，实例变量。</li>\n</ul>\n<h4 id=\"1-2-4-更多抽象数据类型的实现\"><a href=\"#1-2-4-更多抽象数据类型的实现\" class=\"headerlink\" title=\"1.2.4 更多抽象数据类型的实现\"></a>1.2.4 更多抽象数据类型的实现</h4><p>第三方库。</p>\n<h4 id=\"1-2-5-数据类型的设计\"><a href=\"#1-2-5-数据类型的设计\" class=\"headerlink\" title=\"1.2.5 数据类型的设计\"></a>1.2.5 数据类型的设计</h4><p>抽象数据类型是一种向用例隐藏内部表示的数据类型。这种思想强有力地影响了现代编程。</p>\n<ul>\n<li>封装：并不需要知道怎么实现的。</li>\n<li>设计API：构建现代软件最重要也是最有挑战的一项任务就是设计API。</li>\n<li>算法与抽象数据类型。</li>\n<li>接口继承。</li>\n<li>实现继承。</li>\n<li>等价性。</li>\n<li>内存管理。</li>\n<li>不可变性。</li>\n<li>异常处理。</li>\n<li>断言。</li>\n</ul>\n<hr>\n<h3 id=\"1-3-背包、队列和栈\"><a href=\"#1-3-背包、队列和栈\" class=\"headerlink\" title=\"1.3 背包、队列和栈\"></a>1.3 背包、队列和栈</h3><p>许多基础数据类型都和对象的集合有关，所有的操作都是对对象的增删改查。</p>\n<p>三种数据类型：背包(Bag)、队列(Queue)、栈(Stack)，它们不同之处就是删除或者访问对象的顺序不同。</p>\n<p>本节目标：</p>\n<ul>\n<li>说明对集合的表示方法，直接影响到各种操作的效率，要设计适用于对象的数据结构并高效地实现所需要的方法。</li>\n<li>介绍泛型和迭代，Java概念。</li>\n<li>说明链式数据结构的重要性，特别是经典的链表，有了它才能高效实现上述三种数据结构。</li>\n</ul>\n<h4 id=\"1-3-1-API\"><a href=\"#1-3-1-API\" class=\"headerlink\" title=\"1.3.1 API\"></a>1.3.1 API</h4><table>\n<thead>\n<tr>\n<th>Bag</th>\n<th>Queue</th>\n<th>Stack</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>NewBag()<br />go语言没有构造函数，所以使用该方法。</td>\n<td>NewQueue()</td>\n<td>NewStack()</td>\n</tr>\n<tr>\n<td>add(item)</td>\n<td>enQueue(item)</td>\n<td>push(item)</td>\n</tr>\n<tr>\n<td></td>\n<td>deQueue()</td>\n<td>pop()</td>\n</tr>\n<tr>\n<td>isEmpty()</td>\n<td>isEmpty()</td>\n<td>isEmpty()</td>\n</tr>\n<tr>\n<td>size()</td>\n<td>size()</td>\n<td>size()</td>\n</tr>\n</tbody></table>\n<h5 id=\"1-3-1-1-泛型\"><a href=\"#1-3-1-1-泛型\" class=\"headerlink\" title=\"1.3.1.1 泛型\"></a>1.3.1.1 泛型</h5><p>只需要一份API就能处理所有类型的数据。</p>\n<p>go1.18开始支持泛型。</p>\n<h5 id=\"1-3-1-2-自动装箱\"><a href=\"#1-3-1-2-自动装箱\" class=\"headerlink\" title=\"1.3.1.2 自动装箱\"></a>1.3.1.2 自动装箱</h5><p>自动将一个原始数据类型转换为一个封装类型被称为自动装箱。例如，int -&gt; Interger。</p>\n<p>自动拆箱。</p>\n<h5 id=\"1-3-1-3-可迭代的集合类型\"><a href=\"#1-3-1-3-可迭代的集合类型\" class=\"headerlink\" title=\"1.3.1.3 可迭代的集合类型\"></a>1.3.1.3 可迭代的集合类型</h5><p>处理集合中的每一个元素，或者叫做迭代访问集合中的所有元素。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">切片：</span><br><span class=\"line\"><span class=\"keyword\">for</span> index, value := <span class=\"keyword\">range</span> slice &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">字典：</span><br><span class=\"line\"><span class=\"keyword\">for</span> key, value := <span class=\"keyword\">range</span> <span class=\"keyword\">map</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-1-4-背包\"><a href=\"#1-3-1-4-背包\" class=\"headerlink\" title=\"1.3.1.4 背包\"></a>1.3.1.4 背包</h5><ul>\n<li>不支持删除元素的集合数据类型。</li>\n<li>目的：帮助收集元素并迭代遍历所有元素。迭代的顺序不确定且与用例无关。</li>\n<li>也可以使用队列和栈，只用背包说明处理顺序不重要。</li>\n</ul>\n<h5 id=\"1-3-1-5-队列\"><a href=\"#1-3-1-5-队列\" class=\"headerlink\" title=\"1.3.1.5 队列\"></a>1.3.1.5 队列</h5><ul>\n<li>先进先出。</li>\n<li>可以使用数组实现，循环的指针。可以使用链表实现。</li>\n</ul>\n<h5 id=\"1-3-1-6-栈\"><a href=\"#1-3-1-6-栈\" class=\"headerlink\" title=\"1.3.1.6 栈\"></a>1.3.1.6 栈</h5><p>下压栈，简称栈。</p>\n<h5 id=\"1-3-1-7-算术表达式\"><a href=\"#1-3-1-7-算术表达式\" class=\"headerlink\" title=\"1.3.1.7 算术表达式\"></a>1.3.1.7 算术表达式</h5><p>如何按照正确的顺序处理算术表达式。20世纪60年代，Dijkstra发明了一个非常简单的算法，使用两个栈，一个保存运算符，一个保存操作数。</p>\n<ul>\n<li>将操作数压入操作数栈。</li>\n<li>将运算符压入运算符栈。</li>\n<li>忽略左括号。</li>\n<li>遇到右括号，弹出一个运算符，弹出所需数量的操作数，并将运算结果压入操作数栈。</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Dijkstra的双栈算术表达式求值算法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Evaluate</span><span class=\"params\">(exp <span class=\"type\">string</span>)</span></span> <span class=\"type\">float64</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 双栈</span></span><br><span class=\"line\">\tops := list.New()</span><br><span class=\"line\">\tvals := list.New()</span><br><span class=\"line\">\t<span class=\"comment\">// 处理数字</span></span><br><span class=\"line\">\tval := <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">len</span>(exp); i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 不处理空格和(</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> exp[i] == <span class=\"string\">&#x27; &#x27;</span> || exp[i] == <span class=\"string\">&#x27;(&#x27;</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 如果是数字，则拼接</span></span><br><span class=\"line\">\t\tval += <span class=\"type\">string</span>(exp[i])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i+<span class=\"number\">1</span> &lt; <span class=\"built_in\">len</span>(exp) &amp;&amp; isNum(exp[i]) &amp;&amp; isNum(exp[i+<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 算术表达式处理</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 数字的处理</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"built_in\">len</span>(val) &gt; <span class=\"number\">1</span> || (exp[i] &gt;= <span class=\"string\">&#x27;0&#x27;</span> &amp;&amp; exp[i] &lt;= <span class=\"string\">&#x27;9&#x27;</span>):</span><br><span class=\"line\">\t\t\tv, _ := strconv.ParseFloat(val, <span class=\"number\">64</span>)</span><br><span class=\"line\">\t\t\tvals.PushBack(v)</span><br><span class=\"line\">\t\t<span class=\"comment\">// 运算符的处理</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> exp[i] == <span class=\"string\">&#x27;+&#x27;</span> || exp[i] == <span class=\"string\">&#x27;-&#x27;</span> || exp[i] == <span class=\"string\">&#x27;*&#x27;</span> || exp[i] == <span class=\"string\">&#x27;/&#x27;</span>:</span><br><span class=\"line\">\t\t\tops.PushBack(exp[i])</span><br><span class=\"line\">\t\t<span class=\"comment\">// 遇到反括号，进行一次运算</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> exp[i] == <span class=\"string\">&#x27;)&#x27;</span>:</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 运算符出栈</span></span><br><span class=\"line\">\t\t\tcurOp := ops.Remove(ops.Back()).(<span class=\"type\">uint8</span>)</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 操作数出栈</span></span><br><span class=\"line\">\t\t\tcurVal2 := vals.Remove(vals.Back()).(<span class=\"type\">float64</span>)</span><br><span class=\"line\">\t\t\tcurVal1 := vals.Remove(vals.Back()).(<span class=\"type\">float64</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">switch</span> curOp &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;+&#x27;</span>: vals.PushBack(curVal1 + curVal2)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;-&#x27;</span>: vals.PushBack(curVal1 - curVal2)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;*&#x27;</span>: vals.PushBack(curVal1 * curVal2)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;/&#x27;</span>: vals.PushBack(curVal1 / curVal2)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tval = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> vals.Front().Value.(<span class=\"type\">float64</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 判断是不是数字</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">isNum</span><span class=\"params\">(val <span class=\"type\">uint8</span>)</span></span> <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> val &gt;= <span class=\"string\">&#x27;0&#x27;</span> &amp;&amp; val &lt;= <span class=\"string\">&#x27;9&#x27;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 可能是浮点数</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> val == <span class=\"string\">&#x27;.&#x27;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-2-集合类数据类型的实现\"><a href=\"#1-3-2-集合类数据类型的实现\" class=\"headerlink\" title=\"1.3.2 集合类数据类型的实现\"></a>1.3.2 集合类数据类型的实现</h4><p>在讨论Bag、Stack和Queue的实现之前，先给出一个简单而经典的实现，它的改进就得到我们所要的结果。</p>\n<h5 id=\"1-3-2-1-定容栈\"><a href=\"#1-3-2-1-定容栈\" class=\"headerlink\" title=\"1.3.2.1 定容栈\"></a>1.3.2.1 定容栈</h5><p>表示容量固定的字符串栈，只处理string，需要指定一个容量且不支持迭代。</p>\n<table>\n<thead>\n<tr>\n<th>FixedCapStackOfStrings</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>newFixedCapStackOfStrings(cap int)</td>\n<td>创建一个容量为cap的空栈</td>\n</tr>\n<tr>\n<td>push(item)</td>\n<td>添加一个字符串</td>\n</tr>\n<tr>\n<td>pop()</td>\n<td>删除最近添加的字符串</td>\n</tr>\n<tr>\n<td>isEmpty()</td>\n<td>栈是否为空</td>\n</tr>\n<tr>\n<td>size()</td>\n<td>字符串数量</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> FixedCapStackOfStrings <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tStrs []<span class=\"type\">string</span></span><br><span class=\"line\">\tN <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewFixedCapStackOfStrings</span><span class=\"params\">(capacity <span class=\"type\">int</span>)</span></span> *FixedCapStackOfStrings &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;FixedCapStackOfStrings&#123;</span><br><span class=\"line\">\t\tN: capacity,</span><br><span class=\"line\">\t\tStrs: <span class=\"built_in\">make</span>([]<span class=\"type\">string</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStackOfStrings)</span></span> IsEmpty() <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">len</span>(s.Strs) == <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStackOfStrings)</span></span> Size() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">len</span>(s.Strs)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStackOfStrings)</span></span> Push(item <span class=\"type\">string</span>) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> s.Size() &gt;= s.N &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts.Strs = <span class=\"built_in\">append</span>(s.Strs, item)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStackOfStrings)</span></span> Pop() <span class=\"type\">string</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> s.Size() == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tres := s.Strs[s.Size()<span class=\"number\">-1</span>]</span><br><span class=\"line\">\ts.Strs = s.Strs[:s.Size()<span class=\"number\">-1</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-2-2-泛型（这里用interface-）\"><a href=\"#1-3-2-2-泛型（这里用interface-）\" class=\"headerlink\" title=\"1.3.2.2 泛型（这里用interface{}）\"></a>1.3.2.2 泛型（这里用interface{}）</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> FixedCapStack <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tdata []<span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">\tcapa <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewFixedCapStack</span><span class=\"params\">(capacity <span class=\"type\">int</span>)</span></span> *FixedCapStack &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;FixedCapStack&#123;</span><br><span class=\"line\">\t\tcapa: capacity,</span><br><span class=\"line\">\t\tdata: <span class=\"built_in\">make</span>([]<span class=\"keyword\">interface</span>&#123;&#125;, <span class=\"number\">0</span>),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStack)</span></span> IsEmpty() <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">len</span>(s.data) == <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStack)</span></span> Size() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">len</span>(s.data)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStack)</span></span> Push(d <span class=\"keyword\">interface</span>&#123;&#125;) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(s.data) &gt;= s.capa &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts.data = <span class=\"built_in\">append</span>(s.data, d)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStack)</span></span> Pop() <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> s.Size() == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tres := s.data[s.Size()<span class=\"number\">-1</span>]</span><br><span class=\"line\">\ts.data = s.data[:s.Size()<span class=\"number\">-1</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-2-3-调整数组大小\"><a href=\"#1-3-2-3-调整数组大小\" class=\"headerlink\" title=\"1.3.2.3 调整数组大小\"></a>1.3.2.3 调整数组大小</h5><p>使用一个resize方法。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *FixedCapStack)</span></span> Resize(size <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\ts.capa *= <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-2-4-对象游离\"><a href=\"#1-3-2-4-对象游离\" class=\"headerlink\" title=\"1.3.2.4 对象游离\"></a>1.3.2.4 对象游离</h5><p>在Java中，被弹出的元素的引用还在数组中，这个元素已经不会再被访问，但Java垃圾收集器没办法知道这一点，除非引用被覆盖。</p>\n<p>解决办法：弹出时设为null。</p>\n<h4 id=\"1-3-3-链表\"><a href=\"#1-3-3-链表\" class=\"headerlink\" title=\"1.3.3 链表\"></a>1.3.3 链表</h4><p>链表是一种递归的数据结构，它或者为空，或者指向下一个节点的引用。</p>\n<h5 id=\"1-3-3-1-结点记录\"><a href=\"#1-3-3-1-结点记录\" class=\"headerlink\" title=\"1.3.3.1 结点记录\"></a>1.3.3.1 结点记录</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Node <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">    Data <span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">    Next *Node</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-2-构造链表\"><a href=\"#1-3-3-2-构造链表\" class=\"headerlink\" title=\"1.3.3.2 构造链表\"></a>1.3.3.2 构造链表</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NodeName := <span class=\"built_in\">new</span>(Node)</span><br><span class=\"line\">NodeName.data = <span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">NodeName.Next = .......</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-3-表头插入结点\"><a href=\"#1-3-3-3-表头插入结点\" class=\"headerlink\" title=\"1.3.3.3 表头插入结点\"></a>1.3.3.3 表头插入结点</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NewNode := <span class=\"built_in\">new</span>(Node)</span><br><span class=\"line\">NewNode.Next = first</span><br><span class=\"line\">first = NewNode</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-4-从表头删除结点\"><a href=\"#1-3-3-4-从表头删除结点\" class=\"headerlink\" title=\"1.3.3.4 从表头删除结点\"></a>1.3.3.4 从表头删除结点</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">first = first.Next</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-5-从表尾插入结点\"><a href=\"#1-3-3-5-从表尾插入结点\" class=\"headerlink\" title=\"1.3.3.5 从表尾插入结点\"></a>1.3.3.5 从表尾插入结点</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Last := <span class=\"built_in\">new</span>(Node)</span><br><span class=\"line\">OldLast.Next = Last</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-6-其他位置的插入和删除操作\"><a href=\"#1-3-3-6-其他位置的插入和删除操作\" class=\"headerlink\" title=\"1.3.3.6 其他位置的插入和删除操作\"></a>1.3.3.6 其他位置的插入和删除操作</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">先遍历，找到位置进行插入和删除操作。</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-7-遍历操作\"><a href=\"#1-3-3-7-遍历操作\" class=\"headerlink\" title=\"1.3.3.7 遍历操作\"></a>1.3.3.7 遍历操作</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> p := first; p ! = <span class=\"literal\">nil</span>; p = p.Next &#123;</span><br><span class=\"line\">    do something</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-8-栈的实现\"><a href=\"#1-3-3-8-栈的实现\" class=\"headerlink\" title=\"1.3.3.8 栈的实现\"></a>1.3.3.8 栈的实现</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Node <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tdata <span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">\tnext *Node</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> ListStack <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tfirst *Node</span><br><span class=\"line\">\tlength <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListStack)</span></span> IsEmpty() <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> l.length == <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListStack)</span></span> Size() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> l.length</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListStack)</span></span> Push(elem <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\tnode := <span class=\"built_in\">new</span>(Node)</span><br><span class=\"line\">\tnode.data = elem</span><br><span class=\"line\">\tnode.next = l.first</span><br><span class=\"line\">\tl.first = node</span><br><span class=\"line\">\tl.length++</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListStack)</span></span> Pop() <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\tret := l.first</span><br><span class=\"line\">\tl.first = l.first.next</span><br><span class=\"line\">\tl.length--</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret.data</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-9-队列的实现\"><a href=\"#1-3-3-9-队列的实现\" class=\"headerlink\" title=\"1.3.3.9 队列的实现\"></a>1.3.3.9 队列的实现</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> ListQueue <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tfirst *Node</span><br><span class=\"line\">\tlast *Node</span><br><span class=\"line\">\tlength <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListQueue)</span></span> IsEmpty() <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> l.length == <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListQueue)</span></span> Size() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> l.length</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListQueue)</span></span> Enqueue(item <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\tnode := <span class=\"built_in\">new</span>(Node)</span><br><span class=\"line\">\tnode.data = item</span><br><span class=\"line\">\tnode.next = <span class=\"literal\">nil</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> l.length == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\tl.first = node</span><br><span class=\"line\">\t\tl.last = node</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tl.last.next = node</span><br><span class=\"line\">\t\tl.last = node</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tl.length++</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListQueue)</span></span> Dequeue() <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> l.IsEmpty() &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tret := l.first.data</span><br><span class=\"line\">\tl.first = l.first.next</span><br><span class=\"line\">\tl.length--</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> l.IsEmpty() &#123;</span><br><span class=\"line\">\t\tl.last = <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-3-10-背包的实现\"><a href=\"#1-3-3-10-背包的实现\" class=\"headerlink\" title=\"1.3.3.10 背包的实现\"></a>1.3.3.10 背包的实现</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> ListBag <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tfirst *Node</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListBag)</span></span> Add(item <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\tnode := <span class=\"built_in\">new</span>(Node)</span><br><span class=\"line\">\tnode.data = item</span><br><span class=\"line\">\tnode.next = l.first</span><br><span class=\"line\">\tl.first = node</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 迭代，返回一个切片</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(l *ListBag)</span></span> Iterator() []<span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\tret := <span class=\"built_in\">make</span>([]<span class=\"keyword\">interface</span>&#123;&#125;, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> node := l.first; node != <span class=\"literal\">nil</span>; node = node.next &#123;</span><br><span class=\"line\">\t\tret = <span class=\"built_in\">append</span>(ret, node.data)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"1-3-4-综述\"><a href=\"#1-3-4-综述\" class=\"headerlink\" title=\"1.3.4 综述\"></a>1.3.4 综述</h4><ul>\n<li>数组<ul>\n<li>优点：通过索引直接访问任意元素。</li>\n<li>缺点：初始化需要知道元素的数量，但在go可以使用切片。</li>\n</ul>\n</li>\n<li>链表<ul>\n<li>使用空间大小和元素数量成正比。</li>\n<li>需要通过遍历访问元素。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"1-4-算法分析\"><a href=\"#1-4-算法分析\" class=\"headerlink\" title=\"1.4 算法分析\"></a>1.4 算法分析</h3><h4 id=\"1-4-1-科学方法\"><a href=\"#1-4-1-科学方法\" class=\"headerlink\" title=\"1.4.1 科学方法\"></a>1.4.1 科学方法</h4><p>爱因斯坦：“再多的实验也不一定能够证明我是对的，但只需要一个实验就能证明我是错的。”</p>\n<p>我们永远也没法知道某个假设是否绝对正确，我们只能验证它和我们的观察的一致性。</p>\n<h4 id=\"1-4-2-观察\"><a href=\"#1-4-2-观察\" class=\"headerlink\" title=\"1.4.2 观察\"></a>1.4.2 观察</h4><p>计算性任务的困难程度可以用问题的规模来衡量。使用不同的规模来观察计算性任务的变化。</p>\n<h4 id=\"1-4-3-数学模型\"><a href=\"#1-4-3-数学模型\" class=\"headerlink\" title=\"1.4.3 数学模型\"></a>1.4.3 数学模型</h4><p>尽管很多复杂因素影响运行时间，原则上我们仍然可能构造出一个数学模型来描述任意程序的运行时间。Knuth认为，一个程序运行的总时间主要和两点有关：</p>\n<ul>\n<li>执行每条语句的耗时；</li>\n<li>执行每条语句的频率。</li>\n</ul>\n<p>前者取决于计算机、编译器和操作系统，后者取决于程序本身和输入。</p>\n<h5 id=\"1-4-3-1-近似\"><a href=\"#1-4-3-1-近似\" class=\"headerlink\" title=\"1.4.3.1 近似\"></a>1.4.3.1 近似</h5><p>首项之后的其他项相对较小，使用约等于号(~)来忽略较小的项。</p>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>近似</th>\n<th>增长数量级</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>N^3 / 6 + N^2 / 2 + N / 3</td>\n<td>~N^3 / 6</td>\n<td>N^3</td>\n</tr>\n<tr>\n<td>lg N + 1</td>\n<td>~lg N</td>\n<td>lg N</td>\n</tr>\n<tr>\n<td>3</td>\n<td>~3</td>\n<td>1</td>\n</tr>\n</tbody></table>\n<h5 id=\"1-4-3-2-近似运行时间\"><a href=\"#1-4-3-2-近似运行时间\" class=\"headerlink\" title=\"1.4.3.2 近似运行时间\"></a>1.4.3.2 近似运行时间</h5><p>许多程序的运行时间都只却决于其中的一小部分指令。</p>\n<h5 id=\"1-4-3-3-对增长数量级的猜想\"><a href=\"#1-4-3-3-对增长数量级的猜想\" class=\"headerlink\" title=\"1.4.3.3 对增长数量级的猜想\"></a>1.4.3.3 对增长数量级的猜想</h5><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms01Foundation1.png\"></p>\n<h4 id=\"1-4-4-增长数量级的分类\"><a href=\"#1-4-4-增长数量级的分类\" class=\"headerlink\" title=\"1.4.4 增长数量级的分类\"></a>1.4.4 增长数量级的分类</h4><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms01Foundation2.png\"></p>\n<ul>\n<li>常数级别：不依赖于N。</li>\n<li>对数级别：比常数时间稍慢，对数的底数和增长的数量级无关。</li>\n<li>线性级别：单个for循环，增长时线性的，和N成正比。</li>\n<li>线性对数级别：常见的是归并排序和快排。</li>\n<li>平方级别：两个嵌套的for循环。</li>\n<li>立方级别：三个嵌套的for循环。</li>\n<li>指数界别：不可能用于解决大规模的问题，但某些领域也很重要。</li>\n</ul>\n<h4 id=\"1-4-7-注意事项\"><a href=\"#1-4-7-注意事项\" class=\"headerlink\" title=\"1.4.7 注意事项\"></a>1.4.7 注意事项</h4><ul>\n<li>大常数：公式的系数如果很小就可以忽略，但是很大就不要忽略。</li>\n<li>非决定性的内循环：有些程序在内循环之外也有大量指令需要考虑。</li>\n<li>指令时间：每条指令所需的时间不同。</li>\n<li>系统因素：只是计算机争夺资源的众多应用程序之一。</li>\n<li>不分伯仲：有些程序员喜欢投入大量精力找出“最佳”实现，这类工作最好还是留给专家。</li>\n</ul>\n<hr>\n<h3 id=\"1-5-案例研究：union-find算法\"><a href=\"#1-5-案例研究：union-find算法\" class=\"headerlink\" title=\"1.5 案例研究：union-find算法\"></a>1.5 案例研究：union-find算法</h3><p>合并-查找，应用于连通性问题当中。</p>\n<h4 id=\"union-find的实现\"><a href=\"#union-find的实现\" class=\"headerlink\" title=\"union-find的实现\"></a>union-find的实现</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> UnionFind <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tid []<span class=\"type\">int</span></span><br><span class=\"line\">\tcount <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewUnionFind</span><span class=\"params\">()</span></span> *UnionFind &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;UnionFind&#123;</span><br><span class=\"line\">\t\tid: <span class=\"literal\">nil</span>,</span><br><span class=\"line\">\t\tcount: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *UnionFind)</span></span> Count() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> uf.count</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *UnionFind)</span></span> Connected(p, q <span class=\"type\">int</span>) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> find(p) == find(q)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *UnionFind)</span></span> find(p <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *UnionFind)</span></span> union(p, q <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"union方法和find方法的实现\"><a href=\"#union方法和find方法的实现\" class=\"headerlink\" title=\"union方法和find方法的实现\"></a>union方法和find方法的实现</h4><h5 id=\"quick-find算法\"><a href=\"#quick-find算法\" class=\"headerlink\" title=\"quick-find算法\"></a>quick-find算法</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *UnionFind)</span></span> QuickFindFind(p <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> uf.id[p]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将p和q归并到相同的分量中</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *UnionFind)</span></span> QuickFindUnion(p, q <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// p和q的分量</span></span><br><span class=\"line\">\tpID := uf.find(p)</span><br><span class=\"line\">\tqID := uf.find(q)</span><br><span class=\"line\">\t<span class=\"comment\">// 相同则返回</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> pID == qID &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 将和p分量相同的变成q的分量</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">len</span>(uf.id); i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> uf.id[i] == pID &#123;</span><br><span class=\"line\">\t\t\tuf.id[i] = qID</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 分量减少一个</span></span><br><span class=\"line\">\tuf.count--</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>find()的操作很快，但是quick-find算法无法处理大型问题，因为对于每一次union都需要扫描整个id切片。</p>\n<h5 id=\"quick-union算法\"><a href=\"#quick-union算法\" class=\"headerlink\" title=\"quick-union算法\"></a>quick-union算法</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *UnionFind)</span></span> QuickUnionFind(p <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 找到根触点</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> p != uf.id[p] &#123;</span><br><span class=\"line\">\t\tp = uf.id[p]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> p</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *UnionFind)</span></span> QuickUnionUnion(p, q <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tpRoot := uf.QuickUnionFind(p)</span><br><span class=\"line\">\tqRoot := uf.QuickUnionFind(q)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> pRoot == qRoot &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 只需要修改根触点的指向就行</span></span><br><span class=\"line\">\tuf.id[pRoot] = qRoot</span><br><span class=\"line\">\tuf.count--</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"加权quick-union算法\"><a href=\"#加权quick-union算法\" class=\"headerlink\" title=\"加权quick-union算法\"></a>加权quick-union算法</h5><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> WeightedQuickUnionUF <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tid []<span class=\"type\">int</span></span><br><span class=\"line\">\tsize []<span class=\"type\">int</span></span><br><span class=\"line\">\tcount <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *WeightedQuickUnionUF)</span></span> Count() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> uf.count</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *WeightedQuickUnionUF)</span></span> connected(p, q <span class=\"type\">int</span>) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> uf.find(q) == uf.find(q)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *WeightedQuickUnionUF)</span></span> find(p <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> p != uf.id[p] &#123;</span><br><span class=\"line\">\t\tp = uf.id[p]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> p</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(uf *WeightedQuickUnionUF)</span></span> union(p, q <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tpRoot := uf.find(p)</span><br><span class=\"line\">\tqRoot := uf.find(q)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> pRoot == qRoot &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> uf.size[qRoot] &lt; uf.size[pRoot] &#123;</span><br><span class=\"line\">\t\tuf.id[qRoot] = pRoot</span><br><span class=\"line\">\t\tuf.size[pRoot] += uf.size[qRoot]</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tuf.id[pRoot] = qRoot</span><br><span class=\"line\">\t\tuf.size[qRoot] += uf.size[pRoot]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tuf.count--</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"性能特点\"><a href=\"#性能特点\" class=\"headerlink\" title=\"性能特点\"></a>性能特点</h5><table>\n<thead>\n<tr>\n<th>算法</th>\n<th>union()</th>\n<th>find()</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>quick-find</td>\n<td>N</td>\n<td>1</td>\n</tr>\n<tr>\n<td>quick-union</td>\n<td>树的高度</td>\n<td>树的高度</td>\n</tr>\n<tr>\n<td>weighted quick-union</td>\n<td>log</td>\n<td>log</td>\n</tr>\n</tbody></table>\n<hr>"},{"title":"《算法》笔记：第3章  查找","date":"2022-04-14T00:33:39.000Z","id":"algorithms3","_content":"\n\n\n《算法》第3章：查找。\n\n符号表，二叉查找树，平衡查找树，散列表，应用。\n\n\n\n<!-- more -->\n\n\n\n---\n\n\n\n使用符号表这个词来描述一张抽象的表格，将信息（值）存储在其中，然后按照指定的键来搜索并获取这些信息。键和值的具体意义取决于不同的应用。\n\n符号表有时被称为字典，符号表有时又叫索引。本章内容：\n\n- 基本的API和两种重要的实现。\n\n- 三种经典的数据类型来实现高效的符号表：二叉查找树、红黑树和散列表。\n\n- 总结，它们的若干扩展和应用。\n\n  \n\n---\n\n\n\n### 3.1 符号表\n\n符号表是一种存储键值对的数据结构，支持两种操作：插入(put)和查找(get)。\n\n符号表最主要的目的就是将一个键和一个值联系起来。\n\n#### 3.1.1 API\n\n所有的实现遵循以下规则：\n\n- 每个键只对应一个值，不允许存在重复的键；\n- 插入的键值已存在时，会覆盖旧值；\n- 键不能为空，值可以为空。\n\n| SearchTable          |                  |\n| -------------------- | ---------------- |\n| put(key, value)      | 将键值对存入表中 |\n| get(key) value       | 获取键对应的值   |\n| delete(key)          | 删除             |\n| contains(key) bool   | 是否有对应的值   |\n| isEnpty() bool       | 是否为空         |\n| size() int           | 键值对数量       |\n| keys() []interface{} | 表中所有键的集合 |\n\n\n\n#### 3.1.2 有序符号表\n\n对顺序有要求，符号表会保持键的有序并大大扩展它的API。定义一个有序符号表：\n\n- 最大键max和最小键min：查询其中的最大键和最小键，删除最大键和最小键。优先队列也能实现这些操作，但符号表不能存在重复的键，而且支持的操作更多。\n- 向上取整ceiling和向下取整floor：向下取整，找出小于等于该键的最大键；向上取整，找出大于等于该键的最小键。\n- 排名rank和选择select：排名，找出小于该键的数量；选择，找出排名为k的键。\n- 范围查找keys：在范围中的键。\n\n在基础API的基础上，添加下列方法：\n\n| OrderedSearchTable   |                      |\n| -------------------- | -------------------- |\n| min() key            | 最小的键             |\n| max() key            | 最大的键             |\n| delMin()             | 删除最小的           |\n| delMax()             |                      |\n| floor(key) key       | 向下取整             |\n| ceiling(key) key     |                      |\n| rank(key) int        | 排名                 |\n| select(int) key      | 选择排名为该数值的键 |\n| size(low, high) int  | 范围内有多少个键     |\n| keys(low, high) keys | 返回范围内所有的键   |\n\nAPI方法的默认实现：\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search1.png)\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search2.png)\n\n\n\n#### 3.1.3 用例举例\n\n混合使用查找和插入操作。大量不同的键。查找操作比插入操作多得多。\n\n#### 3.1.4 无序链表中的顺序查找\n\n未命中的查找和插入操作都需要N次比较。命中的查找需要N次比较。向一个空表中插入N个不同的键需要~N^2/2次比较。\n\n```go\ntype Node struct {\n\tkey interface{}\n\tval interface{}\n\tnxt *Node\n}\n\nfunc NewNode(k, v interface{}, n *Node) *Node {\n\treturn &Node{\n\t\tkey: k,\n\t\tval: v,\n\t\tnxt: n,\n\t}\n}\n\ntype SequentialSearchST struct {\n\tfirst *Node\n}\n\nfunc (s *SequentialSearchST) Get(key interface{}) interface{} {\n\tfor x := s.first; x != nil; x = x.nxt {\n\t\tif x.key == key {\n\t\t\treturn x.val\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (s *SequentialSearchST) Put(key, val interface{}) {\n\tfor x := s.first; x != nil; x = x.nxt {\n\t\tif x.key == key {\n\t\t\tx.val = val\n\t\t\treturn\n\t\t}\n\t}\n\ts.first = NewNode(key, val, s.first)\n}\n```\n\n\n\n#### 3.1.5 有序数组中的二分查找\n\n使用一对平行的数组，一个储存键，一个储存值。\n\n- 保证数组中键的有序，然后使用数组的索引高效地实现get和其他操作；\n- 核心是rank方法，对于get方法，只要键在表中，rank方法就能精确告诉它的位置；\n- 对于put方法，只要键在表中，rank方法能够精确告诉我们去哪里更新它的值，以及当键不存在时将存储到何处。将更大的键向后移动一格，让键值对分别插入到合适的位置。\n\n```go\nfunc (st *BinarySearchST) Size() int {\n\treturn st.size\n}\n\nfunc (st *BinarySearchST) IsEmpty() bool {\n\treturn st.size == 0\n}\n\nfunc (st *BinarySearchST) Rank(key int) int {\n\tif st.size == 0 {\n\t\treturn 0\n\t}\n\tlo, hi := 0, st.size-1\n\tfor lo <= hi{\n\t\tmid := lo + (hi-lo)/2\n\t\tif st.keys[mid] == key {\n\t\t\treturn mid\n\t\t}\n\t\tif key < st.keys[mid] {\n\t\t\thi = mid-1\n\t\t} else {\n\t\t\tlo = mid+1\n\t\t}\n\t}\n\treturn lo\n}\n\nfunc (st *BinarySearchST) rankRecursion(key int, lo, hi int) int {\n\tif hi < lo {\n\t\treturn lo\n\t}\n\tmid := lo + (hi - lo) / 2\n\tif key == st.keys[mid] {\n\t\treturn mid\n\t}\n\tif key < st.keys[mid] {\n\t\treturn st.rankRecursion(key, lo, mid-1)\n\t} else {\n\t\treturn st.rankRecursion(key, mid+1, hi)\n\t}\n}\n\nfunc (st *BinarySearchST) Get(key int) interface{} {\n\tif st.IsEmpty() {\n\t\treturn nil\n\t}\n\ti := st.Rank(key)\n\tif i < st.size && st.keys[i] == key {\n\t\treturn st.vals[i]\n\t}\n\treturn nil\n}\n\nfunc (st *BinarySearchST) Put(key int, val interface{}) {\n\trank := st.Rank(key)\n\tif st.keys[rank] == key {\n\t\tst.vals[rank] = val\n\t}\n\tst.keys = append(st.keys, 0)\n\tst.vals = append(st.vals, nil)\n\tst.size++\n\tfor i := st.size-1; i > rank; i++ {\n\t\tst.keys[i] = st.keys[i-1]\n\t\tst.vals[i] = st.vals[i-1]\n\t}\n\tst.keys[rank] = key\n\tst.vals[rank] = val\n}\n\nfunc (st *BinarySearchST) Min() int {\n\treturn st.keys[0]\n}\n\nfunc (st *BinarySearchST) Max() int {\n\treturn st.keys[st.size-1]\n}\n\nfunc (st *BinarySearchST) Select(k int) int {\n\treturn st.keys[k]\n}\n\nfunc (st *BinarySearchST) Ceiling(key int) int {\n\trank := st.Rank(key)\n\treturn rank\n}\n\nfunc (st *BinarySearchST) Floor(key int) int {\n\trank := st.Rank(key)\n\tif st.keys[rank] == key {\n\t\treturn rank\n\t}\n\treturn rank-1\n}\n\nfunc (st *BinarySearchST) Del(key int) {\n\trank := st.Rank(key)\n\tif st.keys[rank] != key {\n\t\treturn\n\t}\n\tpre := st.keys[:rank]\n\tsuf := st.keys[rank+1:]\n\tst.size--\n\tst.keys = append(pre, suf...)\n}\n```\n\n\n\n#### 3.1.6 对二分查找的分析\n\n最多需要lgN+1次比较。\n\n向一个空符号表插入N个元素在最坏情况下需要访问~N^2次数组。\n\n#### 3.1.7 预览\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search3.png)\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search4.png)\n\n\n\n---\n\n\n\n### 3.2 二叉查找树\n\n一棵二叉查找树BST是一棵二叉树，其中每个结点的键都大于左子树的任意结点的键，而小于右子树任意结点的键。\n\n#### 3.2.1 基本实现\n\n递归很重要。\n\n```go\ntype TreeNode struct {\n\tkey int\n\tval interface{}\n\tleft, right *TreeNode\n\tsize int\n}\n\nfunc NewTreeNode(k int, v interface{}) *TreeNode {\n\treturn &TreeNode{\n\t\tkey: k,\n\t\tval: v,\n\t\tsize: 1,\n\t\tleft: nil,\n\t\tright: nil,\n\t}\n}\n\nfunc (t *TreeNode) Size() int {\n\treturn t.size\n}\n\ntype BinarySearchTree struct {\n\troot *TreeNode\n}\n\nfunc (t BinarySearchTree) Size() int {\n\treturn t.root.size\n}\n\nfunc (t *BinarySearchTree) Get(key int) interface{} {\n\treturn t.get(t.root, key)\n}\n\nfunc (t *BinarySearchTree) get(root *TreeNode, key int) interface{} {\n\tif root == nil {\n\t\treturn nil\n\t}\n\tif key == root.key {\n\t\treturn root.val\n\t}\n\tif key < root.key {\n\t\treturn t.get(root.left, key)\n\t} else {\n\t\treturn t.get(root.right, key)\n\t}\n}\n\nfunc (t *BinarySearchTree) Put(key int, val interface{}) {\n\tt.root = t.put(t.root, key, val)\n}\n\nfunc (t *BinarySearchTree) put(root *TreeNode, key int, val interface{}) *TreeNode {\n\tif root == nil {\n\t\treturn NewTreeNode(key, val)\n\t}\n\tif key == root.key {\n\t\troot.val = val\n\t}\n\tif key < root.key {\n\t\troot.left = t.put(root.left, key, val)\n\t} else {\n\t\troot.right = t.put(root.right, key, val)\n\t}\n\troot.size = root.left.size + root.right.size + 1\n\treturn root\n}\n```\n\n\n\n#### 3.2.2 分析\n\n插入操作和查找操作平均比较次数为~2lnN。\n\n\n\n#### 3.2.3 有序性相关的方法与删除操作\n\n二叉树得到广泛应用的重要原因是它能够保持键的有序性：\n\n- 最大键和最小键。最大键：查找右子树。\n- 向上取整和向下取整。向下取整：key小于根结点，在左子树中。大于根结点，小于根结点的右子树，根结点本身。大于根结点的右子树，在右子树中。\n- 选择操作。找到排名为k的键，如果左子树的结点数t大于k，在左子树中；t等于k，就是根结点；t小于k，在右子树查找排名为k-t-1的键。\n- 排名。是选择操作的逆操作。\n- 删除最大键和删除最小键。\n- 删除操作。\n- 范围查找。\n\n性能分析\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search5.png)\n\n```go\nfunc (t *BinarySearchTree) Min() int {\n\treturn t.min(t.root)\n}\n\nfunc (t *BinarySearchTree) min(root *TreeNode) int {\n\tif root.left == nil {\n\t\treturn root.key\n\t}\n\treturn t.min(root.left)\n}\n\nfunc (t *BinarySearchTree) Max() int {\n\treturn t.max(t.root)\n}\n\nfunc (t *BinarySearchTree) max(root *TreeNode) int {\n\tif root.right == nil {\n\t\treturn root.key\n\t}\n\treturn t.max(root.right)\n}\n\nfunc (t *BinarySearchTree) Floor(key int) int {\n\treturn t.floor(t.root, key)\n}\n\nfunc (t *BinarySearchTree) floor(root *TreeNode, key int) int {\n\tif root == nil {\n\t\treturn -1\n\t}\n\tif key == root.key {\n\t\treturn root.key\n\t}\n\tif key < root.key {\n\t\treturn t.floor(root.left, key)\n\t}\n\tif root.right == nil {\n\t\treturn root.key\n\t}\n\tif rightKey := root.right.key; rightKey > key {\n\t\treturn root.key\n\t}\n\treturn t.floor(root.right, key)\n}\n\nfunc (t *BinarySearchTree) Ceiling(key int) int {\n\treturn t.ceiling(t.root, key)\n}\n\nfunc (t *BinarySearchTree) ceiling(root *TreeNode, key int) int {\n\tif root == nil {\n\t\treturn -1\n\t}\n\tif key == root.key {\n\t\t return key\n\t}\n\tif key > root.key {\n\t\treturn t.floor(root.right, key)\n\t}\n\tif root.left == nil {\n\t\treturn root.key\n\t}\n\tif leftKey := root.left.key; leftKey < key {\n\t\treturn root.key\n\t}\n\treturn t.floor(root.left, key)\n}\n\nfunc (t *BinarySearchTree) Sel(rank int) int {\n\treturn t.sel(t.root, rank)\n}\n\nfunc (t *BinarySearchTree) sel(root *TreeNode, rank int) int {\n\tif root == nil {\n\t\treturn -1\n\t}\n\tl := root.left.size\n\tif l == rank {\n\t\treturn root.key\n\t}\n\tif l > rank {\n\t\treturn t.sel(root.left, rank)\n\t}\n\treturn t.sel(root.right, rank-l-1)\n}\n\nfunc (t *BinarySearchTree) DelMax() {\n\tt.root = t.delMax(t.root)\n}\n\nfunc (t *BinarySearchTree) delMax(root *TreeNode) *TreeNode {\n\tif root.right == nil {\n\t\treturn root.left\n\t}\n\troot.right = t.delMax(root.right)\n\troot.size = root.left.size + root.right.size + 1\n\treturn root\n}\n\nfunc (t *BinarySearchTree) Del(key int) {\n\tt.root = t.del(t.root, key)\n}\n\nfunc (t *BinarySearchTree) del(root *TreeNode, key int) *TreeNode {\n\tif root == nil {\n\t\treturn nil\n\t}\n\tif key < root.key {\n\t\troot.left = t.del(root.left, key)\n\t}\n\tif key > root.key {\n\t\troot.right = t.del(root.right, key)\n\t}\n\tif root.right == nil {\n\t\treturn root.left\n\t}\n\tif root.left == nil {\n\t\treturn root.right\n\t}\n\t// 删除现在的结点\n\t// 右子结点的结点作为现在的结点\n\t// 处理size\n}\n```\n\n\n\n---\n\n\n\n### 3.3 平衡查找树\n\n顺序查找、二分查找和二叉树查找在最坏的情况下性能还是很糟糕。\n\n平衡查找树，又叫红黑树。无论怎么构造它，运行时间都是对数级别的。\n\n#### 3.3.1 _2-3查找树\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search6.png)\n\n{% pdf https://zhenruyi.github.io/files/TwoTreeSearchTree.pdf %}\n\n##### 3.3.1.1 查找\n\n找到键相同的则查找命中，否则查找未命中。\n\n##### 3.3.1.2 向2-结点插入新键\n\n插入新结点之后，也要保持树是完美平衡的。\n\n如果未命中的查找结束于一个2-结点，那就好办了，将2-结点转换成3-结点即可。\n\n##### 3.3.1.3 向一棵只含有一个3-结点的树插入新键\n\n考虑一般情况之前，先假设这棵树只有一个结点，而且是一个3-结点。\n\n首先临时将新键插入到3-结点中，成为一个4-结点。\n\n然后将中间的键变成左边和右边两个键的父结点。\n\n变成了一棵含有三个2-结点的树。\n\n高度从0变成1。\n\n##### 3.3.1.4 向一个父结点为2-结点的3-结点插入新键\n\n第二轮热身。插入到3-结点变成一个4-结点，然后分解。\n\n并不会为中键创建一个新的结点，而是移动到原来的父结点中。\n\n##### 3.3.1.5 向一个父结点为3-结点的3-结点插入新键\n\n构建4-结点，然后将中键上浮。\n\n一直向上不断分解，直到遇到一个2-结点，或者到达根结点。\n\n##### 3.3.1.6 分解根结点\n\n根结点为4-结点时，分解这个结点，中键变成新的根结点。\n\n##### 3.3.1.7 局部变换\n\n不光在树的底部，在树的任意位置都能进行上述操作。\n\n##### 3.3.1.8 全局性质\n\n局部变换不会影响树的全局有序性和平衡性。\n\n查找和插入操作访问的结点必然不超过lgN个。\n\n\n\n#### 3.3.2 红黑二叉查找树\n\n{% pdf https://zhenruyi.github.io/files/RedBlackSearchTree.pdf %}\n\n使用红黑二叉查找树来表达并实现2-3查找树。操作如下：\n\n- 替换3-结点。红黑二叉树背后的基本思想是用标准的二叉查找树和额外信息来表示。链接分为两种类型：红链接将两个2-结点连接起来构成一个3-结点，黑链接是普通链接。\n- 一种等价的定义。红链接均为左链接；没有任何一个结点同时和两条红链接相连；完美黑色平衡，即任意空连接到根结点上的黑链接数量相同。\n- 一一对应。将红链接画平，得到的图像和2-3查找树相同。\n- 颜色表示。颜色用一个布尔值保存。\n- 旋转。某些操作导致出现红色右链接或者两条连续的红链接，使用旋转操作改变红链接的指向。\n  - 左旋转：一条红色的右链接转换成左链接。将两个键中较小者作为根结点变成将较大者作为根结点。\n  - 右旋转：\n- 旋转后重置父结点的链接。使用左旋转或右旋转的返回值重置父结点。\n- 向2-结点插入新键。新键小于老键，新增一个红色的结点；新键大于老键，新增的红色结点会产生一条红色的右链接，需要左旋转。\n- 向树底部的2-结点插入新键。\n- 向一棵双键树插入新键。有三种情况，每种情况都会产生一个同时连接到两个红链接的结点。\n  - 新键大于原树中的两个键。直接将两个链接变为黑即可。其他两种情况最终也会变成这样。\n  - 新键小于原树中的两个键。产生两个连续的红链接，此时要将上层的红链接右旋转得到第一种情况。\n  - 新键处于两键之间。产生两条连续的红链接。将下层的红链接左旋转得到第二种情况。\n- 红黑转换。局部变换，不会影响整棵树的黑色平衡性。\n- 根结点总是黑色的。\n\n\n\n#### 3.3.3 实现\n\n```go\nconst (\n\tRED = true\n\tBLACK = false\n)\n\ntype RBNode struct {\n\tkey int\n\tval interface{}\n\tleft, right *RBNode\n\tsize int\n\tcolor bool\n}\n\nfunc NewRBNode(k int, v interface{}) *RBNode {\n\treturn &RBNode{\n\t\tkey: k,\n\t\tval: k,\n\t\tsize: 1,\n\t\tcolor: RED,\n\t\tleft: nil,\n\t\tright: nil,\n\t}\n}\n\ntype RedBlackT struct {\n\troot *RBNode\n}\n\nfunc (t *RedBlackT) isRed(h *RBNode) bool {\n\treturn h.color\n}\n\nfunc (t *RedBlackT) rotateLeft(h *RBNode) *RBNode {\n\tx := h.right\n\th.right = x.left\n\tx.left = h\n\tx.color = h.color\n\th.color = RED\n\tx.size = h.size\n\th.size = h.left.size + h.right.size + 1\n\treturn x\n}\n\nfunc (t *RedBlackT) rotateRight(h *RBNode) *RBNode {\n\tx := h.left\n\th.left = x.right\n\tx.right = h\n\tx.color = h.color\n\th.color = RED\n\tx.size = h.size\n\th.size = h.left.size + h.right.size + 1\n\treturn x\n}\n\nfunc (t *RedBlackT) flipColors(h *RBNode) {\n\th.color = RED\n\th.left.color = BLACK\n\th.right.color = BLACK\n}\n\nfunc (t *RedBlackT) Put(key int, val interface{}) {\n\tt.root = t.put(t.root, key, val)\n\tt.root.color = BLACK\n}\n\nfunc (t *RedBlackT) put(h *RBNode, key int, val interface{}) *RBNode {\n\tif h == nil {\n\t\treturn NewRBNode(key, val)\n\t}\n\tif key == h.key {\n\t\th.val = val\n\t}\n\tif key < h.key {\n\t\th.left = t.put(h.left, key, val)\n\t}\n\tif key > h.key {\n\t\th.right = t.put(h.right, key, val)\n\t}\n\tif h.right.color && !h.left.color {\n\t\th = t.rotateLeft(h)\n\t}\n\tif h.left.color && h.left.left.color {\n\t\th = t.rotateRight(h)\n\t}\n\tif h.left.color && h.right.color {\n\t\tt.flipColors(h)\n\t}\n\th.size = h.left.size + h.right.size + 1\n\treturn h\n}\n```\n\n\n\n#### 3.3.4 删除操作\n\n{% pdf https://zhenruyi.github.io/files/RedBlackSearchTreeDel.pdf %}\n\n\n\n#### 3.3.5 红黑树的性质\n\n高度不会超过2lgN。根结点到任意结点的平均路径长度为~lgN。\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search7.png)\n\n\n\n---\n\n\n\n### 3.4 散列表\n\n如果键都是小整数，可以使用数组实现无序的符号表。但是当出现更复杂的键时，就需要用算术操作将键转化为数组的索引来访问数组中的键值对。这就是散列表。散列的查找算法分为两步：\n\n- 用散列函数将被查找的键转化为数组的一个索引。\n- 出现相同的键，处理碰撞冲突。两种解决方法：拉链法和线性探测法。\n\n散列表是算法在空间和时间上做出权衡的经典例子：\n\n- 如果没有空间限制，可以直接将键作为数组的索引，这个索引可能是超大的，这样查找操作只需要访问内存一次。\n- 如果没有时间限制，使用无序数组顺序查找。\n\n\n\n#### 3.4.1 散列函数\n\n散列函数，目的是将键转化为数组的索引。有一个M大小的数组，就需要一个散列函数将任意键转化成M范围内的数，使0~M-1之间的每个整数都有相等的可能性。无论键是何种类型，都能转化为一个数。当键为：\n\n- 正整数。最常用的是除留余数法。除数不一定要是10的倍数，这样的话只能利用被除数的后几位。k%97要比k%100好。\n- 浮点数。如果是0-1之间的，将它乘以M并四舍五入。有缺陷，这种情况下高位起的作用更大，修正的办法是将键表示为二进制然后再使用除留余数法。\n- 字符串。将字符串作为一个大整数即可，然后使用除留余数法。\n- 组合键。组合起来，例如一个日期，hash = (((day * R +month) % M) * R +year) % M。只需要保证R足够小不溢出。\n\n#### 3.4.2 基于拉链法的散列表\n\n基于拉链法的散列表的性质：\n\n- 在M条链表和N个键的散列表中，任意一条链表中键的数量均在N/M的常数因子范围内的概率无限趋向于1。\n- 在M条链表和N个键的散列表中，未命中查找和插入操作所需的比较次数为~N/M。\n\n```go\ntype ChainingHT struct {\n\t// 链表的平均长度N/M\n\t// 键值对总数\n\tN int\n\t// 数组的大小\n\tM int\n\t// 数组\n\tst []SequentialSearchST\n}\n\nfunc NewChainingHT(m int) *ChainingHT {\n\tret := &ChainingHT{\n\t\tM: m,\n\t\tst: make([]SequentialSearchST, m),\n\t}\n\treturn ret\n}\n\nfunc (ht *ChainingHT) hashfunc(key int) int {\n\treturn key % ht.M\n}\n\nfunc (ht *ChainingHT) Get(key int) interface{} {\n\treturn ht.st[ht.hashfunc(key)].Get(key)\n}\n\nfunc (ht *ChainingHT) Put(key int, val interface{}) {\n\tht.st[ht.hashfunc(key)].Put(key, val)\n}\n```\n\n\n\n#### 3.4.3 基于线性探测法的散列表\n\n散列表的另一种实现是开放地址散列表，依靠数组中的空位解决碰撞，用大小为M的数组保存N个键值对，M>N。开放地址散列表中最简单的方法是线性探测法，当发生碰撞时，直接检查散列表的下一个位置，会出现三种情况：\n\n- 命中，键相同。\n- 未命中，键为空。\n- 继续查找，键不同。\n\n核心思想是，与其把空间用作链表，不如将它们作为在散列表中的空元素。\n\n```go\ntype LinearHT struct {\n\tN int   //键数量\n\tM int   //数组大小\n\tkeys []int\n\tvals []interface{}\n}\n\nfunc NewLinearHT(m int) *LinearHT {\n\tret := &LinearHT{\n\t\tN: 0,\n\t\tM: m,\n\t\tkeys: make([]int, m),\n\t\tvals: make([]interface{}, m),\n\t}\n\tfor i := 0; i < m; i++ {\n\t\tret.keys[i] = -1\n\t\tret.vals[i] = -1\n\t}\n\treturn ret\n}\n\nfunc (ht *LinearHT) hashFunc(key int) int {\n\treturn key % ht.M\n}\n\nfunc (ht *LinearHT) Put(key int, val interface{}) {\n\tif ht.N >= ht.M / 2 {\n\t\tht.resize(2 * ht.M)\n\t}\n\tindex := ht.hashFunc(key)\n\tfor ht.keys[index] != -1 {\n\t\tif ht.keys[index] == key {\n\t\t\tht.vals[index] = val\n\t\t\treturn\n\t\t}\n\t\tindex = (index + 1) % ht.M\n\t}\n\tht.keys[index] = key\n\tht.vals[index] = val\n\tht.N++\n}\n\nfunc (ht *LinearHT) Get(key int) interface{} {\n\tfor i := ht.hashFunc(key); ht.keys[i] != -1; i = (i+1) % ht.M {\n\t\tif ht.keys[i] == key {\n\t\t\treturn ht.vals[i]\n\t\t}\n\t}\n\treturn nil\n}\n\n// 删除操作\nfunc (ht *LinearHT) Del(key int) {\n\t\n}\n```\n\n\n\n#### 3.4.4 调整数组大小\n\n```go\nfunc (ht *LinearHT) resize(r int) {\n\tt := NewLinearHT(r)\n\tfor i := 0; i < ht.M; i++ {\n\t\tif ht.keys[i] != -1 {\n\t\t\tt.Put(ht.keys[i], ht.vals[i])\n\t\t}\n\t}\n\tht.keys = t.keys\n\tht.vals = t.vals\n\tht.M = t.M\n}\n```\n\n\n\n#### 3.4.5 内存使用\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search8.png)\n\n\n\n---\n\n\n\n### 3.5 应用\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search9.png)\n\n\n\n---\n\n\n\n","source":"_posts/algo-learn03Algorithms03Search.md","raw":"---\ntitle: 《算法》笔记：第3章  查找\ndate: 2022-04-14 08:33:39\nid: algorithms3\ncategories:\n- algo\ntags:\n- learn\n---\n\n\n\n《算法》第3章：查找。\n\n符号表，二叉查找树，平衡查找树，散列表，应用。\n\n\n\n<!-- more -->\n\n\n\n---\n\n\n\n使用符号表这个词来描述一张抽象的表格，将信息（值）存储在其中，然后按照指定的键来搜索并获取这些信息。键和值的具体意义取决于不同的应用。\n\n符号表有时被称为字典，符号表有时又叫索引。本章内容：\n\n- 基本的API和两种重要的实现。\n\n- 三种经典的数据类型来实现高效的符号表：二叉查找树、红黑树和散列表。\n\n- 总结，它们的若干扩展和应用。\n\n  \n\n---\n\n\n\n### 3.1 符号表\n\n符号表是一种存储键值对的数据结构，支持两种操作：插入(put)和查找(get)。\n\n符号表最主要的目的就是将一个键和一个值联系起来。\n\n#### 3.1.1 API\n\n所有的实现遵循以下规则：\n\n- 每个键只对应一个值，不允许存在重复的键；\n- 插入的键值已存在时，会覆盖旧值；\n- 键不能为空，值可以为空。\n\n| SearchTable          |                  |\n| -------------------- | ---------------- |\n| put(key, value)      | 将键值对存入表中 |\n| get(key) value       | 获取键对应的值   |\n| delete(key)          | 删除             |\n| contains(key) bool   | 是否有对应的值   |\n| isEnpty() bool       | 是否为空         |\n| size() int           | 键值对数量       |\n| keys() []interface{} | 表中所有键的集合 |\n\n\n\n#### 3.1.2 有序符号表\n\n对顺序有要求，符号表会保持键的有序并大大扩展它的API。定义一个有序符号表：\n\n- 最大键max和最小键min：查询其中的最大键和最小键，删除最大键和最小键。优先队列也能实现这些操作，但符号表不能存在重复的键，而且支持的操作更多。\n- 向上取整ceiling和向下取整floor：向下取整，找出小于等于该键的最大键；向上取整，找出大于等于该键的最小键。\n- 排名rank和选择select：排名，找出小于该键的数量；选择，找出排名为k的键。\n- 范围查找keys：在范围中的键。\n\n在基础API的基础上，添加下列方法：\n\n| OrderedSearchTable   |                      |\n| -------------------- | -------------------- |\n| min() key            | 最小的键             |\n| max() key            | 最大的键             |\n| delMin()             | 删除最小的           |\n| delMax()             |                      |\n| floor(key) key       | 向下取整             |\n| ceiling(key) key     |                      |\n| rank(key) int        | 排名                 |\n| select(int) key      | 选择排名为该数值的键 |\n| size(low, high) int  | 范围内有多少个键     |\n| keys(low, high) keys | 返回范围内所有的键   |\n\nAPI方法的默认实现：\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search1.png)\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search2.png)\n\n\n\n#### 3.1.3 用例举例\n\n混合使用查找和插入操作。大量不同的键。查找操作比插入操作多得多。\n\n#### 3.1.4 无序链表中的顺序查找\n\n未命中的查找和插入操作都需要N次比较。命中的查找需要N次比较。向一个空表中插入N个不同的键需要~N^2/2次比较。\n\n```go\ntype Node struct {\n\tkey interface{}\n\tval interface{}\n\tnxt *Node\n}\n\nfunc NewNode(k, v interface{}, n *Node) *Node {\n\treturn &Node{\n\t\tkey: k,\n\t\tval: v,\n\t\tnxt: n,\n\t}\n}\n\ntype SequentialSearchST struct {\n\tfirst *Node\n}\n\nfunc (s *SequentialSearchST) Get(key interface{}) interface{} {\n\tfor x := s.first; x != nil; x = x.nxt {\n\t\tif x.key == key {\n\t\t\treturn x.val\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (s *SequentialSearchST) Put(key, val interface{}) {\n\tfor x := s.first; x != nil; x = x.nxt {\n\t\tif x.key == key {\n\t\t\tx.val = val\n\t\t\treturn\n\t\t}\n\t}\n\ts.first = NewNode(key, val, s.first)\n}\n```\n\n\n\n#### 3.1.5 有序数组中的二分查找\n\n使用一对平行的数组，一个储存键，一个储存值。\n\n- 保证数组中键的有序，然后使用数组的索引高效地实现get和其他操作；\n- 核心是rank方法，对于get方法，只要键在表中，rank方法就能精确告诉它的位置；\n- 对于put方法，只要键在表中，rank方法能够精确告诉我们去哪里更新它的值，以及当键不存在时将存储到何处。将更大的键向后移动一格，让键值对分别插入到合适的位置。\n\n```go\nfunc (st *BinarySearchST) Size() int {\n\treturn st.size\n}\n\nfunc (st *BinarySearchST) IsEmpty() bool {\n\treturn st.size == 0\n}\n\nfunc (st *BinarySearchST) Rank(key int) int {\n\tif st.size == 0 {\n\t\treturn 0\n\t}\n\tlo, hi := 0, st.size-1\n\tfor lo <= hi{\n\t\tmid := lo + (hi-lo)/2\n\t\tif st.keys[mid] == key {\n\t\t\treturn mid\n\t\t}\n\t\tif key < st.keys[mid] {\n\t\t\thi = mid-1\n\t\t} else {\n\t\t\tlo = mid+1\n\t\t}\n\t}\n\treturn lo\n}\n\nfunc (st *BinarySearchST) rankRecursion(key int, lo, hi int) int {\n\tif hi < lo {\n\t\treturn lo\n\t}\n\tmid := lo + (hi - lo) / 2\n\tif key == st.keys[mid] {\n\t\treturn mid\n\t}\n\tif key < st.keys[mid] {\n\t\treturn st.rankRecursion(key, lo, mid-1)\n\t} else {\n\t\treturn st.rankRecursion(key, mid+1, hi)\n\t}\n}\n\nfunc (st *BinarySearchST) Get(key int) interface{} {\n\tif st.IsEmpty() {\n\t\treturn nil\n\t}\n\ti := st.Rank(key)\n\tif i < st.size && st.keys[i] == key {\n\t\treturn st.vals[i]\n\t}\n\treturn nil\n}\n\nfunc (st *BinarySearchST) Put(key int, val interface{}) {\n\trank := st.Rank(key)\n\tif st.keys[rank] == key {\n\t\tst.vals[rank] = val\n\t}\n\tst.keys = append(st.keys, 0)\n\tst.vals = append(st.vals, nil)\n\tst.size++\n\tfor i := st.size-1; i > rank; i++ {\n\t\tst.keys[i] = st.keys[i-1]\n\t\tst.vals[i] = st.vals[i-1]\n\t}\n\tst.keys[rank] = key\n\tst.vals[rank] = val\n}\n\nfunc (st *BinarySearchST) Min() int {\n\treturn st.keys[0]\n}\n\nfunc (st *BinarySearchST) Max() int {\n\treturn st.keys[st.size-1]\n}\n\nfunc (st *BinarySearchST) Select(k int) int {\n\treturn st.keys[k]\n}\n\nfunc (st *BinarySearchST) Ceiling(key int) int {\n\trank := st.Rank(key)\n\treturn rank\n}\n\nfunc (st *BinarySearchST) Floor(key int) int {\n\trank := st.Rank(key)\n\tif st.keys[rank] == key {\n\t\treturn rank\n\t}\n\treturn rank-1\n}\n\nfunc (st *BinarySearchST) Del(key int) {\n\trank := st.Rank(key)\n\tif st.keys[rank] != key {\n\t\treturn\n\t}\n\tpre := st.keys[:rank]\n\tsuf := st.keys[rank+1:]\n\tst.size--\n\tst.keys = append(pre, suf...)\n}\n```\n\n\n\n#### 3.1.6 对二分查找的分析\n\n最多需要lgN+1次比较。\n\n向一个空符号表插入N个元素在最坏情况下需要访问~N^2次数组。\n\n#### 3.1.7 预览\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search3.png)\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search4.png)\n\n\n\n---\n\n\n\n### 3.2 二叉查找树\n\n一棵二叉查找树BST是一棵二叉树，其中每个结点的键都大于左子树的任意结点的键，而小于右子树任意结点的键。\n\n#### 3.2.1 基本实现\n\n递归很重要。\n\n```go\ntype TreeNode struct {\n\tkey int\n\tval interface{}\n\tleft, right *TreeNode\n\tsize int\n}\n\nfunc NewTreeNode(k int, v interface{}) *TreeNode {\n\treturn &TreeNode{\n\t\tkey: k,\n\t\tval: v,\n\t\tsize: 1,\n\t\tleft: nil,\n\t\tright: nil,\n\t}\n}\n\nfunc (t *TreeNode) Size() int {\n\treturn t.size\n}\n\ntype BinarySearchTree struct {\n\troot *TreeNode\n}\n\nfunc (t BinarySearchTree) Size() int {\n\treturn t.root.size\n}\n\nfunc (t *BinarySearchTree) Get(key int) interface{} {\n\treturn t.get(t.root, key)\n}\n\nfunc (t *BinarySearchTree) get(root *TreeNode, key int) interface{} {\n\tif root == nil {\n\t\treturn nil\n\t}\n\tif key == root.key {\n\t\treturn root.val\n\t}\n\tif key < root.key {\n\t\treturn t.get(root.left, key)\n\t} else {\n\t\treturn t.get(root.right, key)\n\t}\n}\n\nfunc (t *BinarySearchTree) Put(key int, val interface{}) {\n\tt.root = t.put(t.root, key, val)\n}\n\nfunc (t *BinarySearchTree) put(root *TreeNode, key int, val interface{}) *TreeNode {\n\tif root == nil {\n\t\treturn NewTreeNode(key, val)\n\t}\n\tif key == root.key {\n\t\troot.val = val\n\t}\n\tif key < root.key {\n\t\troot.left = t.put(root.left, key, val)\n\t} else {\n\t\troot.right = t.put(root.right, key, val)\n\t}\n\troot.size = root.left.size + root.right.size + 1\n\treturn root\n}\n```\n\n\n\n#### 3.2.2 分析\n\n插入操作和查找操作平均比较次数为~2lnN。\n\n\n\n#### 3.2.3 有序性相关的方法与删除操作\n\n二叉树得到广泛应用的重要原因是它能够保持键的有序性：\n\n- 最大键和最小键。最大键：查找右子树。\n- 向上取整和向下取整。向下取整：key小于根结点，在左子树中。大于根结点，小于根结点的右子树，根结点本身。大于根结点的右子树，在右子树中。\n- 选择操作。找到排名为k的键，如果左子树的结点数t大于k，在左子树中；t等于k，就是根结点；t小于k，在右子树查找排名为k-t-1的键。\n- 排名。是选择操作的逆操作。\n- 删除最大键和删除最小键。\n- 删除操作。\n- 范围查找。\n\n性能分析\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search5.png)\n\n```go\nfunc (t *BinarySearchTree) Min() int {\n\treturn t.min(t.root)\n}\n\nfunc (t *BinarySearchTree) min(root *TreeNode) int {\n\tif root.left == nil {\n\t\treturn root.key\n\t}\n\treturn t.min(root.left)\n}\n\nfunc (t *BinarySearchTree) Max() int {\n\treturn t.max(t.root)\n}\n\nfunc (t *BinarySearchTree) max(root *TreeNode) int {\n\tif root.right == nil {\n\t\treturn root.key\n\t}\n\treturn t.max(root.right)\n}\n\nfunc (t *BinarySearchTree) Floor(key int) int {\n\treturn t.floor(t.root, key)\n}\n\nfunc (t *BinarySearchTree) floor(root *TreeNode, key int) int {\n\tif root == nil {\n\t\treturn -1\n\t}\n\tif key == root.key {\n\t\treturn root.key\n\t}\n\tif key < root.key {\n\t\treturn t.floor(root.left, key)\n\t}\n\tif root.right == nil {\n\t\treturn root.key\n\t}\n\tif rightKey := root.right.key; rightKey > key {\n\t\treturn root.key\n\t}\n\treturn t.floor(root.right, key)\n}\n\nfunc (t *BinarySearchTree) Ceiling(key int) int {\n\treturn t.ceiling(t.root, key)\n}\n\nfunc (t *BinarySearchTree) ceiling(root *TreeNode, key int) int {\n\tif root == nil {\n\t\treturn -1\n\t}\n\tif key == root.key {\n\t\t return key\n\t}\n\tif key > root.key {\n\t\treturn t.floor(root.right, key)\n\t}\n\tif root.left == nil {\n\t\treturn root.key\n\t}\n\tif leftKey := root.left.key; leftKey < key {\n\t\treturn root.key\n\t}\n\treturn t.floor(root.left, key)\n}\n\nfunc (t *BinarySearchTree) Sel(rank int) int {\n\treturn t.sel(t.root, rank)\n}\n\nfunc (t *BinarySearchTree) sel(root *TreeNode, rank int) int {\n\tif root == nil {\n\t\treturn -1\n\t}\n\tl := root.left.size\n\tif l == rank {\n\t\treturn root.key\n\t}\n\tif l > rank {\n\t\treturn t.sel(root.left, rank)\n\t}\n\treturn t.sel(root.right, rank-l-1)\n}\n\nfunc (t *BinarySearchTree) DelMax() {\n\tt.root = t.delMax(t.root)\n}\n\nfunc (t *BinarySearchTree) delMax(root *TreeNode) *TreeNode {\n\tif root.right == nil {\n\t\treturn root.left\n\t}\n\troot.right = t.delMax(root.right)\n\troot.size = root.left.size + root.right.size + 1\n\treturn root\n}\n\nfunc (t *BinarySearchTree) Del(key int) {\n\tt.root = t.del(t.root, key)\n}\n\nfunc (t *BinarySearchTree) del(root *TreeNode, key int) *TreeNode {\n\tif root == nil {\n\t\treturn nil\n\t}\n\tif key < root.key {\n\t\troot.left = t.del(root.left, key)\n\t}\n\tif key > root.key {\n\t\troot.right = t.del(root.right, key)\n\t}\n\tif root.right == nil {\n\t\treturn root.left\n\t}\n\tif root.left == nil {\n\t\treturn root.right\n\t}\n\t// 删除现在的结点\n\t// 右子结点的结点作为现在的结点\n\t// 处理size\n}\n```\n\n\n\n---\n\n\n\n### 3.3 平衡查找树\n\n顺序查找、二分查找和二叉树查找在最坏的情况下性能还是很糟糕。\n\n平衡查找树，又叫红黑树。无论怎么构造它，运行时间都是对数级别的。\n\n#### 3.3.1 _2-3查找树\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search6.png)\n\n{% pdf https://zhenruyi.github.io/files/TwoTreeSearchTree.pdf %}\n\n##### 3.3.1.1 查找\n\n找到键相同的则查找命中，否则查找未命中。\n\n##### 3.3.1.2 向2-结点插入新键\n\n插入新结点之后，也要保持树是完美平衡的。\n\n如果未命中的查找结束于一个2-结点，那就好办了，将2-结点转换成3-结点即可。\n\n##### 3.3.1.3 向一棵只含有一个3-结点的树插入新键\n\n考虑一般情况之前，先假设这棵树只有一个结点，而且是一个3-结点。\n\n首先临时将新键插入到3-结点中，成为一个4-结点。\n\n然后将中间的键变成左边和右边两个键的父结点。\n\n变成了一棵含有三个2-结点的树。\n\n高度从0变成1。\n\n##### 3.3.1.4 向一个父结点为2-结点的3-结点插入新键\n\n第二轮热身。插入到3-结点变成一个4-结点，然后分解。\n\n并不会为中键创建一个新的结点，而是移动到原来的父结点中。\n\n##### 3.3.1.5 向一个父结点为3-结点的3-结点插入新键\n\n构建4-结点，然后将中键上浮。\n\n一直向上不断分解，直到遇到一个2-结点，或者到达根结点。\n\n##### 3.3.1.6 分解根结点\n\n根结点为4-结点时，分解这个结点，中键变成新的根结点。\n\n##### 3.3.1.7 局部变换\n\n不光在树的底部，在树的任意位置都能进行上述操作。\n\n##### 3.3.1.8 全局性质\n\n局部变换不会影响树的全局有序性和平衡性。\n\n查找和插入操作访问的结点必然不超过lgN个。\n\n\n\n#### 3.3.2 红黑二叉查找树\n\n{% pdf https://zhenruyi.github.io/files/RedBlackSearchTree.pdf %}\n\n使用红黑二叉查找树来表达并实现2-3查找树。操作如下：\n\n- 替换3-结点。红黑二叉树背后的基本思想是用标准的二叉查找树和额外信息来表示。链接分为两种类型：红链接将两个2-结点连接起来构成一个3-结点，黑链接是普通链接。\n- 一种等价的定义。红链接均为左链接；没有任何一个结点同时和两条红链接相连；完美黑色平衡，即任意空连接到根结点上的黑链接数量相同。\n- 一一对应。将红链接画平，得到的图像和2-3查找树相同。\n- 颜色表示。颜色用一个布尔值保存。\n- 旋转。某些操作导致出现红色右链接或者两条连续的红链接，使用旋转操作改变红链接的指向。\n  - 左旋转：一条红色的右链接转换成左链接。将两个键中较小者作为根结点变成将较大者作为根结点。\n  - 右旋转：\n- 旋转后重置父结点的链接。使用左旋转或右旋转的返回值重置父结点。\n- 向2-结点插入新键。新键小于老键，新增一个红色的结点；新键大于老键，新增的红色结点会产生一条红色的右链接，需要左旋转。\n- 向树底部的2-结点插入新键。\n- 向一棵双键树插入新键。有三种情况，每种情况都会产生一个同时连接到两个红链接的结点。\n  - 新键大于原树中的两个键。直接将两个链接变为黑即可。其他两种情况最终也会变成这样。\n  - 新键小于原树中的两个键。产生两个连续的红链接，此时要将上层的红链接右旋转得到第一种情况。\n  - 新键处于两键之间。产生两条连续的红链接。将下层的红链接左旋转得到第二种情况。\n- 红黑转换。局部变换，不会影响整棵树的黑色平衡性。\n- 根结点总是黑色的。\n\n\n\n#### 3.3.3 实现\n\n```go\nconst (\n\tRED = true\n\tBLACK = false\n)\n\ntype RBNode struct {\n\tkey int\n\tval interface{}\n\tleft, right *RBNode\n\tsize int\n\tcolor bool\n}\n\nfunc NewRBNode(k int, v interface{}) *RBNode {\n\treturn &RBNode{\n\t\tkey: k,\n\t\tval: k,\n\t\tsize: 1,\n\t\tcolor: RED,\n\t\tleft: nil,\n\t\tright: nil,\n\t}\n}\n\ntype RedBlackT struct {\n\troot *RBNode\n}\n\nfunc (t *RedBlackT) isRed(h *RBNode) bool {\n\treturn h.color\n}\n\nfunc (t *RedBlackT) rotateLeft(h *RBNode) *RBNode {\n\tx := h.right\n\th.right = x.left\n\tx.left = h\n\tx.color = h.color\n\th.color = RED\n\tx.size = h.size\n\th.size = h.left.size + h.right.size + 1\n\treturn x\n}\n\nfunc (t *RedBlackT) rotateRight(h *RBNode) *RBNode {\n\tx := h.left\n\th.left = x.right\n\tx.right = h\n\tx.color = h.color\n\th.color = RED\n\tx.size = h.size\n\th.size = h.left.size + h.right.size + 1\n\treturn x\n}\n\nfunc (t *RedBlackT) flipColors(h *RBNode) {\n\th.color = RED\n\th.left.color = BLACK\n\th.right.color = BLACK\n}\n\nfunc (t *RedBlackT) Put(key int, val interface{}) {\n\tt.root = t.put(t.root, key, val)\n\tt.root.color = BLACK\n}\n\nfunc (t *RedBlackT) put(h *RBNode, key int, val interface{}) *RBNode {\n\tif h == nil {\n\t\treturn NewRBNode(key, val)\n\t}\n\tif key == h.key {\n\t\th.val = val\n\t}\n\tif key < h.key {\n\t\th.left = t.put(h.left, key, val)\n\t}\n\tif key > h.key {\n\t\th.right = t.put(h.right, key, val)\n\t}\n\tif h.right.color && !h.left.color {\n\t\th = t.rotateLeft(h)\n\t}\n\tif h.left.color && h.left.left.color {\n\t\th = t.rotateRight(h)\n\t}\n\tif h.left.color && h.right.color {\n\t\tt.flipColors(h)\n\t}\n\th.size = h.left.size + h.right.size + 1\n\treturn h\n}\n```\n\n\n\n#### 3.3.4 删除操作\n\n{% pdf https://zhenruyi.github.io/files/RedBlackSearchTreeDel.pdf %}\n\n\n\n#### 3.3.5 红黑树的性质\n\n高度不会超过2lgN。根结点到任意结点的平均路径长度为~lgN。\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search7.png)\n\n\n\n---\n\n\n\n### 3.4 散列表\n\n如果键都是小整数，可以使用数组实现无序的符号表。但是当出现更复杂的键时，就需要用算术操作将键转化为数组的索引来访问数组中的键值对。这就是散列表。散列的查找算法分为两步：\n\n- 用散列函数将被查找的键转化为数组的一个索引。\n- 出现相同的键，处理碰撞冲突。两种解决方法：拉链法和线性探测法。\n\n散列表是算法在空间和时间上做出权衡的经典例子：\n\n- 如果没有空间限制，可以直接将键作为数组的索引，这个索引可能是超大的，这样查找操作只需要访问内存一次。\n- 如果没有时间限制，使用无序数组顺序查找。\n\n\n\n#### 3.4.1 散列函数\n\n散列函数，目的是将键转化为数组的索引。有一个M大小的数组，就需要一个散列函数将任意键转化成M范围内的数，使0~M-1之间的每个整数都有相等的可能性。无论键是何种类型，都能转化为一个数。当键为：\n\n- 正整数。最常用的是除留余数法。除数不一定要是10的倍数，这样的话只能利用被除数的后几位。k%97要比k%100好。\n- 浮点数。如果是0-1之间的，将它乘以M并四舍五入。有缺陷，这种情况下高位起的作用更大，修正的办法是将键表示为二进制然后再使用除留余数法。\n- 字符串。将字符串作为一个大整数即可，然后使用除留余数法。\n- 组合键。组合起来，例如一个日期，hash = (((day * R +month) % M) * R +year) % M。只需要保证R足够小不溢出。\n\n#### 3.4.2 基于拉链法的散列表\n\n基于拉链法的散列表的性质：\n\n- 在M条链表和N个键的散列表中，任意一条链表中键的数量均在N/M的常数因子范围内的概率无限趋向于1。\n- 在M条链表和N个键的散列表中，未命中查找和插入操作所需的比较次数为~N/M。\n\n```go\ntype ChainingHT struct {\n\t// 链表的平均长度N/M\n\t// 键值对总数\n\tN int\n\t// 数组的大小\n\tM int\n\t// 数组\n\tst []SequentialSearchST\n}\n\nfunc NewChainingHT(m int) *ChainingHT {\n\tret := &ChainingHT{\n\t\tM: m,\n\t\tst: make([]SequentialSearchST, m),\n\t}\n\treturn ret\n}\n\nfunc (ht *ChainingHT) hashfunc(key int) int {\n\treturn key % ht.M\n}\n\nfunc (ht *ChainingHT) Get(key int) interface{} {\n\treturn ht.st[ht.hashfunc(key)].Get(key)\n}\n\nfunc (ht *ChainingHT) Put(key int, val interface{}) {\n\tht.st[ht.hashfunc(key)].Put(key, val)\n}\n```\n\n\n\n#### 3.4.3 基于线性探测法的散列表\n\n散列表的另一种实现是开放地址散列表，依靠数组中的空位解决碰撞，用大小为M的数组保存N个键值对，M>N。开放地址散列表中最简单的方法是线性探测法，当发生碰撞时，直接检查散列表的下一个位置，会出现三种情况：\n\n- 命中，键相同。\n- 未命中，键为空。\n- 继续查找，键不同。\n\n核心思想是，与其把空间用作链表，不如将它们作为在散列表中的空元素。\n\n```go\ntype LinearHT struct {\n\tN int   //键数量\n\tM int   //数组大小\n\tkeys []int\n\tvals []interface{}\n}\n\nfunc NewLinearHT(m int) *LinearHT {\n\tret := &LinearHT{\n\t\tN: 0,\n\t\tM: m,\n\t\tkeys: make([]int, m),\n\t\tvals: make([]interface{}, m),\n\t}\n\tfor i := 0; i < m; i++ {\n\t\tret.keys[i] = -1\n\t\tret.vals[i] = -1\n\t}\n\treturn ret\n}\n\nfunc (ht *LinearHT) hashFunc(key int) int {\n\treturn key % ht.M\n}\n\nfunc (ht *LinearHT) Put(key int, val interface{}) {\n\tif ht.N >= ht.M / 2 {\n\t\tht.resize(2 * ht.M)\n\t}\n\tindex := ht.hashFunc(key)\n\tfor ht.keys[index] != -1 {\n\t\tif ht.keys[index] == key {\n\t\t\tht.vals[index] = val\n\t\t\treturn\n\t\t}\n\t\tindex = (index + 1) % ht.M\n\t}\n\tht.keys[index] = key\n\tht.vals[index] = val\n\tht.N++\n}\n\nfunc (ht *LinearHT) Get(key int) interface{} {\n\tfor i := ht.hashFunc(key); ht.keys[i] != -1; i = (i+1) % ht.M {\n\t\tif ht.keys[i] == key {\n\t\t\treturn ht.vals[i]\n\t\t}\n\t}\n\treturn nil\n}\n\n// 删除操作\nfunc (ht *LinearHT) Del(key int) {\n\t\n}\n```\n\n\n\n#### 3.4.4 调整数组大小\n\n```go\nfunc (ht *LinearHT) resize(r int) {\n\tt := NewLinearHT(r)\n\tfor i := 0; i < ht.M; i++ {\n\t\tif ht.keys[i] != -1 {\n\t\t\tt.Put(ht.keys[i], ht.vals[i])\n\t\t}\n\t}\n\tht.keys = t.keys\n\tht.vals = t.vals\n\tht.M = t.M\n}\n```\n\n\n\n#### 3.4.5 内存使用\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search8.png)\n\n\n\n---\n\n\n\n### 3.5 应用\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms03Search9.png)\n\n\n\n---\n\n\n\n","slug":"algo-learn03Algorithms03Search","published":1,"updated":"2022-04-16T23:04:12.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70tb000o5oss2gccbxch","content":"<p>《算法》第3章：查找。</p>\n<p>符号表，二叉查找树，平衡查找树，散列表，应用。</p>\n<span id=\"more\"></span>\n\n\n\n<hr>\n<p>使用符号表这个词来描述一张抽象的表格，将信息（值）存储在其中，然后按照指定的键来搜索并获取这些信息。键和值的具体意义取决于不同的应用。</p>\n<p>符号表有时被称为字典，符号表有时又叫索引。本章内容：</p>\n<ul>\n<li><p>基本的API和两种重要的实现。</p>\n</li>\n<li><p>三种经典的数据类型来实现高效的符号表：二叉查找树、红黑树和散列表。</p>\n</li>\n<li><p>总结，它们的若干扩展和应用。</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"3-1-符号表\"><a href=\"#3-1-符号表\" class=\"headerlink\" title=\"3.1 符号表\"></a>3.1 符号表</h3><p>符号表是一种存储键值对的数据结构，支持两种操作：插入(put)和查找(get)。</p>\n<p>符号表最主要的目的就是将一个键和一个值联系起来。</p>\n<h4 id=\"3-1-1-API\"><a href=\"#3-1-1-API\" class=\"headerlink\" title=\"3.1.1 API\"></a>3.1.1 API</h4><p>所有的实现遵循以下规则：</p>\n<ul>\n<li>每个键只对应一个值，不允许存在重复的键；</li>\n<li>插入的键值已存在时，会覆盖旧值；</li>\n<li>键不能为空，值可以为空。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>SearchTable</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>put(key, value)</td>\n<td>将键值对存入表中</td>\n</tr>\n<tr>\n<td>get(key) value</td>\n<td>获取键对应的值</td>\n</tr>\n<tr>\n<td>delete(key)</td>\n<td>删除</td>\n</tr>\n<tr>\n<td>contains(key) bool</td>\n<td>是否有对应的值</td>\n</tr>\n<tr>\n<td>isEnpty() bool</td>\n<td>是否为空</td>\n</tr>\n<tr>\n<td>size() int</td>\n<td>键值对数量</td>\n</tr>\n<tr>\n<td>keys() []interface{}</td>\n<td>表中所有键的集合</td>\n</tr>\n</tbody></table>\n<h4 id=\"3-1-2-有序符号表\"><a href=\"#3-1-2-有序符号表\" class=\"headerlink\" title=\"3.1.2 有序符号表\"></a>3.1.2 有序符号表</h4><p>对顺序有要求，符号表会保持键的有序并大大扩展它的API。定义一个有序符号表：</p>\n<ul>\n<li>最大键max和最小键min：查询其中的最大键和最小键，删除最大键和最小键。优先队列也能实现这些操作，但符号表不能存在重复的键，而且支持的操作更多。</li>\n<li>向上取整ceiling和向下取整floor：向下取整，找出小于等于该键的最大键；向上取整，找出大于等于该键的最小键。</li>\n<li>排名rank和选择select：排名，找出小于该键的数量；选择，找出排名为k的键。</li>\n<li>范围查找keys：在范围中的键。</li>\n</ul>\n<p>在基础API的基础上，添加下列方法：</p>\n<table>\n<thead>\n<tr>\n<th>OrderedSearchTable</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>min() key</td>\n<td>最小的键</td>\n</tr>\n<tr>\n<td>max() key</td>\n<td>最大的键</td>\n</tr>\n<tr>\n<td>delMin()</td>\n<td>删除最小的</td>\n</tr>\n<tr>\n<td>delMax()</td>\n<td></td>\n</tr>\n<tr>\n<td>floor(key) key</td>\n<td>向下取整</td>\n</tr>\n<tr>\n<td>ceiling(key) key</td>\n<td></td>\n</tr>\n<tr>\n<td>rank(key) int</td>\n<td>排名</td>\n</tr>\n<tr>\n<td>select(int) key</td>\n<td>选择排名为该数值的键</td>\n</tr>\n<tr>\n<td>size(low, high) int</td>\n<td>范围内有多少个键</td>\n</tr>\n<tr>\n<td>keys(low, high) keys</td>\n<td>返回范围内所有的键</td>\n</tr>\n</tbody></table>\n<p>API方法的默认实现：</p>\n<p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search1.png\"></p>\n<p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search2.png\"></p>\n<h4 id=\"3-1-3-用例举例\"><a href=\"#3-1-3-用例举例\" class=\"headerlink\" title=\"3.1.3 用例举例\"></a>3.1.3 用例举例</h4><p>混合使用查找和插入操作。大量不同的键。查找操作比插入操作多得多。</p>\n<h4 id=\"3-1-4-无序链表中的顺序查找\"><a href=\"#3-1-4-无序链表中的顺序查找\" class=\"headerlink\" title=\"3.1.4 无序链表中的顺序查找\"></a>3.1.4 无序链表中的顺序查找</h4><p>未命中的查找和插入操作都需要N次比较。命中的查找需要N次比较。向一个空表中插入N个不同的键需要~N^2/2次比较。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Node <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tkey <span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">\tval <span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">\tnxt *Node</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewNode</span><span class=\"params\">(k, v <span class=\"keyword\">interface</span>&#123;&#125;, n *Node)</span></span> *Node &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;Node&#123;</span><br><span class=\"line\">\t\tkey: k,</span><br><span class=\"line\">\t\tval: v,</span><br><span class=\"line\">\t\tnxt: n,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> SequentialSearchST <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tfirst *Node</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *SequentialSearchST)</span></span> Get(key <span class=\"keyword\">interface</span>&#123;&#125;) <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> x := s.first; x != <span class=\"literal\">nil</span>; x = x.nxt &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> x.key == key &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> x.val</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *SequentialSearchST)</span></span> Put(key, val <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> x := s.first; x != <span class=\"literal\">nil</span>; x = x.nxt &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> x.key == key &#123;</span><br><span class=\"line\">\t\t\tx.val = val</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts.first = NewNode(key, val, s.first)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-1-5-有序数组中的二分查找\"><a href=\"#3-1-5-有序数组中的二分查找\" class=\"headerlink\" title=\"3.1.5 有序数组中的二分查找\"></a>3.1.5 有序数组中的二分查找</h4><p>使用一对平行的数组，一个储存键，一个储存值。</p>\n<ul>\n<li>保证数组中键的有序，然后使用数组的索引高效地实现get和其他操作；</li>\n<li>核心是rank方法，对于get方法，只要键在表中，rank方法就能精确告诉它的位置；</li>\n<li>对于put方法，只要键在表中，rank方法能够精确告诉我们去哪里更新它的值，以及当键不存在时将存储到何处。将更大的键向后移动一格，让键值对分别插入到合适的位置。</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Size() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> st.size</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> IsEmpty() <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> st.size == <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Rank(key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> st.size == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tlo, hi := <span class=\"number\">0</span>, st.size<span class=\"number\">-1</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> lo &lt;= hi&#123;</span><br><span class=\"line\">\t\tmid := lo + (hi-lo)/<span class=\"number\">2</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> st.keys[mid] == key &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> mid</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> key &lt; st.keys[mid] &#123;</span><br><span class=\"line\">\t\t\thi = mid<span class=\"number\">-1</span></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tlo = mid+<span class=\"number\">1</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> lo</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> rankRecursion(key <span class=\"type\">int</span>, lo, hi <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> hi &lt; lo &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> lo</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tmid := lo + (hi - lo) / <span class=\"number\">2</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key == st.keys[mid] &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> mid</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &lt; st.keys[mid] &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> st.rankRecursion(key, lo, mid<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> st.rankRecursion(key, mid+<span class=\"number\">1</span>, hi)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Get(key <span class=\"type\">int</span>) <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> st.IsEmpty() &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ti := st.Rank(key)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> i &lt; st.size &amp;&amp; st.keys[i] == key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> st.vals[i]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Put(key <span class=\"type\">int</span>, val <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\trank := st.Rank(key)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> st.keys[rank] == key &#123;</span><br><span class=\"line\">\t\tst.vals[rank] = val</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tst.keys = <span class=\"built_in\">append</span>(st.keys, <span class=\"number\">0</span>)</span><br><span class=\"line\">\tst.vals = <span class=\"built_in\">append</span>(st.vals, <span class=\"literal\">nil</span>)</span><br><span class=\"line\">\tst.size++</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := st.size<span class=\"number\">-1</span>; i &gt; rank; i++ &#123;</span><br><span class=\"line\">\t\tst.keys[i] = st.keys[i<span class=\"number\">-1</span>]</span><br><span class=\"line\">\t\tst.vals[i] = st.vals[i<span class=\"number\">-1</span>]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tst.keys[rank] = key</span><br><span class=\"line\">\tst.vals[rank] = val</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Min() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> st.keys[<span class=\"number\">0</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Max() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> st.keys[st.size<span class=\"number\">-1</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Select(k <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> st.keys[k]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Ceiling(key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\trank := st.Rank(key)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> rank</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Floor(key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\trank := st.Rank(key)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> st.keys[rank] == key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> rank</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> rank<span class=\"number\">-1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Del(key <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\trank := st.Rank(key)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> st.keys[rank] != key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpre := st.keys[:rank]</span><br><span class=\"line\">\tsuf := st.keys[rank+<span class=\"number\">1</span>:]</span><br><span class=\"line\">\tst.size--</span><br><span class=\"line\">\tst.keys = <span class=\"built_in\">append</span>(pre, suf...)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-1-6-对二分查找的分析\"><a href=\"#3-1-6-对二分查找的分析\" class=\"headerlink\" title=\"3.1.6 对二分查找的分析\"></a>3.1.6 对二分查找的分析</h4><p>最多需要lgN+1次比较。</p>\n<p>向一个空符号表插入N个元素在最坏情况下需要访问~N^2次数组。</p>\n<h4 id=\"3-1-7-预览\"><a href=\"#3-1-7-预览\" class=\"headerlink\" title=\"3.1.7 预览\"></a>3.1.7 预览</h4><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search3.png\"></p>\n<p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search4.png\"></p>\n<hr>\n<h3 id=\"3-2-二叉查找树\"><a href=\"#3-2-二叉查找树\" class=\"headerlink\" title=\"3.2 二叉查找树\"></a>3.2 二叉查找树</h3><p>一棵二叉查找树BST是一棵二叉树，其中每个结点的键都大于左子树的任意结点的键，而小于右子树任意结点的键。</p>\n<h4 id=\"3-2-1-基本实现\"><a href=\"#3-2-1-基本实现\" class=\"headerlink\" title=\"3.2.1 基本实现\"></a>3.2.1 基本实现</h4><p>递归很重要。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> TreeNode <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tkey <span class=\"type\">int</span></span><br><span class=\"line\">\tval <span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">\tleft, right *TreeNode</span><br><span class=\"line\">\tsize <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewTreeNode</span><span class=\"params\">(k <span class=\"type\">int</span>, v <span class=\"keyword\">interface</span>&#123;&#125;)</span></span> *TreeNode &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;TreeNode&#123;</span><br><span class=\"line\">\t\tkey: k,</span><br><span class=\"line\">\t\tval: v,</span><br><span class=\"line\">\t\tsize: <span class=\"number\">1</span>,</span><br><span class=\"line\">\t\tleft: <span class=\"literal\">nil</span>,</span><br><span class=\"line\">\t\tright: <span class=\"literal\">nil</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *TreeNode)</span></span> Size() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.size</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> BinarySearchTree <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\troot *TreeNode</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t BinarySearchTree)</span></span> Size() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.root.size</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> Get(key <span class=\"type\">int</span>) <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.get(t.root, key)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> get(root *TreeNode, key <span class=\"type\">int</span>) <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key == root.key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.val</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &lt; root.key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> t.get(root.left, key)</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> t.get(root.right, key)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> Put(key <span class=\"type\">int</span>, val <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\tt.root = t.put(t.root, key, val)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> put(root *TreeNode, key <span class=\"type\">int</span>, val <span class=\"keyword\">interface</span>&#123;&#125;) *TreeNode &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> NewTreeNode(key, val)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key == root.key &#123;</span><br><span class=\"line\">\t\troot.val = val</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &lt; root.key &#123;</span><br><span class=\"line\">\t\troot.left = t.put(root.left, key, val)</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\troot.right = t.put(root.right, key, val)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\troot.size = root.left.size + root.right.size + <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> root</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-2-2-分析\"><a href=\"#3-2-2-分析\" class=\"headerlink\" title=\"3.2.2 分析\"></a>3.2.2 分析</h4><p>插入操作和查找操作平均比较次数为~2lnN。</p>\n<h4 id=\"3-2-3-有序性相关的方法与删除操作\"><a href=\"#3-2-3-有序性相关的方法与删除操作\" class=\"headerlink\" title=\"3.2.3 有序性相关的方法与删除操作\"></a>3.2.3 有序性相关的方法与删除操作</h4><p>二叉树得到广泛应用的重要原因是它能够保持键的有序性：</p>\n<ul>\n<li>最大键和最小键。最大键：查找右子树。</li>\n<li>向上取整和向下取整。向下取整：key小于根结点，在左子树中。大于根结点，小于根结点的右子树，根结点本身。大于根结点的右子树，在右子树中。</li>\n<li>选择操作。找到排名为k的键，如果左子树的结点数t大于k，在左子树中；t等于k，就是根结点；t小于k，在右子树查找排名为k-t-1的键。</li>\n<li>排名。是选择操作的逆操作。</li>\n<li>删除最大键和删除最小键。</li>\n<li>删除操作。</li>\n<li>范围查找。</li>\n</ul>\n<p>性能分析</p>\n<p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search5.png\"></p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> Min() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.min(t.root)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> min(root *TreeNode) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root.left == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.min(root.left)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> Max() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.max(t.root)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> max(root *TreeNode) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root.right == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.max(root.right)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> Floor(key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.floor(t.root, key)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> floor(root *TreeNode, key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key == root.key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &lt; root.key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> t.floor(root.left, key)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root.right == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> rightKey := root.right.key; rightKey &gt; key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.floor(root.right, key)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> Ceiling(key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.ceiling(t.root, key)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> ceiling(root *TreeNode, key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key == root.key &#123;</span><br><span class=\"line\">\t\t <span class=\"keyword\">return</span> key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &gt; root.key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> t.floor(root.right, key)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root.left == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> leftKey := root.left.key; leftKey &lt; key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.floor(root.left, key)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> Sel(rank <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.sel(t.root, rank)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> sel(root *TreeNode, rank <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tl := root.left.size</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> l == rank &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> l &gt; rank &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> t.sel(root.left, rank)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.sel(root.right, rank-l<span class=\"number\">-1</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> DelMax() &#123;</span><br><span class=\"line\">\tt.root = t.delMax(t.root)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> delMax(root *TreeNode) *TreeNode &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root.right == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.left</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\troot.right = t.delMax(root.right)</span><br><span class=\"line\">\troot.size = root.left.size + root.right.size + <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> root</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> Del(key <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tt.root = t.del(t.root, key)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> del(root *TreeNode, key <span class=\"type\">int</span>) *TreeNode &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &lt; root.key &#123;</span><br><span class=\"line\">\t\troot.left = t.del(root.left, key)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &gt; root.key &#123;</span><br><span class=\"line\">\t\troot.right = t.del(root.right, key)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root.right == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.left</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root.left == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.right</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 删除现在的结点</span></span><br><span class=\"line\">\t<span class=\"comment\">// 右子结点的结点作为现在的结点</span></span><br><span class=\"line\">\t<span class=\"comment\">// 处理size</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<h3 id=\"3-3-平衡查找树\"><a href=\"#3-3-平衡查找树\" class=\"headerlink\" title=\"3.3 平衡查找树\"></a>3.3 平衡查找树</h3><p>顺序查找、二分查找和二叉树查找在最坏的情况下性能还是很糟糕。</p>\n<p>平衡查找树，又叫红黑树。无论怎么构造它，运行时间都是对数级别的。</p>\n<h4 id=\"3-3-1-2-3查找树\"><a href=\"#3-3-1-2-3查找树\" class=\"headerlink\" title=\"3.3.1 _2-3查找树\"></a>3.3.1 _2-3查找树</h4><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search6.png\"></p>\n<div class=\"pdf-container\" data-target=\"https://zhenruyi.github.io/files/TwoTreeSearchTree.pdf\" data-height=\"650px\"></div>\n\n<h5 id=\"3-3-1-1-查找\"><a href=\"#3-3-1-1-查找\" class=\"headerlink\" title=\"3.3.1.1 查找\"></a>3.3.1.1 查找</h5><p>找到键相同的则查找命中，否则查找未命中。</p>\n<h5 id=\"3-3-1-2-向2-结点插入新键\"><a href=\"#3-3-1-2-向2-结点插入新键\" class=\"headerlink\" title=\"3.3.1.2 向2-结点插入新键\"></a>3.3.1.2 向2-结点插入新键</h5><p>插入新结点之后，也要保持树是完美平衡的。</p>\n<p>如果未命中的查找结束于一个2-结点，那就好办了，将2-结点转换成3-结点即可。</p>\n<h5 id=\"3-3-1-3-向一棵只含有一个3-结点的树插入新键\"><a href=\"#3-3-1-3-向一棵只含有一个3-结点的树插入新键\" class=\"headerlink\" title=\"3.3.1.3 向一棵只含有一个3-结点的树插入新键\"></a>3.3.1.3 向一棵只含有一个3-结点的树插入新键</h5><p>考虑一般情况之前，先假设这棵树只有一个结点，而且是一个3-结点。</p>\n<p>首先临时将新键插入到3-结点中，成为一个4-结点。</p>\n<p>然后将中间的键变成左边和右边两个键的父结点。</p>\n<p>变成了一棵含有三个2-结点的树。</p>\n<p>高度从0变成1。</p>\n<h5 id=\"3-3-1-4-向一个父结点为2-结点的3-结点插入新键\"><a href=\"#3-3-1-4-向一个父结点为2-结点的3-结点插入新键\" class=\"headerlink\" title=\"3.3.1.4 向一个父结点为2-结点的3-结点插入新键\"></a>3.3.1.4 向一个父结点为2-结点的3-结点插入新键</h5><p>第二轮热身。插入到3-结点变成一个4-结点，然后分解。</p>\n<p>并不会为中键创建一个新的结点，而是移动到原来的父结点中。</p>\n<h5 id=\"3-3-1-5-向一个父结点为3-结点的3-结点插入新键\"><a href=\"#3-3-1-5-向一个父结点为3-结点的3-结点插入新键\" class=\"headerlink\" title=\"3.3.1.5 向一个父结点为3-结点的3-结点插入新键\"></a>3.3.1.5 向一个父结点为3-结点的3-结点插入新键</h5><p>构建4-结点，然后将中键上浮。</p>\n<p>一直向上不断分解，直到遇到一个2-结点，或者到达根结点。</p>\n<h5 id=\"3-3-1-6-分解根结点\"><a href=\"#3-3-1-6-分解根结点\" class=\"headerlink\" title=\"3.3.1.6 分解根结点\"></a>3.3.1.6 分解根结点</h5><p>根结点为4-结点时，分解这个结点，中键变成新的根结点。</p>\n<h5 id=\"3-3-1-7-局部变换\"><a href=\"#3-3-1-7-局部变换\" class=\"headerlink\" title=\"3.3.1.7 局部变换\"></a>3.3.1.7 局部变换</h5><p>不光在树的底部，在树的任意位置都能进行上述操作。</p>\n<h5 id=\"3-3-1-8-全局性质\"><a href=\"#3-3-1-8-全局性质\" class=\"headerlink\" title=\"3.3.1.8 全局性质\"></a>3.3.1.8 全局性质</h5><p>局部变换不会影响树的全局有序性和平衡性。</p>\n<p>查找和插入操作访问的结点必然不超过lgN个。</p>\n<h4 id=\"3-3-2-红黑二叉查找树\"><a href=\"#3-3-2-红黑二叉查找树\" class=\"headerlink\" title=\"3.3.2 红黑二叉查找树\"></a>3.3.2 红黑二叉查找树</h4><div class=\"pdf-container\" data-target=\"https://zhenruyi.github.io/files/RedBlackSearchTree.pdf\" data-height=\"650px\"></div>\n\n<p>使用红黑二叉查找树来表达并实现2-3查找树。操作如下：</p>\n<ul>\n<li>替换3-结点。红黑二叉树背后的基本思想是用标准的二叉查找树和额外信息来表示。链接分为两种类型：红链接将两个2-结点连接起来构成一个3-结点，黑链接是普通链接。</li>\n<li>一种等价的定义。红链接均为左链接；没有任何一个结点同时和两条红链接相连；完美黑色平衡，即任意空连接到根结点上的黑链接数量相同。</li>\n<li>一一对应。将红链接画平，得到的图像和2-3查找树相同。</li>\n<li>颜色表示。颜色用一个布尔值保存。</li>\n<li>旋转。某些操作导致出现红色右链接或者两条连续的红链接，使用旋转操作改变红链接的指向。<ul>\n<li>左旋转：一条红色的右链接转换成左链接。将两个键中较小者作为根结点变成将较大者作为根结点。</li>\n<li>右旋转：</li>\n</ul>\n</li>\n<li>旋转后重置父结点的链接。使用左旋转或右旋转的返回值重置父结点。</li>\n<li>向2-结点插入新键。新键小于老键，新增一个红色的结点；新键大于老键，新增的红色结点会产生一条红色的右链接，需要左旋转。</li>\n<li>向树底部的2-结点插入新键。</li>\n<li>向一棵双键树插入新键。有三种情况，每种情况都会产生一个同时连接到两个红链接的结点。<ul>\n<li>新键大于原树中的两个键。直接将两个链接变为黑即可。其他两种情况最终也会变成这样。</li>\n<li>新键小于原树中的两个键。产生两个连续的红链接，此时要将上层的红链接右旋转得到第一种情况。</li>\n<li>新键处于两键之间。产生两条连续的红链接。将下层的红链接左旋转得到第二种情况。</li>\n</ul>\n</li>\n<li>红黑转换。局部变换，不会影响整棵树的黑色平衡性。</li>\n<li>根结点总是黑色的。</li>\n</ul>\n<h4 id=\"3-3-3-实现\"><a href=\"#3-3-3-实现\" class=\"headerlink\" title=\"3.3.3 实现\"></a>3.3.3 实现</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">\tRED = <span class=\"literal\">true</span></span><br><span class=\"line\">\tBLACK = <span class=\"literal\">false</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> RBNode <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tkey <span class=\"type\">int</span></span><br><span class=\"line\">\tval <span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">\tleft, right *RBNode</span><br><span class=\"line\">\tsize <span class=\"type\">int</span></span><br><span class=\"line\">\tcolor <span class=\"type\">bool</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewRBNode</span><span class=\"params\">(k <span class=\"type\">int</span>, v <span class=\"keyword\">interface</span>&#123;&#125;)</span></span> *RBNode &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;RBNode&#123;</span><br><span class=\"line\">\t\tkey: k,</span><br><span class=\"line\">\t\tval: k,</span><br><span class=\"line\">\t\tsize: <span class=\"number\">1</span>,</span><br><span class=\"line\">\t\tcolor: RED,</span><br><span class=\"line\">\t\tleft: <span class=\"literal\">nil</span>,</span><br><span class=\"line\">\t\tright: <span class=\"literal\">nil</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> RedBlackT <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\troot *RBNode</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *RedBlackT)</span></span> isRed(h *RBNode) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> h.color</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *RedBlackT)</span></span> rotateLeft(h *RBNode) *RBNode &#123;</span><br><span class=\"line\">\tx := h.right</span><br><span class=\"line\">\th.right = x.left</span><br><span class=\"line\">\tx.left = h</span><br><span class=\"line\">\tx.color = h.color</span><br><span class=\"line\">\th.color = RED</span><br><span class=\"line\">\tx.size = h.size</span><br><span class=\"line\">\th.size = h.left.size + h.right.size + <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *RedBlackT)</span></span> rotateRight(h *RBNode) *RBNode &#123;</span><br><span class=\"line\">\tx := h.left</span><br><span class=\"line\">\th.left = x.right</span><br><span class=\"line\">\tx.right = h</span><br><span class=\"line\">\tx.color = h.color</span><br><span class=\"line\">\th.color = RED</span><br><span class=\"line\">\tx.size = h.size</span><br><span class=\"line\">\th.size = h.left.size + h.right.size + <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *RedBlackT)</span></span> flipColors(h *RBNode) &#123;</span><br><span class=\"line\">\th.color = RED</span><br><span class=\"line\">\th.left.color = BLACK</span><br><span class=\"line\">\th.right.color = BLACK</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *RedBlackT)</span></span> Put(key <span class=\"type\">int</span>, val <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\tt.root = t.put(t.root, key, val)</span><br><span class=\"line\">\tt.root.color = BLACK</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *RedBlackT)</span></span> put(h *RBNode, key <span class=\"type\">int</span>, val <span class=\"keyword\">interface</span>&#123;&#125;) *RBNode &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> h == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> NewRBNode(key, val)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key == h.key &#123;</span><br><span class=\"line\">\t\th.val = val</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &lt; h.key &#123;</span><br><span class=\"line\">\t\th.left = t.put(h.left, key, val)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &gt; h.key &#123;</span><br><span class=\"line\">\t\th.right = t.put(h.right, key, val)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> h.right.color &amp;&amp; !h.left.color &#123;</span><br><span class=\"line\">\t\th = t.rotateLeft(h)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> h.left.color &amp;&amp; h.left.left.color &#123;</span><br><span class=\"line\">\t\th = t.rotateRight(h)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> h.left.color &amp;&amp; h.right.color &#123;</span><br><span class=\"line\">\t\tt.flipColors(h)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\th.size = h.left.size + h.right.size + <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> h</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-3-4-删除操作\"><a href=\"#3-3-4-删除操作\" class=\"headerlink\" title=\"3.3.4 删除操作\"></a>3.3.4 删除操作</h4><div class=\"pdf-container\" data-target=\"https://zhenruyi.github.io/files/RedBlackSearchTreeDel.pdf\" data-height=\"650px\"></div>\n\n\n\n<h4 id=\"3-3-5-红黑树的性质\"><a href=\"#3-3-5-红黑树的性质\" class=\"headerlink\" title=\"3.3.5 红黑树的性质\"></a>3.3.5 红黑树的性质</h4><p>高度不会超过2lgN。根结点到任意结点的平均路径长度为~lgN。</p>\n<p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search7.png\"></p>\n<hr>\n<h3 id=\"3-4-散列表\"><a href=\"#3-4-散列表\" class=\"headerlink\" title=\"3.4 散列表\"></a>3.4 散列表</h3><p>如果键都是小整数，可以使用数组实现无序的符号表。但是当出现更复杂的键时，就需要用算术操作将键转化为数组的索引来访问数组中的键值对。这就是散列表。散列的查找算法分为两步：</p>\n<ul>\n<li>用散列函数将被查找的键转化为数组的一个索引。</li>\n<li>出现相同的键，处理碰撞冲突。两种解决方法：拉链法和线性探测法。</li>\n</ul>\n<p>散列表是算法在空间和时间上做出权衡的经典例子：</p>\n<ul>\n<li>如果没有空间限制，可以直接将键作为数组的索引，这个索引可能是超大的，这样查找操作只需要访问内存一次。</li>\n<li>如果没有时间限制，使用无序数组顺序查找。</li>\n</ul>\n<h4 id=\"3-4-1-散列函数\"><a href=\"#3-4-1-散列函数\" class=\"headerlink\" title=\"3.4.1 散列函数\"></a>3.4.1 散列函数</h4><p>散列函数，目的是将键转化为数组的索引。有一个M大小的数组，就需要一个散列函数将任意键转化成M范围内的数，使0~M-1之间的每个整数都有相等的可能性。无论键是何种类型，都能转化为一个数。当键为：</p>\n<ul>\n<li>正整数。最常用的是除留余数法。除数不一定要是10的倍数，这样的话只能利用被除数的后几位。k%97要比k%100好。</li>\n<li>浮点数。如果是0-1之间的，将它乘以M并四舍五入。有缺陷，这种情况下高位起的作用更大，修正的办法是将键表示为二进制然后再使用除留余数法。</li>\n<li>字符串。将字符串作为一个大整数即可，然后使用除留余数法。</li>\n<li>组合键。组合起来，例如一个日期，hash = (((day * R +month) % M) * R +year) % M。只需要保证R足够小不溢出。</li>\n</ul>\n<h4 id=\"3-4-2-基于拉链法的散列表\"><a href=\"#3-4-2-基于拉链法的散列表\" class=\"headerlink\" title=\"3.4.2 基于拉链法的散列表\"></a>3.4.2 基于拉链法的散列表</h4><p>基于拉链法的散列表的性质：</p>\n<ul>\n<li>在M条链表和N个键的散列表中，任意一条链表中键的数量均在N/M的常数因子范围内的概率无限趋向于1。</li>\n<li>在M条链表和N个键的散列表中，未命中查找和插入操作所需的比较次数为~N/M。</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> ChainingHT <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 链表的平均长度N/M</span></span><br><span class=\"line\">\t<span class=\"comment\">// 键值对总数</span></span><br><span class=\"line\">\tN <span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"comment\">// 数组的大小</span></span><br><span class=\"line\">\tM <span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"comment\">// 数组</span></span><br><span class=\"line\">\tst []SequentialSearchST</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewChainingHT</span><span class=\"params\">(m <span class=\"type\">int</span>)</span></span> *ChainingHT &#123;</span><br><span class=\"line\">\tret := &amp;ChainingHT&#123;</span><br><span class=\"line\">\t\tM: m,</span><br><span class=\"line\">\t\tst: <span class=\"built_in\">make</span>([]SequentialSearchST, m),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(ht *ChainingHT)</span></span> hashfunc(key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> key % ht.M</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(ht *ChainingHT)</span></span> Get(key <span class=\"type\">int</span>) <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ht.st[ht.hashfunc(key)].Get(key)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(ht *ChainingHT)</span></span> Put(key <span class=\"type\">int</span>, val <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\tht.st[ht.hashfunc(key)].Put(key, val)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-4-3-基于线性探测法的散列表\"><a href=\"#3-4-3-基于线性探测法的散列表\" class=\"headerlink\" title=\"3.4.3 基于线性探测法的散列表\"></a>3.4.3 基于线性探测法的散列表</h4><p>散列表的另一种实现是开放地址散列表，依靠数组中的空位解决碰撞，用大小为M的数组保存N个键值对，M&gt;N。开放地址散列表中最简单的方法是线性探测法，当发生碰撞时，直接检查散列表的下一个位置，会出现三种情况：</p>\n<ul>\n<li>命中，键相同。</li>\n<li>未命中，键为空。</li>\n<li>继续查找，键不同。</li>\n</ul>\n<p>核心思想是，与其把空间用作链表，不如将它们作为在散列表中的空元素。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> LinearHT <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tN <span class=\"type\">int</span>   <span class=\"comment\">//键数量</span></span><br><span class=\"line\">\tM <span class=\"type\">int</span>   <span class=\"comment\">//数组大小</span></span><br><span class=\"line\">\tkeys []<span class=\"type\">int</span></span><br><span class=\"line\">\tvals []<span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewLinearHT</span><span class=\"params\">(m <span class=\"type\">int</span>)</span></span> *LinearHT &#123;</span><br><span class=\"line\">\tret := &amp;LinearHT&#123;</span><br><span class=\"line\">\t\tN: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t\tM: m,</span><br><span class=\"line\">\t\tkeys: <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, m),</span><br><span class=\"line\">\t\tvals: <span class=\"built_in\">make</span>([]<span class=\"keyword\">interface</span>&#123;&#125;, m),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; m; i++ &#123;</span><br><span class=\"line\">\t\tret.keys[i] = <span class=\"number\">-1</span></span><br><span class=\"line\">\t\tret.vals[i] = <span class=\"number\">-1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(ht *LinearHT)</span></span> hashFunc(key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> key % ht.M</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(ht *LinearHT)</span></span> Put(key <span class=\"type\">int</span>, val <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ht.N &gt;= ht.M / <span class=\"number\">2</span> &#123;</span><br><span class=\"line\">\t\tht.resize(<span class=\"number\">2</span> * ht.M)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tindex := ht.hashFunc(key)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> ht.keys[index] != <span class=\"number\">-1</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ht.keys[index] == key &#123;</span><br><span class=\"line\">\t\t\tht.vals[index] = val</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tindex = (index + <span class=\"number\">1</span>) % ht.M</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tht.keys[index] = key</span><br><span class=\"line\">\tht.vals[index] = val</span><br><span class=\"line\">\tht.N++</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(ht *LinearHT)</span></span> Get(key <span class=\"type\">int</span>) <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := ht.hashFunc(key); ht.keys[i] != <span class=\"number\">-1</span>; i = (i+<span class=\"number\">1</span>) % ht.M &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ht.keys[i] == key &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> ht.vals[i]</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(ht *LinearHT)</span></span> Del(key <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-4-4-调整数组大小\"><a href=\"#3-4-4-调整数组大小\" class=\"headerlink\" title=\"3.4.4 调整数组大小\"></a>3.4.4 调整数组大小</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(ht *LinearHT)</span></span> resize(r <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tt := NewLinearHT(r)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; ht.M; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ht.keys[i] != <span class=\"number\">-1</span> &#123;</span><br><span class=\"line\">\t\t\tt.Put(ht.keys[i], ht.vals[i])</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tht.keys = t.keys</span><br><span class=\"line\">\tht.vals = t.vals</span><br><span class=\"line\">\tht.M = t.M</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-4-5-内存使用\"><a href=\"#3-4-5-内存使用\" class=\"headerlink\" title=\"3.4.5 内存使用\"></a>3.4.5 内存使用</h4><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search8.png\"></p>\n<hr>\n<h3 id=\"3-5-应用\"><a href=\"#3-5-应用\" class=\"headerlink\" title=\"3.5 应用\"></a>3.5 应用</h3><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search9.png\"></p>\n<hr>\n","site":{"data":{}},"excerpt":"<p>《算法》第3章：查找。</p>\n<p>符号表，二叉查找树，平衡查找树，散列表，应用。</p>","more":"<hr>\n<p>使用符号表这个词来描述一张抽象的表格，将信息（值）存储在其中，然后按照指定的键来搜索并获取这些信息。键和值的具体意义取决于不同的应用。</p>\n<p>符号表有时被称为字典，符号表有时又叫索引。本章内容：</p>\n<ul>\n<li><p>基本的API和两种重要的实现。</p>\n</li>\n<li><p>三种经典的数据类型来实现高效的符号表：二叉查找树、红黑树和散列表。</p>\n</li>\n<li><p>总结，它们的若干扩展和应用。</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"3-1-符号表\"><a href=\"#3-1-符号表\" class=\"headerlink\" title=\"3.1 符号表\"></a>3.1 符号表</h3><p>符号表是一种存储键值对的数据结构，支持两种操作：插入(put)和查找(get)。</p>\n<p>符号表最主要的目的就是将一个键和一个值联系起来。</p>\n<h4 id=\"3-1-1-API\"><a href=\"#3-1-1-API\" class=\"headerlink\" title=\"3.1.1 API\"></a>3.1.1 API</h4><p>所有的实现遵循以下规则：</p>\n<ul>\n<li>每个键只对应一个值，不允许存在重复的键；</li>\n<li>插入的键值已存在时，会覆盖旧值；</li>\n<li>键不能为空，值可以为空。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>SearchTable</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>put(key, value)</td>\n<td>将键值对存入表中</td>\n</tr>\n<tr>\n<td>get(key) value</td>\n<td>获取键对应的值</td>\n</tr>\n<tr>\n<td>delete(key)</td>\n<td>删除</td>\n</tr>\n<tr>\n<td>contains(key) bool</td>\n<td>是否有对应的值</td>\n</tr>\n<tr>\n<td>isEnpty() bool</td>\n<td>是否为空</td>\n</tr>\n<tr>\n<td>size() int</td>\n<td>键值对数量</td>\n</tr>\n<tr>\n<td>keys() []interface{}</td>\n<td>表中所有键的集合</td>\n</tr>\n</tbody></table>\n<h4 id=\"3-1-2-有序符号表\"><a href=\"#3-1-2-有序符号表\" class=\"headerlink\" title=\"3.1.2 有序符号表\"></a>3.1.2 有序符号表</h4><p>对顺序有要求，符号表会保持键的有序并大大扩展它的API。定义一个有序符号表：</p>\n<ul>\n<li>最大键max和最小键min：查询其中的最大键和最小键，删除最大键和最小键。优先队列也能实现这些操作，但符号表不能存在重复的键，而且支持的操作更多。</li>\n<li>向上取整ceiling和向下取整floor：向下取整，找出小于等于该键的最大键；向上取整，找出大于等于该键的最小键。</li>\n<li>排名rank和选择select：排名，找出小于该键的数量；选择，找出排名为k的键。</li>\n<li>范围查找keys：在范围中的键。</li>\n</ul>\n<p>在基础API的基础上，添加下列方法：</p>\n<table>\n<thead>\n<tr>\n<th>OrderedSearchTable</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>min() key</td>\n<td>最小的键</td>\n</tr>\n<tr>\n<td>max() key</td>\n<td>最大的键</td>\n</tr>\n<tr>\n<td>delMin()</td>\n<td>删除最小的</td>\n</tr>\n<tr>\n<td>delMax()</td>\n<td></td>\n</tr>\n<tr>\n<td>floor(key) key</td>\n<td>向下取整</td>\n</tr>\n<tr>\n<td>ceiling(key) key</td>\n<td></td>\n</tr>\n<tr>\n<td>rank(key) int</td>\n<td>排名</td>\n</tr>\n<tr>\n<td>select(int) key</td>\n<td>选择排名为该数值的键</td>\n</tr>\n<tr>\n<td>size(low, high) int</td>\n<td>范围内有多少个键</td>\n</tr>\n<tr>\n<td>keys(low, high) keys</td>\n<td>返回范围内所有的键</td>\n</tr>\n</tbody></table>\n<p>API方法的默认实现：</p>\n<p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search1.png\"></p>\n<p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search2.png\"></p>\n<h4 id=\"3-1-3-用例举例\"><a href=\"#3-1-3-用例举例\" class=\"headerlink\" title=\"3.1.3 用例举例\"></a>3.1.3 用例举例</h4><p>混合使用查找和插入操作。大量不同的键。查找操作比插入操作多得多。</p>\n<h4 id=\"3-1-4-无序链表中的顺序查找\"><a href=\"#3-1-4-无序链表中的顺序查找\" class=\"headerlink\" title=\"3.1.4 无序链表中的顺序查找\"></a>3.1.4 无序链表中的顺序查找</h4><p>未命中的查找和插入操作都需要N次比较。命中的查找需要N次比较。向一个空表中插入N个不同的键需要~N^2/2次比较。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Node <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tkey <span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">\tval <span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">\tnxt *Node</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewNode</span><span class=\"params\">(k, v <span class=\"keyword\">interface</span>&#123;&#125;, n *Node)</span></span> *Node &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;Node&#123;</span><br><span class=\"line\">\t\tkey: k,</span><br><span class=\"line\">\t\tval: v,</span><br><span class=\"line\">\t\tnxt: n,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> SequentialSearchST <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tfirst *Node</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *SequentialSearchST)</span></span> Get(key <span class=\"keyword\">interface</span>&#123;&#125;) <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> x := s.first; x != <span class=\"literal\">nil</span>; x = x.nxt &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> x.key == key &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> x.val</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s *SequentialSearchST)</span></span> Put(key, val <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> x := s.first; x != <span class=\"literal\">nil</span>; x = x.nxt &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> x.key == key &#123;</span><br><span class=\"line\">\t\t\tx.val = val</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts.first = NewNode(key, val, s.first)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-1-5-有序数组中的二分查找\"><a href=\"#3-1-5-有序数组中的二分查找\" class=\"headerlink\" title=\"3.1.5 有序数组中的二分查找\"></a>3.1.5 有序数组中的二分查找</h4><p>使用一对平行的数组，一个储存键，一个储存值。</p>\n<ul>\n<li>保证数组中键的有序，然后使用数组的索引高效地实现get和其他操作；</li>\n<li>核心是rank方法，对于get方法，只要键在表中，rank方法就能精确告诉它的位置；</li>\n<li>对于put方法，只要键在表中，rank方法能够精确告诉我们去哪里更新它的值，以及当键不存在时将存储到何处。将更大的键向后移动一格，让键值对分别插入到合适的位置。</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Size() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> st.size</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> IsEmpty() <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> st.size == <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Rank(key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> st.size == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tlo, hi := <span class=\"number\">0</span>, st.size<span class=\"number\">-1</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> lo &lt;= hi&#123;</span><br><span class=\"line\">\t\tmid := lo + (hi-lo)/<span class=\"number\">2</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> st.keys[mid] == key &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> mid</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> key &lt; st.keys[mid] &#123;</span><br><span class=\"line\">\t\t\thi = mid<span class=\"number\">-1</span></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tlo = mid+<span class=\"number\">1</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> lo</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> rankRecursion(key <span class=\"type\">int</span>, lo, hi <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> hi &lt; lo &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> lo</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tmid := lo + (hi - lo) / <span class=\"number\">2</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key == st.keys[mid] &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> mid</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &lt; st.keys[mid] &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> st.rankRecursion(key, lo, mid<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> st.rankRecursion(key, mid+<span class=\"number\">1</span>, hi)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Get(key <span class=\"type\">int</span>) <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> st.IsEmpty() &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ti := st.Rank(key)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> i &lt; st.size &amp;&amp; st.keys[i] == key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> st.vals[i]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Put(key <span class=\"type\">int</span>, val <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\trank := st.Rank(key)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> st.keys[rank] == key &#123;</span><br><span class=\"line\">\t\tst.vals[rank] = val</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tst.keys = <span class=\"built_in\">append</span>(st.keys, <span class=\"number\">0</span>)</span><br><span class=\"line\">\tst.vals = <span class=\"built_in\">append</span>(st.vals, <span class=\"literal\">nil</span>)</span><br><span class=\"line\">\tst.size++</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := st.size<span class=\"number\">-1</span>; i &gt; rank; i++ &#123;</span><br><span class=\"line\">\t\tst.keys[i] = st.keys[i<span class=\"number\">-1</span>]</span><br><span class=\"line\">\t\tst.vals[i] = st.vals[i<span class=\"number\">-1</span>]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tst.keys[rank] = key</span><br><span class=\"line\">\tst.vals[rank] = val</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Min() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> st.keys[<span class=\"number\">0</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Max() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> st.keys[st.size<span class=\"number\">-1</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Select(k <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> st.keys[k]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Ceiling(key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\trank := st.Rank(key)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> rank</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Floor(key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\trank := st.Rank(key)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> st.keys[rank] == key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> rank</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> rank<span class=\"number\">-1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(st *BinarySearchST)</span></span> Del(key <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\trank := st.Rank(key)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> st.keys[rank] != key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpre := st.keys[:rank]</span><br><span class=\"line\">\tsuf := st.keys[rank+<span class=\"number\">1</span>:]</span><br><span class=\"line\">\tst.size--</span><br><span class=\"line\">\tst.keys = <span class=\"built_in\">append</span>(pre, suf...)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-1-6-对二分查找的分析\"><a href=\"#3-1-6-对二分查找的分析\" class=\"headerlink\" title=\"3.1.6 对二分查找的分析\"></a>3.1.6 对二分查找的分析</h4><p>最多需要lgN+1次比较。</p>\n<p>向一个空符号表插入N个元素在最坏情况下需要访问~N^2次数组。</p>\n<h4 id=\"3-1-7-预览\"><a href=\"#3-1-7-预览\" class=\"headerlink\" title=\"3.1.7 预览\"></a>3.1.7 预览</h4><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search3.png\"></p>\n<p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search4.png\"></p>\n<hr>\n<h3 id=\"3-2-二叉查找树\"><a href=\"#3-2-二叉查找树\" class=\"headerlink\" title=\"3.2 二叉查找树\"></a>3.2 二叉查找树</h3><p>一棵二叉查找树BST是一棵二叉树，其中每个结点的键都大于左子树的任意结点的键，而小于右子树任意结点的键。</p>\n<h4 id=\"3-2-1-基本实现\"><a href=\"#3-2-1-基本实现\" class=\"headerlink\" title=\"3.2.1 基本实现\"></a>3.2.1 基本实现</h4><p>递归很重要。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> TreeNode <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tkey <span class=\"type\">int</span></span><br><span class=\"line\">\tval <span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">\tleft, right *TreeNode</span><br><span class=\"line\">\tsize <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewTreeNode</span><span class=\"params\">(k <span class=\"type\">int</span>, v <span class=\"keyword\">interface</span>&#123;&#125;)</span></span> *TreeNode &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;TreeNode&#123;</span><br><span class=\"line\">\t\tkey: k,</span><br><span class=\"line\">\t\tval: v,</span><br><span class=\"line\">\t\tsize: <span class=\"number\">1</span>,</span><br><span class=\"line\">\t\tleft: <span class=\"literal\">nil</span>,</span><br><span class=\"line\">\t\tright: <span class=\"literal\">nil</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *TreeNode)</span></span> Size() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.size</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> BinarySearchTree <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\troot *TreeNode</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t BinarySearchTree)</span></span> Size() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.root.size</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> Get(key <span class=\"type\">int</span>) <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.get(t.root, key)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> get(root *TreeNode, key <span class=\"type\">int</span>) <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key == root.key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.val</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &lt; root.key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> t.get(root.left, key)</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> t.get(root.right, key)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> Put(key <span class=\"type\">int</span>, val <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\tt.root = t.put(t.root, key, val)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> put(root *TreeNode, key <span class=\"type\">int</span>, val <span class=\"keyword\">interface</span>&#123;&#125;) *TreeNode &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> NewTreeNode(key, val)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key == root.key &#123;</span><br><span class=\"line\">\t\troot.val = val</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &lt; root.key &#123;</span><br><span class=\"line\">\t\troot.left = t.put(root.left, key, val)</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\troot.right = t.put(root.right, key, val)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\troot.size = root.left.size + root.right.size + <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> root</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-2-2-分析\"><a href=\"#3-2-2-分析\" class=\"headerlink\" title=\"3.2.2 分析\"></a>3.2.2 分析</h4><p>插入操作和查找操作平均比较次数为~2lnN。</p>\n<h4 id=\"3-2-3-有序性相关的方法与删除操作\"><a href=\"#3-2-3-有序性相关的方法与删除操作\" class=\"headerlink\" title=\"3.2.3 有序性相关的方法与删除操作\"></a>3.2.3 有序性相关的方法与删除操作</h4><p>二叉树得到广泛应用的重要原因是它能够保持键的有序性：</p>\n<ul>\n<li>最大键和最小键。最大键：查找右子树。</li>\n<li>向上取整和向下取整。向下取整：key小于根结点，在左子树中。大于根结点，小于根结点的右子树，根结点本身。大于根结点的右子树，在右子树中。</li>\n<li>选择操作。找到排名为k的键，如果左子树的结点数t大于k，在左子树中；t等于k，就是根结点；t小于k，在右子树查找排名为k-t-1的键。</li>\n<li>排名。是选择操作的逆操作。</li>\n<li>删除最大键和删除最小键。</li>\n<li>删除操作。</li>\n<li>范围查找。</li>\n</ul>\n<p>性能分析</p>\n<p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search5.png\"></p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> Min() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.min(t.root)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> min(root *TreeNode) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root.left == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.min(root.left)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> Max() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.max(t.root)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> max(root *TreeNode) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root.right == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.max(root.right)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> Floor(key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.floor(t.root, key)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> floor(root *TreeNode, key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key == root.key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &lt; root.key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> t.floor(root.left, key)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root.right == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> rightKey := root.right.key; rightKey &gt; key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.floor(root.right, key)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> Ceiling(key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.ceiling(t.root, key)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> ceiling(root *TreeNode, key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key == root.key &#123;</span><br><span class=\"line\">\t\t <span class=\"keyword\">return</span> key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &gt; root.key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> t.floor(root.right, key)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root.left == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> leftKey := root.left.key; leftKey &lt; key &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.floor(root.left, key)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> Sel(rank <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.sel(t.root, rank)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> sel(root *TreeNode, rank <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tl := root.left.size</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> l == rank &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> l &gt; rank &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> t.sel(root.left, rank)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> t.sel(root.right, rank-l<span class=\"number\">-1</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> DelMax() &#123;</span><br><span class=\"line\">\tt.root = t.delMax(t.root)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> delMax(root *TreeNode) *TreeNode &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root.right == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.left</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\troot.right = t.delMax(root.right)</span><br><span class=\"line\">\troot.size = root.left.size + root.right.size + <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> root</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> Del(key <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tt.root = t.del(t.root, key)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *BinarySearchTree)</span></span> del(root *TreeNode, key <span class=\"type\">int</span>) *TreeNode &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &lt; root.key &#123;</span><br><span class=\"line\">\t\troot.left = t.del(root.left, key)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &gt; root.key &#123;</span><br><span class=\"line\">\t\troot.right = t.del(root.right, key)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root.right == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.left</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root.left == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> root.right</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 删除现在的结点</span></span><br><span class=\"line\">\t<span class=\"comment\">// 右子结点的结点作为现在的结点</span></span><br><span class=\"line\">\t<span class=\"comment\">// 处理size</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<h3 id=\"3-3-平衡查找树\"><a href=\"#3-3-平衡查找树\" class=\"headerlink\" title=\"3.3 平衡查找树\"></a>3.3 平衡查找树</h3><p>顺序查找、二分查找和二叉树查找在最坏的情况下性能还是很糟糕。</p>\n<p>平衡查找树，又叫红黑树。无论怎么构造它，运行时间都是对数级别的。</p>\n<h4 id=\"3-3-1-2-3查找树\"><a href=\"#3-3-1-2-3查找树\" class=\"headerlink\" title=\"3.3.1 _2-3查找树\"></a>3.3.1 _2-3查找树</h4><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search6.png\"></p>\n<div class=\"pdf-container\" data-target=\"https://zhenruyi.github.io/files/TwoTreeSearchTree.pdf\" data-height=\"650px\"></div>\n\n<h5 id=\"3-3-1-1-查找\"><a href=\"#3-3-1-1-查找\" class=\"headerlink\" title=\"3.3.1.1 查找\"></a>3.3.1.1 查找</h5><p>找到键相同的则查找命中，否则查找未命中。</p>\n<h5 id=\"3-3-1-2-向2-结点插入新键\"><a href=\"#3-3-1-2-向2-结点插入新键\" class=\"headerlink\" title=\"3.3.1.2 向2-结点插入新键\"></a>3.3.1.2 向2-结点插入新键</h5><p>插入新结点之后，也要保持树是完美平衡的。</p>\n<p>如果未命中的查找结束于一个2-结点，那就好办了，将2-结点转换成3-结点即可。</p>\n<h5 id=\"3-3-1-3-向一棵只含有一个3-结点的树插入新键\"><a href=\"#3-3-1-3-向一棵只含有一个3-结点的树插入新键\" class=\"headerlink\" title=\"3.3.1.3 向一棵只含有一个3-结点的树插入新键\"></a>3.3.1.3 向一棵只含有一个3-结点的树插入新键</h5><p>考虑一般情况之前，先假设这棵树只有一个结点，而且是一个3-结点。</p>\n<p>首先临时将新键插入到3-结点中，成为一个4-结点。</p>\n<p>然后将中间的键变成左边和右边两个键的父结点。</p>\n<p>变成了一棵含有三个2-结点的树。</p>\n<p>高度从0变成1。</p>\n<h5 id=\"3-3-1-4-向一个父结点为2-结点的3-结点插入新键\"><a href=\"#3-3-1-4-向一个父结点为2-结点的3-结点插入新键\" class=\"headerlink\" title=\"3.3.1.4 向一个父结点为2-结点的3-结点插入新键\"></a>3.3.1.4 向一个父结点为2-结点的3-结点插入新键</h5><p>第二轮热身。插入到3-结点变成一个4-结点，然后分解。</p>\n<p>并不会为中键创建一个新的结点，而是移动到原来的父结点中。</p>\n<h5 id=\"3-3-1-5-向一个父结点为3-结点的3-结点插入新键\"><a href=\"#3-3-1-5-向一个父结点为3-结点的3-结点插入新键\" class=\"headerlink\" title=\"3.3.1.5 向一个父结点为3-结点的3-结点插入新键\"></a>3.3.1.5 向一个父结点为3-结点的3-结点插入新键</h5><p>构建4-结点，然后将中键上浮。</p>\n<p>一直向上不断分解，直到遇到一个2-结点，或者到达根结点。</p>\n<h5 id=\"3-3-1-6-分解根结点\"><a href=\"#3-3-1-6-分解根结点\" class=\"headerlink\" title=\"3.3.1.6 分解根结点\"></a>3.3.1.6 分解根结点</h5><p>根结点为4-结点时，分解这个结点，中键变成新的根结点。</p>\n<h5 id=\"3-3-1-7-局部变换\"><a href=\"#3-3-1-7-局部变换\" class=\"headerlink\" title=\"3.3.1.7 局部变换\"></a>3.3.1.7 局部变换</h5><p>不光在树的底部，在树的任意位置都能进行上述操作。</p>\n<h5 id=\"3-3-1-8-全局性质\"><a href=\"#3-3-1-8-全局性质\" class=\"headerlink\" title=\"3.3.1.8 全局性质\"></a>3.3.1.8 全局性质</h5><p>局部变换不会影响树的全局有序性和平衡性。</p>\n<p>查找和插入操作访问的结点必然不超过lgN个。</p>\n<h4 id=\"3-3-2-红黑二叉查找树\"><a href=\"#3-3-2-红黑二叉查找树\" class=\"headerlink\" title=\"3.3.2 红黑二叉查找树\"></a>3.3.2 红黑二叉查找树</h4><div class=\"pdf-container\" data-target=\"https://zhenruyi.github.io/files/RedBlackSearchTree.pdf\" data-height=\"650px\"></div>\n\n<p>使用红黑二叉查找树来表达并实现2-3查找树。操作如下：</p>\n<ul>\n<li>替换3-结点。红黑二叉树背后的基本思想是用标准的二叉查找树和额外信息来表示。链接分为两种类型：红链接将两个2-结点连接起来构成一个3-结点，黑链接是普通链接。</li>\n<li>一种等价的定义。红链接均为左链接；没有任何一个结点同时和两条红链接相连；完美黑色平衡，即任意空连接到根结点上的黑链接数量相同。</li>\n<li>一一对应。将红链接画平，得到的图像和2-3查找树相同。</li>\n<li>颜色表示。颜色用一个布尔值保存。</li>\n<li>旋转。某些操作导致出现红色右链接或者两条连续的红链接，使用旋转操作改变红链接的指向。<ul>\n<li>左旋转：一条红色的右链接转换成左链接。将两个键中较小者作为根结点变成将较大者作为根结点。</li>\n<li>右旋转：</li>\n</ul>\n</li>\n<li>旋转后重置父结点的链接。使用左旋转或右旋转的返回值重置父结点。</li>\n<li>向2-结点插入新键。新键小于老键，新增一个红色的结点；新键大于老键，新增的红色结点会产生一条红色的右链接，需要左旋转。</li>\n<li>向树底部的2-结点插入新键。</li>\n<li>向一棵双键树插入新键。有三种情况，每种情况都会产生一个同时连接到两个红链接的结点。<ul>\n<li>新键大于原树中的两个键。直接将两个链接变为黑即可。其他两种情况最终也会变成这样。</li>\n<li>新键小于原树中的两个键。产生两个连续的红链接，此时要将上层的红链接右旋转得到第一种情况。</li>\n<li>新键处于两键之间。产生两条连续的红链接。将下层的红链接左旋转得到第二种情况。</li>\n</ul>\n</li>\n<li>红黑转换。局部变换，不会影响整棵树的黑色平衡性。</li>\n<li>根结点总是黑色的。</li>\n</ul>\n<h4 id=\"3-3-3-实现\"><a href=\"#3-3-3-实现\" class=\"headerlink\" title=\"3.3.3 实现\"></a>3.3.3 实现</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">\tRED = <span class=\"literal\">true</span></span><br><span class=\"line\">\tBLACK = <span class=\"literal\">false</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> RBNode <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tkey <span class=\"type\">int</span></span><br><span class=\"line\">\tval <span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">\tleft, right *RBNode</span><br><span class=\"line\">\tsize <span class=\"type\">int</span></span><br><span class=\"line\">\tcolor <span class=\"type\">bool</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewRBNode</span><span class=\"params\">(k <span class=\"type\">int</span>, v <span class=\"keyword\">interface</span>&#123;&#125;)</span></span> *RBNode &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;RBNode&#123;</span><br><span class=\"line\">\t\tkey: k,</span><br><span class=\"line\">\t\tval: k,</span><br><span class=\"line\">\t\tsize: <span class=\"number\">1</span>,</span><br><span class=\"line\">\t\tcolor: RED,</span><br><span class=\"line\">\t\tleft: <span class=\"literal\">nil</span>,</span><br><span class=\"line\">\t\tright: <span class=\"literal\">nil</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> RedBlackT <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\troot *RBNode</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *RedBlackT)</span></span> isRed(h *RBNode) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> h.color</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *RedBlackT)</span></span> rotateLeft(h *RBNode) *RBNode &#123;</span><br><span class=\"line\">\tx := h.right</span><br><span class=\"line\">\th.right = x.left</span><br><span class=\"line\">\tx.left = h</span><br><span class=\"line\">\tx.color = h.color</span><br><span class=\"line\">\th.color = RED</span><br><span class=\"line\">\tx.size = h.size</span><br><span class=\"line\">\th.size = h.left.size + h.right.size + <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *RedBlackT)</span></span> rotateRight(h *RBNode) *RBNode &#123;</span><br><span class=\"line\">\tx := h.left</span><br><span class=\"line\">\th.left = x.right</span><br><span class=\"line\">\tx.right = h</span><br><span class=\"line\">\tx.color = h.color</span><br><span class=\"line\">\th.color = RED</span><br><span class=\"line\">\tx.size = h.size</span><br><span class=\"line\">\th.size = h.left.size + h.right.size + <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *RedBlackT)</span></span> flipColors(h *RBNode) &#123;</span><br><span class=\"line\">\th.color = RED</span><br><span class=\"line\">\th.left.color = BLACK</span><br><span class=\"line\">\th.right.color = BLACK</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *RedBlackT)</span></span> Put(key <span class=\"type\">int</span>, val <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\tt.root = t.put(t.root, key, val)</span><br><span class=\"line\">\tt.root.color = BLACK</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(t *RedBlackT)</span></span> put(h *RBNode, key <span class=\"type\">int</span>, val <span class=\"keyword\">interface</span>&#123;&#125;) *RBNode &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> h == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> NewRBNode(key, val)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key == h.key &#123;</span><br><span class=\"line\">\t\th.val = val</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &lt; h.key &#123;</span><br><span class=\"line\">\t\th.left = t.put(h.left, key, val)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> key &gt; h.key &#123;</span><br><span class=\"line\">\t\th.right = t.put(h.right, key, val)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> h.right.color &amp;&amp; !h.left.color &#123;</span><br><span class=\"line\">\t\th = t.rotateLeft(h)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> h.left.color &amp;&amp; h.left.left.color &#123;</span><br><span class=\"line\">\t\th = t.rotateRight(h)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> h.left.color &amp;&amp; h.right.color &#123;</span><br><span class=\"line\">\t\tt.flipColors(h)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\th.size = h.left.size + h.right.size + <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> h</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-3-4-删除操作\"><a href=\"#3-3-4-删除操作\" class=\"headerlink\" title=\"3.3.4 删除操作\"></a>3.3.4 删除操作</h4><div class=\"pdf-container\" data-target=\"https://zhenruyi.github.io/files/RedBlackSearchTreeDel.pdf\" data-height=\"650px\"></div>\n\n\n\n<h4 id=\"3-3-5-红黑树的性质\"><a href=\"#3-3-5-红黑树的性质\" class=\"headerlink\" title=\"3.3.5 红黑树的性质\"></a>3.3.5 红黑树的性质</h4><p>高度不会超过2lgN。根结点到任意结点的平均路径长度为~lgN。</p>\n<p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search7.png\"></p>\n<hr>\n<h3 id=\"3-4-散列表\"><a href=\"#3-4-散列表\" class=\"headerlink\" title=\"3.4 散列表\"></a>3.4 散列表</h3><p>如果键都是小整数，可以使用数组实现无序的符号表。但是当出现更复杂的键时，就需要用算术操作将键转化为数组的索引来访问数组中的键值对。这就是散列表。散列的查找算法分为两步：</p>\n<ul>\n<li>用散列函数将被查找的键转化为数组的一个索引。</li>\n<li>出现相同的键，处理碰撞冲突。两种解决方法：拉链法和线性探测法。</li>\n</ul>\n<p>散列表是算法在空间和时间上做出权衡的经典例子：</p>\n<ul>\n<li>如果没有空间限制，可以直接将键作为数组的索引，这个索引可能是超大的，这样查找操作只需要访问内存一次。</li>\n<li>如果没有时间限制，使用无序数组顺序查找。</li>\n</ul>\n<h4 id=\"3-4-1-散列函数\"><a href=\"#3-4-1-散列函数\" class=\"headerlink\" title=\"3.4.1 散列函数\"></a>3.4.1 散列函数</h4><p>散列函数，目的是将键转化为数组的索引。有一个M大小的数组，就需要一个散列函数将任意键转化成M范围内的数，使0~M-1之间的每个整数都有相等的可能性。无论键是何种类型，都能转化为一个数。当键为：</p>\n<ul>\n<li>正整数。最常用的是除留余数法。除数不一定要是10的倍数，这样的话只能利用被除数的后几位。k%97要比k%100好。</li>\n<li>浮点数。如果是0-1之间的，将它乘以M并四舍五入。有缺陷，这种情况下高位起的作用更大，修正的办法是将键表示为二进制然后再使用除留余数法。</li>\n<li>字符串。将字符串作为一个大整数即可，然后使用除留余数法。</li>\n<li>组合键。组合起来，例如一个日期，hash = (((day * R +month) % M) * R +year) % M。只需要保证R足够小不溢出。</li>\n</ul>\n<h4 id=\"3-4-2-基于拉链法的散列表\"><a href=\"#3-4-2-基于拉链法的散列表\" class=\"headerlink\" title=\"3.4.2 基于拉链法的散列表\"></a>3.4.2 基于拉链法的散列表</h4><p>基于拉链法的散列表的性质：</p>\n<ul>\n<li>在M条链表和N个键的散列表中，任意一条链表中键的数量均在N/M的常数因子范围内的概率无限趋向于1。</li>\n<li>在M条链表和N个键的散列表中，未命中查找和插入操作所需的比较次数为~N/M。</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> ChainingHT <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 链表的平均长度N/M</span></span><br><span class=\"line\">\t<span class=\"comment\">// 键值对总数</span></span><br><span class=\"line\">\tN <span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"comment\">// 数组的大小</span></span><br><span class=\"line\">\tM <span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"comment\">// 数组</span></span><br><span class=\"line\">\tst []SequentialSearchST</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewChainingHT</span><span class=\"params\">(m <span class=\"type\">int</span>)</span></span> *ChainingHT &#123;</span><br><span class=\"line\">\tret := &amp;ChainingHT&#123;</span><br><span class=\"line\">\t\tM: m,</span><br><span class=\"line\">\t\tst: <span class=\"built_in\">make</span>([]SequentialSearchST, m),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(ht *ChainingHT)</span></span> hashfunc(key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> key % ht.M</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(ht *ChainingHT)</span></span> Get(key <span class=\"type\">int</span>) <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ht.st[ht.hashfunc(key)].Get(key)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(ht *ChainingHT)</span></span> Put(key <span class=\"type\">int</span>, val <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\tht.st[ht.hashfunc(key)].Put(key, val)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-4-3-基于线性探测法的散列表\"><a href=\"#3-4-3-基于线性探测法的散列表\" class=\"headerlink\" title=\"3.4.3 基于线性探测法的散列表\"></a>3.4.3 基于线性探测法的散列表</h4><p>散列表的另一种实现是开放地址散列表，依靠数组中的空位解决碰撞，用大小为M的数组保存N个键值对，M&gt;N。开放地址散列表中最简单的方法是线性探测法，当发生碰撞时，直接检查散列表的下一个位置，会出现三种情况：</p>\n<ul>\n<li>命中，键相同。</li>\n<li>未命中，键为空。</li>\n<li>继续查找，键不同。</li>\n</ul>\n<p>核心思想是，与其把空间用作链表，不如将它们作为在散列表中的空元素。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> LinearHT <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tN <span class=\"type\">int</span>   <span class=\"comment\">//键数量</span></span><br><span class=\"line\">\tM <span class=\"type\">int</span>   <span class=\"comment\">//数组大小</span></span><br><span class=\"line\">\tkeys []<span class=\"type\">int</span></span><br><span class=\"line\">\tvals []<span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewLinearHT</span><span class=\"params\">(m <span class=\"type\">int</span>)</span></span> *LinearHT &#123;</span><br><span class=\"line\">\tret := &amp;LinearHT&#123;</span><br><span class=\"line\">\t\tN: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t\tM: m,</span><br><span class=\"line\">\t\tkeys: <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, m),</span><br><span class=\"line\">\t\tvals: <span class=\"built_in\">make</span>([]<span class=\"keyword\">interface</span>&#123;&#125;, m),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; m; i++ &#123;</span><br><span class=\"line\">\t\tret.keys[i] = <span class=\"number\">-1</span></span><br><span class=\"line\">\t\tret.vals[i] = <span class=\"number\">-1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(ht *LinearHT)</span></span> hashFunc(key <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> key % ht.M</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(ht *LinearHT)</span></span> Put(key <span class=\"type\">int</span>, val <span class=\"keyword\">interface</span>&#123;&#125;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ht.N &gt;= ht.M / <span class=\"number\">2</span> &#123;</span><br><span class=\"line\">\t\tht.resize(<span class=\"number\">2</span> * ht.M)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tindex := ht.hashFunc(key)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> ht.keys[index] != <span class=\"number\">-1</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ht.keys[index] == key &#123;</span><br><span class=\"line\">\t\t\tht.vals[index] = val</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tindex = (index + <span class=\"number\">1</span>) % ht.M</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tht.keys[index] = key</span><br><span class=\"line\">\tht.vals[index] = val</span><br><span class=\"line\">\tht.N++</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(ht *LinearHT)</span></span> Get(key <span class=\"type\">int</span>) <span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := ht.hashFunc(key); ht.keys[i] != <span class=\"number\">-1</span>; i = (i+<span class=\"number\">1</span>) % ht.M &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ht.keys[i] == key &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> ht.vals[i]</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(ht *LinearHT)</span></span> Del(key <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-4-4-调整数组大小\"><a href=\"#3-4-4-调整数组大小\" class=\"headerlink\" title=\"3.4.4 调整数组大小\"></a>3.4.4 调整数组大小</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(ht *LinearHT)</span></span> resize(r <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tt := NewLinearHT(r)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; ht.M; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ht.keys[i] != <span class=\"number\">-1</span> &#123;</span><br><span class=\"line\">\t\t\tt.Put(ht.keys[i], ht.vals[i])</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tht.keys = t.keys</span><br><span class=\"line\">\tht.vals = t.vals</span><br><span class=\"line\">\tht.M = t.M</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-4-5-内存使用\"><a href=\"#3-4-5-内存使用\" class=\"headerlink\" title=\"3.4.5 内存使用\"></a>3.4.5 内存使用</h4><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search8.png\"></p>\n<hr>\n<h3 id=\"3-5-应用\"><a href=\"#3-5-应用\" class=\"headerlink\" title=\"3.5 应用\"></a>3.5 应用</h3><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms03Search9.png\"></p>\n<hr>"},{"title":"《算法》笔记：第2章  排序","date":"2022-04-13T04:26:58.000Z","id":"algorithms2","_content":"\n\n\n《算法》第2章：排序。\n\n初级排序算法，归并排序，快速排序，优先队列，应用。\n\n\n\n<!-- more -->\n\n\n\n---\n\n\n\n在计算时代早期，普遍认为30%的计算周期都用在了排序上。如果今天这个比例降低了，可能的原因之一是排序算法更高效了，而并非排序的重要性降低了。\n\n\n\n---\n\n### 2.1 初级排序算法\n\n学习两种初级的排序算法以及其中一种的变体。这些简单的算法在某些情况下比我们以后讨论的复杂算法更有效。\n\n#### 2.1.1 游戏规则\n\n比较函数的模板。\n\n```go\nfunc less(v, w int) bool {\n\treturn v < w\n}\n\nfunc exch(a []int, i, j int) {\n\ta[i], a[j] = a[j], a[i]\n}\n```\n\n对于每一种排序，都需要验证是否排序成功，运行时间和额外的内存使用。\n\n#### 2.1.2 选择排序\n\n对于长度为N的数组，选择排序需要大约(N^2 / 2)次比较和N次交换。选择排序有两个鲜明的特点：\n\n- 运行时间和输入无关。总是需要那么多次比较，无论输入的数组已经有序或全部相等或随机排列的。\n- 数据移动的次数最少。只需要N次交换。\n\n```go\nfunc SelectionSort(a []int) {\n\tlength := len(a)\n\tfor i := 0; i < length-1; i++ {\n\t\tmin := i\n\t\tfor j := i+1; j < length; j++ {\n\t\t\tif a[j] < a[min] {\n\t\t\t\tmin = j\n\t\t\t}\n\t\t}\n\t\texch(a, min, i)\n\t}\n}\n```\n\n#### 2.1.3 插入排序\n\n对于随机排列的长度为N且主键不重复的数组：\n\n- 平均，需要~(N^2 / 4)次比较以及~(N^2 / 4)次交换。\n- 最坏情况下，需要~(N^2 / 2)次比较以及~(N^2 / 2)次交换。\n- 最好情况下，需要N-1次比较和0次交换。\n\n特点：\n\n- 插入排序所需的时间取决于输入中元素的初始顺序。\n- 插入排序对实际应用中常见的某类非随机数组很有效。\n- 插入排序对部分有序的数组很有效。典型的部分有序的数组：\n  - 数组中每个元素距离它最终位置都不远。\n  - 一个有序的大数组接一个小数组。\n  - 数组中只有几个元素的位置不正确。\n\n```go\nfunc InsertionSort(a []int) {\n\tlength := len(a)\n\tfor i := 1; i < length; i++ {\n\t\tfor j := i; j >= 0; j-- {\n\t\t\tif a[j] < a[j-1] {\n\t\t\t\texch(a, j, j-1)\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n#### 2.1.4 排序算法的可视化\n\n[数据结构和算法动态可视化 (Chinese) - VisuAlgo](https://visualgo.net/zh)\n\n#### 2.1.5 比较两种排序算法\n\n1. 对于随机排序的无重复主键的数组，插入排序和选择排序的运行时间是平方级别的，两者之比应该是一个较小的常数。\n2. 某些特殊情况下它们也是很好的选择。\n\n#### 2.1.6 希尔排序\n\n希尔排序的思想是使数组中任意间隔为h的元素都是有序的，称为h有序数组。\n\n希尔排序更高效的原因是它权衡了子数组的规模和有序性。排序之初，各个子数组都很短；排序之后，子数组部分有序。这两种情况都很适合插入排序。\n\n希尔排序也可以用于大型数组，它对任意排序的数组表现也很好。希尔排序比插入排序和选择排序快得多，并且数组越大，优势越大。\n\n希尔排序的时间复杂度，目前最重要的结论是它的运行时间达不到平方级别。\n\n```go\nfunc ShellSort(a []int) {\n\tlength := len(a)\n\th := 1\n\tfor h < length / 3 {\n\t\th = h * 3 + 1\n\t}\n\tfor h >= 1 {\n\t\tfor i := h; i < length; i++ {\n\t\t\tfor j := i; j >= h; j -= h {\n\t\t\t\tif less(a, j, j-h) {\n\t\t\t\t\texch(a, j, j-h)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\th /= 3\n\t}\n}\n```\n\n\n\n---\n\n\n\n### 2.2 归并排序\n\n归并操作：将两个有序的数组归并成一个更大的有序数组。\n\n归并排序：分成两部分，分别排序，然后归并起来。\n\n归并排序最吸引人的性质是它能够保证将长度为N的数组排序所需的时间和NlogN成正比；它的主要缺点是它所需的额外空间和N成正比。\n\n#### 2.2.1 原地归并的抽象方法\n\n将两个有序的数组归并成一个更大的有序数组。\n\n```go\n// 归并a和b两个切片\nfunc merge1(a, b []int) []int {\n\tret := make([]int, 0)\n\tfor len(a) > 0 && len(b) > 0 {\n\t\tif a[0] > b[0] {\n\t\t\tret = append(ret, b[0])\n\t\t\tb = b[1:]\n\t\t} else {\n\t\t\tret = append(ret, a[0])\n\t\t\ta = a[1:]\n\t\t}\n\t}\n\tfor len(a) > 0 {\n\t\tret = append(ret, a[0])\n\t\ta = a[1:]\n\t}\n\tfor len(b) > 0 {\n\t\tret = append(ret, b[0])\n\t\tb = b[1:]\n\t}\n\treturn ret\n}\n\n// 归并[low:mid]和[mid+1:hig]\nfunc merge2(a []int, low, mid, hig int) {\n\ti, j := low, mid+1\n\taux := make([]int, 0)\n\tfor _, v := range a {\n\t\taux = append(aux, v)\n\t}\n\tfor k := low; k <= hig; k++ {\n\t\tif i > mid {\n\t\t\ta[k] = aux[j]\n\t\t\tj++\n\t\t} else if j > hig {\n\t\t\ta[k] = aux[i]\n\t\t\ti++\n\t\t} else if less(a, i, j) {\n\t\t\ta[k] = aux[i]\n\t\t\ti++\n\t\t} else {\n\t\t\ta[k] = aux[j]\n\t\t\tj++\n\t\t}\n\t}\n}\n```\n\n\n\n#### 2.2.2 自顶向下的归并排序\n\n应用了高效算法设计的分治思想。如果它能将两个子数组排序，它就能够通过归并两个子数组来将整个数组排序。\n\n- 对于长度为N的任意数组，自顶向下的归并排序需要0.5NlgN到NlgN次比较。\n- 对于长度为N的任意数组，自顶向下的归并排序最多需要访问数组6NlgN次。\n\n归并排序的主要缺点是额外空间和N大小成正比，另一方面，通过一些改变能够大幅度缩短归并排序的运行时间。\n\n- 对小规模子数组使用插入排序。递归会使小规模问题的方法调用过于频繁。\n- 不将元素复制到辅助数组。可以节省时间，但是空间不行。\n\n```go\nfunc MergeSortTop2Bottom(a []int) []int {\n\tlength := len(a)\n\tif length <= 1 {\n\t\treturn a\n\t}\n\tmid := length / 2\n\treturn merge1(MergeSortTop2Bottom(a[:mid]), MergeSortTop2Bottom(a[mid:]))\n}\n```\n\n\n\n#### 2.2.3 自底向上的归并排序\n\n对于长度为N的任意数组，自顶向下的归并排序需要0.5NlgN到NlgN次比较，最多需要访问数组6NlgN次。\n\n```go\nfunc MergeSortBottom2Top(a []int) {\n\tlength := len(a)\n\tfor sz := 1; sz < length; sz += sz {\n\t\tfor low := 0; low < length-sz; low += sz+sz {\n\t\t\tmerge2(a, low, low+sz-1, min(low+sz+sz-1, length-1))\n\t\t}\n\t}\n}\n```\n\n\n\n#### 2.2.4 排序算法的复杂度\n\n没有任何基于比较的算法能够保证使用少于lg(N!)~NlgN次比较，将长度为N的数组排序。\n\n归并排序是一种渐进最优的基于比较排序的算法。\n\n[渐进最优性](https://blog.csdn.net/weixin_43509834/article/details/106468144)\n\n\n\n---\n\n\n\n### 2.3 快速排序\n\n应用最广泛的算法，流行的原因是它实现简单、适用于各种不同的输入数据且在一般应用中比其他排序算法都要快得多。\n\n快速排序的特点：\n\n- 原地排序。只需要一个很小的辅助栈。\n- 长度为N的数组所需的时间和NlgN成正比。\n- 快速排序的内循环比大多数排序算法都要短小，意味着它无论在理论上还是实际中都要更快。\n- 缺点是非常脆弱，要小心避免低劣的性能。\n\n#### 2.3.1 基本算法\n\n快排是一种分治的排序算法，分成两个子数组，两部分独立地排序。注意：\n\n- 别越界，测试条件要注意；\n- 保持随机性，可以在排序前打乱数组；\n- 终止递归的条件。\n\n```go\nfunc QuickSort(a []int) {\n\tquickSort(a, 0, len(a)-1)\n}\n\nfunc quickSort(a []int, left, right int) {\n\tif left >= right {\n\t\treturn\n\t}\n\ti, j := left, right\n\tkey := a[left]\n\tfor left < right {\n\t\tfor left < right && a[right] >= key {\n\t\t\tright--\n\t\t}\n\t\tif left < right {\n\t\t\ta[left] = a[right]\n\t\t\tleft++\n\t\t}\n\t\tfor left < right && a[left] <= key {\n\t\t\tleft++\n\t\t}\n\t\tif left < right {\n\t\t\ta[right] = a[left]\n\t\t\tright--\n\t\t}\n\t}\n\ta[left] = key\n\tquickSort(a, i, left-1)\n\tquickSort(a, left+1, j)\n}\n```\n\n\n\n#### 2.3.2 性能特点\n\n平均需要~2NlnN次比较，以及1/6次交换。最多需要N^2/2次比较，但随机打乱能预防这种情况。\n\n快排的实现仍有一个潜在的缺点：在切分不平衡时这个程序可能会及其低效。\n\n\n\n#### 2.3.3 算法改进\n\n1. 切换到插入排序：和大多数递归排序算法一样，改进快排的性能一个简单的办法。\n2. 三取样切分：使用子数组的一小部分元素的中位数来切分数组。\n3. 熵最优的排序：含有大量元素相同的时候，将数组切分成三部分，分别对应小于等于大于。\n\n\n\n---\n\n\n\n### 2.4 优先队列\n\n许多应用都需要处理有序的元素，但不一定要求全部有序，或者不一定要一次就将它们排序。很多情况下我们会收集一些元素，处理当前键值最大的元素，然后再收集更多的元素，再处理。\n\n在这种情况下，合适的数据结构要支持两种操作：删除最大的元素和插入元素。这种数据结构叫优先队列。\n\n#### 2.4.1 API\n\n最重要的操作时删除最大元素和插入元素。\n\n| MaxPQ        |              |\n| ------------ | ------------ |\n| Insert(item) | 插入         |\n| max()        | 返回最大元素 |\n| delMax()     | 删除最大元素 |\n| isEmpty()    |              |\n| size()       |              |\n\n从N个输入中找到最大的M个元素所需的成本：\n\n| 示例                 | 时间  | 空间 |\n| -------------------- | ----- | ---- |\n| 排序算法             | NlgN  | N    |\n| 初级实现的优先队列   | NM    | M    |\n| 基于堆实现的优先队列 | NlogM | M    |\n\n\n\n#### 2.4.2 初级实现\n\n##### 2.4.2.1 数组实现（无序）\n\n基于下压栈的代码。\n\ninsert()使用push()。\n\n要删除最大元素，可以添加一段类似于选择排序的内循环代码，将最大的元素和边界元素交换然后删除它。\n\n##### 2.4.2.2 数组实现（有序）\n\ninsert()方法，添加时使用插入排序。\n\n删除最大元素和pop()一样。\n\n##### 2.4.2.3 链表表示法\n\n跟基于链表实现的下压栈类似。\n\n使用无序链表是解决这个问题的惰性方法，仅在必要时才会找出最大元素；\n\n使用有序链表是积极方法，尽可能在插入元素的时候保持列表有序，使后续操作更高效。\n\n\n\n#### 2.4.3 堆的定义\n\n实现栈或队列，和实现优先队列的最大不同在于性能的要求。对于栈和队列，能在常数时间完成所有操作；对于优先队列，插入元素和删除最大元素两个操作之一在最坏情况下需要线性时间来完成。基于堆来实现可以保证这两种操作都能更快运行。\n\n堆的定义和性质如下：\n\n- 当一棵二叉树的每个结点都大于等于它的两个子结点时，它被称为堆有序。\n\n- 根节点是堆排序的二叉树中最大的结点。\n- 二叉堆是一组能够用堆有序的完全二叉树排序的元素，并在数组中按照层级储存。\n- k位置的结点，它的父节点位置为k-1/2，子结点分别为2k+1和2k+2。\n- 一棵大小为N的完全二叉树的高度为floor(lgN)。\n\n#### 2.4.4 堆的算法\n\n对于大小为N的优先队列，插入操作只需不超过lgN+1次比较，删除操作需要不超过2lgN次比较。\n\n```go\ntype MaxPriorityQueue struct {\n\tpriorityQueue []int\n\tlength int\n}\n\nfunc (pq *MaxPriorityQueue) IsEmpty() bool {\n\treturn pq.length == 0\n}\n\nfunc (pq *MaxPriorityQueue) Size() int {\n\treturn pq.length\n}\n\n// 上浮，在插入操作之后\nfunc (pq *MaxPriorityQueue) swim(k int) {\n\tfor k > 0 && less(pq.priorityQueue, k-1/2, k) {\n\t\texch(pq.priorityQueue, k-1/2, k)\n\t\tk = k-1 / 2\n\t}\n}\n\n//下沉，恢复堆\nfunc (pq *MaxPriorityQueue) sink(k int) {\n\tfor 2*k+1 < pq.length {\n\t\tj := 2*k + 1\n\t\tif j+1 < pq.length && less(pq.priorityQueue, j, j+1) {\n\t\t\tj++\n\t\t}\n\t\tif !less(pq.priorityQueue, k, j) {\n\t\t\tbreak\n\t\t}\n\t\texch(pq.priorityQueue, k, j)\n\t\tk = j\n\t}\n}\n\nfunc (pq *MaxPriorityQueue) Insert(item int) {\n\tpq.priorityQueue[pq.length] = item\n\tpq.swim(pq.length)\n\tpq.length++\n}\n\nfunc (pq *MaxPriorityQueue) DelMax() int {\n\tmax := pq.priorityQueue[0]\n\texch(pq.priorityQueue, 0, pq.length-1)\n\tpq.length--\n\tpq.priorityQueue = pq.priorityQueue[:pq.length]\n\tpq.sink(0)\n\treturn max\n}\n```\n\n\n\n#### 2.4.5 堆排序\n\n下沉操作：只需要少于2N次比较和少于N次的交换。\n\n排序操作：只需要少于2NlgN+2N次比较。\n\n```go\nfunc HeapSort(a []int) {\n\t// 构建最大堆\n\tfor i := len(a)/2 - 1; i >= 0; i-- {\n\t\tAdjustHeap(a, i, len(a))\n\t}\n\t// 置于队尾\n\tfor j := len(a) - 1; j > 0; j-- {\n\t\ta[0], a[j] = a[j], a[0]\n\t\tAdjustHeap(a, 0, j)\n\t}\n}\n\nfunc AdjustHeap(a []int, i, length int) {\n\ttmp := a[i]\n\tfor k := i*2 + 1; k < length; k = k*2 + 1 {\n\t\tif k+1 < length && a[k] < a[k+1] {\n\t\t\tk++\n\t\t}\n\t\tif a[k] > tmp {\n\t\t\ta[i] = a[k]\n\t\t\ti = k\n\t\t} else {\n\t\t\tbreak\n\t\t}\n\t}\n\ta[i] = tmp\n}\n```\n\n\n\n---\n\n\n\n### 2.5 应用\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms02Sorting1.png)\n\n快速排序是最快的通用排序算法。\n\n\n\n\n\n---\n\n\n\n","source":"_posts/algo-learn03Algorithms02Sorting.md","raw":"---\ntitle: 《算法》笔记：第2章  排序\ndate: 2022-04-13 12:26:58\nid: algorithms2\ncategories:\n- algo\ntags:\n- learn\n---\n\n\n\n《算法》第2章：排序。\n\n初级排序算法，归并排序，快速排序，优先队列，应用。\n\n\n\n<!-- more -->\n\n\n\n---\n\n\n\n在计算时代早期，普遍认为30%的计算周期都用在了排序上。如果今天这个比例降低了，可能的原因之一是排序算法更高效了，而并非排序的重要性降低了。\n\n\n\n---\n\n### 2.1 初级排序算法\n\n学习两种初级的排序算法以及其中一种的变体。这些简单的算法在某些情况下比我们以后讨论的复杂算法更有效。\n\n#### 2.1.1 游戏规则\n\n比较函数的模板。\n\n```go\nfunc less(v, w int) bool {\n\treturn v < w\n}\n\nfunc exch(a []int, i, j int) {\n\ta[i], a[j] = a[j], a[i]\n}\n```\n\n对于每一种排序，都需要验证是否排序成功，运行时间和额外的内存使用。\n\n#### 2.1.2 选择排序\n\n对于长度为N的数组，选择排序需要大约(N^2 / 2)次比较和N次交换。选择排序有两个鲜明的特点：\n\n- 运行时间和输入无关。总是需要那么多次比较，无论输入的数组已经有序或全部相等或随机排列的。\n- 数据移动的次数最少。只需要N次交换。\n\n```go\nfunc SelectionSort(a []int) {\n\tlength := len(a)\n\tfor i := 0; i < length-1; i++ {\n\t\tmin := i\n\t\tfor j := i+1; j < length; j++ {\n\t\t\tif a[j] < a[min] {\n\t\t\t\tmin = j\n\t\t\t}\n\t\t}\n\t\texch(a, min, i)\n\t}\n}\n```\n\n#### 2.1.3 插入排序\n\n对于随机排列的长度为N且主键不重复的数组：\n\n- 平均，需要~(N^2 / 4)次比较以及~(N^2 / 4)次交换。\n- 最坏情况下，需要~(N^2 / 2)次比较以及~(N^2 / 2)次交换。\n- 最好情况下，需要N-1次比较和0次交换。\n\n特点：\n\n- 插入排序所需的时间取决于输入中元素的初始顺序。\n- 插入排序对实际应用中常见的某类非随机数组很有效。\n- 插入排序对部分有序的数组很有效。典型的部分有序的数组：\n  - 数组中每个元素距离它最终位置都不远。\n  - 一个有序的大数组接一个小数组。\n  - 数组中只有几个元素的位置不正确。\n\n```go\nfunc InsertionSort(a []int) {\n\tlength := len(a)\n\tfor i := 1; i < length; i++ {\n\t\tfor j := i; j >= 0; j-- {\n\t\t\tif a[j] < a[j-1] {\n\t\t\t\texch(a, j, j-1)\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n#### 2.1.4 排序算法的可视化\n\n[数据结构和算法动态可视化 (Chinese) - VisuAlgo](https://visualgo.net/zh)\n\n#### 2.1.5 比较两种排序算法\n\n1. 对于随机排序的无重复主键的数组，插入排序和选择排序的运行时间是平方级别的，两者之比应该是一个较小的常数。\n2. 某些特殊情况下它们也是很好的选择。\n\n#### 2.1.6 希尔排序\n\n希尔排序的思想是使数组中任意间隔为h的元素都是有序的，称为h有序数组。\n\n希尔排序更高效的原因是它权衡了子数组的规模和有序性。排序之初，各个子数组都很短；排序之后，子数组部分有序。这两种情况都很适合插入排序。\n\n希尔排序也可以用于大型数组，它对任意排序的数组表现也很好。希尔排序比插入排序和选择排序快得多，并且数组越大，优势越大。\n\n希尔排序的时间复杂度，目前最重要的结论是它的运行时间达不到平方级别。\n\n```go\nfunc ShellSort(a []int) {\n\tlength := len(a)\n\th := 1\n\tfor h < length / 3 {\n\t\th = h * 3 + 1\n\t}\n\tfor h >= 1 {\n\t\tfor i := h; i < length; i++ {\n\t\t\tfor j := i; j >= h; j -= h {\n\t\t\t\tif less(a, j, j-h) {\n\t\t\t\t\texch(a, j, j-h)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\th /= 3\n\t}\n}\n```\n\n\n\n---\n\n\n\n### 2.2 归并排序\n\n归并操作：将两个有序的数组归并成一个更大的有序数组。\n\n归并排序：分成两部分，分别排序，然后归并起来。\n\n归并排序最吸引人的性质是它能够保证将长度为N的数组排序所需的时间和NlogN成正比；它的主要缺点是它所需的额外空间和N成正比。\n\n#### 2.2.1 原地归并的抽象方法\n\n将两个有序的数组归并成一个更大的有序数组。\n\n```go\n// 归并a和b两个切片\nfunc merge1(a, b []int) []int {\n\tret := make([]int, 0)\n\tfor len(a) > 0 && len(b) > 0 {\n\t\tif a[0] > b[0] {\n\t\t\tret = append(ret, b[0])\n\t\t\tb = b[1:]\n\t\t} else {\n\t\t\tret = append(ret, a[0])\n\t\t\ta = a[1:]\n\t\t}\n\t}\n\tfor len(a) > 0 {\n\t\tret = append(ret, a[0])\n\t\ta = a[1:]\n\t}\n\tfor len(b) > 0 {\n\t\tret = append(ret, b[0])\n\t\tb = b[1:]\n\t}\n\treturn ret\n}\n\n// 归并[low:mid]和[mid+1:hig]\nfunc merge2(a []int, low, mid, hig int) {\n\ti, j := low, mid+1\n\taux := make([]int, 0)\n\tfor _, v := range a {\n\t\taux = append(aux, v)\n\t}\n\tfor k := low; k <= hig; k++ {\n\t\tif i > mid {\n\t\t\ta[k] = aux[j]\n\t\t\tj++\n\t\t} else if j > hig {\n\t\t\ta[k] = aux[i]\n\t\t\ti++\n\t\t} else if less(a, i, j) {\n\t\t\ta[k] = aux[i]\n\t\t\ti++\n\t\t} else {\n\t\t\ta[k] = aux[j]\n\t\t\tj++\n\t\t}\n\t}\n}\n```\n\n\n\n#### 2.2.2 自顶向下的归并排序\n\n应用了高效算法设计的分治思想。如果它能将两个子数组排序，它就能够通过归并两个子数组来将整个数组排序。\n\n- 对于长度为N的任意数组，自顶向下的归并排序需要0.5NlgN到NlgN次比较。\n- 对于长度为N的任意数组，自顶向下的归并排序最多需要访问数组6NlgN次。\n\n归并排序的主要缺点是额外空间和N大小成正比，另一方面，通过一些改变能够大幅度缩短归并排序的运行时间。\n\n- 对小规模子数组使用插入排序。递归会使小规模问题的方法调用过于频繁。\n- 不将元素复制到辅助数组。可以节省时间，但是空间不行。\n\n```go\nfunc MergeSortTop2Bottom(a []int) []int {\n\tlength := len(a)\n\tif length <= 1 {\n\t\treturn a\n\t}\n\tmid := length / 2\n\treturn merge1(MergeSortTop2Bottom(a[:mid]), MergeSortTop2Bottom(a[mid:]))\n}\n```\n\n\n\n#### 2.2.3 自底向上的归并排序\n\n对于长度为N的任意数组，自顶向下的归并排序需要0.5NlgN到NlgN次比较，最多需要访问数组6NlgN次。\n\n```go\nfunc MergeSortBottom2Top(a []int) {\n\tlength := len(a)\n\tfor sz := 1; sz < length; sz += sz {\n\t\tfor low := 0; low < length-sz; low += sz+sz {\n\t\t\tmerge2(a, low, low+sz-1, min(low+sz+sz-1, length-1))\n\t\t}\n\t}\n}\n```\n\n\n\n#### 2.2.4 排序算法的复杂度\n\n没有任何基于比较的算法能够保证使用少于lg(N!)~NlgN次比较，将长度为N的数组排序。\n\n归并排序是一种渐进最优的基于比较排序的算法。\n\n[渐进最优性](https://blog.csdn.net/weixin_43509834/article/details/106468144)\n\n\n\n---\n\n\n\n### 2.3 快速排序\n\n应用最广泛的算法，流行的原因是它实现简单、适用于各种不同的输入数据且在一般应用中比其他排序算法都要快得多。\n\n快速排序的特点：\n\n- 原地排序。只需要一个很小的辅助栈。\n- 长度为N的数组所需的时间和NlgN成正比。\n- 快速排序的内循环比大多数排序算法都要短小，意味着它无论在理论上还是实际中都要更快。\n- 缺点是非常脆弱，要小心避免低劣的性能。\n\n#### 2.3.1 基本算法\n\n快排是一种分治的排序算法，分成两个子数组，两部分独立地排序。注意：\n\n- 别越界，测试条件要注意；\n- 保持随机性，可以在排序前打乱数组；\n- 终止递归的条件。\n\n```go\nfunc QuickSort(a []int) {\n\tquickSort(a, 0, len(a)-1)\n}\n\nfunc quickSort(a []int, left, right int) {\n\tif left >= right {\n\t\treturn\n\t}\n\ti, j := left, right\n\tkey := a[left]\n\tfor left < right {\n\t\tfor left < right && a[right] >= key {\n\t\t\tright--\n\t\t}\n\t\tif left < right {\n\t\t\ta[left] = a[right]\n\t\t\tleft++\n\t\t}\n\t\tfor left < right && a[left] <= key {\n\t\t\tleft++\n\t\t}\n\t\tif left < right {\n\t\t\ta[right] = a[left]\n\t\t\tright--\n\t\t}\n\t}\n\ta[left] = key\n\tquickSort(a, i, left-1)\n\tquickSort(a, left+1, j)\n}\n```\n\n\n\n#### 2.3.2 性能特点\n\n平均需要~2NlnN次比较，以及1/6次交换。最多需要N^2/2次比较，但随机打乱能预防这种情况。\n\n快排的实现仍有一个潜在的缺点：在切分不平衡时这个程序可能会及其低效。\n\n\n\n#### 2.3.3 算法改进\n\n1. 切换到插入排序：和大多数递归排序算法一样，改进快排的性能一个简单的办法。\n2. 三取样切分：使用子数组的一小部分元素的中位数来切分数组。\n3. 熵最优的排序：含有大量元素相同的时候，将数组切分成三部分，分别对应小于等于大于。\n\n\n\n---\n\n\n\n### 2.4 优先队列\n\n许多应用都需要处理有序的元素，但不一定要求全部有序，或者不一定要一次就将它们排序。很多情况下我们会收集一些元素，处理当前键值最大的元素，然后再收集更多的元素，再处理。\n\n在这种情况下，合适的数据结构要支持两种操作：删除最大的元素和插入元素。这种数据结构叫优先队列。\n\n#### 2.4.1 API\n\n最重要的操作时删除最大元素和插入元素。\n\n| MaxPQ        |              |\n| ------------ | ------------ |\n| Insert(item) | 插入         |\n| max()        | 返回最大元素 |\n| delMax()     | 删除最大元素 |\n| isEmpty()    |              |\n| size()       |              |\n\n从N个输入中找到最大的M个元素所需的成本：\n\n| 示例                 | 时间  | 空间 |\n| -------------------- | ----- | ---- |\n| 排序算法             | NlgN  | N    |\n| 初级实现的优先队列   | NM    | M    |\n| 基于堆实现的优先队列 | NlogM | M    |\n\n\n\n#### 2.4.2 初级实现\n\n##### 2.4.2.1 数组实现（无序）\n\n基于下压栈的代码。\n\ninsert()使用push()。\n\n要删除最大元素，可以添加一段类似于选择排序的内循环代码，将最大的元素和边界元素交换然后删除它。\n\n##### 2.4.2.2 数组实现（有序）\n\ninsert()方法，添加时使用插入排序。\n\n删除最大元素和pop()一样。\n\n##### 2.4.2.3 链表表示法\n\n跟基于链表实现的下压栈类似。\n\n使用无序链表是解决这个问题的惰性方法，仅在必要时才会找出最大元素；\n\n使用有序链表是积极方法，尽可能在插入元素的时候保持列表有序，使后续操作更高效。\n\n\n\n#### 2.4.3 堆的定义\n\n实现栈或队列，和实现优先队列的最大不同在于性能的要求。对于栈和队列，能在常数时间完成所有操作；对于优先队列，插入元素和删除最大元素两个操作之一在最坏情况下需要线性时间来完成。基于堆来实现可以保证这两种操作都能更快运行。\n\n堆的定义和性质如下：\n\n- 当一棵二叉树的每个结点都大于等于它的两个子结点时，它被称为堆有序。\n\n- 根节点是堆排序的二叉树中最大的结点。\n- 二叉堆是一组能够用堆有序的完全二叉树排序的元素，并在数组中按照层级储存。\n- k位置的结点，它的父节点位置为k-1/2，子结点分别为2k+1和2k+2。\n- 一棵大小为N的完全二叉树的高度为floor(lgN)。\n\n#### 2.4.4 堆的算法\n\n对于大小为N的优先队列，插入操作只需不超过lgN+1次比较，删除操作需要不超过2lgN次比较。\n\n```go\ntype MaxPriorityQueue struct {\n\tpriorityQueue []int\n\tlength int\n}\n\nfunc (pq *MaxPriorityQueue) IsEmpty() bool {\n\treturn pq.length == 0\n}\n\nfunc (pq *MaxPriorityQueue) Size() int {\n\treturn pq.length\n}\n\n// 上浮，在插入操作之后\nfunc (pq *MaxPriorityQueue) swim(k int) {\n\tfor k > 0 && less(pq.priorityQueue, k-1/2, k) {\n\t\texch(pq.priorityQueue, k-1/2, k)\n\t\tk = k-1 / 2\n\t}\n}\n\n//下沉，恢复堆\nfunc (pq *MaxPriorityQueue) sink(k int) {\n\tfor 2*k+1 < pq.length {\n\t\tj := 2*k + 1\n\t\tif j+1 < pq.length && less(pq.priorityQueue, j, j+1) {\n\t\t\tj++\n\t\t}\n\t\tif !less(pq.priorityQueue, k, j) {\n\t\t\tbreak\n\t\t}\n\t\texch(pq.priorityQueue, k, j)\n\t\tk = j\n\t}\n}\n\nfunc (pq *MaxPriorityQueue) Insert(item int) {\n\tpq.priorityQueue[pq.length] = item\n\tpq.swim(pq.length)\n\tpq.length++\n}\n\nfunc (pq *MaxPriorityQueue) DelMax() int {\n\tmax := pq.priorityQueue[0]\n\texch(pq.priorityQueue, 0, pq.length-1)\n\tpq.length--\n\tpq.priorityQueue = pq.priorityQueue[:pq.length]\n\tpq.sink(0)\n\treturn max\n}\n```\n\n\n\n#### 2.4.5 堆排序\n\n下沉操作：只需要少于2N次比较和少于N次的交换。\n\n排序操作：只需要少于2NlgN+2N次比较。\n\n```go\nfunc HeapSort(a []int) {\n\t// 构建最大堆\n\tfor i := len(a)/2 - 1; i >= 0; i-- {\n\t\tAdjustHeap(a, i, len(a))\n\t}\n\t// 置于队尾\n\tfor j := len(a) - 1; j > 0; j-- {\n\t\ta[0], a[j] = a[j], a[0]\n\t\tAdjustHeap(a, 0, j)\n\t}\n}\n\nfunc AdjustHeap(a []int, i, length int) {\n\ttmp := a[i]\n\tfor k := i*2 + 1; k < length; k = k*2 + 1 {\n\t\tif k+1 < length && a[k] < a[k+1] {\n\t\t\tk++\n\t\t}\n\t\tif a[k] > tmp {\n\t\t\ta[i] = a[k]\n\t\t\ti = k\n\t\t} else {\n\t\t\tbreak\n\t\t}\n\t}\n\ta[i] = tmp\n}\n```\n\n\n\n---\n\n\n\n### 2.5 应用\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms02Sorting1.png)\n\n快速排序是最快的通用排序算法。\n\n\n\n\n\n---\n\n\n\n","slug":"algo-learn03Algorithms02Sorting","published":1,"updated":"2022-04-16T23:03:59.672Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70tc000r5osser790apn","content":"<p>《算法》第2章：排序。</p>\n<p>初级排序算法，归并排序，快速排序，优先队列，应用。</p>\n<span id=\"more\"></span>\n\n\n\n<hr>\n<p>在计算时代早期，普遍认为30%的计算周期都用在了排序上。如果今天这个比例降低了，可能的原因之一是排序算法更高效了，而并非排序的重要性降低了。</p>\n<hr>\n<h3 id=\"2-1-初级排序算法\"><a href=\"#2-1-初级排序算法\" class=\"headerlink\" title=\"2.1 初级排序算法\"></a>2.1 初级排序算法</h3><p>学习两种初级的排序算法以及其中一种的变体。这些简单的算法在某些情况下比我们以后讨论的复杂算法更有效。</p>\n<h4 id=\"2-1-1-游戏规则\"><a href=\"#2-1-1-游戏规则\" class=\"headerlink\" title=\"2.1.1 游戏规则\"></a>2.1.1 游戏规则</h4><p>比较函数的模板。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">less</span><span class=\"params\">(v, w <span class=\"type\">int</span>)</span></span> <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> v &lt; w</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">exch</span><span class=\"params\">(a []<span class=\"type\">int</span>, i, j <span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\ta[i], a[j] = a[j], a[i]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>对于每一种排序，都需要验证是否排序成功，运行时间和额外的内存使用。</p>\n<h4 id=\"2-1-2-选择排序\"><a href=\"#2-1-2-选择排序\" class=\"headerlink\" title=\"2.1.2 选择排序\"></a>2.1.2 选择排序</h4><p>对于长度为N的数组，选择排序需要大约(N^2 / 2)次比较和N次交换。选择排序有两个鲜明的特点：</p>\n<ul>\n<li>运行时间和输入无关。总是需要那么多次比较，无论输入的数组已经有序或全部相等或随机排列的。</li>\n<li>数据移动的次数最少。只需要N次交换。</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">SelectionSort</span><span class=\"params\">(a []<span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tlength := <span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; length<span class=\"number\">-1</span>; i++ &#123;</span><br><span class=\"line\">\t\tmin := i</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := i+<span class=\"number\">1</span>; j &lt; length; j++ &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> a[j] &lt; a[min] &#123;</span><br><span class=\"line\">\t\t\t\tmin = j</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\texch(a, min, i)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-1-3-插入排序\"><a href=\"#2-1-3-插入排序\" class=\"headerlink\" title=\"2.1.3 插入排序\"></a>2.1.3 插入排序</h4><p>对于随机排列的长度为N且主键不重复的数组：</p>\n<ul>\n<li>平均，需要<del>(N^2 / 4)次比较以及</del>(N^2 / 4)次交换。</li>\n<li>最坏情况下，需要<del>(N^2 / 2)次比较以及</del>(N^2 / 2)次交换。</li>\n<li>最好情况下，需要N-1次比较和0次交换。</li>\n</ul>\n<p>特点：</p>\n<ul>\n<li>插入排序所需的时间取决于输入中元素的初始顺序。</li>\n<li>插入排序对实际应用中常见的某类非随机数组很有效。</li>\n<li>插入排序对部分有序的数组很有效。典型的部分有序的数组：<ul>\n<li>数组中每个元素距离它最终位置都不远。</li>\n<li>一个有序的大数组接一个小数组。</li>\n<li>数组中只有几个元素的位置不正确。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">InsertionSort</span><span class=\"params\">(a []<span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tlength := <span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt; length; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := i; j &gt;= <span class=\"number\">0</span>; j-- &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> a[j] &lt; a[j<span class=\"number\">-1</span>] &#123;</span><br><span class=\"line\">\t\t\t\texch(a, j, j<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-1-4-排序算法的可视化\"><a href=\"#2-1-4-排序算法的可视化\" class=\"headerlink\" title=\"2.1.4 排序算法的可视化\"></a>2.1.4 排序算法的可视化</h4><p><a href=\"https://visualgo.net/zh\">数据结构和算法动态可视化 (Chinese) - VisuAlgo</a></p>\n<h4 id=\"2-1-5-比较两种排序算法\"><a href=\"#2-1-5-比较两种排序算法\" class=\"headerlink\" title=\"2.1.5 比较两种排序算法\"></a>2.1.5 比较两种排序算法</h4><ol>\n<li>对于随机排序的无重复主键的数组，插入排序和选择排序的运行时间是平方级别的，两者之比应该是一个较小的常数。</li>\n<li>某些特殊情况下它们也是很好的选择。</li>\n</ol>\n<h4 id=\"2-1-6-希尔排序\"><a href=\"#2-1-6-希尔排序\" class=\"headerlink\" title=\"2.1.6 希尔排序\"></a>2.1.6 希尔排序</h4><p>希尔排序的思想是使数组中任意间隔为h的元素都是有序的，称为h有序数组。</p>\n<p>希尔排序更高效的原因是它权衡了子数组的规模和有序性。排序之初，各个子数组都很短；排序之后，子数组部分有序。这两种情况都很适合插入排序。</p>\n<p>希尔排序也可以用于大型数组，它对任意排序的数组表现也很好。希尔排序比插入排序和选择排序快得多，并且数组越大，优势越大。</p>\n<p>希尔排序的时间复杂度，目前最重要的结论是它的运行时间达不到平方级别。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ShellSort</span><span class=\"params\">(a []<span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tlength := <span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">\th := <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> h &lt; length / <span class=\"number\">3</span> &#123;</span><br><span class=\"line\">\t\th = h * <span class=\"number\">3</span> + <span class=\"number\">1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> h &gt;= <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> i := h; i &lt; length; i++ &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> j := i; j &gt;= h; j -= h &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> less(a, j, j-h) &#123;</span><br><span class=\"line\">\t\t\t\t\texch(a, j, j-h)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\th /= <span class=\"number\">3</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<h3 id=\"2-2-归并排序\"><a href=\"#2-2-归并排序\" class=\"headerlink\" title=\"2.2 归并排序\"></a>2.2 归并排序</h3><p>归并操作：将两个有序的数组归并成一个更大的有序数组。</p>\n<p>归并排序：分成两部分，分别排序，然后归并起来。</p>\n<p>归并排序最吸引人的性质是它能够保证将长度为N的数组排序所需的时间和NlogN成正比；它的主要缺点是它所需的额外空间和N成正比。</p>\n<h4 id=\"2-2-1-原地归并的抽象方法\"><a href=\"#2-2-1-原地归并的抽象方法\" class=\"headerlink\" title=\"2.2.1 原地归并的抽象方法\"></a>2.2.1 原地归并的抽象方法</h4><p>将两个有序的数组归并成一个更大的有序数组。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 归并a和b两个切片</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">merge1</span><span class=\"params\">(a, b []<span class=\"type\">int</span>)</span></span> []<span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\tret := <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> <span class=\"built_in\">len</span>(a) &gt; <span class=\"number\">0</span> &amp;&amp; <span class=\"built_in\">len</span>(b) &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> a[<span class=\"number\">0</span>] &gt; b[<span class=\"number\">0</span>] &#123;</span><br><span class=\"line\">\t\t\tret = <span class=\"built_in\">append</span>(ret, b[<span class=\"number\">0</span>])</span><br><span class=\"line\">\t\t\tb = b[<span class=\"number\">1</span>:]</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tret = <span class=\"built_in\">append</span>(ret, a[<span class=\"number\">0</span>])</span><br><span class=\"line\">\t\t\ta = a[<span class=\"number\">1</span>:]</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> <span class=\"built_in\">len</span>(a) &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\tret = <span class=\"built_in\">append</span>(ret, a[<span class=\"number\">0</span>])</span><br><span class=\"line\">\t\ta = a[<span class=\"number\">1</span>:]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> <span class=\"built_in\">len</span>(b) &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\tret = <span class=\"built_in\">append</span>(ret, b[<span class=\"number\">0</span>])</span><br><span class=\"line\">\t\tb = b[<span class=\"number\">1</span>:]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 归并[low:mid]和[mid+1:hig]</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">merge2</span><span class=\"params\">(a []<span class=\"type\">int</span>, low, mid, hig <span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\ti, j := low, mid+<span class=\"number\">1</span></span><br><span class=\"line\">\taux := <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, v := <span class=\"keyword\">range</span> a &#123;</span><br><span class=\"line\">\t\taux = <span class=\"built_in\">append</span>(aux, v)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> k := low; k &lt;= hig; k++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i &gt; mid &#123;</span><br><span class=\"line\">\t\t\ta[k] = aux[j]</span><br><span class=\"line\">\t\t\tj++</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> j &gt; hig &#123;</span><br><span class=\"line\">\t\t\ta[k] = aux[i]</span><br><span class=\"line\">\t\t\ti++</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> less(a, i, j) &#123;</span><br><span class=\"line\">\t\t\ta[k] = aux[i]</span><br><span class=\"line\">\t\t\ti++</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\ta[k] = aux[j]</span><br><span class=\"line\">\t\t\tj++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"2-2-2-自顶向下的归并排序\"><a href=\"#2-2-2-自顶向下的归并排序\" class=\"headerlink\" title=\"2.2.2 自顶向下的归并排序\"></a>2.2.2 自顶向下的归并排序</h4><p>应用了高效算法设计的分治思想。如果它能将两个子数组排序，它就能够通过归并两个子数组来将整个数组排序。</p>\n<ul>\n<li>对于长度为N的任意数组，自顶向下的归并排序需要0.5NlgN到NlgN次比较。</li>\n<li>对于长度为N的任意数组，自顶向下的归并排序最多需要访问数组6NlgN次。</li>\n</ul>\n<p>归并排序的主要缺点是额外空间和N大小成正比，另一方面，通过一些改变能够大幅度缩短归并排序的运行时间。</p>\n<ul>\n<li>对小规模子数组使用插入排序。递归会使小规模问题的方法调用过于频繁。</li>\n<li>不将元素复制到辅助数组。可以节省时间，但是空间不行。</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">MergeSortTop2Bottom</span><span class=\"params\">(a []<span class=\"type\">int</span>)</span></span> []<span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\tlength := <span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> length &lt;= <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tmid := length / <span class=\"number\">2</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> merge1(MergeSortTop2Bottom(a[:mid]), MergeSortTop2Bottom(a[mid:]))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"2-2-3-自底向上的归并排序\"><a href=\"#2-2-3-自底向上的归并排序\" class=\"headerlink\" title=\"2.2.3 自底向上的归并排序\"></a>2.2.3 自底向上的归并排序</h4><p>对于长度为N的任意数组，自顶向下的归并排序需要0.5NlgN到NlgN次比较，最多需要访问数组6NlgN次。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">MergeSortBottom2Top</span><span class=\"params\">(a []<span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tlength := <span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> sz := <span class=\"number\">1</span>; sz &lt; length; sz += sz &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> low := <span class=\"number\">0</span>; low &lt; length-sz; low += sz+sz &#123;</span><br><span class=\"line\">\t\t\tmerge2(a, low, low+sz<span class=\"number\">-1</span>, min(low+sz+sz<span class=\"number\">-1</span>, length<span class=\"number\">-1</span>))</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"2-2-4-排序算法的复杂度\"><a href=\"#2-2-4-排序算法的复杂度\" class=\"headerlink\" title=\"2.2.4 排序算法的复杂度\"></a>2.2.4 排序算法的复杂度</h4><p>没有任何基于比较的算法能够保证使用少于lg(N!)~NlgN次比较，将长度为N的数组排序。</p>\n<p>归并排序是一种渐进最优的基于比较排序的算法。</p>\n<p><a href=\"https://blog.csdn.net/weixin_43509834/article/details/106468144\">渐进最优性</a></p>\n<hr>\n<h3 id=\"2-3-快速排序\"><a href=\"#2-3-快速排序\" class=\"headerlink\" title=\"2.3 快速排序\"></a>2.3 快速排序</h3><p>应用最广泛的算法，流行的原因是它实现简单、适用于各种不同的输入数据且在一般应用中比其他排序算法都要快得多。</p>\n<p>快速排序的特点：</p>\n<ul>\n<li>原地排序。只需要一个很小的辅助栈。</li>\n<li>长度为N的数组所需的时间和NlgN成正比。</li>\n<li>快速排序的内循环比大多数排序算法都要短小，意味着它无论在理论上还是实际中都要更快。</li>\n<li>缺点是非常脆弱，要小心避免低劣的性能。</li>\n</ul>\n<h4 id=\"2-3-1-基本算法\"><a href=\"#2-3-1-基本算法\" class=\"headerlink\" title=\"2.3.1 基本算法\"></a>2.3.1 基本算法</h4><p>快排是一种分治的排序算法，分成两个子数组，两部分独立地排序。注意：</p>\n<ul>\n<li>别越界，测试条件要注意；</li>\n<li>保持随机性，可以在排序前打乱数组；</li>\n<li>终止递归的条件。</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">QuickSort</span><span class=\"params\">(a []<span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tquickSort(a, <span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)<span class=\"number\">-1</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">quickSort</span><span class=\"params\">(a []<span class=\"type\">int</span>, left, right <span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> left &gt;= right &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ti, j := left, right</span><br><span class=\"line\">\tkey := a[left]</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> left &lt; right &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> left &lt; right &amp;&amp; a[right] &gt;= key &#123;</span><br><span class=\"line\">\t\t\tright--</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> left &lt; right &#123;</span><br><span class=\"line\">\t\t\ta[left] = a[right]</span><br><span class=\"line\">\t\t\tleft++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> left &lt; right &amp;&amp; a[left] &lt;= key &#123;</span><br><span class=\"line\">\t\t\tleft++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> left &lt; right &#123;</span><br><span class=\"line\">\t\t\ta[right] = a[left]</span><br><span class=\"line\">\t\t\tright--</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ta[left] = key</span><br><span class=\"line\">\tquickSort(a, i, left<span class=\"number\">-1</span>)</span><br><span class=\"line\">\tquickSort(a, left+<span class=\"number\">1</span>, j)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"2-3-2-性能特点\"><a href=\"#2-3-2-性能特点\" class=\"headerlink\" title=\"2.3.2 性能特点\"></a>2.3.2 性能特点</h4><p>平均需要~2NlnN次比较，以及1/6次交换。最多需要N^2/2次比较，但随机打乱能预防这种情况。</p>\n<p>快排的实现仍有一个潜在的缺点：在切分不平衡时这个程序可能会及其低效。</p>\n<h4 id=\"2-3-3-算法改进\"><a href=\"#2-3-3-算法改进\" class=\"headerlink\" title=\"2.3.3 算法改进\"></a>2.3.3 算法改进</h4><ol>\n<li>切换到插入排序：和大多数递归排序算法一样，改进快排的性能一个简单的办法。</li>\n<li>三取样切分：使用子数组的一小部分元素的中位数来切分数组。</li>\n<li>熵最优的排序：含有大量元素相同的时候，将数组切分成三部分，分别对应小于等于大于。</li>\n</ol>\n<hr>\n<h3 id=\"2-4-优先队列\"><a href=\"#2-4-优先队列\" class=\"headerlink\" title=\"2.4 优先队列\"></a>2.4 优先队列</h3><p>许多应用都需要处理有序的元素，但不一定要求全部有序，或者不一定要一次就将它们排序。很多情况下我们会收集一些元素，处理当前键值最大的元素，然后再收集更多的元素，再处理。</p>\n<p>在这种情况下，合适的数据结构要支持两种操作：删除最大的元素和插入元素。这种数据结构叫优先队列。</p>\n<h4 id=\"2-4-1-API\"><a href=\"#2-4-1-API\" class=\"headerlink\" title=\"2.4.1 API\"></a>2.4.1 API</h4><p>最重要的操作时删除最大元素和插入元素。</p>\n<table>\n<thead>\n<tr>\n<th>MaxPQ</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Insert(item)</td>\n<td>插入</td>\n</tr>\n<tr>\n<td>max()</td>\n<td>返回最大元素</td>\n</tr>\n<tr>\n<td>delMax()</td>\n<td>删除最大元素</td>\n</tr>\n<tr>\n<td>isEmpty()</td>\n<td></td>\n</tr>\n<tr>\n<td>size()</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>从N个输入中找到最大的M个元素所需的成本：</p>\n<table>\n<thead>\n<tr>\n<th>示例</th>\n<th>时间</th>\n<th>空间</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>排序算法</td>\n<td>NlgN</td>\n<td>N</td>\n</tr>\n<tr>\n<td>初级实现的优先队列</td>\n<td>NM</td>\n<td>M</td>\n</tr>\n<tr>\n<td>基于堆实现的优先队列</td>\n<td>NlogM</td>\n<td>M</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-4-2-初级实现\"><a href=\"#2-4-2-初级实现\" class=\"headerlink\" title=\"2.4.2 初级实现\"></a>2.4.2 初级实现</h4><h5 id=\"2-4-2-1-数组实现（无序）\"><a href=\"#2-4-2-1-数组实现（无序）\" class=\"headerlink\" title=\"2.4.2.1 数组实现（无序）\"></a>2.4.2.1 数组实现（无序）</h5><p>基于下压栈的代码。</p>\n<p>insert()使用push()。</p>\n<p>要删除最大元素，可以添加一段类似于选择排序的内循环代码，将最大的元素和边界元素交换然后删除它。</p>\n<h5 id=\"2-4-2-2-数组实现（有序）\"><a href=\"#2-4-2-2-数组实现（有序）\" class=\"headerlink\" title=\"2.4.2.2 数组实现（有序）\"></a>2.4.2.2 数组实现（有序）</h5><p>insert()方法，添加时使用插入排序。</p>\n<p>删除最大元素和pop()一样。</p>\n<h5 id=\"2-4-2-3-链表表示法\"><a href=\"#2-4-2-3-链表表示法\" class=\"headerlink\" title=\"2.4.2.3 链表表示法\"></a>2.4.2.3 链表表示法</h5><p>跟基于链表实现的下压栈类似。</p>\n<p>使用无序链表是解决这个问题的惰性方法，仅在必要时才会找出最大元素；</p>\n<p>使用有序链表是积极方法，尽可能在插入元素的时候保持列表有序，使后续操作更高效。</p>\n<h4 id=\"2-4-3-堆的定义\"><a href=\"#2-4-3-堆的定义\" class=\"headerlink\" title=\"2.4.3 堆的定义\"></a>2.4.3 堆的定义</h4><p>实现栈或队列，和实现优先队列的最大不同在于性能的要求。对于栈和队列，能在常数时间完成所有操作；对于优先队列，插入元素和删除最大元素两个操作之一在最坏情况下需要线性时间来完成。基于堆来实现可以保证这两种操作都能更快运行。</p>\n<p>堆的定义和性质如下：</p>\n<ul>\n<li><p>当一棵二叉树的每个结点都大于等于它的两个子结点时，它被称为堆有序。</p>\n</li>\n<li><p>根节点是堆排序的二叉树中最大的结点。</p>\n</li>\n<li><p>二叉堆是一组能够用堆有序的完全二叉树排序的元素，并在数组中按照层级储存。</p>\n</li>\n<li><p>k位置的结点，它的父节点位置为k-1/2，子结点分别为2k+1和2k+2。</p>\n</li>\n<li><p>一棵大小为N的完全二叉树的高度为floor(lgN)。</p>\n</li>\n</ul>\n<h4 id=\"2-4-4-堆的算法\"><a href=\"#2-4-4-堆的算法\" class=\"headerlink\" title=\"2.4.4 堆的算法\"></a>2.4.4 堆的算法</h4><p>对于大小为N的优先队列，插入操作只需不超过lgN+1次比较，删除操作需要不超过2lgN次比较。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> MaxPriorityQueue <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tpriorityQueue []<span class=\"type\">int</span></span><br><span class=\"line\">\tlength <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(pq *MaxPriorityQueue)</span></span> IsEmpty() <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> pq.length == <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(pq *MaxPriorityQueue)</span></span> Size() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> pq.length</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 上浮，在插入操作之后</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(pq *MaxPriorityQueue)</span></span> swim(k <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> k &gt; <span class=\"number\">0</span> &amp;&amp; less(pq.priorityQueue, k<span class=\"number\">-1</span>/<span class=\"number\">2</span>, k) &#123;</span><br><span class=\"line\">\t\texch(pq.priorityQueue, k<span class=\"number\">-1</span>/<span class=\"number\">2</span>, k)</span><br><span class=\"line\">\t\tk = k<span class=\"number\">-1</span> / <span class=\"number\">2</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//下沉，恢复堆</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(pq *MaxPriorityQueue)</span></span> sink(k <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> <span class=\"number\">2</span>*k+<span class=\"number\">1</span> &lt; pq.length &#123;</span><br><span class=\"line\">\t\tj := <span class=\"number\">2</span>*k + <span class=\"number\">1</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> j+<span class=\"number\">1</span> &lt; pq.length &amp;&amp; less(pq.priorityQueue, j, j+<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t\tj++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !less(pq.priorityQueue, k, j) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\texch(pq.priorityQueue, k, j)</span><br><span class=\"line\">\t\tk = j</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(pq *MaxPriorityQueue)</span></span> Insert(item <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tpq.priorityQueue[pq.length] = item</span><br><span class=\"line\">\tpq.swim(pq.length)</span><br><span class=\"line\">\tpq.length++</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(pq *MaxPriorityQueue)</span></span> DelMax() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\tmax := pq.priorityQueue[<span class=\"number\">0</span>]</span><br><span class=\"line\">\texch(pq.priorityQueue, <span class=\"number\">0</span>, pq.length<span class=\"number\">-1</span>)</span><br><span class=\"line\">\tpq.length--</span><br><span class=\"line\">\tpq.priorityQueue = pq.priorityQueue[:pq.length]</span><br><span class=\"line\">\tpq.sink(<span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> max</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"2-4-5-堆排序\"><a href=\"#2-4-5-堆排序\" class=\"headerlink\" title=\"2.4.5 堆排序\"></a>2.4.5 堆排序</h4><p>下沉操作：只需要少于2N次比较和少于N次的交换。</p>\n<p>排序操作：只需要少于2NlgN+2N次比较。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">HeapSort</span><span class=\"params\">(a []<span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 构建最大堆</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"built_in\">len</span>(a)/<span class=\"number\">2</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i-- &#123;</span><br><span class=\"line\">\t\tAdjustHeap(a, i, <span class=\"built_in\">len</span>(a))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 置于队尾</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> j := <span class=\"built_in\">len</span>(a) - <span class=\"number\">1</span>; j &gt; <span class=\"number\">0</span>; j-- &#123;</span><br><span class=\"line\">\t\ta[<span class=\"number\">0</span>], a[j] = a[j], a[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t\tAdjustHeap(a, <span class=\"number\">0</span>, j)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">AdjustHeap</span><span class=\"params\">(a []<span class=\"type\">int</span>, i, length <span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\ttmp := a[i]</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> k := i*<span class=\"number\">2</span> + <span class=\"number\">1</span>; k &lt; length; k = k*<span class=\"number\">2</span> + <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> k+<span class=\"number\">1</span> &lt; length &amp;&amp; a[k] &lt; a[k+<span class=\"number\">1</span>] &#123;</span><br><span class=\"line\">\t\t\tk++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> a[k] &gt; tmp &#123;</span><br><span class=\"line\">\t\t\ta[i] = a[k]</span><br><span class=\"line\">\t\t\ti = k</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ta[i] = tmp</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<h3 id=\"2-5-应用\"><a href=\"#2-5-应用\" class=\"headerlink\" title=\"2.5 应用\"></a>2.5 应用</h3><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms02Sorting1.png\"></p>\n<p>快速排序是最快的通用排序算法。</p>\n<hr>\n","site":{"data":{}},"excerpt":"<p>《算法》第2章：排序。</p>\n<p>初级排序算法，归并排序，快速排序，优先队列，应用。</p>","more":"<hr>\n<p>在计算时代早期，普遍认为30%的计算周期都用在了排序上。如果今天这个比例降低了，可能的原因之一是排序算法更高效了，而并非排序的重要性降低了。</p>\n<hr>\n<h3 id=\"2-1-初级排序算法\"><a href=\"#2-1-初级排序算法\" class=\"headerlink\" title=\"2.1 初级排序算法\"></a>2.1 初级排序算法</h3><p>学习两种初级的排序算法以及其中一种的变体。这些简单的算法在某些情况下比我们以后讨论的复杂算法更有效。</p>\n<h4 id=\"2-1-1-游戏规则\"><a href=\"#2-1-1-游戏规则\" class=\"headerlink\" title=\"2.1.1 游戏规则\"></a>2.1.1 游戏规则</h4><p>比较函数的模板。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">less</span><span class=\"params\">(v, w <span class=\"type\">int</span>)</span></span> <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> v &lt; w</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">exch</span><span class=\"params\">(a []<span class=\"type\">int</span>, i, j <span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\ta[i], a[j] = a[j], a[i]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>对于每一种排序，都需要验证是否排序成功，运行时间和额外的内存使用。</p>\n<h4 id=\"2-1-2-选择排序\"><a href=\"#2-1-2-选择排序\" class=\"headerlink\" title=\"2.1.2 选择排序\"></a>2.1.2 选择排序</h4><p>对于长度为N的数组，选择排序需要大约(N^2 / 2)次比较和N次交换。选择排序有两个鲜明的特点：</p>\n<ul>\n<li>运行时间和输入无关。总是需要那么多次比较，无论输入的数组已经有序或全部相等或随机排列的。</li>\n<li>数据移动的次数最少。只需要N次交换。</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">SelectionSort</span><span class=\"params\">(a []<span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tlength := <span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; length<span class=\"number\">-1</span>; i++ &#123;</span><br><span class=\"line\">\t\tmin := i</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := i+<span class=\"number\">1</span>; j &lt; length; j++ &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> a[j] &lt; a[min] &#123;</span><br><span class=\"line\">\t\t\t\tmin = j</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\texch(a, min, i)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-1-3-插入排序\"><a href=\"#2-1-3-插入排序\" class=\"headerlink\" title=\"2.1.3 插入排序\"></a>2.1.3 插入排序</h4><p>对于随机排列的长度为N且主键不重复的数组：</p>\n<ul>\n<li>平均，需要<del>(N^2 / 4)次比较以及</del>(N^2 / 4)次交换。</li>\n<li>最坏情况下，需要<del>(N^2 / 2)次比较以及</del>(N^2 / 2)次交换。</li>\n<li>最好情况下，需要N-1次比较和0次交换。</li>\n</ul>\n<p>特点：</p>\n<ul>\n<li>插入排序所需的时间取决于输入中元素的初始顺序。</li>\n<li>插入排序对实际应用中常见的某类非随机数组很有效。</li>\n<li>插入排序对部分有序的数组很有效。典型的部分有序的数组：<ul>\n<li>数组中每个元素距离它最终位置都不远。</li>\n<li>一个有序的大数组接一个小数组。</li>\n<li>数组中只有几个元素的位置不正确。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">InsertionSort</span><span class=\"params\">(a []<span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tlength := <span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt; length; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := i; j &gt;= <span class=\"number\">0</span>; j-- &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> a[j] &lt; a[j<span class=\"number\">-1</span>] &#123;</span><br><span class=\"line\">\t\t\t\texch(a, j, j<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-1-4-排序算法的可视化\"><a href=\"#2-1-4-排序算法的可视化\" class=\"headerlink\" title=\"2.1.4 排序算法的可视化\"></a>2.1.4 排序算法的可视化</h4><p><a href=\"https://visualgo.net/zh\">数据结构和算法动态可视化 (Chinese) - VisuAlgo</a></p>\n<h4 id=\"2-1-5-比较两种排序算法\"><a href=\"#2-1-5-比较两种排序算法\" class=\"headerlink\" title=\"2.1.5 比较两种排序算法\"></a>2.1.5 比较两种排序算法</h4><ol>\n<li>对于随机排序的无重复主键的数组，插入排序和选择排序的运行时间是平方级别的，两者之比应该是一个较小的常数。</li>\n<li>某些特殊情况下它们也是很好的选择。</li>\n</ol>\n<h4 id=\"2-1-6-希尔排序\"><a href=\"#2-1-6-希尔排序\" class=\"headerlink\" title=\"2.1.6 希尔排序\"></a>2.1.6 希尔排序</h4><p>希尔排序的思想是使数组中任意间隔为h的元素都是有序的，称为h有序数组。</p>\n<p>希尔排序更高效的原因是它权衡了子数组的规模和有序性。排序之初，各个子数组都很短；排序之后，子数组部分有序。这两种情况都很适合插入排序。</p>\n<p>希尔排序也可以用于大型数组，它对任意排序的数组表现也很好。希尔排序比插入排序和选择排序快得多，并且数组越大，优势越大。</p>\n<p>希尔排序的时间复杂度，目前最重要的结论是它的运行时间达不到平方级别。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ShellSort</span><span class=\"params\">(a []<span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tlength := <span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">\th := <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> h &lt; length / <span class=\"number\">3</span> &#123;</span><br><span class=\"line\">\t\th = h * <span class=\"number\">3</span> + <span class=\"number\">1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> h &gt;= <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> i := h; i &lt; length; i++ &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> j := i; j &gt;= h; j -= h &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> less(a, j, j-h) &#123;</span><br><span class=\"line\">\t\t\t\t\texch(a, j, j-h)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\th /= <span class=\"number\">3</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<h3 id=\"2-2-归并排序\"><a href=\"#2-2-归并排序\" class=\"headerlink\" title=\"2.2 归并排序\"></a>2.2 归并排序</h3><p>归并操作：将两个有序的数组归并成一个更大的有序数组。</p>\n<p>归并排序：分成两部分，分别排序，然后归并起来。</p>\n<p>归并排序最吸引人的性质是它能够保证将长度为N的数组排序所需的时间和NlogN成正比；它的主要缺点是它所需的额外空间和N成正比。</p>\n<h4 id=\"2-2-1-原地归并的抽象方法\"><a href=\"#2-2-1-原地归并的抽象方法\" class=\"headerlink\" title=\"2.2.1 原地归并的抽象方法\"></a>2.2.1 原地归并的抽象方法</h4><p>将两个有序的数组归并成一个更大的有序数组。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 归并a和b两个切片</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">merge1</span><span class=\"params\">(a, b []<span class=\"type\">int</span>)</span></span> []<span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\tret := <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> <span class=\"built_in\">len</span>(a) &gt; <span class=\"number\">0</span> &amp;&amp; <span class=\"built_in\">len</span>(b) &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> a[<span class=\"number\">0</span>] &gt; b[<span class=\"number\">0</span>] &#123;</span><br><span class=\"line\">\t\t\tret = <span class=\"built_in\">append</span>(ret, b[<span class=\"number\">0</span>])</span><br><span class=\"line\">\t\t\tb = b[<span class=\"number\">1</span>:]</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tret = <span class=\"built_in\">append</span>(ret, a[<span class=\"number\">0</span>])</span><br><span class=\"line\">\t\t\ta = a[<span class=\"number\">1</span>:]</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> <span class=\"built_in\">len</span>(a) &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\tret = <span class=\"built_in\">append</span>(ret, a[<span class=\"number\">0</span>])</span><br><span class=\"line\">\t\ta = a[<span class=\"number\">1</span>:]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> <span class=\"built_in\">len</span>(b) &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\tret = <span class=\"built_in\">append</span>(ret, b[<span class=\"number\">0</span>])</span><br><span class=\"line\">\t\tb = b[<span class=\"number\">1</span>:]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 归并[low:mid]和[mid+1:hig]</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">merge2</span><span class=\"params\">(a []<span class=\"type\">int</span>, low, mid, hig <span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\ti, j := low, mid+<span class=\"number\">1</span></span><br><span class=\"line\">\taux := <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, v := <span class=\"keyword\">range</span> a &#123;</span><br><span class=\"line\">\t\taux = <span class=\"built_in\">append</span>(aux, v)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> k := low; k &lt;= hig; k++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i &gt; mid &#123;</span><br><span class=\"line\">\t\t\ta[k] = aux[j]</span><br><span class=\"line\">\t\t\tj++</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> j &gt; hig &#123;</span><br><span class=\"line\">\t\t\ta[k] = aux[i]</span><br><span class=\"line\">\t\t\ti++</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> less(a, i, j) &#123;</span><br><span class=\"line\">\t\t\ta[k] = aux[i]</span><br><span class=\"line\">\t\t\ti++</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\ta[k] = aux[j]</span><br><span class=\"line\">\t\t\tj++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"2-2-2-自顶向下的归并排序\"><a href=\"#2-2-2-自顶向下的归并排序\" class=\"headerlink\" title=\"2.2.2 自顶向下的归并排序\"></a>2.2.2 自顶向下的归并排序</h4><p>应用了高效算法设计的分治思想。如果它能将两个子数组排序，它就能够通过归并两个子数组来将整个数组排序。</p>\n<ul>\n<li>对于长度为N的任意数组，自顶向下的归并排序需要0.5NlgN到NlgN次比较。</li>\n<li>对于长度为N的任意数组，自顶向下的归并排序最多需要访问数组6NlgN次。</li>\n</ul>\n<p>归并排序的主要缺点是额外空间和N大小成正比，另一方面，通过一些改变能够大幅度缩短归并排序的运行时间。</p>\n<ul>\n<li>对小规模子数组使用插入排序。递归会使小规模问题的方法调用过于频繁。</li>\n<li>不将元素复制到辅助数组。可以节省时间，但是空间不行。</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">MergeSortTop2Bottom</span><span class=\"params\">(a []<span class=\"type\">int</span>)</span></span> []<span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\tlength := <span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> length &lt;= <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tmid := length / <span class=\"number\">2</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> merge1(MergeSortTop2Bottom(a[:mid]), MergeSortTop2Bottom(a[mid:]))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"2-2-3-自底向上的归并排序\"><a href=\"#2-2-3-自底向上的归并排序\" class=\"headerlink\" title=\"2.2.3 自底向上的归并排序\"></a>2.2.3 自底向上的归并排序</h4><p>对于长度为N的任意数组，自顶向下的归并排序需要0.5NlgN到NlgN次比较，最多需要访问数组6NlgN次。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">MergeSortBottom2Top</span><span class=\"params\">(a []<span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tlength := <span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> sz := <span class=\"number\">1</span>; sz &lt; length; sz += sz &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> low := <span class=\"number\">0</span>; low &lt; length-sz; low += sz+sz &#123;</span><br><span class=\"line\">\t\t\tmerge2(a, low, low+sz<span class=\"number\">-1</span>, min(low+sz+sz<span class=\"number\">-1</span>, length<span class=\"number\">-1</span>))</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"2-2-4-排序算法的复杂度\"><a href=\"#2-2-4-排序算法的复杂度\" class=\"headerlink\" title=\"2.2.4 排序算法的复杂度\"></a>2.2.4 排序算法的复杂度</h4><p>没有任何基于比较的算法能够保证使用少于lg(N!)~NlgN次比较，将长度为N的数组排序。</p>\n<p>归并排序是一种渐进最优的基于比较排序的算法。</p>\n<p><a href=\"https://blog.csdn.net/weixin_43509834/article/details/106468144\">渐进最优性</a></p>\n<hr>\n<h3 id=\"2-3-快速排序\"><a href=\"#2-3-快速排序\" class=\"headerlink\" title=\"2.3 快速排序\"></a>2.3 快速排序</h3><p>应用最广泛的算法，流行的原因是它实现简单、适用于各种不同的输入数据且在一般应用中比其他排序算法都要快得多。</p>\n<p>快速排序的特点：</p>\n<ul>\n<li>原地排序。只需要一个很小的辅助栈。</li>\n<li>长度为N的数组所需的时间和NlgN成正比。</li>\n<li>快速排序的内循环比大多数排序算法都要短小，意味着它无论在理论上还是实际中都要更快。</li>\n<li>缺点是非常脆弱，要小心避免低劣的性能。</li>\n</ul>\n<h4 id=\"2-3-1-基本算法\"><a href=\"#2-3-1-基本算法\" class=\"headerlink\" title=\"2.3.1 基本算法\"></a>2.3.1 基本算法</h4><p>快排是一种分治的排序算法，分成两个子数组，两部分独立地排序。注意：</p>\n<ul>\n<li>别越界，测试条件要注意；</li>\n<li>保持随机性，可以在排序前打乱数组；</li>\n<li>终止递归的条件。</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">QuickSort</span><span class=\"params\">(a []<span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tquickSort(a, <span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)<span class=\"number\">-1</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">quickSort</span><span class=\"params\">(a []<span class=\"type\">int</span>, left, right <span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> left &gt;= right &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ti, j := left, right</span><br><span class=\"line\">\tkey := a[left]</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> left &lt; right &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> left &lt; right &amp;&amp; a[right] &gt;= key &#123;</span><br><span class=\"line\">\t\t\tright--</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> left &lt; right &#123;</span><br><span class=\"line\">\t\t\ta[left] = a[right]</span><br><span class=\"line\">\t\t\tleft++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> left &lt; right &amp;&amp; a[left] &lt;= key &#123;</span><br><span class=\"line\">\t\t\tleft++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> left &lt; right &#123;</span><br><span class=\"line\">\t\t\ta[right] = a[left]</span><br><span class=\"line\">\t\t\tright--</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ta[left] = key</span><br><span class=\"line\">\tquickSort(a, i, left<span class=\"number\">-1</span>)</span><br><span class=\"line\">\tquickSort(a, left+<span class=\"number\">1</span>, j)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"2-3-2-性能特点\"><a href=\"#2-3-2-性能特点\" class=\"headerlink\" title=\"2.3.2 性能特点\"></a>2.3.2 性能特点</h4><p>平均需要~2NlnN次比较，以及1/6次交换。最多需要N^2/2次比较，但随机打乱能预防这种情况。</p>\n<p>快排的实现仍有一个潜在的缺点：在切分不平衡时这个程序可能会及其低效。</p>\n<h4 id=\"2-3-3-算法改进\"><a href=\"#2-3-3-算法改进\" class=\"headerlink\" title=\"2.3.3 算法改进\"></a>2.3.3 算法改进</h4><ol>\n<li>切换到插入排序：和大多数递归排序算法一样，改进快排的性能一个简单的办法。</li>\n<li>三取样切分：使用子数组的一小部分元素的中位数来切分数组。</li>\n<li>熵最优的排序：含有大量元素相同的时候，将数组切分成三部分，分别对应小于等于大于。</li>\n</ol>\n<hr>\n<h3 id=\"2-4-优先队列\"><a href=\"#2-4-优先队列\" class=\"headerlink\" title=\"2.4 优先队列\"></a>2.4 优先队列</h3><p>许多应用都需要处理有序的元素，但不一定要求全部有序，或者不一定要一次就将它们排序。很多情况下我们会收集一些元素，处理当前键值最大的元素，然后再收集更多的元素，再处理。</p>\n<p>在这种情况下，合适的数据结构要支持两种操作：删除最大的元素和插入元素。这种数据结构叫优先队列。</p>\n<h4 id=\"2-4-1-API\"><a href=\"#2-4-1-API\" class=\"headerlink\" title=\"2.4.1 API\"></a>2.4.1 API</h4><p>最重要的操作时删除最大元素和插入元素。</p>\n<table>\n<thead>\n<tr>\n<th>MaxPQ</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Insert(item)</td>\n<td>插入</td>\n</tr>\n<tr>\n<td>max()</td>\n<td>返回最大元素</td>\n</tr>\n<tr>\n<td>delMax()</td>\n<td>删除最大元素</td>\n</tr>\n<tr>\n<td>isEmpty()</td>\n<td></td>\n</tr>\n<tr>\n<td>size()</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>从N个输入中找到最大的M个元素所需的成本：</p>\n<table>\n<thead>\n<tr>\n<th>示例</th>\n<th>时间</th>\n<th>空间</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>排序算法</td>\n<td>NlgN</td>\n<td>N</td>\n</tr>\n<tr>\n<td>初级实现的优先队列</td>\n<td>NM</td>\n<td>M</td>\n</tr>\n<tr>\n<td>基于堆实现的优先队列</td>\n<td>NlogM</td>\n<td>M</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-4-2-初级实现\"><a href=\"#2-4-2-初级实现\" class=\"headerlink\" title=\"2.4.2 初级实现\"></a>2.4.2 初级实现</h4><h5 id=\"2-4-2-1-数组实现（无序）\"><a href=\"#2-4-2-1-数组实现（无序）\" class=\"headerlink\" title=\"2.4.2.1 数组实现（无序）\"></a>2.4.2.1 数组实现（无序）</h5><p>基于下压栈的代码。</p>\n<p>insert()使用push()。</p>\n<p>要删除最大元素，可以添加一段类似于选择排序的内循环代码，将最大的元素和边界元素交换然后删除它。</p>\n<h5 id=\"2-4-2-2-数组实现（有序）\"><a href=\"#2-4-2-2-数组实现（有序）\" class=\"headerlink\" title=\"2.4.2.2 数组实现（有序）\"></a>2.4.2.2 数组实现（有序）</h5><p>insert()方法，添加时使用插入排序。</p>\n<p>删除最大元素和pop()一样。</p>\n<h5 id=\"2-4-2-3-链表表示法\"><a href=\"#2-4-2-3-链表表示法\" class=\"headerlink\" title=\"2.4.2.3 链表表示法\"></a>2.4.2.3 链表表示法</h5><p>跟基于链表实现的下压栈类似。</p>\n<p>使用无序链表是解决这个问题的惰性方法，仅在必要时才会找出最大元素；</p>\n<p>使用有序链表是积极方法，尽可能在插入元素的时候保持列表有序，使后续操作更高效。</p>\n<h4 id=\"2-4-3-堆的定义\"><a href=\"#2-4-3-堆的定义\" class=\"headerlink\" title=\"2.4.3 堆的定义\"></a>2.4.3 堆的定义</h4><p>实现栈或队列，和实现优先队列的最大不同在于性能的要求。对于栈和队列，能在常数时间完成所有操作；对于优先队列，插入元素和删除最大元素两个操作之一在最坏情况下需要线性时间来完成。基于堆来实现可以保证这两种操作都能更快运行。</p>\n<p>堆的定义和性质如下：</p>\n<ul>\n<li><p>当一棵二叉树的每个结点都大于等于它的两个子结点时，它被称为堆有序。</p>\n</li>\n<li><p>根节点是堆排序的二叉树中最大的结点。</p>\n</li>\n<li><p>二叉堆是一组能够用堆有序的完全二叉树排序的元素，并在数组中按照层级储存。</p>\n</li>\n<li><p>k位置的结点，它的父节点位置为k-1/2，子结点分别为2k+1和2k+2。</p>\n</li>\n<li><p>一棵大小为N的完全二叉树的高度为floor(lgN)。</p>\n</li>\n</ul>\n<h4 id=\"2-4-4-堆的算法\"><a href=\"#2-4-4-堆的算法\" class=\"headerlink\" title=\"2.4.4 堆的算法\"></a>2.4.4 堆的算法</h4><p>对于大小为N的优先队列，插入操作只需不超过lgN+1次比较，删除操作需要不超过2lgN次比较。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> MaxPriorityQueue <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tpriorityQueue []<span class=\"type\">int</span></span><br><span class=\"line\">\tlength <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(pq *MaxPriorityQueue)</span></span> IsEmpty() <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> pq.length == <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(pq *MaxPriorityQueue)</span></span> Size() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> pq.length</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 上浮，在插入操作之后</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(pq *MaxPriorityQueue)</span></span> swim(k <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> k &gt; <span class=\"number\">0</span> &amp;&amp; less(pq.priorityQueue, k<span class=\"number\">-1</span>/<span class=\"number\">2</span>, k) &#123;</span><br><span class=\"line\">\t\texch(pq.priorityQueue, k<span class=\"number\">-1</span>/<span class=\"number\">2</span>, k)</span><br><span class=\"line\">\t\tk = k<span class=\"number\">-1</span> / <span class=\"number\">2</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//下沉，恢复堆</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(pq *MaxPriorityQueue)</span></span> sink(k <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> <span class=\"number\">2</span>*k+<span class=\"number\">1</span> &lt; pq.length &#123;</span><br><span class=\"line\">\t\tj := <span class=\"number\">2</span>*k + <span class=\"number\">1</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> j+<span class=\"number\">1</span> &lt; pq.length &amp;&amp; less(pq.priorityQueue, j, j+<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t\tj++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !less(pq.priorityQueue, k, j) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\texch(pq.priorityQueue, k, j)</span><br><span class=\"line\">\t\tk = j</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(pq *MaxPriorityQueue)</span></span> Insert(item <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tpq.priorityQueue[pq.length] = item</span><br><span class=\"line\">\tpq.swim(pq.length)</span><br><span class=\"line\">\tpq.length++</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(pq *MaxPriorityQueue)</span></span> DelMax() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\tmax := pq.priorityQueue[<span class=\"number\">0</span>]</span><br><span class=\"line\">\texch(pq.priorityQueue, <span class=\"number\">0</span>, pq.length<span class=\"number\">-1</span>)</span><br><span class=\"line\">\tpq.length--</span><br><span class=\"line\">\tpq.priorityQueue = pq.priorityQueue[:pq.length]</span><br><span class=\"line\">\tpq.sink(<span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> max</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"2-4-5-堆排序\"><a href=\"#2-4-5-堆排序\" class=\"headerlink\" title=\"2.4.5 堆排序\"></a>2.4.5 堆排序</h4><p>下沉操作：只需要少于2N次比较和少于N次的交换。</p>\n<p>排序操作：只需要少于2NlgN+2N次比较。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">HeapSort</span><span class=\"params\">(a []<span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 构建最大堆</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"built_in\">len</span>(a)/<span class=\"number\">2</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i-- &#123;</span><br><span class=\"line\">\t\tAdjustHeap(a, i, <span class=\"built_in\">len</span>(a))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 置于队尾</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> j := <span class=\"built_in\">len</span>(a) - <span class=\"number\">1</span>; j &gt; <span class=\"number\">0</span>; j-- &#123;</span><br><span class=\"line\">\t\ta[<span class=\"number\">0</span>], a[j] = a[j], a[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t\tAdjustHeap(a, <span class=\"number\">0</span>, j)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">AdjustHeap</span><span class=\"params\">(a []<span class=\"type\">int</span>, i, length <span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\ttmp := a[i]</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> k := i*<span class=\"number\">2</span> + <span class=\"number\">1</span>; k &lt; length; k = k*<span class=\"number\">2</span> + <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> k+<span class=\"number\">1</span> &lt; length &amp;&amp; a[k] &lt; a[k+<span class=\"number\">1</span>] &#123;</span><br><span class=\"line\">\t\t\tk++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> a[k] &gt; tmp &#123;</span><br><span class=\"line\">\t\t\ta[i] = a[k]</span><br><span class=\"line\">\t\t\ti = k</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ta[i] = tmp</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<h3 id=\"2-5-应用\"><a href=\"#2-5-应用\" class=\"headerlink\" title=\"2.5 应用\"></a>2.5 应用</h3><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms02Sorting1.png\"></p>\n<p>快速排序是最快的通用排序算法。</p>\n<hr>"},{"title":"《算法》笔记：第4章  图","date":"2022-04-15T02:09:55.000Z","id":"algorithms4","_content":"\n\n\n《算法》第4章：图。\n\n无向图，有向图，最小生成树，最短路径。\n\n\n\n<!-- more -->\n\n\n\n---\n\n\n\n4种最重要的图模型：无向图（简单链接）、有向图（方向性）、加权图（带有权值）和加权有向图（既有方向性又带有权值）。\n\n\n\n---\n\n\n\n### 4.1 无向图\n\n- 使用0至V-1来表示一张含有V个顶点各个顶点；\n\n- v-w表示连接v和w的边；\n\n- 特殊的图：含有平行边的称为多重图，没有平行边或自环的称为简单图。\n\n  - 自环：一条连接到自己的边。\n  - 平行边：同一对顶点的边。\n\n  \n\n#### 4.1.1 术语表\n\n和图相关的术语很多：\n\n- 相邻：两个顶点通过一条边相连。\n- 度数：依附顶点的边的条数。\n- 子图：由一幅图的所有边的一个子集组成的图。\n- 路径：由边顺序连接的一系列顶点。\n  - 简单路径：没有重复顶点的路径。\n  - 环：起点和终点相同。\n  - 简单环：除起点和终点之外没有重复顶点和边。\n  - 长度：所包含的边数。\n- 连通图：任意一个顶点都能到达另一个顶点。\n- 无环图：没有环。\n- 树：无环连通图。\n  - 森林：互不相连的树组成的集合。\n  - 生成树：连通图的生成树是它的一副子图，含有图中所有顶点且是一棵树。\n- 二分图：将所有结点分为两部分的图。\n\n\n\n#### 4.1.2 表示无向图的数据类型\n\n最常用的图处理算法：\n\n```go\nfunc Degree(g Graph, v int) int {\n\treturn len(g.Adj(v))\n}\n\nfunc MaxDegree(g Graph) int {\n\tmax := 0\n\tfor i :=0; i < g.V; i++ {\n\t\tif d := Degree(g, i); d > max {\n\t\t\tmax = d\n\t\t}\n\t}\n\treturn max\n}\n\nfunc AvgDegree(graph Graph) float64 {\n\treturn 2.0 * float64(graph.E) / float64(graph.V)\n}\n\nfunc NOfSelfLoops(graph Graph) int {\n\tcount := 0\n\tfor v := 0; v < graph.V; v++ {\n\t\tfor _, w := range graph.Adj(v) {\n\t\t\tif w == v {\n\t\t\t\tcount++\n\t\t\t}\n\t\t}\n\t}\n\treturn count / 2\n}\n\nfunc ToString(g Graph) string {\n\ts := fmt.Sprintf(\"%v vertices, %v edges\\n\", g.V, g.E)\n\tfor v := 0; v < g.V; v++ {\n\t\ts += fmt.Sprintf(\"%v: \", v)\n\t\tfor _, w := range g.Adj(v) {\n\t\t\ts += fmt.Sprintf(\"%v \", w)\n\t\t}\n\t\ts += \"\\n\"\n\t}\n\treturn s\n}\n```\n\nGraph数据类型\n\n```go\ntype Graph struct {\n\tV int\n\tE int\n\tadj []Chapter01Foundation.ListBag\n}\n\nfunc NewGraph(v int) *Graph {\n\t return &Graph{\n\t\tV: v,\n\t\tE: 0,\n\t\tadj: make([]Chapter01Foundation.ListBag, v),\n\t}\n}\n\nfunc (g *Graph) AddEdge(v, w int) {\n\tg.adj[v].Add(w)\n\tg.adj[w].Add(v)\n\tg.E++\n}\n\nfunc (g *Graph) Adj(v int) []interface{} {\n\treturn g.adj[v].Iterator()\n}\n```\n\n\n\n#### 4.1.3 深度优先搜索\n\n跟路径相关，需要使用深度优先搜索。\n\n```go\ntype DepthFirstSearch struct {\n\tmarked []bool\n\tcount int\n}\n\nfunc NewDepthFirstSearch(g Graph, s int) *DepthFirstSearch {\n\td := new(DepthFirstSearch)\n\td.count = 0\n\td.marked = make([]bool, g.V)\n\td.DFS(g, s)\n\treturn d\n}\n\nfunc (d *DepthFirstSearch) DFS(g Graph, v int) {\n\td.marked[v] = true\n\td.count++\n\tfor _, w := range g.Adj(v) {\n\t\tif !d.marked[w.(int)] {\n\t\t\td.DFS(g, w.(int))\n\t\t}\n\t}\n}\n```\n\n\n\n#### 4.1.4 寻找路径\n\n单点路径：给定一幅图和一个起点，到目的顶点是否存在一条路径，找出这条路径。\n\n```go\n// 是否有一条路径\ntype DepthFirstPaths struct {\n\tmarked []bool\t//这个顶点上调用过DFS吗？\n\tedgeTo []int\t//从起点到一个顶点的已知路径上的最后一个顶点\n\ts int\t\t\t//起点\n}\n\nfunc NewDepthFirstPaths(g Graph, start int) *DepthFirstPaths {\n\tp := new(DepthFirstPaths)\n\tp.marked = make([]bool, g.V)\n\tp.edgeTo = make([]int, g.V)\n\tp.s = start\n\tp.DFS(g, start)\n\treturn p\n}\n\nfunc (p *DepthFirstPaths) DFS(g Graph, v int) {\n\tp.marked[v] = true\n\tfor _, w := range g.Adj(v) {\n\t\tif !p.marked[w.(int)] {\n\t\t\tp.edgeTo[w.(int)] = v\n\t\t\tp.DFS(g, w.(int))\n\t\t}\n\t}\n}\n\nfunc (p *DepthFirstPaths) HasPathTo(v int) bool {\n\treturn p.marked[v]\n}\n\nfunc (p *DepthFirstPaths) PathTo(v int) []int {\n\tif !p.HasPathTo(v) {\n\t\treturn nil\n\t}\n\tret := make([]int, 0)\n\tfor x := v; x != p.s; x = p.edgeTo[x] {\n\t\tret = append(ret, x)\n\t}\n\tret = append(ret, p.s)\n\treturn ret\n}\n```\n\n\n\n#### 4.1.5 广度优先搜索\n\n处理最短路径的方法。\n\n```go\ntype BreadthFirstPaths struct {\n\tmarked []bool\n\tedgeTo []int\n\tstart int\n}\n\nfunc NewBreadthFirstPaths(g Graph, s int) *BreadthFirstPaths {\n\tret := new(BreadthFirstPaths)\n\tret.marked = make([]bool, g.V)\n\tret.edgeTo = make([]int, g.V)\n\tret.start = s\n\tret.BFS(g, s)\n\treturn ret\n}\n\nfunc (p *BreadthFirstPaths) BFS(g Graph, s int) {\n\tl := list.New()\n\tp.marked[s] = true\n\tl.PushBack(s)\n\tfor l.Len() != 0 {\n\t\tv := l.Remove(l.Front()).(int)\n\t\tfor _, wRow := range g.Adj(v) {\n\t\t\tw := wRow.(int)\n\t\t\tif !p.marked[w] {\n\t\t\t\tp.edgeTo[w] = v\n\t\t\t\tp.marked[w] = true\n\t\t\t\tl.PushBack(w)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunc (p *BreadthFirstPaths) HasPathTo(v int) bool {\n\treturn p.marked[v]\n}\n\nfunc (p *BreadthFirstPaths) PathTo(v int) []int {\n\tif !p.HasPathTo(v) {\n\t\treturn nil\n\t}\n\tret := make([]int, 0)\n\tfor x := v; x != p.start; x = p.edgeTo[x] {\n\t\tret = append(ret, x)\n\t}\n\tret = append(ret, p.start)\n\treturn ret\n}\n```\n\n\n\n#### 4.1.6 连通分量\n\n一个图的极大连通子图称为连通分量。\n\n```go\ntype CC struct {\n\tmarked []bool\t\n\tid []int\t//连通分量的编号\n\tcount int\t//当前编号\n}\n\nfunc NewCC(g Graph) *CC {\n\tret := new(CC)\n\tret.marked = make([]bool, g.V)\n\tret.count = 0\n\tret.id = make([]int, g.V)\n\tfor s := 0; s < g.V; s++ {\n\t\tif !ret.marked[s] {\n\t\t\tret.DFS(g, s)\n\t\t\tret.count++\n\t\t}\n\t}\n\treturn ret\n}\n\nfunc (cc *CC) DFS(g Graph, v int) {\n\tcc.marked[v] = true\n\tcc.id[v] = cc.count\n\tfor _, wRow := range g.Adj(v) {\n\t\tw := wRow.(int)\n\t\tif !cc.marked[w] {\n\t\t\tcc.DFS(g, w)\n\t\t}\n\t}\n}\n\nfunc (cc *CC) Connected(v, w int) bool {\n\treturn cc.id[v] == cc.id[w]\n}\n```\n\n使用深度优先算法处理图的其他实例\n\n{% pdf https://zhenruyi.github.io/files/DFSOtherExamples.pdf %}\n\n\n\n#### 4.1.7 符号图\n\n使用字符串而非整数来表示和指代顶点。\n\n书上的方法是，使用两个数组，一个对于索引->字符串，一个从字符串->索引。然后图还是使用整数表示顶点。\n\n我用了一个map记录。\n\n```go\ntype SymbolGraph struct {\n\t// 键为图的顶点，值为顶点的整数表示\n\t// 值为0时，表示顶点不存在，从1开始计算。\n\tindex map[string]int\n\tgraph *Graph\n}\n\nfunc NewSymbolGraph(filePath string) *SymbolGraph {\n\tsg := new(SymbolGraph)\n\tsg.index = make(map[string]int)\n\tfile, err := os.Open(filePath)\n\tif err != nil {\n\t\tfmt.Println(\"open error\")\n\t\treturn nil\n\t}\n\tdefer file.Close()\n\tcount := 1\n\tbr := bufio.NewReader(file)\n\tfor {\n\t\trow, _, c := br.ReadLine()\n\t\tif c == io.EOF {\n\t\t\tbreak\n\t\t}\n\t\tdata := string(row)\n\t\tsplits := strings.Split(data, \" \")\n\t\tfor _, v := range splits {\n\t\t\tif sg.index[v] == 0 {\n\t\t\t\tsg.index[v] = count\n\t\t\t\tcount++\n\t\t\t}\n\t\t}\n\t}\n\tsg.graph = NewGraph(count-1)\n\tbr = bufio.NewReader(file)\n\tfor {\n\t\trow, _, c := br.ReadLine()\n\t\tif c == io.EOF {\n\t\t\tbreak\n\t\t}\n\t\tdata := string(row)\n\t\tsplits := strings.Split(data, \" \")\n\t\tv := sg.index[splits[0]] - 1\n\t\tw := sg.index[splits[1]] - 1\n\t\tsg.graph.AddEdge(v, w)\n\t}\n\treturn sg\n}\n\nfunc (sg *SymbolGraph) Contains(s string) bool {\n\treturn sg.index[s] != 0\n}\n\nfunc (sg *SymbolGraph) Index(s string) int {\n\treturn sg.index[s] - 1\n}\n\nfunc (sg *SymbolGraph) Name(v int) string {\n\tfor key, val := range sg.index {\n\t\tif v == val - 1 {\n\t\t\treturn key\n\t\t}\n\t}\n\treturn \"\"\n}\n```\n\n\n\n#### 4.1.8 总结\n\n基本概念：\n\n- 图的术语；\n- 图的表示方法；\n- 深度优先，广度优先；\n- 符号图。\n\n\n\n\n\n---\n\n\n\n### 4.2 有向图\n\n在有向图种，边是单向的。\n\n#### 4.2.1 术语\n\n- 出度：指出的边的数量。\n- 头尾：第一个顶点称为头，第二个顶点称为尾。\n- 有向路径，有向环。\n- 简单有向环：不存在重复的顶点和边的环。\n\n#### 4.2.2 数据类型\n\n有向图取反reverse()方法，返回有向图的一个副本，但所有的边方向反转。\n\n```go\ntype Digraph struct {\n\tV int\n\tE int\n\tadj []Chapter01Foundation.ListBag\n}\n\nfunc NewDigraph(v int) *Digraph {\n\treturn &Digraph{\n\t\tV: v,\n\t\tE: 0,\n\t\tadj: make([]Chapter01Foundation.ListBag, v),\n\t}\n}\n\nfunc (g *Digraph) AddEdge(v, w int) {\n\tg.adj[v].Add(w)\n\tg.E++\n}\n\nfunc (g *Digraph) Adj(v int) []interface{} {\n\treturn g.adj[v].Iterator()\n}\n\nfunc (g *Digraph) Reverse() *Digraph {\n\tret := NewDigraph(g.V)\n\tfor v := 0; v < g.V; v++ {\n\t\tfor _, row := range g.Adj(v) {\n\t\t\tw := row.(int)\n\t\t\tret.AddEdge(w, v)\n\t\t}\n\t}\n\treturn ret\n}\n```\n\n\n\n#### 4.2.3 可达性\n\n深度优先搜索。\n\n有向图寻路：s -> v\n\n```go\ntype DirectedDFS struct {\n\tmarked []bool\n}\n\nfunc NewDirectedDFS(g Graph, s int) *DirectedDFS {\n\td := new(DirectedDFS)\n\td.marked = make([]bool, g.V)\n\td.DFS(g, s)\n\treturn d\n}\n\nfunc (d *DirectedDFS) DFS(g Graph, v int) {\n\td.marked[v] = true\n\tfor _, w := range g.Adj(v) {\n\t\tif !d.marked[w.(int)] {\n\t\t\td.DFS(g, w.(int))\n\t\t}\n\t}\n}\n```\n\n\n\n#### 4.2.4 环和有向无环图\n\n处理优先级限制下的调度问题，有向图出现环会让调度进入循环。\n\n寻找环：\n\n```go\ntype DirectedCycle struct {\n\tmarked []bool\n\tedgeTo []int\n\tcycle list.List\n\tonStack []bool\n}\n\nfunc NewDirectedCycle(g Graph) *DirectedCycle {\n\tret := &DirectedCycle{\n\t\tonStack: make([]bool, g.V),\n\t\tedgeTo: make([]int, g.V),\n\t\tmarked: make([]bool, g.V),\n\t}\n\tfor v:=0; v < g.V; v++ {\n\t\tif !ret.marked[v] {\n\t\t\tret.DFS(g, v)\n\t\t}\n\t}\n\treturn ret\n}\n\nfunc (d *DirectedCycle) DFS(g Graph, v int) {\n\td.onStack[v] = true\n\td.marked[v] = true\n\tfor _, row := range g.Adj(v) {\n\t\tw := row.(int)\n\t\tif d.HasCycle() {\n\t\t\treturn\n\t\t} else if !d.marked[w] {\n\t\t\td.edgeTo[w] = v\n\t\t\td.DFS(g, w)\n\t\t} else if d.onStack[w] {\n\t\t\td.cycle = list.New()\n\t\t\tfor x:=v; x != w; x = d.edgeTo[x] {\n\t\t\t\td.cycle.PushFront(x)\n\t\t\t}\n\t\t\td.cycle.PushFront(w)\n\t\t\td.cycle.PushFront(v)\n\t\t}\n\t}\n}\n\nfunc (d *DirectedCycle) HasCycle() bool {\n\treturn d.cycle.Len() != 0\n}\n\nfunc (d *DirectedCycle) Cycle() list.List {\n\treturn d.cycle\n}\n```\n\n\n\n#### 4.2.5 强连通性\n\n如果两个顶点是相互可达的，称它们为强连通的。如果一幅图中任意两个顶点都是强连通的，则称这幅图是强连通的。\n\n强连通分量：相互均为强连通的顶点的最大子集。\n\n要另外实现一个取反操作才能进行。\n\n```go\ntype KasarajuSCC struct {\n\tmarked []bool\n\tid []int\t//连通分量的编号\n\tcount int\t//当前编号\n}\n\nfunc NewKasarajuSCC(g Graph) *KasarajuSCC {\n\tret := new(KasarajuSCC)\n\tret.marked = make([]bool, g.V)\n\tret.count = 0\n\tret.id = make([]int, g.V)\n\t/*\n\tfor s := 0; s < g.V; s++ {\n\t\tif !ret.marked[s] {\n\t\t\tret.DFS(g, s)\n\t\t\tret.count++\n\t\t}\n\t}\n\t*/\n\treturn ret\n}\n\nfunc (cc *KasarajuSCC) DFS(g Graph, v int) {\n\tcc.marked[v] = true\n\tcc.id[v] = cc.count\n\tfor _, wRow := range g.Adj(v) {\n\t\tw := wRow.(int)\n\t\tif !cc.marked[w] {\n\t\t\tcc.DFS(g, w)\n\t\t}\n\t}\n}\n\nfunc (cc *KasarajuSCC) StronglyConnected(v, w int) bool {\n\treturn cc.id[v] == cc.id[w]\n}\n```\n\n\n\n#### 4.2.6 总结\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms04Graph1.png)\n\n\n\n---\n\n\n\n### 4.3 最小生成树\n\n加权图是为每条边关联一个权值或成本的图模型。\n\n最小生成树是图的一棵含有其他所有顶点的无环连通子图。\n\n最小生成树的两种经典算法：Prim算法和Kruskal算法。\n\n\n\n#### 4.3.1 原理\n\n树的两个最重要的性质：\n\n- 用一条边连接树中的任意两个顶点会产生一个新的环；\n- 从树中删去一条边会得到两棵独立的树。\n\n图的一种切分是将图的所有顶点分为两个非空且不重复的集合，横切边是一条连接两个属于不同集合的顶点的边。\n\n切分定理：在一幅加权图中，给定任意的切分，它的横切边中权值最小者必然属于图的最小生成树。\n\n切分定理是解决最小生成树问题的所有算法的基础。更确切地说，这些算法是贪心算法地特殊情况，使用切分定理找到一条边，不断重复直到找到最小生成树的所有边。\n\n最小生成树的贪心算法：将V个顶点的任意加权连通图中属于最小生成树的边标记为黑色。初始状态下均为灰色，找到一种切分，它产生的横切边都不是黑色，将它权重最小的横切边标记为黑色。反复，直到标记V-1条黑色的边为止。\n\n\n\n#### 4.3.2 加权无向图的数据类型\n\n带权重的边的数据类型：\n\n```go\ntype Edge struct {\n\tv, w int\n\tweight float64\n}\n\nfunc NewEdge(v, w int, wgh float64) *Edge {\n\treturn &Edge{\n\t\tv: v,\n\t\tw: w,\n\t\tweight: wgh,\n\t}\n}\n\nfunc (e *Edge) Either() int {\n\treturn e.v\n}\n\nfunc (e *Edge) Other(v int) int {\n\tif v == e.v {\n\t\treturn e.w\n\t}\n\tif v == e.w {\n\t\treturn e.v\n\t}\n\treturn -1\n}\n\nfunc (e *Edge) CmpTo(that Edge) int {\n\tif e.weight > that.weight {\n\t\treturn 1\n\t}\n\tif e.weight < that.weight {\n\t\treturn -1\n\t}\n\treturn 0\n}\n```\n\n加权无向图的数据类型：\n\n```go\ntype EdgeWeightedGraph struct {\n\tV int\n\tE int\n\tadj []Chapter01Foundation.ListBag\n}\n\nfunc NewEdgeWeightedGraph(v int) *EdgeWeightedGraph {\n\treturn &EdgeWeightedGraph{\n\t\tV: v,\n\t\tE: 0,\n\t\tadj: make([]Chapter01Foundation.ListBag, v),\n\t}\n}\n\nfunc (g *EdgeWeightedGraph) AddEdge(e Edge) {\n\tv, w := e.v, e.w\n\tg.adj[v].Add(e)\n\tg.adj[w].Add(e)\n\tg.E++\n}\n```\n\n\n\n#### 4.3.3 最小生成树API\n\nedges()返回最小生成树的所有边。\n\nweigh()返回最小生成树的权重。\n\n\n\n#### 4.3.4 Prim算法\n\n每一步都会为一棵生长中的树添加一条边。一开始这棵树只有一个顶点，然后添加V-1条边，每次总是将下一条连接树中的顶点与不在树中的顶点且权值最小的边加入树中。\n\n最小生成树的Prim算法的延时实现：\n\n```go\ntype LazyPrimMST struct {\n\tmarked []bool\t// 顶点\n\tmst *Chapter01Foundation.ListQueue  // 边\n\t// 横切边，原文是最小队列，我是最大队列\n\t//pq *Chapter02Sorting.MaxPriorityQueue\n\tpq *list.List\n}\n\nfunc (p *LazyPrimMST) Visit(g EdgeWeightedGraph, v int) {\n\tp.marked[v] = true\n\tfor _, row := range g.Adj(v) {\n\t\te := row.(Edge)\n\t\tif !p.marked[e.Other(v)] {\n\t\t\tp.pq.PushFront(e)\n\t\t\tp.SortList()\n\t\t}\n\t}\n}\n\nfunc (p *LazyPrimMST) SortList() {\n\tif p.pq.Len() == 0 {\n\t\treturn \n\t}\n\tmin := p.pq.Front()\n\tfor po := p.pq.Front(); po != nil; po = po.Next() {\n\t\tif po.Value.(Edge).weight < min.Value.(Edge).weight {\n\t\t\tmin = po\n\t\t}\n\t}\n\tp.pq.MoveBefore(min, p.pq.Front())\n}\n\nfunc NewLazyPrimMST(g EdgeWeightedGraph) *LazyPrimMST {\n\tret := new(LazyPrimMST)\n\tret.pq = list.New()\n\tret.marked = make([]bool, g.V)\n\tret.mst = new(Chapter01Foundation.ListQueue)\n\tret.Visit(g, 0)\n\tfor ret.pq.Len() != 0 {\n\t\te := ret.pq.Remove(ret.pq.Front()).(Edge)\n\t\tret.SortList()\n\t\tv := e.Either()\n\t\tw := e.Other(v)\n\t\tif ret.marked[v] && ret.marked[w] {\n\t\t\tcontinue\n\t\t}\n\t\tret.mst.Enqueue(e)\n\t\tif !ret.marked[v] {\n\t\t\tret.Visit(g, v)\n\t\t}\n\t\tif !ret.marked[w] {\n\t\t\tret.Visit(g, w)\n\t\t}\n\t}\n\treturn ret\n}\n```\n\n\n\n#### 4.3.5 Prim算法的即时实现\n\n不需要保存所有的边，只需要保存权值最小的边，只会在优先队列保存每个非树顶点w的一条边，这条边是与树中顶点连接起来的权值最小的边。\n\n\n\n#### 4.3.6 Kruskal算法\n\n按照权值顺序处理它们，将边加入最小生成树中，加入的表不会构成环，直到加入V-1条边。\n\n\n\n#### 4.3.7 展望\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms04Graph2.png)\n\n\n\n---\n\n\n\n### 4.4 最短路径\n\n最短路径是权重最小者。\n\n#### 4.4.1 性质\n\n- 路径是有向的。\n- 权重不一定等价于距离，可能是时间等。\n- 并不是所有顶点都是可达的，为了简化问题，假设都是强连通的。\n- 最短路径不一定是唯一的，但是只需要找到一条就行。\n- 最短路径树：以s为起点，包含s和从s可达的所有顶点。\n\n#### 4.4.2 加权有向图的数据结构\n\n加权有向边的数据类型\n\n```go\ntype DirectedEdge struct {\n\tv int\n\tw int\n\tweight float64\n}\n\nfunc NewDirectedEdge(v, w int, weight float64) *DirectedEdge {\n\treturn &DirectedEdge{v, w, weight}\n}\n\nfunc (E *DirectedEdge) From() int {\n\treturn E.v\n}\n\nfunc (E *DirectedEdge) To() int {\n\treturn E.w\n}\n```\n\n加权有向图的数据类型\n\n```go\ntype EdgeWeightedDigraph struct {\n\tV int\n\tE int\n\tadj []list.List\n}\n\nfunc NewEdgeWeightedDigraph(v int) *EdgeWeightedDigraph {\n\treturn &EdgeWeightedDigraph{v, 0, make([]list.List, v)}\n}\n\nfunc (dg *EdgeWeightedDigraph) AddEdge(e DirectedEdge) {\n\tdg.adj[e.From()].PushFront(e)\n\tdg.E++\n}\n\nfunc (dg *EdgeWeightedDigraph) Adj(v int) *list.List {\n\treturn &dg.adj[v]\n}\n\nfunc (dg *EdgeWeightedDigraph) Edges() *list.List {\n\tret := list.New()\n\tfor v := 0; v < dg.V; v++ {\n\t\tl := dg.adj[v]\n\t\tfor tmp := l.Front(); tmp != nil; tmp = tmp.Next() {\n\t\t\tret.PushBack(tmp.Value)\n\t\t}\n\t}\n\treturn ret\n}\n```\n\n\n\n#### 4.4.3 理论基础\n\n最短路径的最优性条件。\n\n#### 4.4.4 Dijkstra算法\n\n#### 4.4.5 无环加权有向图的最短路径算法\n\n#### 4.4.6 一般加权有向图的最短路径问题\n\n#### 4.4.7 展望\n\n{% pdf https://zhenruyi.github.io/files/DijkstraAlgoOfShortest.pdf %}\n\n\n\n---\n\n\n\n","source":"_posts/algo-learn03Algorithms04Graph.md","raw":"---\ntitle: 《算法》笔记：第4章  图\ndate: 2022-04-15 10:09:55\nid: algorithms4\ncategories:\n- algo\ntags:\n- learn\n---\n\n\n\n《算法》第4章：图。\n\n无向图，有向图，最小生成树，最短路径。\n\n\n\n<!-- more -->\n\n\n\n---\n\n\n\n4种最重要的图模型：无向图（简单链接）、有向图（方向性）、加权图（带有权值）和加权有向图（既有方向性又带有权值）。\n\n\n\n---\n\n\n\n### 4.1 无向图\n\n- 使用0至V-1来表示一张含有V个顶点各个顶点；\n\n- v-w表示连接v和w的边；\n\n- 特殊的图：含有平行边的称为多重图，没有平行边或自环的称为简单图。\n\n  - 自环：一条连接到自己的边。\n  - 平行边：同一对顶点的边。\n\n  \n\n#### 4.1.1 术语表\n\n和图相关的术语很多：\n\n- 相邻：两个顶点通过一条边相连。\n- 度数：依附顶点的边的条数。\n- 子图：由一幅图的所有边的一个子集组成的图。\n- 路径：由边顺序连接的一系列顶点。\n  - 简单路径：没有重复顶点的路径。\n  - 环：起点和终点相同。\n  - 简单环：除起点和终点之外没有重复顶点和边。\n  - 长度：所包含的边数。\n- 连通图：任意一个顶点都能到达另一个顶点。\n- 无环图：没有环。\n- 树：无环连通图。\n  - 森林：互不相连的树组成的集合。\n  - 生成树：连通图的生成树是它的一副子图，含有图中所有顶点且是一棵树。\n- 二分图：将所有结点分为两部分的图。\n\n\n\n#### 4.1.2 表示无向图的数据类型\n\n最常用的图处理算法：\n\n```go\nfunc Degree(g Graph, v int) int {\n\treturn len(g.Adj(v))\n}\n\nfunc MaxDegree(g Graph) int {\n\tmax := 0\n\tfor i :=0; i < g.V; i++ {\n\t\tif d := Degree(g, i); d > max {\n\t\t\tmax = d\n\t\t}\n\t}\n\treturn max\n}\n\nfunc AvgDegree(graph Graph) float64 {\n\treturn 2.0 * float64(graph.E) / float64(graph.V)\n}\n\nfunc NOfSelfLoops(graph Graph) int {\n\tcount := 0\n\tfor v := 0; v < graph.V; v++ {\n\t\tfor _, w := range graph.Adj(v) {\n\t\t\tif w == v {\n\t\t\t\tcount++\n\t\t\t}\n\t\t}\n\t}\n\treturn count / 2\n}\n\nfunc ToString(g Graph) string {\n\ts := fmt.Sprintf(\"%v vertices, %v edges\\n\", g.V, g.E)\n\tfor v := 0; v < g.V; v++ {\n\t\ts += fmt.Sprintf(\"%v: \", v)\n\t\tfor _, w := range g.Adj(v) {\n\t\t\ts += fmt.Sprintf(\"%v \", w)\n\t\t}\n\t\ts += \"\\n\"\n\t}\n\treturn s\n}\n```\n\nGraph数据类型\n\n```go\ntype Graph struct {\n\tV int\n\tE int\n\tadj []Chapter01Foundation.ListBag\n}\n\nfunc NewGraph(v int) *Graph {\n\t return &Graph{\n\t\tV: v,\n\t\tE: 0,\n\t\tadj: make([]Chapter01Foundation.ListBag, v),\n\t}\n}\n\nfunc (g *Graph) AddEdge(v, w int) {\n\tg.adj[v].Add(w)\n\tg.adj[w].Add(v)\n\tg.E++\n}\n\nfunc (g *Graph) Adj(v int) []interface{} {\n\treturn g.adj[v].Iterator()\n}\n```\n\n\n\n#### 4.1.3 深度优先搜索\n\n跟路径相关，需要使用深度优先搜索。\n\n```go\ntype DepthFirstSearch struct {\n\tmarked []bool\n\tcount int\n}\n\nfunc NewDepthFirstSearch(g Graph, s int) *DepthFirstSearch {\n\td := new(DepthFirstSearch)\n\td.count = 0\n\td.marked = make([]bool, g.V)\n\td.DFS(g, s)\n\treturn d\n}\n\nfunc (d *DepthFirstSearch) DFS(g Graph, v int) {\n\td.marked[v] = true\n\td.count++\n\tfor _, w := range g.Adj(v) {\n\t\tif !d.marked[w.(int)] {\n\t\t\td.DFS(g, w.(int))\n\t\t}\n\t}\n}\n```\n\n\n\n#### 4.1.4 寻找路径\n\n单点路径：给定一幅图和一个起点，到目的顶点是否存在一条路径，找出这条路径。\n\n```go\n// 是否有一条路径\ntype DepthFirstPaths struct {\n\tmarked []bool\t//这个顶点上调用过DFS吗？\n\tedgeTo []int\t//从起点到一个顶点的已知路径上的最后一个顶点\n\ts int\t\t\t//起点\n}\n\nfunc NewDepthFirstPaths(g Graph, start int) *DepthFirstPaths {\n\tp := new(DepthFirstPaths)\n\tp.marked = make([]bool, g.V)\n\tp.edgeTo = make([]int, g.V)\n\tp.s = start\n\tp.DFS(g, start)\n\treturn p\n}\n\nfunc (p *DepthFirstPaths) DFS(g Graph, v int) {\n\tp.marked[v] = true\n\tfor _, w := range g.Adj(v) {\n\t\tif !p.marked[w.(int)] {\n\t\t\tp.edgeTo[w.(int)] = v\n\t\t\tp.DFS(g, w.(int))\n\t\t}\n\t}\n}\n\nfunc (p *DepthFirstPaths) HasPathTo(v int) bool {\n\treturn p.marked[v]\n}\n\nfunc (p *DepthFirstPaths) PathTo(v int) []int {\n\tif !p.HasPathTo(v) {\n\t\treturn nil\n\t}\n\tret := make([]int, 0)\n\tfor x := v; x != p.s; x = p.edgeTo[x] {\n\t\tret = append(ret, x)\n\t}\n\tret = append(ret, p.s)\n\treturn ret\n}\n```\n\n\n\n#### 4.1.5 广度优先搜索\n\n处理最短路径的方法。\n\n```go\ntype BreadthFirstPaths struct {\n\tmarked []bool\n\tedgeTo []int\n\tstart int\n}\n\nfunc NewBreadthFirstPaths(g Graph, s int) *BreadthFirstPaths {\n\tret := new(BreadthFirstPaths)\n\tret.marked = make([]bool, g.V)\n\tret.edgeTo = make([]int, g.V)\n\tret.start = s\n\tret.BFS(g, s)\n\treturn ret\n}\n\nfunc (p *BreadthFirstPaths) BFS(g Graph, s int) {\n\tl := list.New()\n\tp.marked[s] = true\n\tl.PushBack(s)\n\tfor l.Len() != 0 {\n\t\tv := l.Remove(l.Front()).(int)\n\t\tfor _, wRow := range g.Adj(v) {\n\t\t\tw := wRow.(int)\n\t\t\tif !p.marked[w] {\n\t\t\t\tp.edgeTo[w] = v\n\t\t\t\tp.marked[w] = true\n\t\t\t\tl.PushBack(w)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunc (p *BreadthFirstPaths) HasPathTo(v int) bool {\n\treturn p.marked[v]\n}\n\nfunc (p *BreadthFirstPaths) PathTo(v int) []int {\n\tif !p.HasPathTo(v) {\n\t\treturn nil\n\t}\n\tret := make([]int, 0)\n\tfor x := v; x != p.start; x = p.edgeTo[x] {\n\t\tret = append(ret, x)\n\t}\n\tret = append(ret, p.start)\n\treturn ret\n}\n```\n\n\n\n#### 4.1.6 连通分量\n\n一个图的极大连通子图称为连通分量。\n\n```go\ntype CC struct {\n\tmarked []bool\t\n\tid []int\t//连通分量的编号\n\tcount int\t//当前编号\n}\n\nfunc NewCC(g Graph) *CC {\n\tret := new(CC)\n\tret.marked = make([]bool, g.V)\n\tret.count = 0\n\tret.id = make([]int, g.V)\n\tfor s := 0; s < g.V; s++ {\n\t\tif !ret.marked[s] {\n\t\t\tret.DFS(g, s)\n\t\t\tret.count++\n\t\t}\n\t}\n\treturn ret\n}\n\nfunc (cc *CC) DFS(g Graph, v int) {\n\tcc.marked[v] = true\n\tcc.id[v] = cc.count\n\tfor _, wRow := range g.Adj(v) {\n\t\tw := wRow.(int)\n\t\tif !cc.marked[w] {\n\t\t\tcc.DFS(g, w)\n\t\t}\n\t}\n}\n\nfunc (cc *CC) Connected(v, w int) bool {\n\treturn cc.id[v] == cc.id[w]\n}\n```\n\n使用深度优先算法处理图的其他实例\n\n{% pdf https://zhenruyi.github.io/files/DFSOtherExamples.pdf %}\n\n\n\n#### 4.1.7 符号图\n\n使用字符串而非整数来表示和指代顶点。\n\n书上的方法是，使用两个数组，一个对于索引->字符串，一个从字符串->索引。然后图还是使用整数表示顶点。\n\n我用了一个map记录。\n\n```go\ntype SymbolGraph struct {\n\t// 键为图的顶点，值为顶点的整数表示\n\t// 值为0时，表示顶点不存在，从1开始计算。\n\tindex map[string]int\n\tgraph *Graph\n}\n\nfunc NewSymbolGraph(filePath string) *SymbolGraph {\n\tsg := new(SymbolGraph)\n\tsg.index = make(map[string]int)\n\tfile, err := os.Open(filePath)\n\tif err != nil {\n\t\tfmt.Println(\"open error\")\n\t\treturn nil\n\t}\n\tdefer file.Close()\n\tcount := 1\n\tbr := bufio.NewReader(file)\n\tfor {\n\t\trow, _, c := br.ReadLine()\n\t\tif c == io.EOF {\n\t\t\tbreak\n\t\t}\n\t\tdata := string(row)\n\t\tsplits := strings.Split(data, \" \")\n\t\tfor _, v := range splits {\n\t\t\tif sg.index[v] == 0 {\n\t\t\t\tsg.index[v] = count\n\t\t\t\tcount++\n\t\t\t}\n\t\t}\n\t}\n\tsg.graph = NewGraph(count-1)\n\tbr = bufio.NewReader(file)\n\tfor {\n\t\trow, _, c := br.ReadLine()\n\t\tif c == io.EOF {\n\t\t\tbreak\n\t\t}\n\t\tdata := string(row)\n\t\tsplits := strings.Split(data, \" \")\n\t\tv := sg.index[splits[0]] - 1\n\t\tw := sg.index[splits[1]] - 1\n\t\tsg.graph.AddEdge(v, w)\n\t}\n\treturn sg\n}\n\nfunc (sg *SymbolGraph) Contains(s string) bool {\n\treturn sg.index[s] != 0\n}\n\nfunc (sg *SymbolGraph) Index(s string) int {\n\treturn sg.index[s] - 1\n}\n\nfunc (sg *SymbolGraph) Name(v int) string {\n\tfor key, val := range sg.index {\n\t\tif v == val - 1 {\n\t\t\treturn key\n\t\t}\n\t}\n\treturn \"\"\n}\n```\n\n\n\n#### 4.1.8 总结\n\n基本概念：\n\n- 图的术语；\n- 图的表示方法；\n- 深度优先，广度优先；\n- 符号图。\n\n\n\n\n\n---\n\n\n\n### 4.2 有向图\n\n在有向图种，边是单向的。\n\n#### 4.2.1 术语\n\n- 出度：指出的边的数量。\n- 头尾：第一个顶点称为头，第二个顶点称为尾。\n- 有向路径，有向环。\n- 简单有向环：不存在重复的顶点和边的环。\n\n#### 4.2.2 数据类型\n\n有向图取反reverse()方法，返回有向图的一个副本，但所有的边方向反转。\n\n```go\ntype Digraph struct {\n\tV int\n\tE int\n\tadj []Chapter01Foundation.ListBag\n}\n\nfunc NewDigraph(v int) *Digraph {\n\treturn &Digraph{\n\t\tV: v,\n\t\tE: 0,\n\t\tadj: make([]Chapter01Foundation.ListBag, v),\n\t}\n}\n\nfunc (g *Digraph) AddEdge(v, w int) {\n\tg.adj[v].Add(w)\n\tg.E++\n}\n\nfunc (g *Digraph) Adj(v int) []interface{} {\n\treturn g.adj[v].Iterator()\n}\n\nfunc (g *Digraph) Reverse() *Digraph {\n\tret := NewDigraph(g.V)\n\tfor v := 0; v < g.V; v++ {\n\t\tfor _, row := range g.Adj(v) {\n\t\t\tw := row.(int)\n\t\t\tret.AddEdge(w, v)\n\t\t}\n\t}\n\treturn ret\n}\n```\n\n\n\n#### 4.2.3 可达性\n\n深度优先搜索。\n\n有向图寻路：s -> v\n\n```go\ntype DirectedDFS struct {\n\tmarked []bool\n}\n\nfunc NewDirectedDFS(g Graph, s int) *DirectedDFS {\n\td := new(DirectedDFS)\n\td.marked = make([]bool, g.V)\n\td.DFS(g, s)\n\treturn d\n}\n\nfunc (d *DirectedDFS) DFS(g Graph, v int) {\n\td.marked[v] = true\n\tfor _, w := range g.Adj(v) {\n\t\tif !d.marked[w.(int)] {\n\t\t\td.DFS(g, w.(int))\n\t\t}\n\t}\n}\n```\n\n\n\n#### 4.2.4 环和有向无环图\n\n处理优先级限制下的调度问题，有向图出现环会让调度进入循环。\n\n寻找环：\n\n```go\ntype DirectedCycle struct {\n\tmarked []bool\n\tedgeTo []int\n\tcycle list.List\n\tonStack []bool\n}\n\nfunc NewDirectedCycle(g Graph) *DirectedCycle {\n\tret := &DirectedCycle{\n\t\tonStack: make([]bool, g.V),\n\t\tedgeTo: make([]int, g.V),\n\t\tmarked: make([]bool, g.V),\n\t}\n\tfor v:=0; v < g.V; v++ {\n\t\tif !ret.marked[v] {\n\t\t\tret.DFS(g, v)\n\t\t}\n\t}\n\treturn ret\n}\n\nfunc (d *DirectedCycle) DFS(g Graph, v int) {\n\td.onStack[v] = true\n\td.marked[v] = true\n\tfor _, row := range g.Adj(v) {\n\t\tw := row.(int)\n\t\tif d.HasCycle() {\n\t\t\treturn\n\t\t} else if !d.marked[w] {\n\t\t\td.edgeTo[w] = v\n\t\t\td.DFS(g, w)\n\t\t} else if d.onStack[w] {\n\t\t\td.cycle = list.New()\n\t\t\tfor x:=v; x != w; x = d.edgeTo[x] {\n\t\t\t\td.cycle.PushFront(x)\n\t\t\t}\n\t\t\td.cycle.PushFront(w)\n\t\t\td.cycle.PushFront(v)\n\t\t}\n\t}\n}\n\nfunc (d *DirectedCycle) HasCycle() bool {\n\treturn d.cycle.Len() != 0\n}\n\nfunc (d *DirectedCycle) Cycle() list.List {\n\treturn d.cycle\n}\n```\n\n\n\n#### 4.2.5 强连通性\n\n如果两个顶点是相互可达的，称它们为强连通的。如果一幅图中任意两个顶点都是强连通的，则称这幅图是强连通的。\n\n强连通分量：相互均为强连通的顶点的最大子集。\n\n要另外实现一个取反操作才能进行。\n\n```go\ntype KasarajuSCC struct {\n\tmarked []bool\n\tid []int\t//连通分量的编号\n\tcount int\t//当前编号\n}\n\nfunc NewKasarajuSCC(g Graph) *KasarajuSCC {\n\tret := new(KasarajuSCC)\n\tret.marked = make([]bool, g.V)\n\tret.count = 0\n\tret.id = make([]int, g.V)\n\t/*\n\tfor s := 0; s < g.V; s++ {\n\t\tif !ret.marked[s] {\n\t\t\tret.DFS(g, s)\n\t\t\tret.count++\n\t\t}\n\t}\n\t*/\n\treturn ret\n}\n\nfunc (cc *KasarajuSCC) DFS(g Graph, v int) {\n\tcc.marked[v] = true\n\tcc.id[v] = cc.count\n\tfor _, wRow := range g.Adj(v) {\n\t\tw := wRow.(int)\n\t\tif !cc.marked[w] {\n\t\t\tcc.DFS(g, w)\n\t\t}\n\t}\n}\n\nfunc (cc *KasarajuSCC) StronglyConnected(v, w int) bool {\n\treturn cc.id[v] == cc.id[w]\n}\n```\n\n\n\n#### 4.2.6 总结\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms04Graph1.png)\n\n\n\n---\n\n\n\n### 4.3 最小生成树\n\n加权图是为每条边关联一个权值或成本的图模型。\n\n最小生成树是图的一棵含有其他所有顶点的无环连通子图。\n\n最小生成树的两种经典算法：Prim算法和Kruskal算法。\n\n\n\n#### 4.3.1 原理\n\n树的两个最重要的性质：\n\n- 用一条边连接树中的任意两个顶点会产生一个新的环；\n- 从树中删去一条边会得到两棵独立的树。\n\n图的一种切分是将图的所有顶点分为两个非空且不重复的集合，横切边是一条连接两个属于不同集合的顶点的边。\n\n切分定理：在一幅加权图中，给定任意的切分，它的横切边中权值最小者必然属于图的最小生成树。\n\n切分定理是解决最小生成树问题的所有算法的基础。更确切地说，这些算法是贪心算法地特殊情况，使用切分定理找到一条边，不断重复直到找到最小生成树的所有边。\n\n最小生成树的贪心算法：将V个顶点的任意加权连通图中属于最小生成树的边标记为黑色。初始状态下均为灰色，找到一种切分，它产生的横切边都不是黑色，将它权重最小的横切边标记为黑色。反复，直到标记V-1条黑色的边为止。\n\n\n\n#### 4.3.2 加权无向图的数据类型\n\n带权重的边的数据类型：\n\n```go\ntype Edge struct {\n\tv, w int\n\tweight float64\n}\n\nfunc NewEdge(v, w int, wgh float64) *Edge {\n\treturn &Edge{\n\t\tv: v,\n\t\tw: w,\n\t\tweight: wgh,\n\t}\n}\n\nfunc (e *Edge) Either() int {\n\treturn e.v\n}\n\nfunc (e *Edge) Other(v int) int {\n\tif v == e.v {\n\t\treturn e.w\n\t}\n\tif v == e.w {\n\t\treturn e.v\n\t}\n\treturn -1\n}\n\nfunc (e *Edge) CmpTo(that Edge) int {\n\tif e.weight > that.weight {\n\t\treturn 1\n\t}\n\tif e.weight < that.weight {\n\t\treturn -1\n\t}\n\treturn 0\n}\n```\n\n加权无向图的数据类型：\n\n```go\ntype EdgeWeightedGraph struct {\n\tV int\n\tE int\n\tadj []Chapter01Foundation.ListBag\n}\n\nfunc NewEdgeWeightedGraph(v int) *EdgeWeightedGraph {\n\treturn &EdgeWeightedGraph{\n\t\tV: v,\n\t\tE: 0,\n\t\tadj: make([]Chapter01Foundation.ListBag, v),\n\t}\n}\n\nfunc (g *EdgeWeightedGraph) AddEdge(e Edge) {\n\tv, w := e.v, e.w\n\tg.adj[v].Add(e)\n\tg.adj[w].Add(e)\n\tg.E++\n}\n```\n\n\n\n#### 4.3.3 最小生成树API\n\nedges()返回最小生成树的所有边。\n\nweigh()返回最小生成树的权重。\n\n\n\n#### 4.3.4 Prim算法\n\n每一步都会为一棵生长中的树添加一条边。一开始这棵树只有一个顶点，然后添加V-1条边，每次总是将下一条连接树中的顶点与不在树中的顶点且权值最小的边加入树中。\n\n最小生成树的Prim算法的延时实现：\n\n```go\ntype LazyPrimMST struct {\n\tmarked []bool\t// 顶点\n\tmst *Chapter01Foundation.ListQueue  // 边\n\t// 横切边，原文是最小队列，我是最大队列\n\t//pq *Chapter02Sorting.MaxPriorityQueue\n\tpq *list.List\n}\n\nfunc (p *LazyPrimMST) Visit(g EdgeWeightedGraph, v int) {\n\tp.marked[v] = true\n\tfor _, row := range g.Adj(v) {\n\t\te := row.(Edge)\n\t\tif !p.marked[e.Other(v)] {\n\t\t\tp.pq.PushFront(e)\n\t\t\tp.SortList()\n\t\t}\n\t}\n}\n\nfunc (p *LazyPrimMST) SortList() {\n\tif p.pq.Len() == 0 {\n\t\treturn \n\t}\n\tmin := p.pq.Front()\n\tfor po := p.pq.Front(); po != nil; po = po.Next() {\n\t\tif po.Value.(Edge).weight < min.Value.(Edge).weight {\n\t\t\tmin = po\n\t\t}\n\t}\n\tp.pq.MoveBefore(min, p.pq.Front())\n}\n\nfunc NewLazyPrimMST(g EdgeWeightedGraph) *LazyPrimMST {\n\tret := new(LazyPrimMST)\n\tret.pq = list.New()\n\tret.marked = make([]bool, g.V)\n\tret.mst = new(Chapter01Foundation.ListQueue)\n\tret.Visit(g, 0)\n\tfor ret.pq.Len() != 0 {\n\t\te := ret.pq.Remove(ret.pq.Front()).(Edge)\n\t\tret.SortList()\n\t\tv := e.Either()\n\t\tw := e.Other(v)\n\t\tif ret.marked[v] && ret.marked[w] {\n\t\t\tcontinue\n\t\t}\n\t\tret.mst.Enqueue(e)\n\t\tif !ret.marked[v] {\n\t\t\tret.Visit(g, v)\n\t\t}\n\t\tif !ret.marked[w] {\n\t\t\tret.Visit(g, w)\n\t\t}\n\t}\n\treturn ret\n}\n```\n\n\n\n#### 4.3.5 Prim算法的即时实现\n\n不需要保存所有的边，只需要保存权值最小的边，只会在优先队列保存每个非树顶点w的一条边，这条边是与树中顶点连接起来的权值最小的边。\n\n\n\n#### 4.3.6 Kruskal算法\n\n按照权值顺序处理它们，将边加入最小生成树中，加入的表不会构成环，直到加入V-1条边。\n\n\n\n#### 4.3.7 展望\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms04Graph2.png)\n\n\n\n---\n\n\n\n### 4.4 最短路径\n\n最短路径是权重最小者。\n\n#### 4.4.1 性质\n\n- 路径是有向的。\n- 权重不一定等价于距离，可能是时间等。\n- 并不是所有顶点都是可达的，为了简化问题，假设都是强连通的。\n- 最短路径不一定是唯一的，但是只需要找到一条就行。\n- 最短路径树：以s为起点，包含s和从s可达的所有顶点。\n\n#### 4.4.2 加权有向图的数据结构\n\n加权有向边的数据类型\n\n```go\ntype DirectedEdge struct {\n\tv int\n\tw int\n\tweight float64\n}\n\nfunc NewDirectedEdge(v, w int, weight float64) *DirectedEdge {\n\treturn &DirectedEdge{v, w, weight}\n}\n\nfunc (E *DirectedEdge) From() int {\n\treturn E.v\n}\n\nfunc (E *DirectedEdge) To() int {\n\treturn E.w\n}\n```\n\n加权有向图的数据类型\n\n```go\ntype EdgeWeightedDigraph struct {\n\tV int\n\tE int\n\tadj []list.List\n}\n\nfunc NewEdgeWeightedDigraph(v int) *EdgeWeightedDigraph {\n\treturn &EdgeWeightedDigraph{v, 0, make([]list.List, v)}\n}\n\nfunc (dg *EdgeWeightedDigraph) AddEdge(e DirectedEdge) {\n\tdg.adj[e.From()].PushFront(e)\n\tdg.E++\n}\n\nfunc (dg *EdgeWeightedDigraph) Adj(v int) *list.List {\n\treturn &dg.adj[v]\n}\n\nfunc (dg *EdgeWeightedDigraph) Edges() *list.List {\n\tret := list.New()\n\tfor v := 0; v < dg.V; v++ {\n\t\tl := dg.adj[v]\n\t\tfor tmp := l.Front(); tmp != nil; tmp = tmp.Next() {\n\t\t\tret.PushBack(tmp.Value)\n\t\t}\n\t}\n\treturn ret\n}\n```\n\n\n\n#### 4.4.3 理论基础\n\n最短路径的最优性条件。\n\n#### 4.4.4 Dijkstra算法\n\n#### 4.4.5 无环加权有向图的最短路径算法\n\n#### 4.4.6 一般加权有向图的最短路径问题\n\n#### 4.4.7 展望\n\n{% pdf https://zhenruyi.github.io/files/DijkstraAlgoOfShortest.pdf %}\n\n\n\n---\n\n\n\n","slug":"algo-learn03Algorithms04Graph","published":1,"updated":"2022-04-16T23:04:23.422Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70tf000w5ossakvba7lf","content":"<p>《算法》第4章：图。</p>\n<p>无向图，有向图，最小生成树，最短路径。</p>\n<span id=\"more\"></span>\n\n\n\n<hr>\n<p>4种最重要的图模型：无向图（简单链接）、有向图（方向性）、加权图（带有权值）和加权有向图（既有方向性又带有权值）。</p>\n<hr>\n<h3 id=\"4-1-无向图\"><a href=\"#4-1-无向图\" class=\"headerlink\" title=\"4.1 无向图\"></a>4.1 无向图</h3><ul>\n<li><p>使用0至V-1来表示一张含有V个顶点各个顶点；</p>\n</li>\n<li><p>v-w表示连接v和w的边；</p>\n</li>\n<li><p>特殊的图：含有平行边的称为多重图，没有平行边或自环的称为简单图。</p>\n<ul>\n<li>自环：一条连接到自己的边。</li>\n<li>平行边：同一对顶点的边。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-1-1-术语表\"><a href=\"#4-1-1-术语表\" class=\"headerlink\" title=\"4.1.1 术语表\"></a>4.1.1 术语表</h4><p>和图相关的术语很多：</p>\n<ul>\n<li>相邻：两个顶点通过一条边相连。</li>\n<li>度数：依附顶点的边的条数。</li>\n<li>子图：由一幅图的所有边的一个子集组成的图。</li>\n<li>路径：由边顺序连接的一系列顶点。<ul>\n<li>简单路径：没有重复顶点的路径。</li>\n<li>环：起点和终点相同。</li>\n<li>简单环：除起点和终点之外没有重复顶点和边。</li>\n<li>长度：所包含的边数。</li>\n</ul>\n</li>\n<li>连通图：任意一个顶点都能到达另一个顶点。</li>\n<li>无环图：没有环。</li>\n<li>树：无环连通图。<ul>\n<li>森林：互不相连的树组成的集合。</li>\n<li>生成树：连通图的生成树是它的一副子图，含有图中所有顶点且是一棵树。</li>\n</ul>\n</li>\n<li>二分图：将所有结点分为两部分的图。</li>\n</ul>\n<h4 id=\"4-1-2-表示无向图的数据类型\"><a href=\"#4-1-2-表示无向图的数据类型\" class=\"headerlink\" title=\"4.1.2 表示无向图的数据类型\"></a>4.1.2 表示无向图的数据类型</h4><p>最常用的图处理算法：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Degree</span><span class=\"params\">(g Graph, v <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">len</span>(g.Adj(v))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">MaxDegree</span><span class=\"params\">(g Graph)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\tmax := <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i :=<span class=\"number\">0</span>; i &lt; g.V; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> d := Degree(g, i); d &gt; max &#123;</span><br><span class=\"line\">\t\t\tmax = d</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> max</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">AvgDegree</span><span class=\"params\">(graph Graph)</span></span> <span class=\"type\">float64</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">2.0</span> * <span class=\"type\">float64</span>(graph.E) / <span class=\"type\">float64</span>(graph.V)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NOfSelfLoops</span><span class=\"params\">(graph Graph)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\tcount := <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> v := <span class=\"number\">0</span>; v &lt; graph.V; v++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> _, w := <span class=\"keyword\">range</span> graph.Adj(v) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> w == v &#123;</span><br><span class=\"line\">\t\t\t\tcount++</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> count / <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ToString</span><span class=\"params\">(g Graph)</span></span> <span class=\"type\">string</span> &#123;</span><br><span class=\"line\">\ts := fmt.Sprintf(<span class=\"string\">&quot;%v vertices, %v edges\\n&quot;</span>, g.V, g.E)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> v := <span class=\"number\">0</span>; v &lt; g.V; v++ &#123;</span><br><span class=\"line\">\t\ts += fmt.Sprintf(<span class=\"string\">&quot;%v: &quot;</span>, v)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> _, w := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\t\ts += fmt.Sprintf(<span class=\"string\">&quot;%v &quot;</span>, w)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ts += <span class=\"string\">&quot;\\n&quot;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> s</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Graph数据类型</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Graph <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tV <span class=\"type\">int</span></span><br><span class=\"line\">\tE <span class=\"type\">int</span></span><br><span class=\"line\">\tadj []Chapter01Foundation.ListBag</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewGraph</span><span class=\"params\">(v <span class=\"type\">int</span>)</span></span> *Graph &#123;</span><br><span class=\"line\">\t <span class=\"keyword\">return</span> &amp;Graph&#123;</span><br><span class=\"line\">\t\tV: v,</span><br><span class=\"line\">\t\tE: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t\tadj: <span class=\"built_in\">make</span>([]Chapter01Foundation.ListBag, v),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(g *Graph)</span></span> AddEdge(v, w <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tg.adj[v].Add(w)</span><br><span class=\"line\">\tg.adj[w].Add(v)</span><br><span class=\"line\">\tg.E++</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(g *Graph)</span></span> Adj(v <span class=\"type\">int</span>) []<span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> g.adj[v].Iterator()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-1-3-深度优先搜索\"><a href=\"#4-1-3-深度优先搜索\" class=\"headerlink\" title=\"4.1.3 深度优先搜索\"></a>4.1.3 深度优先搜索</h4><p>跟路径相关，需要使用深度优先搜索。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> DepthFirstSearch <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tmarked []<span class=\"type\">bool</span></span><br><span class=\"line\">\tcount <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewDepthFirstSearch</span><span class=\"params\">(g Graph, s <span class=\"type\">int</span>)</span></span> *DepthFirstSearch &#123;</span><br><span class=\"line\">\td := <span class=\"built_in\">new</span>(DepthFirstSearch)</span><br><span class=\"line\">\td.count = <span class=\"number\">0</span></span><br><span class=\"line\">\td.marked = <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V)</span><br><span class=\"line\">\td.DFS(g, s)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> d</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(d *DepthFirstSearch)</span></span> DFS(g Graph, v <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\td.marked[v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\td.count++</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, w := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !d.marked[w.(<span class=\"type\">int</span>)] &#123;</span><br><span class=\"line\">\t\t\td.DFS(g, w.(<span class=\"type\">int</span>))</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-1-4-寻找路径\"><a href=\"#4-1-4-寻找路径\" class=\"headerlink\" title=\"4.1.4 寻找路径\"></a>4.1.4 寻找路径</h4><p>单点路径：给定一幅图和一个起点，到目的顶点是否存在一条路径，找出这条路径。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 是否有一条路径</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> DepthFirstPaths <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tmarked []<span class=\"type\">bool</span>\t<span class=\"comment\">//这个顶点上调用过DFS吗？</span></span><br><span class=\"line\">\tedgeTo []<span class=\"type\">int</span>\t<span class=\"comment\">//从起点到一个顶点的已知路径上的最后一个顶点</span></span><br><span class=\"line\">\ts <span class=\"type\">int</span>\t\t\t<span class=\"comment\">//起点</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewDepthFirstPaths</span><span class=\"params\">(g Graph, start <span class=\"type\">int</span>)</span></span> *DepthFirstPaths &#123;</span><br><span class=\"line\">\tp := <span class=\"built_in\">new</span>(DepthFirstPaths)</span><br><span class=\"line\">\tp.marked = <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V)</span><br><span class=\"line\">\tp.edgeTo = <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, g.V)</span><br><span class=\"line\">\tp.s = start</span><br><span class=\"line\">\tp.DFS(g, start)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> p</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(p *DepthFirstPaths)</span></span> DFS(g Graph, v <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tp.marked[v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, w := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !p.marked[w.(<span class=\"type\">int</span>)] &#123;</span><br><span class=\"line\">\t\t\tp.edgeTo[w.(<span class=\"type\">int</span>)] = v</span><br><span class=\"line\">\t\t\tp.DFS(g, w.(<span class=\"type\">int</span>))</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(p *DepthFirstPaths)</span></span> HasPathTo(v <span class=\"type\">int</span>) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> p.marked[v]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(p *DepthFirstPaths)</span></span> PathTo(v <span class=\"type\">int</span>) []<span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> !p.HasPathTo(v) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tret := <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> x := v; x != p.s; x = p.edgeTo[x] &#123;</span><br><span class=\"line\">\t\tret = <span class=\"built_in\">append</span>(ret, x)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tret = <span class=\"built_in\">append</span>(ret, p.s)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-1-5-广度优先搜索\"><a href=\"#4-1-5-广度优先搜索\" class=\"headerlink\" title=\"4.1.5 广度优先搜索\"></a>4.1.5 广度优先搜索</h4><p>处理最短路径的方法。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> BreadthFirstPaths <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tmarked []<span class=\"type\">bool</span></span><br><span class=\"line\">\tedgeTo []<span class=\"type\">int</span></span><br><span class=\"line\">\tstart <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewBreadthFirstPaths</span><span class=\"params\">(g Graph, s <span class=\"type\">int</span>)</span></span> *BreadthFirstPaths &#123;</span><br><span class=\"line\">\tret := <span class=\"built_in\">new</span>(BreadthFirstPaths)</span><br><span class=\"line\">\tret.marked = <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V)</span><br><span class=\"line\">\tret.edgeTo = <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, g.V)</span><br><span class=\"line\">\tret.start = s</span><br><span class=\"line\">\tret.BFS(g, s)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(p *BreadthFirstPaths)</span></span> BFS(g Graph, s <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tl := list.New()</span><br><span class=\"line\">\tp.marked[s] = <span class=\"literal\">true</span></span><br><span class=\"line\">\tl.PushBack(s)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> l.Len() != <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\tv := l.Remove(l.Front()).(<span class=\"type\">int</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> _, wRow := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\t\tw := wRow.(<span class=\"type\">int</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> !p.marked[w] &#123;</span><br><span class=\"line\">\t\t\t\tp.edgeTo[w] = v</span><br><span class=\"line\">\t\t\t\tp.marked[w] = <span class=\"literal\">true</span></span><br><span class=\"line\">\t\t\t\tl.PushBack(w)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(p *BreadthFirstPaths)</span></span> HasPathTo(v <span class=\"type\">int</span>) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> p.marked[v]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(p *BreadthFirstPaths)</span></span> PathTo(v <span class=\"type\">int</span>) []<span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> !p.HasPathTo(v) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tret := <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> x := v; x != p.start; x = p.edgeTo[x] &#123;</span><br><span class=\"line\">\t\tret = <span class=\"built_in\">append</span>(ret, x)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tret = <span class=\"built_in\">append</span>(ret, p.start)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-1-6-连通分量\"><a href=\"#4-1-6-连通分量\" class=\"headerlink\" title=\"4.1.6 连通分量\"></a>4.1.6 连通分量</h4><p>一个图的极大连通子图称为连通分量。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> CC <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tmarked []<span class=\"type\">bool</span>\t</span><br><span class=\"line\">\tid []<span class=\"type\">int</span>\t<span class=\"comment\">//连通分量的编号</span></span><br><span class=\"line\">\tcount <span class=\"type\">int</span>\t<span class=\"comment\">//当前编号</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewCC</span><span class=\"params\">(g Graph)</span></span> *CC &#123;</span><br><span class=\"line\">\tret := <span class=\"built_in\">new</span>(CC)</span><br><span class=\"line\">\tret.marked = <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V)</span><br><span class=\"line\">\tret.count = <span class=\"number\">0</span></span><br><span class=\"line\">\tret.id = <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, g.V)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> s := <span class=\"number\">0</span>; s &lt; g.V; s++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !ret.marked[s] &#123;</span><br><span class=\"line\">\t\t\tret.DFS(g, s)</span><br><span class=\"line\">\t\t\tret.count++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(cc *CC)</span></span> DFS(g Graph, v <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tcc.marked[v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\tcc.id[v] = cc.count</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, wRow := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\tw := wRow.(<span class=\"type\">int</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !cc.marked[w] &#123;</span><br><span class=\"line\">\t\t\tcc.DFS(g, w)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(cc *CC)</span></span> Connected(v, w <span class=\"type\">int</span>) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> cc.id[v] == cc.id[w]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用深度优先算法处理图的其他实例</p>\n<div class=\"pdf-container\" data-target=\"https://zhenruyi.github.io/files/DFSOtherExamples.pdf\" data-height=\"650px\"></div>\n\n\n\n<h4 id=\"4-1-7-符号图\"><a href=\"#4-1-7-符号图\" class=\"headerlink\" title=\"4.1.7 符号图\"></a>4.1.7 符号图</h4><p>使用字符串而非整数来表示和指代顶点。</p>\n<p>书上的方法是，使用两个数组，一个对于索引-&gt;字符串，一个从字符串-&gt;索引。然后图还是使用整数表示顶点。</p>\n<p>我用了一个map记录。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> SymbolGraph <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 键为图的顶点，值为顶点的整数表示</span></span><br><span class=\"line\">\t<span class=\"comment\">// 值为0时，表示顶点不存在，从1开始计算。</span></span><br><span class=\"line\">\tindex <span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"type\">int</span></span><br><span class=\"line\">\tgraph *Graph</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewSymbolGraph</span><span class=\"params\">(filePath <span class=\"type\">string</span>)</span></span> *SymbolGraph &#123;</span><br><span class=\"line\">\tsg := <span class=\"built_in\">new</span>(SymbolGraph)</span><br><span class=\"line\">\tsg.index = <span class=\"built_in\">make</span>(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"type\">int</span>)</span><br><span class=\"line\">\tfile, err := os.Open(filePath)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot;open error&quot;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> file.Close()</span><br><span class=\"line\">\tcount := <span class=\"number\">1</span></span><br><span class=\"line\">\tbr := bufio.NewReader(file)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\trow, _, c := br.ReadLine()</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> c == io.EOF &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tdata := <span class=\"type\">string</span>(row)</span><br><span class=\"line\">\t\tsplits := strings.Split(data, <span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> _, v := <span class=\"keyword\">range</span> splits &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> sg.index[v] == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t\t\tsg.index[v] = count</span><br><span class=\"line\">\t\t\t\tcount++</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsg.graph = NewGraph(count<span class=\"number\">-1</span>)</span><br><span class=\"line\">\tbr = bufio.NewReader(file)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\trow, _, c := br.ReadLine()</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> c == io.EOF &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tdata := <span class=\"type\">string</span>(row)</span><br><span class=\"line\">\t\tsplits := strings.Split(data, <span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">\t\tv := sg.index[splits[<span class=\"number\">0</span>]] - <span class=\"number\">1</span></span><br><span class=\"line\">\t\tw := sg.index[splits[<span class=\"number\">1</span>]] - <span class=\"number\">1</span></span><br><span class=\"line\">\t\tsg.graph.AddEdge(v, w)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sg</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(sg *SymbolGraph)</span></span> Contains(s <span class=\"type\">string</span>) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sg.index[s] != <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(sg *SymbolGraph)</span></span> Index(s <span class=\"type\">string</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sg.index[s] - <span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(sg *SymbolGraph)</span></span> Name(v <span class=\"type\">int</span>) <span class=\"type\">string</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> key, val := <span class=\"keyword\">range</span> sg.index &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> v == val - <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> key</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-1-8-总结\"><a href=\"#4-1-8-总结\" class=\"headerlink\" title=\"4.1.8 总结\"></a>4.1.8 总结</h4><p>基本概念：</p>\n<ul>\n<li>图的术语；</li>\n<li>图的表示方法；</li>\n<li>深度优先，广度优先；</li>\n<li>符号图。</li>\n</ul>\n<hr>\n<h3 id=\"4-2-有向图\"><a href=\"#4-2-有向图\" class=\"headerlink\" title=\"4.2 有向图\"></a>4.2 有向图</h3><p>在有向图种，边是单向的。</p>\n<h4 id=\"4-2-1-术语\"><a href=\"#4-2-1-术语\" class=\"headerlink\" title=\"4.2.1 术语\"></a>4.2.1 术语</h4><ul>\n<li>出度：指出的边的数量。</li>\n<li>头尾：第一个顶点称为头，第二个顶点称为尾。</li>\n<li>有向路径，有向环。</li>\n<li>简单有向环：不存在重复的顶点和边的环。</li>\n</ul>\n<h4 id=\"4-2-2-数据类型\"><a href=\"#4-2-2-数据类型\" class=\"headerlink\" title=\"4.2.2 数据类型\"></a>4.2.2 数据类型</h4><p>有向图取反reverse()方法，返回有向图的一个副本，但所有的边方向反转。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Digraph <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tV <span class=\"type\">int</span></span><br><span class=\"line\">\tE <span class=\"type\">int</span></span><br><span class=\"line\">\tadj []Chapter01Foundation.ListBag</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewDigraph</span><span class=\"params\">(v <span class=\"type\">int</span>)</span></span> *Digraph &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;Digraph&#123;</span><br><span class=\"line\">\t\tV: v,</span><br><span class=\"line\">\t\tE: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t\tadj: <span class=\"built_in\">make</span>([]Chapter01Foundation.ListBag, v),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(g *Digraph)</span></span> AddEdge(v, w <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tg.adj[v].Add(w)</span><br><span class=\"line\">\tg.E++</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(g *Digraph)</span></span> Adj(v <span class=\"type\">int</span>) []<span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> g.adj[v].Iterator()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(g *Digraph)</span></span> Reverse() *Digraph &#123;</span><br><span class=\"line\">\tret := NewDigraph(g.V)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> v := <span class=\"number\">0</span>; v &lt; g.V; v++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> _, row := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\t\tw := row.(<span class=\"type\">int</span>)</span><br><span class=\"line\">\t\t\tret.AddEdge(w, v)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-2-3-可达性\"><a href=\"#4-2-3-可达性\" class=\"headerlink\" title=\"4.2.3 可达性\"></a>4.2.3 可达性</h4><p>深度优先搜索。</p>\n<p>有向图寻路：s -&gt; v</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> DirectedDFS <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tmarked []<span class=\"type\">bool</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewDirectedDFS</span><span class=\"params\">(g Graph, s <span class=\"type\">int</span>)</span></span> *DirectedDFS &#123;</span><br><span class=\"line\">\td := <span class=\"built_in\">new</span>(DirectedDFS)</span><br><span class=\"line\">\td.marked = <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V)</span><br><span class=\"line\">\td.DFS(g, s)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> d</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(d *DirectedDFS)</span></span> DFS(g Graph, v <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\td.marked[v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, w := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !d.marked[w.(<span class=\"type\">int</span>)] &#123;</span><br><span class=\"line\">\t\t\td.DFS(g, w.(<span class=\"type\">int</span>))</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-2-4-环和有向无环图\"><a href=\"#4-2-4-环和有向无环图\" class=\"headerlink\" title=\"4.2.4 环和有向无环图\"></a>4.2.4 环和有向无环图</h4><p>处理优先级限制下的调度问题，有向图出现环会让调度进入循环。</p>\n<p>寻找环：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> DirectedCycle <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tmarked []<span class=\"type\">bool</span></span><br><span class=\"line\">\tedgeTo []<span class=\"type\">int</span></span><br><span class=\"line\">\tcycle list.List</span><br><span class=\"line\">\tonStack []<span class=\"type\">bool</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewDirectedCycle</span><span class=\"params\">(g Graph)</span></span> *DirectedCycle &#123;</span><br><span class=\"line\">\tret := &amp;DirectedCycle&#123;</span><br><span class=\"line\">\t\tonStack: <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V),</span><br><span class=\"line\">\t\tedgeTo: <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, g.V),</span><br><span class=\"line\">\t\tmarked: <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> v:=<span class=\"number\">0</span>; v &lt; g.V; v++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !ret.marked[v] &#123;</span><br><span class=\"line\">\t\t\tret.DFS(g, v)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(d *DirectedCycle)</span></span> DFS(g Graph, v <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\td.onStack[v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\td.marked[v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, row := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\tw := row.(<span class=\"type\">int</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> d.HasCycle() &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> !d.marked[w] &#123;</span><br><span class=\"line\">\t\t\td.edgeTo[w] = v</span><br><span class=\"line\">\t\t\td.DFS(g, w)</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> d.onStack[w] &#123;</span><br><span class=\"line\">\t\t\td.cycle = list.New()</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> x:=v; x != w; x = d.edgeTo[x] &#123;</span><br><span class=\"line\">\t\t\t\td.cycle.PushFront(x)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\td.cycle.PushFront(w)</span><br><span class=\"line\">\t\t\td.cycle.PushFront(v)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(d *DirectedCycle)</span></span> HasCycle() <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> d.cycle.Len() != <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(d *DirectedCycle)</span></span> Cycle() list.List &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> d.cycle</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-2-5-强连通性\"><a href=\"#4-2-5-强连通性\" class=\"headerlink\" title=\"4.2.5 强连通性\"></a>4.2.5 强连通性</h4><p>如果两个顶点是相互可达的，称它们为强连通的。如果一幅图中任意两个顶点都是强连通的，则称这幅图是强连通的。</p>\n<p>强连通分量：相互均为强连通的顶点的最大子集。</p>\n<p>要另外实现一个取反操作才能进行。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> KasarajuSCC <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tmarked []<span class=\"type\">bool</span></span><br><span class=\"line\">\tid []<span class=\"type\">int</span>\t<span class=\"comment\">//连通分量的编号</span></span><br><span class=\"line\">\tcount <span class=\"type\">int</span>\t<span class=\"comment\">//当前编号</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewKasarajuSCC</span><span class=\"params\">(g Graph)</span></span> *KasarajuSCC &#123;</span><br><span class=\"line\">\tret := <span class=\"built_in\">new</span>(KasarajuSCC)</span><br><span class=\"line\">\tret.marked = <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V)</span><br><span class=\"line\">\tret.count = <span class=\"number\">0</span></span><br><span class=\"line\">\tret.id = <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, g.V)</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\tfor s := 0; s &lt; g.V; s++ &#123;</span></span><br><span class=\"line\"><span class=\"comment\">\t\tif !ret.marked[s] &#123;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\tret.DFS(g, s)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\tret.count++</span></span><br><span class=\"line\"><span class=\"comment\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(cc *KasarajuSCC)</span></span> DFS(g Graph, v <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tcc.marked[v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\tcc.id[v] = cc.count</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, wRow := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\tw := wRow.(<span class=\"type\">int</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !cc.marked[w] &#123;</span><br><span class=\"line\">\t\t\tcc.DFS(g, w)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(cc *KasarajuSCC)</span></span> StronglyConnected(v, w <span class=\"type\">int</span>) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> cc.id[v] == cc.id[w]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-2-6-总结\"><a href=\"#4-2-6-总结\" class=\"headerlink\" title=\"4.2.6 总结\"></a>4.2.6 总结</h4><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms04Graph1.png\"></p>\n<hr>\n<h3 id=\"4-3-最小生成树\"><a href=\"#4-3-最小生成树\" class=\"headerlink\" title=\"4.3 最小生成树\"></a>4.3 最小生成树</h3><p>加权图是为每条边关联一个权值或成本的图模型。</p>\n<p>最小生成树是图的一棵含有其他所有顶点的无环连通子图。</p>\n<p>最小生成树的两种经典算法：Prim算法和Kruskal算法。</p>\n<h4 id=\"4-3-1-原理\"><a href=\"#4-3-1-原理\" class=\"headerlink\" title=\"4.3.1 原理\"></a>4.3.1 原理</h4><p>树的两个最重要的性质：</p>\n<ul>\n<li>用一条边连接树中的任意两个顶点会产生一个新的环；</li>\n<li>从树中删去一条边会得到两棵独立的树。</li>\n</ul>\n<p>图的一种切分是将图的所有顶点分为两个非空且不重复的集合，横切边是一条连接两个属于不同集合的顶点的边。</p>\n<p>切分定理：在一幅加权图中，给定任意的切分，它的横切边中权值最小者必然属于图的最小生成树。</p>\n<p>切分定理是解决最小生成树问题的所有算法的基础。更确切地说，这些算法是贪心算法地特殊情况，使用切分定理找到一条边，不断重复直到找到最小生成树的所有边。</p>\n<p>最小生成树的贪心算法：将V个顶点的任意加权连通图中属于最小生成树的边标记为黑色。初始状态下均为灰色，找到一种切分，它产生的横切边都不是黑色，将它权重最小的横切边标记为黑色。反复，直到标记V-1条黑色的边为止。</p>\n<h4 id=\"4-3-2-加权无向图的数据类型\"><a href=\"#4-3-2-加权无向图的数据类型\" class=\"headerlink\" title=\"4.3.2 加权无向图的数据类型\"></a>4.3.2 加权无向图的数据类型</h4><p>带权重的边的数据类型：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Edge <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tv, w <span class=\"type\">int</span></span><br><span class=\"line\">\tweight <span class=\"type\">float64</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewEdge</span><span class=\"params\">(v, w <span class=\"type\">int</span>, wgh <span class=\"type\">float64</span>)</span></span> *Edge &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;Edge&#123;</span><br><span class=\"line\">\t\tv: v,</span><br><span class=\"line\">\t\tw: w,</span><br><span class=\"line\">\t\tweight: wgh,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(e *Edge)</span></span> Either() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> e.v</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(e *Edge)</span></span> Other(v <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> v == e.v &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> e.w</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> v == e.w &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> e.v</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(e *Edge)</span></span> CmpTo(that Edge) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> e.weight &gt; that.weight &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> e.weight &lt; that.weight &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>加权无向图的数据类型：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> EdgeWeightedGraph <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tV <span class=\"type\">int</span></span><br><span class=\"line\">\tE <span class=\"type\">int</span></span><br><span class=\"line\">\tadj []Chapter01Foundation.ListBag</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewEdgeWeightedGraph</span><span class=\"params\">(v <span class=\"type\">int</span>)</span></span> *EdgeWeightedGraph &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;EdgeWeightedGraph&#123;</span><br><span class=\"line\">\t\tV: v,</span><br><span class=\"line\">\t\tE: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t\tadj: <span class=\"built_in\">make</span>([]Chapter01Foundation.ListBag, v),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(g *EdgeWeightedGraph)</span></span> AddEdge(e Edge) &#123;</span><br><span class=\"line\">\tv, w := e.v, e.w</span><br><span class=\"line\">\tg.adj[v].Add(e)</span><br><span class=\"line\">\tg.adj[w].Add(e)</span><br><span class=\"line\">\tg.E++</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-3-3-最小生成树API\"><a href=\"#4-3-3-最小生成树API\" class=\"headerlink\" title=\"4.3.3 最小生成树API\"></a>4.3.3 最小生成树API</h4><p>edges()返回最小生成树的所有边。</p>\n<p>weigh()返回最小生成树的权重。</p>\n<h4 id=\"4-3-4-Prim算法\"><a href=\"#4-3-4-Prim算法\" class=\"headerlink\" title=\"4.3.4 Prim算法\"></a>4.3.4 Prim算法</h4><p>每一步都会为一棵生长中的树添加一条边。一开始这棵树只有一个顶点，然后添加V-1条边，每次总是将下一条连接树中的顶点与不在树中的顶点且权值最小的边加入树中。</p>\n<p>最小生成树的Prim算法的延时实现：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> LazyPrimMST <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tmarked []<span class=\"type\">bool</span>\t<span class=\"comment\">// 顶点</span></span><br><span class=\"line\">\tmst *Chapter01Foundation.ListQueue  <span class=\"comment\">// 边</span></span><br><span class=\"line\">\t<span class=\"comment\">// 横切边，原文是最小队列，我是最大队列</span></span><br><span class=\"line\">\t<span class=\"comment\">//pq *Chapter02Sorting.MaxPriorityQueue</span></span><br><span class=\"line\">\tpq *list.List</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(p *LazyPrimMST)</span></span> Visit(g EdgeWeightedGraph, v <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tp.marked[v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, row := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\te := row.(Edge)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !p.marked[e.Other(v)] &#123;</span><br><span class=\"line\">\t\t\tp.pq.PushFront(e)</span><br><span class=\"line\">\t\t\tp.SortList()</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(p *LazyPrimMST)</span></span> SortList() &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> p.pq.Len() == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tmin := p.pq.Front()</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> po := p.pq.Front(); po != <span class=\"literal\">nil</span>; po = po.Next() &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> po.Value.(Edge).weight &lt; min.Value.(Edge).weight &#123;</span><br><span class=\"line\">\t\t\tmin = po</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tp.pq.MoveBefore(min, p.pq.Front())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewLazyPrimMST</span><span class=\"params\">(g EdgeWeightedGraph)</span></span> *LazyPrimMST &#123;</span><br><span class=\"line\">\tret := <span class=\"built_in\">new</span>(LazyPrimMST)</span><br><span class=\"line\">\tret.pq = list.New()</span><br><span class=\"line\">\tret.marked = <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V)</span><br><span class=\"line\">\tret.mst = <span class=\"built_in\">new</span>(Chapter01Foundation.ListQueue)</span><br><span class=\"line\">\tret.Visit(g, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> ret.pq.Len() != <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\te := ret.pq.Remove(ret.pq.Front()).(Edge)</span><br><span class=\"line\">\t\tret.SortList()</span><br><span class=\"line\">\t\tv := e.Either()</span><br><span class=\"line\">\t\tw := e.Other(v)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ret.marked[v] &amp;&amp; ret.marked[w] &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tret.mst.Enqueue(e)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !ret.marked[v] &#123;</span><br><span class=\"line\">\t\t\tret.Visit(g, v)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !ret.marked[w] &#123;</span><br><span class=\"line\">\t\t\tret.Visit(g, w)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-3-5-Prim算法的即时实现\"><a href=\"#4-3-5-Prim算法的即时实现\" class=\"headerlink\" title=\"4.3.5 Prim算法的即时实现\"></a>4.3.5 Prim算法的即时实现</h4><p>不需要保存所有的边，只需要保存权值最小的边，只会在优先队列保存每个非树顶点w的一条边，这条边是与树中顶点连接起来的权值最小的边。</p>\n<h4 id=\"4-3-6-Kruskal算法\"><a href=\"#4-3-6-Kruskal算法\" class=\"headerlink\" title=\"4.3.6 Kruskal算法\"></a>4.3.6 Kruskal算法</h4><p>按照权值顺序处理它们，将边加入最小生成树中，加入的表不会构成环，直到加入V-1条边。</p>\n<h4 id=\"4-3-7-展望\"><a href=\"#4-3-7-展望\" class=\"headerlink\" title=\"4.3.7 展望\"></a>4.3.7 展望</h4><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms04Graph2.png\"></p>\n<hr>\n<h3 id=\"4-4-最短路径\"><a href=\"#4-4-最短路径\" class=\"headerlink\" title=\"4.4 最短路径\"></a>4.4 最短路径</h3><p>最短路径是权重最小者。</p>\n<h4 id=\"4-4-1-性质\"><a href=\"#4-4-1-性质\" class=\"headerlink\" title=\"4.4.1 性质\"></a>4.4.1 性质</h4><ul>\n<li>路径是有向的。</li>\n<li>权重不一定等价于距离，可能是时间等。</li>\n<li>并不是所有顶点都是可达的，为了简化问题，假设都是强连通的。</li>\n<li>最短路径不一定是唯一的，但是只需要找到一条就行。</li>\n<li>最短路径树：以s为起点，包含s和从s可达的所有顶点。</li>\n</ul>\n<h4 id=\"4-4-2-加权有向图的数据结构\"><a href=\"#4-4-2-加权有向图的数据结构\" class=\"headerlink\" title=\"4.4.2 加权有向图的数据结构\"></a>4.4.2 加权有向图的数据结构</h4><p>加权有向边的数据类型</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> DirectedEdge <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tv <span class=\"type\">int</span></span><br><span class=\"line\">\tw <span class=\"type\">int</span></span><br><span class=\"line\">\tweight <span class=\"type\">float64</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewDirectedEdge</span><span class=\"params\">(v, w <span class=\"type\">int</span>, weight <span class=\"type\">float64</span>)</span></span> *DirectedEdge &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;DirectedEdge&#123;v, w, weight&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(E *DirectedEdge)</span></span> From() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> E.v</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(E *DirectedEdge)</span></span> To() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> E.w</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>加权有向图的数据类型</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> EdgeWeightedDigraph <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tV <span class=\"type\">int</span></span><br><span class=\"line\">\tE <span class=\"type\">int</span></span><br><span class=\"line\">\tadj []list.List</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewEdgeWeightedDigraph</span><span class=\"params\">(v <span class=\"type\">int</span>)</span></span> *EdgeWeightedDigraph &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;EdgeWeightedDigraph&#123;v, <span class=\"number\">0</span>, <span class=\"built_in\">make</span>([]list.List, v)&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(dg *EdgeWeightedDigraph)</span></span> AddEdge(e DirectedEdge) &#123;</span><br><span class=\"line\">\tdg.adj[e.From()].PushFront(e)</span><br><span class=\"line\">\tdg.E++</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(dg *EdgeWeightedDigraph)</span></span> Adj(v <span class=\"type\">int</span>) *list.List &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;dg.adj[v]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(dg *EdgeWeightedDigraph)</span></span> Edges() *list.List &#123;</span><br><span class=\"line\">\tret := list.New()</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> v := <span class=\"number\">0</span>; v &lt; dg.V; v++ &#123;</span><br><span class=\"line\">\t\tl := dg.adj[v]</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> tmp := l.Front(); tmp != <span class=\"literal\">nil</span>; tmp = tmp.Next() &#123;</span><br><span class=\"line\">\t\t\tret.PushBack(tmp.Value)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-4-3-理论基础\"><a href=\"#4-4-3-理论基础\" class=\"headerlink\" title=\"4.4.3 理论基础\"></a>4.4.3 理论基础</h4><p>最短路径的最优性条件。</p>\n<h4 id=\"4-4-4-Dijkstra算法\"><a href=\"#4-4-4-Dijkstra算法\" class=\"headerlink\" title=\"4.4.4 Dijkstra算法\"></a>4.4.4 Dijkstra算法</h4><h4 id=\"4-4-5-无环加权有向图的最短路径算法\"><a href=\"#4-4-5-无环加权有向图的最短路径算法\" class=\"headerlink\" title=\"4.4.5 无环加权有向图的最短路径算法\"></a>4.4.5 无环加权有向图的最短路径算法</h4><h4 id=\"4-4-6-一般加权有向图的最短路径问题\"><a href=\"#4-4-6-一般加权有向图的最短路径问题\" class=\"headerlink\" title=\"4.4.6 一般加权有向图的最短路径问题\"></a>4.4.6 一般加权有向图的最短路径问题</h4><h4 id=\"4-4-7-展望\"><a href=\"#4-4-7-展望\" class=\"headerlink\" title=\"4.4.7 展望\"></a>4.4.7 展望</h4><div class=\"pdf-container\" data-target=\"https://zhenruyi.github.io/files/DijkstraAlgoOfShortest.pdf\" data-height=\"650px\"></div>\n\n\n\n<hr>\n","site":{"data":{}},"excerpt":"<p>《算法》第4章：图。</p>\n<p>无向图，有向图，最小生成树，最短路径。</p>","more":"<hr>\n<p>4种最重要的图模型：无向图（简单链接）、有向图（方向性）、加权图（带有权值）和加权有向图（既有方向性又带有权值）。</p>\n<hr>\n<h3 id=\"4-1-无向图\"><a href=\"#4-1-无向图\" class=\"headerlink\" title=\"4.1 无向图\"></a>4.1 无向图</h3><ul>\n<li><p>使用0至V-1来表示一张含有V个顶点各个顶点；</p>\n</li>\n<li><p>v-w表示连接v和w的边；</p>\n</li>\n<li><p>特殊的图：含有平行边的称为多重图，没有平行边或自环的称为简单图。</p>\n<ul>\n<li>自环：一条连接到自己的边。</li>\n<li>平行边：同一对顶点的边。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-1-1-术语表\"><a href=\"#4-1-1-术语表\" class=\"headerlink\" title=\"4.1.1 术语表\"></a>4.1.1 术语表</h4><p>和图相关的术语很多：</p>\n<ul>\n<li>相邻：两个顶点通过一条边相连。</li>\n<li>度数：依附顶点的边的条数。</li>\n<li>子图：由一幅图的所有边的一个子集组成的图。</li>\n<li>路径：由边顺序连接的一系列顶点。<ul>\n<li>简单路径：没有重复顶点的路径。</li>\n<li>环：起点和终点相同。</li>\n<li>简单环：除起点和终点之外没有重复顶点和边。</li>\n<li>长度：所包含的边数。</li>\n</ul>\n</li>\n<li>连通图：任意一个顶点都能到达另一个顶点。</li>\n<li>无环图：没有环。</li>\n<li>树：无环连通图。<ul>\n<li>森林：互不相连的树组成的集合。</li>\n<li>生成树：连通图的生成树是它的一副子图，含有图中所有顶点且是一棵树。</li>\n</ul>\n</li>\n<li>二分图：将所有结点分为两部分的图。</li>\n</ul>\n<h4 id=\"4-1-2-表示无向图的数据类型\"><a href=\"#4-1-2-表示无向图的数据类型\" class=\"headerlink\" title=\"4.1.2 表示无向图的数据类型\"></a>4.1.2 表示无向图的数据类型</h4><p>最常用的图处理算法：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Degree</span><span class=\"params\">(g Graph, v <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">len</span>(g.Adj(v))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">MaxDegree</span><span class=\"params\">(g Graph)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\tmax := <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i :=<span class=\"number\">0</span>; i &lt; g.V; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> d := Degree(g, i); d &gt; max &#123;</span><br><span class=\"line\">\t\t\tmax = d</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> max</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">AvgDegree</span><span class=\"params\">(graph Graph)</span></span> <span class=\"type\">float64</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">2.0</span> * <span class=\"type\">float64</span>(graph.E) / <span class=\"type\">float64</span>(graph.V)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NOfSelfLoops</span><span class=\"params\">(graph Graph)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\tcount := <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> v := <span class=\"number\">0</span>; v &lt; graph.V; v++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> _, w := <span class=\"keyword\">range</span> graph.Adj(v) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> w == v &#123;</span><br><span class=\"line\">\t\t\t\tcount++</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> count / <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ToString</span><span class=\"params\">(g Graph)</span></span> <span class=\"type\">string</span> &#123;</span><br><span class=\"line\">\ts := fmt.Sprintf(<span class=\"string\">&quot;%v vertices, %v edges\\n&quot;</span>, g.V, g.E)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> v := <span class=\"number\">0</span>; v &lt; g.V; v++ &#123;</span><br><span class=\"line\">\t\ts += fmt.Sprintf(<span class=\"string\">&quot;%v: &quot;</span>, v)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> _, w := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\t\ts += fmt.Sprintf(<span class=\"string\">&quot;%v &quot;</span>, w)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ts += <span class=\"string\">&quot;\\n&quot;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> s</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Graph数据类型</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Graph <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tV <span class=\"type\">int</span></span><br><span class=\"line\">\tE <span class=\"type\">int</span></span><br><span class=\"line\">\tadj []Chapter01Foundation.ListBag</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewGraph</span><span class=\"params\">(v <span class=\"type\">int</span>)</span></span> *Graph &#123;</span><br><span class=\"line\">\t <span class=\"keyword\">return</span> &amp;Graph&#123;</span><br><span class=\"line\">\t\tV: v,</span><br><span class=\"line\">\t\tE: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t\tadj: <span class=\"built_in\">make</span>([]Chapter01Foundation.ListBag, v),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(g *Graph)</span></span> AddEdge(v, w <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tg.adj[v].Add(w)</span><br><span class=\"line\">\tg.adj[w].Add(v)</span><br><span class=\"line\">\tg.E++</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(g *Graph)</span></span> Adj(v <span class=\"type\">int</span>) []<span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> g.adj[v].Iterator()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-1-3-深度优先搜索\"><a href=\"#4-1-3-深度优先搜索\" class=\"headerlink\" title=\"4.1.3 深度优先搜索\"></a>4.1.3 深度优先搜索</h4><p>跟路径相关，需要使用深度优先搜索。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> DepthFirstSearch <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tmarked []<span class=\"type\">bool</span></span><br><span class=\"line\">\tcount <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewDepthFirstSearch</span><span class=\"params\">(g Graph, s <span class=\"type\">int</span>)</span></span> *DepthFirstSearch &#123;</span><br><span class=\"line\">\td := <span class=\"built_in\">new</span>(DepthFirstSearch)</span><br><span class=\"line\">\td.count = <span class=\"number\">0</span></span><br><span class=\"line\">\td.marked = <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V)</span><br><span class=\"line\">\td.DFS(g, s)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> d</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(d *DepthFirstSearch)</span></span> DFS(g Graph, v <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\td.marked[v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\td.count++</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, w := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !d.marked[w.(<span class=\"type\">int</span>)] &#123;</span><br><span class=\"line\">\t\t\td.DFS(g, w.(<span class=\"type\">int</span>))</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-1-4-寻找路径\"><a href=\"#4-1-4-寻找路径\" class=\"headerlink\" title=\"4.1.4 寻找路径\"></a>4.1.4 寻找路径</h4><p>单点路径：给定一幅图和一个起点，到目的顶点是否存在一条路径，找出这条路径。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 是否有一条路径</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> DepthFirstPaths <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tmarked []<span class=\"type\">bool</span>\t<span class=\"comment\">//这个顶点上调用过DFS吗？</span></span><br><span class=\"line\">\tedgeTo []<span class=\"type\">int</span>\t<span class=\"comment\">//从起点到一个顶点的已知路径上的最后一个顶点</span></span><br><span class=\"line\">\ts <span class=\"type\">int</span>\t\t\t<span class=\"comment\">//起点</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewDepthFirstPaths</span><span class=\"params\">(g Graph, start <span class=\"type\">int</span>)</span></span> *DepthFirstPaths &#123;</span><br><span class=\"line\">\tp := <span class=\"built_in\">new</span>(DepthFirstPaths)</span><br><span class=\"line\">\tp.marked = <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V)</span><br><span class=\"line\">\tp.edgeTo = <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, g.V)</span><br><span class=\"line\">\tp.s = start</span><br><span class=\"line\">\tp.DFS(g, start)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> p</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(p *DepthFirstPaths)</span></span> DFS(g Graph, v <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tp.marked[v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, w := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !p.marked[w.(<span class=\"type\">int</span>)] &#123;</span><br><span class=\"line\">\t\t\tp.edgeTo[w.(<span class=\"type\">int</span>)] = v</span><br><span class=\"line\">\t\t\tp.DFS(g, w.(<span class=\"type\">int</span>))</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(p *DepthFirstPaths)</span></span> HasPathTo(v <span class=\"type\">int</span>) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> p.marked[v]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(p *DepthFirstPaths)</span></span> PathTo(v <span class=\"type\">int</span>) []<span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> !p.HasPathTo(v) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tret := <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> x := v; x != p.s; x = p.edgeTo[x] &#123;</span><br><span class=\"line\">\t\tret = <span class=\"built_in\">append</span>(ret, x)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tret = <span class=\"built_in\">append</span>(ret, p.s)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-1-5-广度优先搜索\"><a href=\"#4-1-5-广度优先搜索\" class=\"headerlink\" title=\"4.1.5 广度优先搜索\"></a>4.1.5 广度优先搜索</h4><p>处理最短路径的方法。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> BreadthFirstPaths <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tmarked []<span class=\"type\">bool</span></span><br><span class=\"line\">\tedgeTo []<span class=\"type\">int</span></span><br><span class=\"line\">\tstart <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewBreadthFirstPaths</span><span class=\"params\">(g Graph, s <span class=\"type\">int</span>)</span></span> *BreadthFirstPaths &#123;</span><br><span class=\"line\">\tret := <span class=\"built_in\">new</span>(BreadthFirstPaths)</span><br><span class=\"line\">\tret.marked = <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V)</span><br><span class=\"line\">\tret.edgeTo = <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, g.V)</span><br><span class=\"line\">\tret.start = s</span><br><span class=\"line\">\tret.BFS(g, s)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(p *BreadthFirstPaths)</span></span> BFS(g Graph, s <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tl := list.New()</span><br><span class=\"line\">\tp.marked[s] = <span class=\"literal\">true</span></span><br><span class=\"line\">\tl.PushBack(s)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> l.Len() != <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\tv := l.Remove(l.Front()).(<span class=\"type\">int</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> _, wRow := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\t\tw := wRow.(<span class=\"type\">int</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> !p.marked[w] &#123;</span><br><span class=\"line\">\t\t\t\tp.edgeTo[w] = v</span><br><span class=\"line\">\t\t\t\tp.marked[w] = <span class=\"literal\">true</span></span><br><span class=\"line\">\t\t\t\tl.PushBack(w)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(p *BreadthFirstPaths)</span></span> HasPathTo(v <span class=\"type\">int</span>) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> p.marked[v]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(p *BreadthFirstPaths)</span></span> PathTo(v <span class=\"type\">int</span>) []<span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> !p.HasPathTo(v) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tret := <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> x := v; x != p.start; x = p.edgeTo[x] &#123;</span><br><span class=\"line\">\t\tret = <span class=\"built_in\">append</span>(ret, x)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tret = <span class=\"built_in\">append</span>(ret, p.start)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-1-6-连通分量\"><a href=\"#4-1-6-连通分量\" class=\"headerlink\" title=\"4.1.6 连通分量\"></a>4.1.6 连通分量</h4><p>一个图的极大连通子图称为连通分量。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> CC <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tmarked []<span class=\"type\">bool</span>\t</span><br><span class=\"line\">\tid []<span class=\"type\">int</span>\t<span class=\"comment\">//连通分量的编号</span></span><br><span class=\"line\">\tcount <span class=\"type\">int</span>\t<span class=\"comment\">//当前编号</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewCC</span><span class=\"params\">(g Graph)</span></span> *CC &#123;</span><br><span class=\"line\">\tret := <span class=\"built_in\">new</span>(CC)</span><br><span class=\"line\">\tret.marked = <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V)</span><br><span class=\"line\">\tret.count = <span class=\"number\">0</span></span><br><span class=\"line\">\tret.id = <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, g.V)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> s := <span class=\"number\">0</span>; s &lt; g.V; s++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !ret.marked[s] &#123;</span><br><span class=\"line\">\t\t\tret.DFS(g, s)</span><br><span class=\"line\">\t\t\tret.count++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(cc *CC)</span></span> DFS(g Graph, v <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tcc.marked[v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\tcc.id[v] = cc.count</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, wRow := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\tw := wRow.(<span class=\"type\">int</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !cc.marked[w] &#123;</span><br><span class=\"line\">\t\t\tcc.DFS(g, w)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(cc *CC)</span></span> Connected(v, w <span class=\"type\">int</span>) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> cc.id[v] == cc.id[w]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用深度优先算法处理图的其他实例</p>\n<div class=\"pdf-container\" data-target=\"https://zhenruyi.github.io/files/DFSOtherExamples.pdf\" data-height=\"650px\"></div>\n\n\n\n<h4 id=\"4-1-7-符号图\"><a href=\"#4-1-7-符号图\" class=\"headerlink\" title=\"4.1.7 符号图\"></a>4.1.7 符号图</h4><p>使用字符串而非整数来表示和指代顶点。</p>\n<p>书上的方法是，使用两个数组，一个对于索引-&gt;字符串，一个从字符串-&gt;索引。然后图还是使用整数表示顶点。</p>\n<p>我用了一个map记录。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> SymbolGraph <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 键为图的顶点，值为顶点的整数表示</span></span><br><span class=\"line\">\t<span class=\"comment\">// 值为0时，表示顶点不存在，从1开始计算。</span></span><br><span class=\"line\">\tindex <span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"type\">int</span></span><br><span class=\"line\">\tgraph *Graph</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewSymbolGraph</span><span class=\"params\">(filePath <span class=\"type\">string</span>)</span></span> *SymbolGraph &#123;</span><br><span class=\"line\">\tsg := <span class=\"built_in\">new</span>(SymbolGraph)</span><br><span class=\"line\">\tsg.index = <span class=\"built_in\">make</span>(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"type\">int</span>)</span><br><span class=\"line\">\tfile, err := os.Open(filePath)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot;open error&quot;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> file.Close()</span><br><span class=\"line\">\tcount := <span class=\"number\">1</span></span><br><span class=\"line\">\tbr := bufio.NewReader(file)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\trow, _, c := br.ReadLine()</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> c == io.EOF &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tdata := <span class=\"type\">string</span>(row)</span><br><span class=\"line\">\t\tsplits := strings.Split(data, <span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> _, v := <span class=\"keyword\">range</span> splits &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> sg.index[v] == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t\t\tsg.index[v] = count</span><br><span class=\"line\">\t\t\t\tcount++</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsg.graph = NewGraph(count<span class=\"number\">-1</span>)</span><br><span class=\"line\">\tbr = bufio.NewReader(file)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\trow, _, c := br.ReadLine()</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> c == io.EOF &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tdata := <span class=\"type\">string</span>(row)</span><br><span class=\"line\">\t\tsplits := strings.Split(data, <span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">\t\tv := sg.index[splits[<span class=\"number\">0</span>]] - <span class=\"number\">1</span></span><br><span class=\"line\">\t\tw := sg.index[splits[<span class=\"number\">1</span>]] - <span class=\"number\">1</span></span><br><span class=\"line\">\t\tsg.graph.AddEdge(v, w)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sg</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(sg *SymbolGraph)</span></span> Contains(s <span class=\"type\">string</span>) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sg.index[s] != <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(sg *SymbolGraph)</span></span> Index(s <span class=\"type\">string</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sg.index[s] - <span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(sg *SymbolGraph)</span></span> Name(v <span class=\"type\">int</span>) <span class=\"type\">string</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> key, val := <span class=\"keyword\">range</span> sg.index &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> v == val - <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> key</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-1-8-总结\"><a href=\"#4-1-8-总结\" class=\"headerlink\" title=\"4.1.8 总结\"></a>4.1.8 总结</h4><p>基本概念：</p>\n<ul>\n<li>图的术语；</li>\n<li>图的表示方法；</li>\n<li>深度优先，广度优先；</li>\n<li>符号图。</li>\n</ul>\n<hr>\n<h3 id=\"4-2-有向图\"><a href=\"#4-2-有向图\" class=\"headerlink\" title=\"4.2 有向图\"></a>4.2 有向图</h3><p>在有向图种，边是单向的。</p>\n<h4 id=\"4-2-1-术语\"><a href=\"#4-2-1-术语\" class=\"headerlink\" title=\"4.2.1 术语\"></a>4.2.1 术语</h4><ul>\n<li>出度：指出的边的数量。</li>\n<li>头尾：第一个顶点称为头，第二个顶点称为尾。</li>\n<li>有向路径，有向环。</li>\n<li>简单有向环：不存在重复的顶点和边的环。</li>\n</ul>\n<h4 id=\"4-2-2-数据类型\"><a href=\"#4-2-2-数据类型\" class=\"headerlink\" title=\"4.2.2 数据类型\"></a>4.2.2 数据类型</h4><p>有向图取反reverse()方法，返回有向图的一个副本，但所有的边方向反转。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Digraph <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tV <span class=\"type\">int</span></span><br><span class=\"line\">\tE <span class=\"type\">int</span></span><br><span class=\"line\">\tadj []Chapter01Foundation.ListBag</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewDigraph</span><span class=\"params\">(v <span class=\"type\">int</span>)</span></span> *Digraph &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;Digraph&#123;</span><br><span class=\"line\">\t\tV: v,</span><br><span class=\"line\">\t\tE: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t\tadj: <span class=\"built_in\">make</span>([]Chapter01Foundation.ListBag, v),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(g *Digraph)</span></span> AddEdge(v, w <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tg.adj[v].Add(w)</span><br><span class=\"line\">\tg.E++</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(g *Digraph)</span></span> Adj(v <span class=\"type\">int</span>) []<span class=\"keyword\">interface</span>&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> g.adj[v].Iterator()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(g *Digraph)</span></span> Reverse() *Digraph &#123;</span><br><span class=\"line\">\tret := NewDigraph(g.V)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> v := <span class=\"number\">0</span>; v &lt; g.V; v++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> _, row := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\t\tw := row.(<span class=\"type\">int</span>)</span><br><span class=\"line\">\t\t\tret.AddEdge(w, v)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-2-3-可达性\"><a href=\"#4-2-3-可达性\" class=\"headerlink\" title=\"4.2.3 可达性\"></a>4.2.3 可达性</h4><p>深度优先搜索。</p>\n<p>有向图寻路：s -&gt; v</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> DirectedDFS <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tmarked []<span class=\"type\">bool</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewDirectedDFS</span><span class=\"params\">(g Graph, s <span class=\"type\">int</span>)</span></span> *DirectedDFS &#123;</span><br><span class=\"line\">\td := <span class=\"built_in\">new</span>(DirectedDFS)</span><br><span class=\"line\">\td.marked = <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V)</span><br><span class=\"line\">\td.DFS(g, s)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> d</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(d *DirectedDFS)</span></span> DFS(g Graph, v <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\td.marked[v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, w := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !d.marked[w.(<span class=\"type\">int</span>)] &#123;</span><br><span class=\"line\">\t\t\td.DFS(g, w.(<span class=\"type\">int</span>))</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-2-4-环和有向无环图\"><a href=\"#4-2-4-环和有向无环图\" class=\"headerlink\" title=\"4.2.4 环和有向无环图\"></a>4.2.4 环和有向无环图</h4><p>处理优先级限制下的调度问题，有向图出现环会让调度进入循环。</p>\n<p>寻找环：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> DirectedCycle <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tmarked []<span class=\"type\">bool</span></span><br><span class=\"line\">\tedgeTo []<span class=\"type\">int</span></span><br><span class=\"line\">\tcycle list.List</span><br><span class=\"line\">\tonStack []<span class=\"type\">bool</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewDirectedCycle</span><span class=\"params\">(g Graph)</span></span> *DirectedCycle &#123;</span><br><span class=\"line\">\tret := &amp;DirectedCycle&#123;</span><br><span class=\"line\">\t\tonStack: <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V),</span><br><span class=\"line\">\t\tedgeTo: <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, g.V),</span><br><span class=\"line\">\t\tmarked: <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> v:=<span class=\"number\">0</span>; v &lt; g.V; v++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !ret.marked[v] &#123;</span><br><span class=\"line\">\t\t\tret.DFS(g, v)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(d *DirectedCycle)</span></span> DFS(g Graph, v <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\td.onStack[v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\td.marked[v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, row := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\tw := row.(<span class=\"type\">int</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> d.HasCycle() &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> !d.marked[w] &#123;</span><br><span class=\"line\">\t\t\td.edgeTo[w] = v</span><br><span class=\"line\">\t\t\td.DFS(g, w)</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> d.onStack[w] &#123;</span><br><span class=\"line\">\t\t\td.cycle = list.New()</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> x:=v; x != w; x = d.edgeTo[x] &#123;</span><br><span class=\"line\">\t\t\t\td.cycle.PushFront(x)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\td.cycle.PushFront(w)</span><br><span class=\"line\">\t\t\td.cycle.PushFront(v)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(d *DirectedCycle)</span></span> HasCycle() <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> d.cycle.Len() != <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(d *DirectedCycle)</span></span> Cycle() list.List &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> d.cycle</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-2-5-强连通性\"><a href=\"#4-2-5-强连通性\" class=\"headerlink\" title=\"4.2.5 强连通性\"></a>4.2.5 强连通性</h4><p>如果两个顶点是相互可达的，称它们为强连通的。如果一幅图中任意两个顶点都是强连通的，则称这幅图是强连通的。</p>\n<p>强连通分量：相互均为强连通的顶点的最大子集。</p>\n<p>要另外实现一个取反操作才能进行。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> KasarajuSCC <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tmarked []<span class=\"type\">bool</span></span><br><span class=\"line\">\tid []<span class=\"type\">int</span>\t<span class=\"comment\">//连通分量的编号</span></span><br><span class=\"line\">\tcount <span class=\"type\">int</span>\t<span class=\"comment\">//当前编号</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewKasarajuSCC</span><span class=\"params\">(g Graph)</span></span> *KasarajuSCC &#123;</span><br><span class=\"line\">\tret := <span class=\"built_in\">new</span>(KasarajuSCC)</span><br><span class=\"line\">\tret.marked = <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V)</span><br><span class=\"line\">\tret.count = <span class=\"number\">0</span></span><br><span class=\"line\">\tret.id = <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>, g.V)</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\tfor s := 0; s &lt; g.V; s++ &#123;</span></span><br><span class=\"line\"><span class=\"comment\">\t\tif !ret.marked[s] &#123;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\tret.DFS(g, s)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\tret.count++</span></span><br><span class=\"line\"><span class=\"comment\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(cc *KasarajuSCC)</span></span> DFS(g Graph, v <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tcc.marked[v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\tcc.id[v] = cc.count</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, wRow := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\tw := wRow.(<span class=\"type\">int</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !cc.marked[w] &#123;</span><br><span class=\"line\">\t\t\tcc.DFS(g, w)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(cc *KasarajuSCC)</span></span> StronglyConnected(v, w <span class=\"type\">int</span>) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> cc.id[v] == cc.id[w]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-2-6-总结\"><a href=\"#4-2-6-总结\" class=\"headerlink\" title=\"4.2.6 总结\"></a>4.2.6 总结</h4><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms04Graph1.png\"></p>\n<hr>\n<h3 id=\"4-3-最小生成树\"><a href=\"#4-3-最小生成树\" class=\"headerlink\" title=\"4.3 最小生成树\"></a>4.3 最小生成树</h3><p>加权图是为每条边关联一个权值或成本的图模型。</p>\n<p>最小生成树是图的一棵含有其他所有顶点的无环连通子图。</p>\n<p>最小生成树的两种经典算法：Prim算法和Kruskal算法。</p>\n<h4 id=\"4-3-1-原理\"><a href=\"#4-3-1-原理\" class=\"headerlink\" title=\"4.3.1 原理\"></a>4.3.1 原理</h4><p>树的两个最重要的性质：</p>\n<ul>\n<li>用一条边连接树中的任意两个顶点会产生一个新的环；</li>\n<li>从树中删去一条边会得到两棵独立的树。</li>\n</ul>\n<p>图的一种切分是将图的所有顶点分为两个非空且不重复的集合，横切边是一条连接两个属于不同集合的顶点的边。</p>\n<p>切分定理：在一幅加权图中，给定任意的切分，它的横切边中权值最小者必然属于图的最小生成树。</p>\n<p>切分定理是解决最小生成树问题的所有算法的基础。更确切地说，这些算法是贪心算法地特殊情况，使用切分定理找到一条边，不断重复直到找到最小生成树的所有边。</p>\n<p>最小生成树的贪心算法：将V个顶点的任意加权连通图中属于最小生成树的边标记为黑色。初始状态下均为灰色，找到一种切分，它产生的横切边都不是黑色，将它权重最小的横切边标记为黑色。反复，直到标记V-1条黑色的边为止。</p>\n<h4 id=\"4-3-2-加权无向图的数据类型\"><a href=\"#4-3-2-加权无向图的数据类型\" class=\"headerlink\" title=\"4.3.2 加权无向图的数据类型\"></a>4.3.2 加权无向图的数据类型</h4><p>带权重的边的数据类型：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Edge <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tv, w <span class=\"type\">int</span></span><br><span class=\"line\">\tweight <span class=\"type\">float64</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewEdge</span><span class=\"params\">(v, w <span class=\"type\">int</span>, wgh <span class=\"type\">float64</span>)</span></span> *Edge &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;Edge&#123;</span><br><span class=\"line\">\t\tv: v,</span><br><span class=\"line\">\t\tw: w,</span><br><span class=\"line\">\t\tweight: wgh,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(e *Edge)</span></span> Either() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> e.v</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(e *Edge)</span></span> Other(v <span class=\"type\">int</span>) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> v == e.v &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> e.w</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> v == e.w &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> e.v</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(e *Edge)</span></span> CmpTo(that Edge) <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> e.weight &gt; that.weight &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> e.weight &lt; that.weight &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>加权无向图的数据类型：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> EdgeWeightedGraph <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tV <span class=\"type\">int</span></span><br><span class=\"line\">\tE <span class=\"type\">int</span></span><br><span class=\"line\">\tadj []Chapter01Foundation.ListBag</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewEdgeWeightedGraph</span><span class=\"params\">(v <span class=\"type\">int</span>)</span></span> *EdgeWeightedGraph &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;EdgeWeightedGraph&#123;</span><br><span class=\"line\">\t\tV: v,</span><br><span class=\"line\">\t\tE: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t\tadj: <span class=\"built_in\">make</span>([]Chapter01Foundation.ListBag, v),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(g *EdgeWeightedGraph)</span></span> AddEdge(e Edge) &#123;</span><br><span class=\"line\">\tv, w := e.v, e.w</span><br><span class=\"line\">\tg.adj[v].Add(e)</span><br><span class=\"line\">\tg.adj[w].Add(e)</span><br><span class=\"line\">\tg.E++</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-3-3-最小生成树API\"><a href=\"#4-3-3-最小生成树API\" class=\"headerlink\" title=\"4.3.3 最小生成树API\"></a>4.3.3 最小生成树API</h4><p>edges()返回最小生成树的所有边。</p>\n<p>weigh()返回最小生成树的权重。</p>\n<h4 id=\"4-3-4-Prim算法\"><a href=\"#4-3-4-Prim算法\" class=\"headerlink\" title=\"4.3.4 Prim算法\"></a>4.3.4 Prim算法</h4><p>每一步都会为一棵生长中的树添加一条边。一开始这棵树只有一个顶点，然后添加V-1条边，每次总是将下一条连接树中的顶点与不在树中的顶点且权值最小的边加入树中。</p>\n<p>最小生成树的Prim算法的延时实现：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> LazyPrimMST <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tmarked []<span class=\"type\">bool</span>\t<span class=\"comment\">// 顶点</span></span><br><span class=\"line\">\tmst *Chapter01Foundation.ListQueue  <span class=\"comment\">// 边</span></span><br><span class=\"line\">\t<span class=\"comment\">// 横切边，原文是最小队列，我是最大队列</span></span><br><span class=\"line\">\t<span class=\"comment\">//pq *Chapter02Sorting.MaxPriorityQueue</span></span><br><span class=\"line\">\tpq *list.List</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(p *LazyPrimMST)</span></span> Visit(g EdgeWeightedGraph, v <span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\tp.marked[v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> _, row := <span class=\"keyword\">range</span> g.Adj(v) &#123;</span><br><span class=\"line\">\t\te := row.(Edge)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !p.marked[e.Other(v)] &#123;</span><br><span class=\"line\">\t\t\tp.pq.PushFront(e)</span><br><span class=\"line\">\t\t\tp.SortList()</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(p *LazyPrimMST)</span></span> SortList() &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> p.pq.Len() == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tmin := p.pq.Front()</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> po := p.pq.Front(); po != <span class=\"literal\">nil</span>; po = po.Next() &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> po.Value.(Edge).weight &lt; min.Value.(Edge).weight &#123;</span><br><span class=\"line\">\t\t\tmin = po</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tp.pq.MoveBefore(min, p.pq.Front())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewLazyPrimMST</span><span class=\"params\">(g EdgeWeightedGraph)</span></span> *LazyPrimMST &#123;</span><br><span class=\"line\">\tret := <span class=\"built_in\">new</span>(LazyPrimMST)</span><br><span class=\"line\">\tret.pq = list.New()</span><br><span class=\"line\">\tret.marked = <span class=\"built_in\">make</span>([]<span class=\"type\">bool</span>, g.V)</span><br><span class=\"line\">\tret.mst = <span class=\"built_in\">new</span>(Chapter01Foundation.ListQueue)</span><br><span class=\"line\">\tret.Visit(g, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> ret.pq.Len() != <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\te := ret.pq.Remove(ret.pq.Front()).(Edge)</span><br><span class=\"line\">\t\tret.SortList()</span><br><span class=\"line\">\t\tv := e.Either()</span><br><span class=\"line\">\t\tw := e.Other(v)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ret.marked[v] &amp;&amp; ret.marked[w] &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tret.mst.Enqueue(e)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !ret.marked[v] &#123;</span><br><span class=\"line\">\t\t\tret.Visit(g, v)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !ret.marked[w] &#123;</span><br><span class=\"line\">\t\t\tret.Visit(g, w)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-3-5-Prim算法的即时实现\"><a href=\"#4-3-5-Prim算法的即时实现\" class=\"headerlink\" title=\"4.3.5 Prim算法的即时实现\"></a>4.3.5 Prim算法的即时实现</h4><p>不需要保存所有的边，只需要保存权值最小的边，只会在优先队列保存每个非树顶点w的一条边，这条边是与树中顶点连接起来的权值最小的边。</p>\n<h4 id=\"4-3-6-Kruskal算法\"><a href=\"#4-3-6-Kruskal算法\" class=\"headerlink\" title=\"4.3.6 Kruskal算法\"></a>4.3.6 Kruskal算法</h4><p>按照权值顺序处理它们，将边加入最小生成树中，加入的表不会构成环，直到加入V-1条边。</p>\n<h4 id=\"4-3-7-展望\"><a href=\"#4-3-7-展望\" class=\"headerlink\" title=\"4.3.7 展望\"></a>4.3.7 展望</h4><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms04Graph2.png\"></p>\n<hr>\n<h3 id=\"4-4-最短路径\"><a href=\"#4-4-最短路径\" class=\"headerlink\" title=\"4.4 最短路径\"></a>4.4 最短路径</h3><p>最短路径是权重最小者。</p>\n<h4 id=\"4-4-1-性质\"><a href=\"#4-4-1-性质\" class=\"headerlink\" title=\"4.4.1 性质\"></a>4.4.1 性质</h4><ul>\n<li>路径是有向的。</li>\n<li>权重不一定等价于距离，可能是时间等。</li>\n<li>并不是所有顶点都是可达的，为了简化问题，假设都是强连通的。</li>\n<li>最短路径不一定是唯一的，但是只需要找到一条就行。</li>\n<li>最短路径树：以s为起点，包含s和从s可达的所有顶点。</li>\n</ul>\n<h4 id=\"4-4-2-加权有向图的数据结构\"><a href=\"#4-4-2-加权有向图的数据结构\" class=\"headerlink\" title=\"4.4.2 加权有向图的数据结构\"></a>4.4.2 加权有向图的数据结构</h4><p>加权有向边的数据类型</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> DirectedEdge <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tv <span class=\"type\">int</span></span><br><span class=\"line\">\tw <span class=\"type\">int</span></span><br><span class=\"line\">\tweight <span class=\"type\">float64</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewDirectedEdge</span><span class=\"params\">(v, w <span class=\"type\">int</span>, weight <span class=\"type\">float64</span>)</span></span> *DirectedEdge &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;DirectedEdge&#123;v, w, weight&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(E *DirectedEdge)</span></span> From() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> E.v</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(E *DirectedEdge)</span></span> To() <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> E.w</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>加权有向图的数据类型</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> EdgeWeightedDigraph <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tV <span class=\"type\">int</span></span><br><span class=\"line\">\tE <span class=\"type\">int</span></span><br><span class=\"line\">\tadj []list.List</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewEdgeWeightedDigraph</span><span class=\"params\">(v <span class=\"type\">int</span>)</span></span> *EdgeWeightedDigraph &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;EdgeWeightedDigraph&#123;v, <span class=\"number\">0</span>, <span class=\"built_in\">make</span>([]list.List, v)&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(dg *EdgeWeightedDigraph)</span></span> AddEdge(e DirectedEdge) &#123;</span><br><span class=\"line\">\tdg.adj[e.From()].PushFront(e)</span><br><span class=\"line\">\tdg.E++</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(dg *EdgeWeightedDigraph)</span></span> Adj(v <span class=\"type\">int</span>) *list.List &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &amp;dg.adj[v]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(dg *EdgeWeightedDigraph)</span></span> Edges() *list.List &#123;</span><br><span class=\"line\">\tret := list.New()</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> v := <span class=\"number\">0</span>; v &lt; dg.V; v++ &#123;</span><br><span class=\"line\">\t\tl := dg.adj[v]</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> tmp := l.Front(); tmp != <span class=\"literal\">nil</span>; tmp = tmp.Next() &#123;</span><br><span class=\"line\">\t\t\tret.PushBack(tmp.Value)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-4-3-理论基础\"><a href=\"#4-4-3-理论基础\" class=\"headerlink\" title=\"4.4.3 理论基础\"></a>4.4.3 理论基础</h4><p>最短路径的最优性条件。</p>\n<h4 id=\"4-4-4-Dijkstra算法\"><a href=\"#4-4-4-Dijkstra算法\" class=\"headerlink\" title=\"4.4.4 Dijkstra算法\"></a>4.4.4 Dijkstra算法</h4><h4 id=\"4-4-5-无环加权有向图的最短路径算法\"><a href=\"#4-4-5-无环加权有向图的最短路径算法\" class=\"headerlink\" title=\"4.4.5 无环加权有向图的最短路径算法\"></a>4.4.5 无环加权有向图的最短路径算法</h4><h4 id=\"4-4-6-一般加权有向图的最短路径问题\"><a href=\"#4-4-6-一般加权有向图的最短路径问题\" class=\"headerlink\" title=\"4.4.6 一般加权有向图的最短路径问题\"></a>4.4.6 一般加权有向图的最短路径问题</h4><h4 id=\"4-4-7-展望\"><a href=\"#4-4-7-展望\" class=\"headerlink\" title=\"4.4.7 展望\"></a>4.4.7 展望</h4><div class=\"pdf-container\" data-target=\"https://zhenruyi.github.io/files/DijkstraAlgoOfShortest.pdf\" data-height=\"650px\"></div>\n\n\n\n<hr>"},{"title":"《算法》笔记：第5章  字符串","date":"2022-04-16T07:44:12.000Z","id":"algorithms5","_content":"\n\n\n《算法》第5章：字符串。\n\n字符串排序，单词查找树，字符串查找，正则表达式，数据压缩。\n\n\n\n<!-- more -->\n\n\n\n---\n\n\n\n本章结构如下：\n\n- 介绍字符串的基本性质。\n- 字符串的排序和查找。\n- 子字符串查找算法，包括Knuth、Morris和Pratt发明的一个著名的算法。\n- 正则表达式，是模式匹配问题的基础。\n- 重要应用：数据压缩，将字符串长度压缩到最小的程度。\n\n\n\n---\n\n\n\n### 5.1 字符串排序\n\n两类完全不同的字符串排序方法：\n\n- 低位优先的字符串排序，从右往左检查键中的字符，适用于键的长度都相同的字符串。\n- 高位优先的字符串排序，从左到右检查键中的字符，它不一定需要检查所有的输入才能完成排序。\n\n#### 5.1.1 键索引计数法\n\n适用于小整数键的排序，例如将学生姓名按照分组进行排序。\n\n第一步，统计每个键出现的频率。\n\n第二步，将键转化成索引，当前键索引的开始位置是之前键的总和。\n\n第三步，数据分类，用一个辅助数组。\n\n第四步，回写，将排序好的写回原数组。\n\n#### 5.1.2 低位优先的排序\n\n低位优先的字符串排序算法能够稳定地将定长字符串排序。\n\n就是一个基数排序。\n\n#### 5.1.3 高位优先的排序\n\n高位优先的排序是一种递归算法。\n\n类似基数排序，但是要注意字符串结束的情况。\n\n#### 5.1.4 三向字符串快速排序\n\n三向字符串平均比较字符~2NlnN次。\n\n\n\n\n\n---\n\n\n\n### 5.2 单词查找树\n\n由一棵多叉树保存。\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms05String1.png)\n\n\n\n\n\n---\n\n\n\n### 5.3 子字符串查找\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms05String2.png)\n\n\n\n\n\n---\n\n\n\n### 5.4 正则表达式\n\n\n\n\n\n\n\n---\n\n\n\n### 5.5 数据压缩\n\n\n\n\n\n\n\n\n\n---\n\n\n\n","source":"_posts/algo-learn03Algorithms05String.md","raw":"---\ntitle: 《算法》笔记：第5章  字符串\ndate: 2022-04-16 15:44:12\nid: algorithms5\ncategories:\n- algo\ntags:\n- learn\n---\n\n\n\n《算法》第5章：字符串。\n\n字符串排序，单词查找树，字符串查找，正则表达式，数据压缩。\n\n\n\n<!-- more -->\n\n\n\n---\n\n\n\n本章结构如下：\n\n- 介绍字符串的基本性质。\n- 字符串的排序和查找。\n- 子字符串查找算法，包括Knuth、Morris和Pratt发明的一个著名的算法。\n- 正则表达式，是模式匹配问题的基础。\n- 重要应用：数据压缩，将字符串长度压缩到最小的程度。\n\n\n\n---\n\n\n\n### 5.1 字符串排序\n\n两类完全不同的字符串排序方法：\n\n- 低位优先的字符串排序，从右往左检查键中的字符，适用于键的长度都相同的字符串。\n- 高位优先的字符串排序，从左到右检查键中的字符，它不一定需要检查所有的输入才能完成排序。\n\n#### 5.1.1 键索引计数法\n\n适用于小整数键的排序，例如将学生姓名按照分组进行排序。\n\n第一步，统计每个键出现的频率。\n\n第二步，将键转化成索引，当前键索引的开始位置是之前键的总和。\n\n第三步，数据分类，用一个辅助数组。\n\n第四步，回写，将排序好的写回原数组。\n\n#### 5.1.2 低位优先的排序\n\n低位优先的字符串排序算法能够稳定地将定长字符串排序。\n\n就是一个基数排序。\n\n#### 5.1.3 高位优先的排序\n\n高位优先的排序是一种递归算法。\n\n类似基数排序，但是要注意字符串结束的情况。\n\n#### 5.1.4 三向字符串快速排序\n\n三向字符串平均比较字符~2NlnN次。\n\n\n\n\n\n---\n\n\n\n### 5.2 单词查找树\n\n由一棵多叉树保存。\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms05String1.png)\n\n\n\n\n\n---\n\n\n\n### 5.3 子字符串查找\n\n![](https://zhenruyi.github.io/images/algo-learn03Algorithms05String2.png)\n\n\n\n\n\n---\n\n\n\n### 5.4 正则表达式\n\n\n\n\n\n\n\n---\n\n\n\n### 5.5 数据压缩\n\n\n\n\n\n\n\n\n\n---\n\n\n\n","slug":"algo-learn03Algorithms05String","published":1,"updated":"2022-04-17T00:41:31.781Z","_id":"cl22h70tg000z5ossad54a788","comments":1,"layout":"post","photos":[],"link":"","content":"<p>《算法》第5章：字符串。</p>\n<p>字符串排序，单词查找树，字符串查找，正则表达式，数据压缩。</p>\n<span id=\"more\"></span>\n\n\n\n<hr>\n<p>本章结构如下：</p>\n<ul>\n<li>介绍字符串的基本性质。</li>\n<li>字符串的排序和查找。</li>\n<li>子字符串查找算法，包括Knuth、Morris和Pratt发明的一个著名的算法。</li>\n<li>正则表达式，是模式匹配问题的基础。</li>\n<li>重要应用：数据压缩，将字符串长度压缩到最小的程度。</li>\n</ul>\n<hr>\n<h3 id=\"5-1-字符串排序\"><a href=\"#5-1-字符串排序\" class=\"headerlink\" title=\"5.1 字符串排序\"></a>5.1 字符串排序</h3><p>两类完全不同的字符串排序方法：</p>\n<ul>\n<li>低位优先的字符串排序，从右往左检查键中的字符，适用于键的长度都相同的字符串。</li>\n<li>高位优先的字符串排序，从左到右检查键中的字符，它不一定需要检查所有的输入才能完成排序。</li>\n</ul>\n<h4 id=\"5-1-1-键索引计数法\"><a href=\"#5-1-1-键索引计数法\" class=\"headerlink\" title=\"5.1.1 键索引计数法\"></a>5.1.1 键索引计数法</h4><p>适用于小整数键的排序，例如将学生姓名按照分组进行排序。</p>\n<p>第一步，统计每个键出现的频率。</p>\n<p>第二步，将键转化成索引，当前键索引的开始位置是之前键的总和。</p>\n<p>第三步，数据分类，用一个辅助数组。</p>\n<p>第四步，回写，将排序好的写回原数组。</p>\n<h4 id=\"5-1-2-低位优先的排序\"><a href=\"#5-1-2-低位优先的排序\" class=\"headerlink\" title=\"5.1.2 低位优先的排序\"></a>5.1.2 低位优先的排序</h4><p>低位优先的字符串排序算法能够稳定地将定长字符串排序。</p>\n<p>就是一个基数排序。</p>\n<h4 id=\"5-1-3-高位优先的排序\"><a href=\"#5-1-3-高位优先的排序\" class=\"headerlink\" title=\"5.1.3 高位优先的排序\"></a>5.1.3 高位优先的排序</h4><p>高位优先的排序是一种递归算法。</p>\n<p>类似基数排序，但是要注意字符串结束的情况。</p>\n<h4 id=\"5-1-4-三向字符串快速排序\"><a href=\"#5-1-4-三向字符串快速排序\" class=\"headerlink\" title=\"5.1.4 三向字符串快速排序\"></a>5.1.4 三向字符串快速排序</h4><p>三向字符串平均比较字符~2NlnN次。</p>\n<hr>\n<h3 id=\"5-2-单词查找树\"><a href=\"#5-2-单词查找树\" class=\"headerlink\" title=\"5.2 单词查找树\"></a>5.2 单词查找树</h3><p>由一棵多叉树保存。</p>\n<p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms05String1.png\"></p>\n<hr>\n<h3 id=\"5-3-子字符串查找\"><a href=\"#5-3-子字符串查找\" class=\"headerlink\" title=\"5.3 子字符串查找\"></a>5.3 子字符串查找</h3><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms05String2.png\"></p>\n<hr>\n<h3 id=\"5-4-正则表达式\"><a href=\"#5-4-正则表达式\" class=\"headerlink\" title=\"5.4 正则表达式\"></a>5.4 正则表达式</h3><hr>\n<h3 id=\"5-5-数据压缩\"><a href=\"#5-5-数据压缩\" class=\"headerlink\" title=\"5.5 数据压缩\"></a>5.5 数据压缩</h3><hr>\n","site":{"data":{}},"excerpt":"<p>《算法》第5章：字符串。</p>\n<p>字符串排序，单词查找树，字符串查找，正则表达式，数据压缩。</p>","more":"<hr>\n<p>本章结构如下：</p>\n<ul>\n<li>介绍字符串的基本性质。</li>\n<li>字符串的排序和查找。</li>\n<li>子字符串查找算法，包括Knuth、Morris和Pratt发明的一个著名的算法。</li>\n<li>正则表达式，是模式匹配问题的基础。</li>\n<li>重要应用：数据压缩，将字符串长度压缩到最小的程度。</li>\n</ul>\n<hr>\n<h3 id=\"5-1-字符串排序\"><a href=\"#5-1-字符串排序\" class=\"headerlink\" title=\"5.1 字符串排序\"></a>5.1 字符串排序</h3><p>两类完全不同的字符串排序方法：</p>\n<ul>\n<li>低位优先的字符串排序，从右往左检查键中的字符，适用于键的长度都相同的字符串。</li>\n<li>高位优先的字符串排序，从左到右检查键中的字符，它不一定需要检查所有的输入才能完成排序。</li>\n</ul>\n<h4 id=\"5-1-1-键索引计数法\"><a href=\"#5-1-1-键索引计数法\" class=\"headerlink\" title=\"5.1.1 键索引计数法\"></a>5.1.1 键索引计数法</h4><p>适用于小整数键的排序，例如将学生姓名按照分组进行排序。</p>\n<p>第一步，统计每个键出现的频率。</p>\n<p>第二步，将键转化成索引，当前键索引的开始位置是之前键的总和。</p>\n<p>第三步，数据分类，用一个辅助数组。</p>\n<p>第四步，回写，将排序好的写回原数组。</p>\n<h4 id=\"5-1-2-低位优先的排序\"><a href=\"#5-1-2-低位优先的排序\" class=\"headerlink\" title=\"5.1.2 低位优先的排序\"></a>5.1.2 低位优先的排序</h4><p>低位优先的字符串排序算法能够稳定地将定长字符串排序。</p>\n<p>就是一个基数排序。</p>\n<h4 id=\"5-1-3-高位优先的排序\"><a href=\"#5-1-3-高位优先的排序\" class=\"headerlink\" title=\"5.1.3 高位优先的排序\"></a>5.1.3 高位优先的排序</h4><p>高位优先的排序是一种递归算法。</p>\n<p>类似基数排序，但是要注意字符串结束的情况。</p>\n<h4 id=\"5-1-4-三向字符串快速排序\"><a href=\"#5-1-4-三向字符串快速排序\" class=\"headerlink\" title=\"5.1.4 三向字符串快速排序\"></a>5.1.4 三向字符串快速排序</h4><p>三向字符串平均比较字符~2NlnN次。</p>\n<hr>\n<h3 id=\"5-2-单词查找树\"><a href=\"#5-2-单词查找树\" class=\"headerlink\" title=\"5.2 单词查找树\"></a>5.2 单词查找树</h3><p>由一棵多叉树保存。</p>\n<p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms05String1.png\"></p>\n<hr>\n<h3 id=\"5-3-子字符串查找\"><a href=\"#5-3-子字符串查找\" class=\"headerlink\" title=\"5.3 子字符串查找\"></a>5.3 子字符串查找</h3><p><img src=\"https://zhenruyi.github.io/images/algo-learn03Algorithms05String2.png\"></p>\n<hr>\n<h3 id=\"5-4-正则表达式\"><a href=\"#5-4-正则表达式\" class=\"headerlink\" title=\"5.4 正则表达式\"></a>5.4 正则表达式</h3><hr>\n<h3 id=\"5-5-数据压缩\"><a href=\"#5-5-数据压缩\" class=\"headerlink\" title=\"5.5 数据压缩\"></a>5.5 数据压缩</h3><hr>"},{"title":"MySQL TODO","date":"2022-03-29T10:18:08.000Z","id":"mysql1","_content":"\n\n\n\n\n// TODO\n","source":"_posts/db-mysql01TODO.md","raw":"---\ntitle: MySQL TODO\ndate: 2022-03-29 18:18:08\nid: mysql1\ncategories:\n- db\ntags:\n- mysql\n---\n\n\n\n\n\n// TODO\n","slug":"db-mysql01TODO","published":1,"updated":"2022-04-16T23:05:06.938Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70ti00145oss9zkn12ci","content":"<p>// TODO</p>\n","site":{"data":{}},"excerpt":"","more":"<p>// TODO</p>\n"},{"title":"redis TODO","date":"2022-03-29T10:18:08.000Z","id":"redis1","_content":"\n\n\n\n\n// TODO\n","source":"_posts/db-redis01TODO.md","raw":"---\ntitle: redis TODO\ndate: 2022-03-29 18:18:08\nid: redis1\ncategories:\n- db\ntags:\n- redis\n---\n\n\n\n\n\n// TODO\n","slug":"db-redis01TODO","published":1,"updated":"2022-04-16T23:05:24.989Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70tj00185ossd9963krd","content":"<p>// TODO</p>\n","site":{"data":{}},"excerpt":"","more":"<p>// TODO</p>\n"},{"title":"C++容易忘的点","date":"2020-01-01T15:00:00.000Z","id":"cpp1","_content":"\nC++面向对象中容易忘记的知识点：变量的作用域，static，const，friend。\n\n<!-- more -->\n\n\n\n类\n\n```c++\nclass A{\n    //构造函数\n    A:a(ai),b(bi){\n    }\n    //析构函数\n    ~A{\n        \n    }\n}\nA::A(ai,bi):a(ai),b(bi)\n```\n\n变量的作用域\t自动局部 < 静态局部 < 全局变量        先定义的后释放\n\nconst数据成员的初始化\t在构造函数里定义\t定义之后就不能改\n\nconst成员函数\t在结尾加const\n\nstatic数据成员\t是类共有的\n\nstatic成员函数\t只能修改static数据成员\t类共有的\t在之前加\t在类外面不用加\n\nstatic const数据成员\t定义类时就要赋值\n\n友元friend\t友元函数,在类里面声明\t友元成员,友元类的其中一个成员能访问自己\t友元类,友元的每一个成员函数都可以访问自己所有的成员friend class\n\n类可以先声明\t后面再定义\n\n​\t","source":"_posts/lang-cpp01CppClassForget.md","raw":"---\ntitle: C++容易忘的点\ndate: 2020-01-01 23:00:00\nid: cpp1\ncategories:\n- lang\ntags:\n- cpp\n---\n\nC++面向对象中容易忘记的知识点：变量的作用域，static，const，friend。\n\n<!-- more -->\n\n\n\n类\n\n```c++\nclass A{\n    //构造函数\n    A:a(ai),b(bi){\n    }\n    //析构函数\n    ~A{\n        \n    }\n}\nA::A(ai,bi):a(ai),b(bi)\n```\n\n变量的作用域\t自动局部 < 静态局部 < 全局变量        先定义的后释放\n\nconst数据成员的初始化\t在构造函数里定义\t定义之后就不能改\n\nconst成员函数\t在结尾加const\n\nstatic数据成员\t是类共有的\n\nstatic成员函数\t只能修改static数据成员\t类共有的\t在之前加\t在类外面不用加\n\nstatic const数据成员\t定义类时就要赋值\n\n友元friend\t友元函数,在类里面声明\t友元成员,友元类的其中一个成员能访问自己\t友元类,友元的每一个成员函数都可以访问自己所有的成员friend class\n\n类可以先声明\t后面再定义\n\n​\t","slug":"lang-cpp01CppClassForget","published":1,"updated":"2022-04-16T23:06:30.834Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70tk001e5osshwex4wnp","content":"<p>C++面向对象中容易忘记的知识点：变量的作用域，static，const，friend。</p>\n<span id=\"more\"></span>\n\n\n\n<p>类</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//构造函数</span></span><br><span class=\"line\">    A:<span class=\"built_in\">a</span>(ai),<span class=\"built_in\">b</span>(bi)&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//析构函数</span></span><br><span class=\"line\">    ~A&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">A::<span class=\"built_in\">A</span>(ai,bi):<span class=\"built_in\">a</span>(ai),<span class=\"built_in\">b</span>(bi)</span><br></pre></td></tr></table></figure>\n\n<p>变量的作用域    自动局部 &lt; 静态局部 &lt; 全局变量        先定义的后释放</p>\n<p>const数据成员的初始化    在构造函数里定义    定义之后就不能改</p>\n<p>const成员函数    在结尾加const</p>\n<p>static数据成员    是类共有的</p>\n<p>static成员函数    只能修改static数据成员    类共有的    在之前加    在类外面不用加</p>\n<p>static const数据成员    定义类时就要赋值</p>\n<p>友元friend    友元函数,在类里面声明    友元成员,友元类的其中一个成员能访问自己    友元类,友元的每一个成员函数都可以访问自己所有的成员friend class</p>\n<p>类可以先声明    后面再定义</p>\n<p>​    </p>\n","site":{"data":{}},"excerpt":"<p>C++面向对象中容易忘记的知识点：变量的作用域，static，const，friend。</p>","more":"<p>类</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//构造函数</span></span><br><span class=\"line\">    A:<span class=\"built_in\">a</span>(ai),<span class=\"built_in\">b</span>(bi)&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//析构函数</span></span><br><span class=\"line\">    ~A&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">A::<span class=\"built_in\">A</span>(ai,bi):<span class=\"built_in\">a</span>(ai),<span class=\"built_in\">b</span>(bi)</span><br></pre></td></tr></table></figure>\n\n<p>变量的作用域    自动局部 &lt; 静态局部 &lt; 全局变量        先定义的后释放</p>\n<p>const数据成员的初始化    在构造函数里定义    定义之后就不能改</p>\n<p>const成员函数    在结尾加const</p>\n<p>static数据成员    是类共有的</p>\n<p>static成员函数    只能修改static数据成员    类共有的    在之前加    在类外面不用加</p>\n<p>static const数据成员    定义类时就要赋值</p>\n<p>友元friend    友元函数,在类里面声明    友元成员,友元类的其中一个成员能访问自己    友元类,友元的每一个成员函数都可以访问自己所有的成员friend class</p>\n<p>类可以先声明    后面再定义</p>\n<p>​    </p>"},{"title":"assembly TODO","date":"2022-03-29T10:18:08.000Z","id":"asm1","_content":"\n\n\n\n\n// TODO\n","source":"_posts/lang-asm01TODO.md","raw":"---\ntitle: assembly TODO\ndate: 2022-03-29 18:18:08\nid: asm1\ncategories:\n- lang\ntags:\n- asm\n---\n\n\n\n\n\n// TODO\n","slug":"lang-asm01TODO","published":1,"updated":"2022-04-16T23:05:42.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70tl001i5osseyb11u1w","content":"<p>// TODO</p>\n","site":{"data":{}},"excerpt":"","more":"<p>// TODO</p>\n"},{"title":"Bubble List项目备忘","date":"2022-02-02T15:00:00.000Z","id":"go1","_content":"\n\n\nGolang语言gin框架项目Bubble List的笔记\n\n\n\n<!-- more -->\n\n\n\ntodo module: struct\n\n\n\nvar DB *gorm.DB\n\n​\tdatabase object\n\n\n\ninitMySQL\n\ngorm.Open(dialect string, dsn string)\n\n​\tdialect: nickname\n\n​\tdsn: username:password@tcp(host:port)/dbname?charset=utf8mb4&parTime=True&loc=Local\n\n​\t\tutf8mb4 = utf8 more bytes 4\n\ndefer DB.Close()\n\n\n\ninit gin router engine\n\n​\tcall Static method\n\n​\tCall LoadHTMLFiles method\n\n​\tcall GET method: pass back a HTML file(index.html)\n\n\n\ngin router group: call Group method\n\n​\tPOST: add\n\n​\t\tnew Todo obj\n\n​\t\tbind to handler\n\n​\t\treturn context\n\n​\tGET: view\n\n​\t\tnew Todo slice\n\n​\t\t\n\n\n\n\n\nengine run","source":"_posts/lang-go01GoProjBubbleList.md","raw":"---\ntitle: Bubble List项目备忘\ndate: 2022-02-02 23:00:00\nid: go1\ncategories:\n- lang\ntags:\n- go\n---\n\n\n\nGolang语言gin框架项目Bubble List的笔记\n\n\n\n<!-- more -->\n\n\n\ntodo module: struct\n\n\n\nvar DB *gorm.DB\n\n​\tdatabase object\n\n\n\ninitMySQL\n\ngorm.Open(dialect string, dsn string)\n\n​\tdialect: nickname\n\n​\tdsn: username:password@tcp(host:port)/dbname?charset=utf8mb4&parTime=True&loc=Local\n\n​\t\tutf8mb4 = utf8 more bytes 4\n\ndefer DB.Close()\n\n\n\ninit gin router engine\n\n​\tcall Static method\n\n​\tCall LoadHTMLFiles method\n\n​\tcall GET method: pass back a HTML file(index.html)\n\n\n\ngin router group: call Group method\n\n​\tPOST: add\n\n​\t\tnew Todo obj\n\n​\t\tbind to handler\n\n​\t\treturn context\n\n​\tGET: view\n\n​\t\tnew Todo slice\n\n​\t\t\n\n\n\n\n\nengine run","slug":"lang-go01GoProjBubbleList","published":1,"updated":"2022-04-16T23:06:44.596Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70tp001m5ossd5q864sy","content":"<p>Golang语言gin框架项目Bubble List的笔记</p>\n<span id=\"more\"></span>\n\n\n\n<p>todo module: struct</p>\n<p>var DB *gorm.DB</p>\n<p>​    database object</p>\n<p>initMySQL</p>\n<p>gorm.Open(dialect string, dsn string)</p>\n<p>​    dialect: nickname</p>\n<p>​    dsn: username:password@tcp(host:port)/dbname?charset=utf8mb4&amp;parTime=True&amp;loc=Local</p>\n<p>​        utf8mb4 = utf8 more bytes 4</p>\n<p>defer DB.Close()</p>\n<p>init gin router engine</p>\n<p>​    call Static method</p>\n<p>​    Call LoadHTMLFiles method</p>\n<p>​    call GET method: pass back a HTML file(index.html)</p>\n<p>gin router group: call Group method</p>\n<p>​    POST: add</p>\n<p>​        new Todo obj</p>\n<p>​        bind to handler</p>\n<p>​        return context</p>\n<p>​    GET: view</p>\n<p>​        new Todo slice</p>\n<p>​        </p>\n<p>engine run</p>\n","site":{"data":{}},"excerpt":"<p>Golang语言gin框架项目Bubble List的笔记</p>","more":"<p>todo module: struct</p>\n<p>var DB *gorm.DB</p>\n<p>​    database object</p>\n<p>initMySQL</p>\n<p>gorm.Open(dialect string, dsn string)</p>\n<p>​    dialect: nickname</p>\n<p>​    dsn: username:password@tcp(host:port)/dbname?charset=utf8mb4&amp;parTime=True&amp;loc=Local</p>\n<p>​        utf8mb4 = utf8 more bytes 4</p>\n<p>defer DB.Close()</p>\n<p>init gin router engine</p>\n<p>​    call Static method</p>\n<p>​    Call LoadHTMLFiles method</p>\n<p>​    call GET method: pass back a HTML file(index.html)</p>\n<p>gin router group: call Group method</p>\n<p>​    POST: add</p>\n<p>​        new Todo obj</p>\n<p>​        bind to handler</p>\n<p>​        return context</p>\n<p>​    GET: view</p>\n<p>​        new Todo slice</p>\n<p>​        </p>\n<p>engine run</p>"},{"title":"Golang序列化和反序列化","date":"2022-03-30T09:42:34.000Z","id":"go2","_content":"\n\n\n\n\nGolang序列化就是把结构体对象转变成Json数据，反序列化就是把Json数据转换成结构体对象。\n\n关于JSON数据，结构体与JSON序列化，结构体标签，嵌套结构体和JSON序列化。\n\n\n\n<!-- more -->\n\n\n\n### 一  关于JSON数据\n\nJSON(JavaScript Object Notation，JS对象标记)，一种轻量级的数据交换格式。RESTful API 接口中返回的数据都是JSON数据。\n\n\n\n### 二  结构体与JSON序列化\n\nGolang要给app或者小程序提供api接口数据，就需要涉及结构体和json之间的转换。\n\n```\n序列化使用 json.marshal(interface{}) ([]byte, error)\n反序列化使用 json.unmarshal([]byte, interface{}) (error)\n```\n\n```go\nimport \"encoding/json\"\n\n// 结构体\ntype Student struct {\n\tId string\n\tAge int\n\tName string\n    sex string   // 私有对象不能序列化\n}\n\nfunc main() {\n    // 结构体对象\n\tstu := Student{\n\t\tId: \"123\",\n\t\tAge: 12,\n\t\tName: \"luyiz\",\n        sex: \"女\",\n\t}\n    // 序列化\n\tbytes, _ := json.Marshal(stu)\n    // 强制转换\n\tstr := string(bytes)\n    // 输出结果，没有私有对象，key的首字母大写\n    // {\"Id\":\"123\",\"Age\":12,\"Name\":\"luyiz\"}\n\tfmt.Println(str)\n}\n```\n\n```go\ntype Student struct {\n\tId string\n\tAge int\n\tName string\n\tsex string\n}\n\nfunc main() {\n    // 将json数据反序列化，得到一个结构体对象\n\tstr := `{\"Id\":\"123\",\"Age\":12,\"Name\":\"luyiz\"}`\n\tbytes := []byte(str)\n\tstu := Student{}\n\t_ = json.Unmarshal(bytes, &stu)\n    // 类型是一个结构体\n    // type: main.Student, data: {123 12 luyiz }\n\tfmt.Printf(\"type: %T, data: %v\", stu, stu)\n}\n```\n\n\n\n### 三  结构体标签Tag\n\nTag是结构体的元信息，可以在运行的时候通过反射的机制读取出来。\n\n为结构体编写Tag时，严格遵守键值对的队则。结构体标签的解析容错能力很差，一旦格式错了，编译和运行都不会报错。\n\n不要再key和value之间添加空格。\n\n```go\ntype Student struct {\n\tId string `json:\"id\"`\n\tAge int `json:\"age\"`\n\tName string `json:\"name\"`\n\t// Struct field 'sex' has 'json' tag but is not exported\n\tsex string `json:\"sex\"`\n}\n\nfunc main() {\n\tstu := Student{\n\t\tId: \"123\",\n\t\tAge: 12,\n\t\tName: \"luyiz\",\n\t\tsex: \"女\",\n\t}\n\tbytes, _ := json.Marshal(stu)\n\tstr := string(bytes)\n\t// key变成标签的形式\n\t// {\"id\":\"123\",\"age\":12,\"name\":\"luyiz\"}\n\tfmt.Println(str)\n}\n```\n\n\n\n### 四  嵌套结构体和JSON序列化\n\n```go\ntype Student struct {\n\tId string `json:\"id\"`\n\tAge int `json:\"age\"`\n\tName string `json:\"name\"`\n}\n\ntype Class struct {\n\tTitle string\n\tMember []Student `json:\"member\"`\n}\n\nfunc main() {\n\tstu1 := Student{\n\t\tId: \"123\",\n\t\tAge: 12,\n\t\tName: \"luyiz\",\n\t}\n\tstu2 := Student{\n\t\tId: \"122\",\n\t\tAge: 13,\n\t\tName: \"a123\",\n\t}\n\tmember := make([]Student, 0)\n\tmember = append(member, stu1)\n\tmember = append(member, stu2)\n\tclass := Class{\n\t\tTitle: \"1班\",\n\t\tMember: member,\n\t}\n\tbytes, _ := json.Marshal(class)\n\tstr := string(bytes)\n\t// {\"Title\":\"1班\",\"member\":[{\"id\":\"123\",\"age\":12,\"name\":\"luyiz\"},{\"id\":\"122\",\"age\":13,\"name\":\"a123\"}]}\n\tfmt.Println(str)\n}\n```\n\n\n\n\n\n\n\n","source":"_posts/lang-go02GoMarshalAndUnmarshal.md","raw":"---\ntitle: Golang序列化和反序列化\ndate: 2022-03-30 17:42:34\nid: go2\ncategories:\n- lang\ntags:\n- go\n---\n\n\n\n\n\nGolang序列化就是把结构体对象转变成Json数据，反序列化就是把Json数据转换成结构体对象。\n\n关于JSON数据，结构体与JSON序列化，结构体标签，嵌套结构体和JSON序列化。\n\n\n\n<!-- more -->\n\n\n\n### 一  关于JSON数据\n\nJSON(JavaScript Object Notation，JS对象标记)，一种轻量级的数据交换格式。RESTful API 接口中返回的数据都是JSON数据。\n\n\n\n### 二  结构体与JSON序列化\n\nGolang要给app或者小程序提供api接口数据，就需要涉及结构体和json之间的转换。\n\n```\n序列化使用 json.marshal(interface{}) ([]byte, error)\n反序列化使用 json.unmarshal([]byte, interface{}) (error)\n```\n\n```go\nimport \"encoding/json\"\n\n// 结构体\ntype Student struct {\n\tId string\n\tAge int\n\tName string\n    sex string   // 私有对象不能序列化\n}\n\nfunc main() {\n    // 结构体对象\n\tstu := Student{\n\t\tId: \"123\",\n\t\tAge: 12,\n\t\tName: \"luyiz\",\n        sex: \"女\",\n\t}\n    // 序列化\n\tbytes, _ := json.Marshal(stu)\n    // 强制转换\n\tstr := string(bytes)\n    // 输出结果，没有私有对象，key的首字母大写\n    // {\"Id\":\"123\",\"Age\":12,\"Name\":\"luyiz\"}\n\tfmt.Println(str)\n}\n```\n\n```go\ntype Student struct {\n\tId string\n\tAge int\n\tName string\n\tsex string\n}\n\nfunc main() {\n    // 将json数据反序列化，得到一个结构体对象\n\tstr := `{\"Id\":\"123\",\"Age\":12,\"Name\":\"luyiz\"}`\n\tbytes := []byte(str)\n\tstu := Student{}\n\t_ = json.Unmarshal(bytes, &stu)\n    // 类型是一个结构体\n    // type: main.Student, data: {123 12 luyiz }\n\tfmt.Printf(\"type: %T, data: %v\", stu, stu)\n}\n```\n\n\n\n### 三  结构体标签Tag\n\nTag是结构体的元信息，可以在运行的时候通过反射的机制读取出来。\n\n为结构体编写Tag时，严格遵守键值对的队则。结构体标签的解析容错能力很差，一旦格式错了，编译和运行都不会报错。\n\n不要再key和value之间添加空格。\n\n```go\ntype Student struct {\n\tId string `json:\"id\"`\n\tAge int `json:\"age\"`\n\tName string `json:\"name\"`\n\t// Struct field 'sex' has 'json' tag but is not exported\n\tsex string `json:\"sex\"`\n}\n\nfunc main() {\n\tstu := Student{\n\t\tId: \"123\",\n\t\tAge: 12,\n\t\tName: \"luyiz\",\n\t\tsex: \"女\",\n\t}\n\tbytes, _ := json.Marshal(stu)\n\tstr := string(bytes)\n\t// key变成标签的形式\n\t// {\"id\":\"123\",\"age\":12,\"name\":\"luyiz\"}\n\tfmt.Println(str)\n}\n```\n\n\n\n### 四  嵌套结构体和JSON序列化\n\n```go\ntype Student struct {\n\tId string `json:\"id\"`\n\tAge int `json:\"age\"`\n\tName string `json:\"name\"`\n}\n\ntype Class struct {\n\tTitle string\n\tMember []Student `json:\"member\"`\n}\n\nfunc main() {\n\tstu1 := Student{\n\t\tId: \"123\",\n\t\tAge: 12,\n\t\tName: \"luyiz\",\n\t}\n\tstu2 := Student{\n\t\tId: \"122\",\n\t\tAge: 13,\n\t\tName: \"a123\",\n\t}\n\tmember := make([]Student, 0)\n\tmember = append(member, stu1)\n\tmember = append(member, stu2)\n\tclass := Class{\n\t\tTitle: \"1班\",\n\t\tMember: member,\n\t}\n\tbytes, _ := json.Marshal(class)\n\tstr := string(bytes)\n\t// {\"Title\":\"1班\",\"member\":[{\"id\":\"123\",\"age\":12,\"name\":\"luyiz\"},{\"id\":\"122\",\"age\":13,\"name\":\"a123\"}]}\n\tfmt.Println(str)\n}\n```\n\n\n\n\n\n\n\n","slug":"lang-go02GoMarshalAndUnmarshal","published":1,"updated":"2022-04-16T23:06:59.545Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70tr001r5ossdxjl5q00","content":"<p>Golang序列化就是把结构体对象转变成Json数据，反序列化就是把Json数据转换成结构体对象。</p>\n<p>关于JSON数据，结构体与JSON序列化，结构体标签，嵌套结构体和JSON序列化。</p>\n<span id=\"more\"></span>\n\n\n\n<h3 id=\"一-关于JSON数据\"><a href=\"#一-关于JSON数据\" class=\"headerlink\" title=\"一  关于JSON数据\"></a>一  关于JSON数据</h3><p>JSON(JavaScript Object Notation，JS对象标记)，一种轻量级的数据交换格式。RESTful API 接口中返回的数据都是JSON数据。</p>\n<h3 id=\"二-结构体与JSON序列化\"><a href=\"#二-结构体与JSON序列化\" class=\"headerlink\" title=\"二  结构体与JSON序列化\"></a>二  结构体与JSON序列化</h3><p>Golang要给app或者小程序提供api接口数据，就需要涉及结构体和json之间的转换。</p>\n<figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">序列化使用 json.marshal(<span class=\"class\"><span class=\"keyword\">interface</span></span>&#123;&#125;) ([]<span class=\"keyword\">byte</span>, <span class=\"keyword\">error</span>)</span><br><span class=\"line\">反序列化使用 json.unmarshal([]<span class=\"keyword\">byte</span>, <span class=\"class\"><span class=\"keyword\">interface</span></span>&#123;&#125;) (<span class=\"keyword\">error</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;encoding/json&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结构体</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Student <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tId <span class=\"type\">string</span></span><br><span class=\"line\">\tAge <span class=\"type\">int</span></span><br><span class=\"line\">\tName <span class=\"type\">string</span></span><br><span class=\"line\">    sex <span class=\"type\">string</span>   <span class=\"comment\">// 私有对象不能序列化</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 结构体对象</span></span><br><span class=\"line\">\tstu := Student&#123;</span><br><span class=\"line\">\t\tId: <span class=\"string\">&quot;123&quot;</span>,</span><br><span class=\"line\">\t\tAge: <span class=\"number\">12</span>,</span><br><span class=\"line\">\t\tName: <span class=\"string\">&quot;luyiz&quot;</span>,</span><br><span class=\"line\">        sex: <span class=\"string\">&quot;女&quot;</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 序列化</span></span><br><span class=\"line\">\tbytes, _ := json.Marshal(stu)</span><br><span class=\"line\">    <span class=\"comment\">// 强制转换</span></span><br><span class=\"line\">\tstr := <span class=\"type\">string</span>(bytes)</span><br><span class=\"line\">    <span class=\"comment\">// 输出结果，没有私有对象，key的首字母大写</span></span><br><span class=\"line\">    <span class=\"comment\">// &#123;&quot;Id&quot;:&quot;123&quot;,&quot;Age&quot;:12,&quot;Name&quot;:&quot;luyiz&quot;&#125;</span></span><br><span class=\"line\">\tfmt.Println(str)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Student <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tId <span class=\"type\">string</span></span><br><span class=\"line\">\tAge <span class=\"type\">int</span></span><br><span class=\"line\">\tName <span class=\"type\">string</span></span><br><span class=\"line\">\tsex <span class=\"type\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 将json数据反序列化，得到一个结构体对象</span></span><br><span class=\"line\">\tstr := <span class=\"string\">`&#123;&quot;Id&quot;:&quot;123&quot;,&quot;Age&quot;:12,&quot;Name&quot;:&quot;luyiz&quot;&#125;`</span></span><br><span class=\"line\">\tbytes := []<span class=\"type\">byte</span>(str)</span><br><span class=\"line\">\tstu := Student&#123;&#125;</span><br><span class=\"line\">\t_ = json.Unmarshal(bytes, &amp;stu)</span><br><span class=\"line\">    <span class=\"comment\">// 类型是一个结构体</span></span><br><span class=\"line\">    <span class=\"comment\">// type: main.Student, data: &#123;123 12 luyiz &#125;</span></span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">&quot;type: %T, data: %v&quot;</span>, stu, stu)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"三-结构体标签Tag\"><a href=\"#三-结构体标签Tag\" class=\"headerlink\" title=\"三  结构体标签Tag\"></a>三  结构体标签Tag</h3><p>Tag是结构体的元信息，可以在运行的时候通过反射的机制读取出来。</p>\n<p>为结构体编写Tag时，严格遵守键值对的队则。结构体标签的解析容错能力很差，一旦格式错了，编译和运行都不会报错。</p>\n<p>不要再key和value之间添加空格。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Student <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tId <span class=\"type\">string</span> <span class=\"string\">`json:&quot;id&quot;`</span></span><br><span class=\"line\">\tAge <span class=\"type\">int</span> <span class=\"string\">`json:&quot;age&quot;`</span></span><br><span class=\"line\">\tName <span class=\"type\">string</span> <span class=\"string\">`json:&quot;name&quot;`</span></span><br><span class=\"line\">\t<span class=\"comment\">// Struct field &#x27;sex&#x27; has &#x27;json&#x27; tag but is not exported</span></span><br><span class=\"line\">\tsex <span class=\"type\">string</span> <span class=\"string\">`json:&quot;sex&quot;`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tstu := Student&#123;</span><br><span class=\"line\">\t\tId: <span class=\"string\">&quot;123&quot;</span>,</span><br><span class=\"line\">\t\tAge: <span class=\"number\">12</span>,</span><br><span class=\"line\">\t\tName: <span class=\"string\">&quot;luyiz&quot;</span>,</span><br><span class=\"line\">\t\tsex: <span class=\"string\">&quot;女&quot;</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tbytes, _ := json.Marshal(stu)</span><br><span class=\"line\">\tstr := <span class=\"type\">string</span>(bytes)</span><br><span class=\"line\">\t<span class=\"comment\">// key变成标签的形式</span></span><br><span class=\"line\">\t<span class=\"comment\">// &#123;&quot;id&quot;:&quot;123&quot;,&quot;age&quot;:12,&quot;name&quot;:&quot;luyiz&quot;&#125;</span></span><br><span class=\"line\">\tfmt.Println(str)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"四-嵌套结构体和JSON序列化\"><a href=\"#四-嵌套结构体和JSON序列化\" class=\"headerlink\" title=\"四  嵌套结构体和JSON序列化\"></a>四  嵌套结构体和JSON序列化</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Student <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tId <span class=\"type\">string</span> <span class=\"string\">`json:&quot;id&quot;`</span></span><br><span class=\"line\">\tAge <span class=\"type\">int</span> <span class=\"string\">`json:&quot;age&quot;`</span></span><br><span class=\"line\">\tName <span class=\"type\">string</span> <span class=\"string\">`json:&quot;name&quot;`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Class <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tTitle <span class=\"type\">string</span></span><br><span class=\"line\">\tMember []Student <span class=\"string\">`json:&quot;member&quot;`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tstu1 := Student&#123;</span><br><span class=\"line\">\t\tId: <span class=\"string\">&quot;123&quot;</span>,</span><br><span class=\"line\">\t\tAge: <span class=\"number\">12</span>,</span><br><span class=\"line\">\t\tName: <span class=\"string\">&quot;luyiz&quot;</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tstu2 := Student&#123;</span><br><span class=\"line\">\t\tId: <span class=\"string\">&quot;122&quot;</span>,</span><br><span class=\"line\">\t\tAge: <span class=\"number\">13</span>,</span><br><span class=\"line\">\t\tName: <span class=\"string\">&quot;a123&quot;</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tmember := <span class=\"built_in\">make</span>([]Student, <span class=\"number\">0</span>)</span><br><span class=\"line\">\tmember = <span class=\"built_in\">append</span>(member, stu1)</span><br><span class=\"line\">\tmember = <span class=\"built_in\">append</span>(member, stu2)</span><br><span class=\"line\">\tclass := Class&#123;</span><br><span class=\"line\">\t\tTitle: <span class=\"string\">&quot;1班&quot;</span>,</span><br><span class=\"line\">\t\tMember: member,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tbytes, _ := json.Marshal(class)</span><br><span class=\"line\">\tstr := <span class=\"type\">string</span>(bytes)</span><br><span class=\"line\">\t<span class=\"comment\">// &#123;&quot;Title&quot;:&quot;1班&quot;,&quot;member&quot;:[&#123;&quot;id&quot;:&quot;123&quot;,&quot;age&quot;:12,&quot;name&quot;:&quot;luyiz&quot;&#125;,&#123;&quot;id&quot;:&quot;122&quot;,&quot;age&quot;:13,&quot;name&quot;:&quot;a123&quot;&#125;]&#125;</span></span><br><span class=\"line\">\tfmt.Println(str)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n","site":{"data":{}},"excerpt":"<p>Golang序列化就是把结构体对象转变成Json数据，反序列化就是把Json数据转换成结构体对象。</p>\n<p>关于JSON数据，结构体与JSON序列化，结构体标签，嵌套结构体和JSON序列化。</p>","more":"<h3 id=\"一-关于JSON数据\"><a href=\"#一-关于JSON数据\" class=\"headerlink\" title=\"一  关于JSON数据\"></a>一  关于JSON数据</h3><p>JSON(JavaScript Object Notation，JS对象标记)，一种轻量级的数据交换格式。RESTful API 接口中返回的数据都是JSON数据。</p>\n<h3 id=\"二-结构体与JSON序列化\"><a href=\"#二-结构体与JSON序列化\" class=\"headerlink\" title=\"二  结构体与JSON序列化\"></a>二  结构体与JSON序列化</h3><p>Golang要给app或者小程序提供api接口数据，就需要涉及结构体和json之间的转换。</p>\n<figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">序列化使用 json.marshal(<span class=\"class\"><span class=\"keyword\">interface</span></span>&#123;&#125;) ([]<span class=\"keyword\">byte</span>, <span class=\"keyword\">error</span>)</span><br><span class=\"line\">反序列化使用 json.unmarshal([]<span class=\"keyword\">byte</span>, <span class=\"class\"><span class=\"keyword\">interface</span></span>&#123;&#125;) (<span class=\"keyword\">error</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;encoding/json&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结构体</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Student <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tId <span class=\"type\">string</span></span><br><span class=\"line\">\tAge <span class=\"type\">int</span></span><br><span class=\"line\">\tName <span class=\"type\">string</span></span><br><span class=\"line\">    sex <span class=\"type\">string</span>   <span class=\"comment\">// 私有对象不能序列化</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 结构体对象</span></span><br><span class=\"line\">\tstu := Student&#123;</span><br><span class=\"line\">\t\tId: <span class=\"string\">&quot;123&quot;</span>,</span><br><span class=\"line\">\t\tAge: <span class=\"number\">12</span>,</span><br><span class=\"line\">\t\tName: <span class=\"string\">&quot;luyiz&quot;</span>,</span><br><span class=\"line\">        sex: <span class=\"string\">&quot;女&quot;</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 序列化</span></span><br><span class=\"line\">\tbytes, _ := json.Marshal(stu)</span><br><span class=\"line\">    <span class=\"comment\">// 强制转换</span></span><br><span class=\"line\">\tstr := <span class=\"type\">string</span>(bytes)</span><br><span class=\"line\">    <span class=\"comment\">// 输出结果，没有私有对象，key的首字母大写</span></span><br><span class=\"line\">    <span class=\"comment\">// &#123;&quot;Id&quot;:&quot;123&quot;,&quot;Age&quot;:12,&quot;Name&quot;:&quot;luyiz&quot;&#125;</span></span><br><span class=\"line\">\tfmt.Println(str)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Student <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tId <span class=\"type\">string</span></span><br><span class=\"line\">\tAge <span class=\"type\">int</span></span><br><span class=\"line\">\tName <span class=\"type\">string</span></span><br><span class=\"line\">\tsex <span class=\"type\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 将json数据反序列化，得到一个结构体对象</span></span><br><span class=\"line\">\tstr := <span class=\"string\">`&#123;&quot;Id&quot;:&quot;123&quot;,&quot;Age&quot;:12,&quot;Name&quot;:&quot;luyiz&quot;&#125;`</span></span><br><span class=\"line\">\tbytes := []<span class=\"type\">byte</span>(str)</span><br><span class=\"line\">\tstu := Student&#123;&#125;</span><br><span class=\"line\">\t_ = json.Unmarshal(bytes, &amp;stu)</span><br><span class=\"line\">    <span class=\"comment\">// 类型是一个结构体</span></span><br><span class=\"line\">    <span class=\"comment\">// type: main.Student, data: &#123;123 12 luyiz &#125;</span></span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">&quot;type: %T, data: %v&quot;</span>, stu, stu)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"三-结构体标签Tag\"><a href=\"#三-结构体标签Tag\" class=\"headerlink\" title=\"三  结构体标签Tag\"></a>三  结构体标签Tag</h3><p>Tag是结构体的元信息，可以在运行的时候通过反射的机制读取出来。</p>\n<p>为结构体编写Tag时，严格遵守键值对的队则。结构体标签的解析容错能力很差，一旦格式错了，编译和运行都不会报错。</p>\n<p>不要再key和value之间添加空格。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Student <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tId <span class=\"type\">string</span> <span class=\"string\">`json:&quot;id&quot;`</span></span><br><span class=\"line\">\tAge <span class=\"type\">int</span> <span class=\"string\">`json:&quot;age&quot;`</span></span><br><span class=\"line\">\tName <span class=\"type\">string</span> <span class=\"string\">`json:&quot;name&quot;`</span></span><br><span class=\"line\">\t<span class=\"comment\">// Struct field &#x27;sex&#x27; has &#x27;json&#x27; tag but is not exported</span></span><br><span class=\"line\">\tsex <span class=\"type\">string</span> <span class=\"string\">`json:&quot;sex&quot;`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tstu := Student&#123;</span><br><span class=\"line\">\t\tId: <span class=\"string\">&quot;123&quot;</span>,</span><br><span class=\"line\">\t\tAge: <span class=\"number\">12</span>,</span><br><span class=\"line\">\t\tName: <span class=\"string\">&quot;luyiz&quot;</span>,</span><br><span class=\"line\">\t\tsex: <span class=\"string\">&quot;女&quot;</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tbytes, _ := json.Marshal(stu)</span><br><span class=\"line\">\tstr := <span class=\"type\">string</span>(bytes)</span><br><span class=\"line\">\t<span class=\"comment\">// key变成标签的形式</span></span><br><span class=\"line\">\t<span class=\"comment\">// &#123;&quot;id&quot;:&quot;123&quot;,&quot;age&quot;:12,&quot;name&quot;:&quot;luyiz&quot;&#125;</span></span><br><span class=\"line\">\tfmt.Println(str)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"四-嵌套结构体和JSON序列化\"><a href=\"#四-嵌套结构体和JSON序列化\" class=\"headerlink\" title=\"四  嵌套结构体和JSON序列化\"></a>四  嵌套结构体和JSON序列化</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Student <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tId <span class=\"type\">string</span> <span class=\"string\">`json:&quot;id&quot;`</span></span><br><span class=\"line\">\tAge <span class=\"type\">int</span> <span class=\"string\">`json:&quot;age&quot;`</span></span><br><span class=\"line\">\tName <span class=\"type\">string</span> <span class=\"string\">`json:&quot;name&quot;`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Class <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tTitle <span class=\"type\">string</span></span><br><span class=\"line\">\tMember []Student <span class=\"string\">`json:&quot;member&quot;`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tstu1 := Student&#123;</span><br><span class=\"line\">\t\tId: <span class=\"string\">&quot;123&quot;</span>,</span><br><span class=\"line\">\t\tAge: <span class=\"number\">12</span>,</span><br><span class=\"line\">\t\tName: <span class=\"string\">&quot;luyiz&quot;</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tstu2 := Student&#123;</span><br><span class=\"line\">\t\tId: <span class=\"string\">&quot;122&quot;</span>,</span><br><span class=\"line\">\t\tAge: <span class=\"number\">13</span>,</span><br><span class=\"line\">\t\tName: <span class=\"string\">&quot;a123&quot;</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tmember := <span class=\"built_in\">make</span>([]Student, <span class=\"number\">0</span>)</span><br><span class=\"line\">\tmember = <span class=\"built_in\">append</span>(member, stu1)</span><br><span class=\"line\">\tmember = <span class=\"built_in\">append</span>(member, stu2)</span><br><span class=\"line\">\tclass := Class&#123;</span><br><span class=\"line\">\t\tTitle: <span class=\"string\">&quot;1班&quot;</span>,</span><br><span class=\"line\">\t\tMember: member,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tbytes, _ := json.Marshal(class)</span><br><span class=\"line\">\tstr := <span class=\"type\">string</span>(bytes)</span><br><span class=\"line\">\t<span class=\"comment\">// &#123;&quot;Title&quot;:&quot;1班&quot;,&quot;member&quot;:[&#123;&quot;id&quot;:&quot;123&quot;,&quot;age&quot;:12,&quot;name&quot;:&quot;luyiz&quot;&#125;,&#123;&quot;id&quot;:&quot;122&quot;,&quot;age&quot;:13,&quot;name&quot;:&quot;a123&quot;&#125;]&#125;</span></span><br><span class=\"line\">\tfmt.Println(str)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Golang中的Package和go mod","date":"2022-03-30T10:41:16.000Z","id":"go3","_content":"\n\n\n\n\ngo语言中的包管理和go.mod文件。\n\n包的介绍和定义，包管理工具go mod，自定义包，init()初始化函数，第三方包。\n\n\n\n<!-- more -->\n\n\n\n#### 1 包的介绍和定义\n\n包是源码的集合，是一种代码复用方案。\n\n包分为三种：\n\n- 系统内置：引入后可以直接使用，如fmt，strconv，strings。\n- 自定义：自己写的包。\n- 第三方：下载到本地才可以使用。如\"github.com/shopspring/decimal\"。\n\n\n\n#### 2 包管理工具go mod\n\n1.11版本之前，需要使用自定义的包时，需要把项目放到GOPATH目录，但是1.11版本之后无需手动配置环境变量，使用go mod管理项目，可以在任何位置新建项目。1.13版本之后可以彻底不要GOPATH了。\n\n```\n在任意位置新建一个项目，在此目录下使用\ngo mod init ProjName\n初始化一个go mod文件go.mod\n```\n\n\n\n#### 3 自定义包：定义，导入\n\n```\n定义：新建一个文件夹PackName，然后在该文件夹下的文件中，声明这个文件属于的包：\npackage PackName\n- 建议包名和文件夹名字一样。\n- 包的声明一定要在第一行。\n- 包内的结构体、函数不能重复定义。\n- 包内名称，首字母大写说明是共有的，首字母小写说明是私有的。\n- 包名为main的为程序的入口包，编译后会得到一个可执行文件。\n- 没有main的包的源代码不会生成一个可执行文件。\n\n导入：import \"ProjName/PackName\"\n使用方法或者变量：PackName.Var，PackName.Func。\n\n引入别名：import NickName \"ProjName/PackName\"\n引入匿名(编译时会嵌入源代码)：import _ \"ProjName/PackName\"\n```\n\n\n\n#### 4 init()初始化函数\n\n递归执行init()函数。\n\n```\nmain:  import packA\npackA: import packB\nPackB: import packC\nPAckC\n\ninit()函数的执行顺序\nPackC.init() -> packB.init() -> packA.init() -> main.init() -> main()\n```\n\n\n\n#### 5 第三方包\n\n##### 5.1 找到第三方包\n\n在https://pkg.go.dev找到常用的包。一般是一个GitHub地址。\n\n\n\n##### 5.2 安装这个包\n\n第一种方法：go get github.com/....\n\n第二种方法：go mod download\n\n会下载到$GOPATH$/pkg/mod，多个项目会共享缓存的mod。\n\n第三种方法：go mod vendor 将依赖复制到当前项目的vendor下。\n","source":"_posts/lang-go03GoPackageAndMod.md","raw":"---\ntitle: Golang中的Package和go mod\ndate: 2022-03-30 18:41:16\nid: go3\ncategories:\n- lang\ntags:\n- go\n---\n\n\n\n\n\ngo语言中的包管理和go.mod文件。\n\n包的介绍和定义，包管理工具go mod，自定义包，init()初始化函数，第三方包。\n\n\n\n<!-- more -->\n\n\n\n#### 1 包的介绍和定义\n\n包是源码的集合，是一种代码复用方案。\n\n包分为三种：\n\n- 系统内置：引入后可以直接使用，如fmt，strconv，strings。\n- 自定义：自己写的包。\n- 第三方：下载到本地才可以使用。如\"github.com/shopspring/decimal\"。\n\n\n\n#### 2 包管理工具go mod\n\n1.11版本之前，需要使用自定义的包时，需要把项目放到GOPATH目录，但是1.11版本之后无需手动配置环境变量，使用go mod管理项目，可以在任何位置新建项目。1.13版本之后可以彻底不要GOPATH了。\n\n```\n在任意位置新建一个项目，在此目录下使用\ngo mod init ProjName\n初始化一个go mod文件go.mod\n```\n\n\n\n#### 3 自定义包：定义，导入\n\n```\n定义：新建一个文件夹PackName，然后在该文件夹下的文件中，声明这个文件属于的包：\npackage PackName\n- 建议包名和文件夹名字一样。\n- 包的声明一定要在第一行。\n- 包内的结构体、函数不能重复定义。\n- 包内名称，首字母大写说明是共有的，首字母小写说明是私有的。\n- 包名为main的为程序的入口包，编译后会得到一个可执行文件。\n- 没有main的包的源代码不会生成一个可执行文件。\n\n导入：import \"ProjName/PackName\"\n使用方法或者变量：PackName.Var，PackName.Func。\n\n引入别名：import NickName \"ProjName/PackName\"\n引入匿名(编译时会嵌入源代码)：import _ \"ProjName/PackName\"\n```\n\n\n\n#### 4 init()初始化函数\n\n递归执行init()函数。\n\n```\nmain:  import packA\npackA: import packB\nPackB: import packC\nPAckC\n\ninit()函数的执行顺序\nPackC.init() -> packB.init() -> packA.init() -> main.init() -> main()\n```\n\n\n\n#### 5 第三方包\n\n##### 5.1 找到第三方包\n\n在https://pkg.go.dev找到常用的包。一般是一个GitHub地址。\n\n\n\n##### 5.2 安装这个包\n\n第一种方法：go get github.com/....\n\n第二种方法：go mod download\n\n会下载到$GOPATH$/pkg/mod，多个项目会共享缓存的mod。\n\n第三种方法：go mod vendor 将依赖复制到当前项目的vendor下。\n","slug":"lang-go03GoPackageAndMod","published":1,"updated":"2022-04-16T23:07:11.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70ts001v5ossf1mq84ip","content":"<p>go语言中的包管理和go.mod文件。</p>\n<p>包的介绍和定义，包管理工具go mod，自定义包，init()初始化函数，第三方包。</p>\n<span id=\"more\"></span>\n\n\n\n<h4 id=\"1-包的介绍和定义\"><a href=\"#1-包的介绍和定义\" class=\"headerlink\" title=\"1 包的介绍和定义\"></a>1 包的介绍和定义</h4><p>包是源码的集合，是一种代码复用方案。</p>\n<p>包分为三种：</p>\n<ul>\n<li>系统内置：引入后可以直接使用，如fmt，strconv，strings。</li>\n<li>自定义：自己写的包。</li>\n<li>第三方：下载到本地才可以使用。如”github.com/shopspring/decimal”。</li>\n</ul>\n<h4 id=\"2-包管理工具go-mod\"><a href=\"#2-包管理工具go-mod\" class=\"headerlink\" title=\"2 包管理工具go mod\"></a>2 包管理工具go mod</h4><p>1.11版本之前，需要使用自定义的包时，需要把项目放到GOPATH目录，但是1.11版本之后无需手动配置环境变量，使用go mod管理项目，可以在任何位置新建项目。1.13版本之后可以彻底不要GOPATH了。</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在任意位置新建一个项目，在此目录下使用</span><br><span class=\"line\"><span class=\"built_in\">go</span> <span class=\"built_in\">mod</span> init ProjName</span><br><span class=\"line\">初始化一个<span class=\"built_in\">go</span> <span class=\"built_in\">mod</span>文件<span class=\"built_in\">go</span>.<span class=\"built_in\">mod</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-自定义包：定义，导入\"><a href=\"#3-自定义包：定义，导入\" class=\"headerlink\" title=\"3 自定义包：定义，导入\"></a>3 自定义包：定义，导入</h4><figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">定义：新建一个文件夹PackName，然后在该文件夹下的文件中，声明这个文件属于的包：</span><br><span class=\"line\"><span class=\"keyword\">package</span> PackName</span><br><span class=\"line\">- 建议包名和文件夹名字一样。</span><br><span class=\"line\">- 包的声明一定要在第一行。</span><br><span class=\"line\">- 包内的结构体、函数不能重复定义。</span><br><span class=\"line\">- 包内名称，首字母大写说明是共有的，首字母小写说明是私有的。</span><br><span class=\"line\">- 包名为main的为程序的入口包，编译后会得到一个可执行文件。</span><br><span class=\"line\">- 没有main的包的源代码不会生成一个可执行文件。</span><br><span class=\"line\"></span><br><span class=\"line\">导入：<span class=\"keyword\">import</span> <span class=\"string\">&quot;ProjName/PackName&quot;</span></span><br><span class=\"line\">使用方法或者变量：PackName.Var，PackName.Func。</span><br><span class=\"line\"></span><br><span class=\"line\">引入别名：<span class=\"keyword\">import</span> NickName <span class=\"string\">&quot;ProjName/PackName&quot;</span></span><br><span class=\"line\">引入匿名(编译时会嵌入源代码)：<span class=\"keyword\">import</span> <span class=\"literal\">_</span> <span class=\"string\">&quot;ProjName/PackName&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-init-初始化函数\"><a href=\"#4-init-初始化函数\" class=\"headerlink\" title=\"4 init()初始化函数\"></a>4 init()初始化函数</h4><p>递归执行init()函数。</p>\n<figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">main:  <span class=\"keyword\">import</span> packA</span><br><span class=\"line\">packA: <span class=\"keyword\">import</span> packB</span><br><span class=\"line\">PackB: <span class=\"keyword\">import</span> packC</span><br><span class=\"line\">PAckC</span><br><span class=\"line\"></span><br><span class=\"line\">init()函数的执行顺序</span><br><span class=\"line\">PackC.init<span class=\"function\"><span class=\"params\">()</span> -&gt;</span> packB.init<span class=\"function\"><span class=\"params\">()</span> -&gt;</span> packA.init<span class=\"function\"><span class=\"params\">()</span> -&gt;</span> main.init<span class=\"function\"><span class=\"params\">()</span> -&gt;</span> main()</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"5-第三方包\"><a href=\"#5-第三方包\" class=\"headerlink\" title=\"5 第三方包\"></a>5 第三方包</h4><h5 id=\"5-1-找到第三方包\"><a href=\"#5-1-找到第三方包\" class=\"headerlink\" title=\"5.1 找到第三方包\"></a>5.1 找到第三方包</h5><p>在<a href=\"https://pkg.go.dev找到常用的包.一般是一个github地址./\">https://pkg.go.dev找到常用的包。一般是一个GitHub地址。</a></p>\n<h5 id=\"5-2-安装这个包\"><a href=\"#5-2-安装这个包\" class=\"headerlink\" title=\"5.2 安装这个包\"></a>5.2 安装这个包</h5><p>第一种方法：go get github.com/….</p>\n<p>第二种方法：go mod download</p>\n<p>会下载到$GOPATH$/pkg/mod，多个项目会共享缓存的mod。</p>\n<p>第三种方法：go mod vendor 将依赖复制到当前项目的vendor下。</p>\n","site":{"data":{}},"excerpt":"<p>go语言中的包管理和go.mod文件。</p>\n<p>包的介绍和定义，包管理工具go mod，自定义包，init()初始化函数，第三方包。</p>","more":"<h4 id=\"1-包的介绍和定义\"><a href=\"#1-包的介绍和定义\" class=\"headerlink\" title=\"1 包的介绍和定义\"></a>1 包的介绍和定义</h4><p>包是源码的集合，是一种代码复用方案。</p>\n<p>包分为三种：</p>\n<ul>\n<li>系统内置：引入后可以直接使用，如fmt，strconv，strings。</li>\n<li>自定义：自己写的包。</li>\n<li>第三方：下载到本地才可以使用。如”github.com/shopspring/decimal”。</li>\n</ul>\n<h4 id=\"2-包管理工具go-mod\"><a href=\"#2-包管理工具go-mod\" class=\"headerlink\" title=\"2 包管理工具go mod\"></a>2 包管理工具go mod</h4><p>1.11版本之前，需要使用自定义的包时，需要把项目放到GOPATH目录，但是1.11版本之后无需手动配置环境变量，使用go mod管理项目，可以在任何位置新建项目。1.13版本之后可以彻底不要GOPATH了。</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在任意位置新建一个项目，在此目录下使用</span><br><span class=\"line\"><span class=\"built_in\">go</span> <span class=\"built_in\">mod</span> init ProjName</span><br><span class=\"line\">初始化一个<span class=\"built_in\">go</span> <span class=\"built_in\">mod</span>文件<span class=\"built_in\">go</span>.<span class=\"built_in\">mod</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-自定义包：定义，导入\"><a href=\"#3-自定义包：定义，导入\" class=\"headerlink\" title=\"3 自定义包：定义，导入\"></a>3 自定义包：定义，导入</h4><figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">定义：新建一个文件夹PackName，然后在该文件夹下的文件中，声明这个文件属于的包：</span><br><span class=\"line\"><span class=\"keyword\">package</span> PackName</span><br><span class=\"line\">- 建议包名和文件夹名字一样。</span><br><span class=\"line\">- 包的声明一定要在第一行。</span><br><span class=\"line\">- 包内的结构体、函数不能重复定义。</span><br><span class=\"line\">- 包内名称，首字母大写说明是共有的，首字母小写说明是私有的。</span><br><span class=\"line\">- 包名为main的为程序的入口包，编译后会得到一个可执行文件。</span><br><span class=\"line\">- 没有main的包的源代码不会生成一个可执行文件。</span><br><span class=\"line\"></span><br><span class=\"line\">导入：<span class=\"keyword\">import</span> <span class=\"string\">&quot;ProjName/PackName&quot;</span></span><br><span class=\"line\">使用方法或者变量：PackName.Var，PackName.Func。</span><br><span class=\"line\"></span><br><span class=\"line\">引入别名：<span class=\"keyword\">import</span> NickName <span class=\"string\">&quot;ProjName/PackName&quot;</span></span><br><span class=\"line\">引入匿名(编译时会嵌入源代码)：<span class=\"keyword\">import</span> <span class=\"literal\">_</span> <span class=\"string\">&quot;ProjName/PackName&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-init-初始化函数\"><a href=\"#4-init-初始化函数\" class=\"headerlink\" title=\"4 init()初始化函数\"></a>4 init()初始化函数</h4><p>递归执行init()函数。</p>\n<figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">main:  <span class=\"keyword\">import</span> packA</span><br><span class=\"line\">packA: <span class=\"keyword\">import</span> packB</span><br><span class=\"line\">PackB: <span class=\"keyword\">import</span> packC</span><br><span class=\"line\">PAckC</span><br><span class=\"line\"></span><br><span class=\"line\">init()函数的执行顺序</span><br><span class=\"line\">PackC.init<span class=\"function\"><span class=\"params\">()</span> -&gt;</span> packB.init<span class=\"function\"><span class=\"params\">()</span> -&gt;</span> packA.init<span class=\"function\"><span class=\"params\">()</span> -&gt;</span> main.init<span class=\"function\"><span class=\"params\">()</span> -&gt;</span> main()</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"5-第三方包\"><a href=\"#5-第三方包\" class=\"headerlink\" title=\"5 第三方包\"></a>5 第三方包</h4><h5 id=\"5-1-找到第三方包\"><a href=\"#5-1-找到第三方包\" class=\"headerlink\" title=\"5.1 找到第三方包\"></a>5.1 找到第三方包</h5><p>在<a href=\"https://pkg.go.dev找到常用的包.一般是一个github地址./\">https://pkg.go.dev找到常用的包。一般是一个GitHub地址。</a></p>\n<h5 id=\"5-2-安装这个包\"><a href=\"#5-2-安装这个包\" class=\"headerlink\" title=\"5.2 安装这个包\"></a>5.2 安装这个包</h5><p>第一种方法：go get github.com/….</p>\n<p>第二种方法：go mod download</p>\n<p>会下载到$GOPATH$/pkg/mod，多个项目会共享缓存的mod。</p>\n<p>第三种方法：go mod vendor 将依赖复制到当前项目的vendor下。</p>"},{"title":"Python学习日记(Alex老师)","date":"2020-01-01T15:11:00.000Z","id":"py2","_content":"\n\n\n\n\n跟着Alex老师学的Python，视频链接：[96天从小白炼成PYTHON开发](https://www.bilibili.com/video/BV1j7411e7MD)\n\n\n\n<!-- more -->\n\n\n\n# Python学习日记\n\n## 第一天\n\n### 字符串\n\n拼接：a+b\n\n次数：a*3\n\n赋值：单引号、双引号、多引号（多行）\n\n### 列表（数组）\n\n添加：插入name.insert(3,'alex')、追加name.append（“tony”）\n\n修改：name[2]=\" \"\n\n删除：del name[2],name.remove(\"   \")\n\n查找：in     \n\n查找下标：name.index()返回坐标\n\n### 字符串格式化输出\n\n占位符：%s，%d，%f\n\n![image-20200315220331079](C:\\Users\\10956\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200315220331079.png)\n\n### 深圳小事\n\n不要烂在泥土里\n\n贪欲吞噬人性\n\n### 运算符\n\n算数运算：幂**   取整除//\n\n比较运算：\n\n赋值运算：**=、//=\n\n逻辑运算：and、or、not\n\n### while..else循环\n\n如果while没有给break终止的话，执行else后的语句\n\n\n\n## 第二天\n\n### 课前鸡汤\n\n复合型人才\n\n### 变量的创建过程\n\n​\ta=“alex”\n\n​\tb=a\n\na、b都指向alex而不是b指向a\n\n​\ta='alex'\n\n​\ta='boy'\n\n此时上下a指向的地址不一样\n\n### 身份运算\n\nis /is not\n\n​\ta=‘alex'\n\n​\ttype(a)   is   string     (true)\n\nNone 空值\n\n​\ta = None \n\n​\tif a is None :\n\n### 三元运算\n\n变量  =  值A   if   条件A   else   条件B\n\n### 寻找帮助\n\nhelp()\n\n​\thelp(names.remove)\n\n获取能进行的操作\n\n​\tnames.\n\n### 数据类型\n\n列表\n\nhttps://book.apeland.cn/details/30/\n\n元组：只读列表\n\n​\t长度：len()\t\n\n字符串：\n\n​\t不转义r(原生字符raw)\t\ta = r ' alex\\n '     print(a)   得到alex\\n\n\n字典：\n\n## 第三天\n\n### bytes类型\n\n​\t\tf = open ( \" python learning . txt \" , \"w\" , encoding = \"utf - 8\" )     用utff-8的格式编码\n\n​\t\tf = open (\"    \"   ,    \"wb\"     )      不要加encoding   因为是用二进制的格式打开        \t\n\npython 和 pycharm 加载和编码都是默认utf8 \n\n​\t\tstr.encode()        ---->得到的是对应的bytes类型， 以   b ’ ‘ 标识\n\n要转成二进制的情况 : 网络传输、写入硬盘\n\n### copy\n\n在字符串、列表和集合中，修改一个字符串会创建一个新的地址，然后把原来的那个删除。\n\n但是在字典中，s = s1   ，s和s1都指向同样的地址（容器）。\n\n​\t\t字典中每一个数据都有一个地址（容器里的物体）。\n\n\n\ncopy   \n\n​\t\t浅copy     \t\ts1 = s.copy()   只复制第一层，  \t\t当字典里面还有字典的话，改小字典的数据之后，两份都会影响。\n\n​\t\t深copy \t\t\timport  copy             s1 = s.deepcopy()    完全复制一份新的\n\n### 编码和解码\n\n编码 ：str , encode(\"utf-8\")   用utf-8编码\n\n解码： str. decode(\"utf-8\")\t之前是用utf-8编码的，现在要把utf-8解码出来，解码后是unicode的格式\n\n### 编码转换\n\n在windows系统上，是gbk的方式编码\n\n在mac/linux上，是以utf-8的方式编码\n\n所以传输文件之后，要改变编码格式，不然会出现乱码。\n\ngbk\t--->\tunicode\t--->\tutf-8\n\n​\t\t代码实现 utf-8\t--->\tgbk\n\n```python\n#用utf-8格式 写入文件\nf = open ( \"data.txt\" , \"w\" )\ns_uft8 = \"你好未来\"\nf.write ( s_utf8 . encode (\"utf-8\") )\nf.close\n\n#转换\ns_unicode = s_utf8 .decode (\"utf-8\")\ns_gbk = s_unicode .encode (\"gbk\")\n\n#写入文件\nf = open (\"data.txt\" , \"wb\" )\nf.write(s_gbk)\nf.close\n```\n\n### 函数的定义\n\n默认返回值是None\n\n返回多个，则会返回元组\t\treturn 1,2,3,4,5    --->   \t (1,2,3,4,5)\n\n### 函数的参数\n\n参数的定义从右到左，参数的赋值从左到右\n\n形参：相当于临时变量\n\n实参\n\n默认参数：靠右定义\n\n\n\n位置参数\t\n\n关键参数\n\n​\t\tdef  func( age , name , school )\n\n​\t\tfunc( 22  ,   name=\"alex\" ,  school = \"scnu\" )   前一个是位置参数，后两个是关键参数\n\n​\t优先级：位置参数 > 默认参数/关键参数\n\n\n\n非固定参数\n\n​\t\tdef  func( name , *args , **kwargs )     args会返回元组，kwargs会返回字典\n\n​\t\tfunc ( \"alex\" , 21 , 22 , age = 33 , sex = \"female\" )     第一个是位置参数，后四个是非固定参数\n\n​\t\t\t\t\t\t\t\t\t\t\t第二三个会存到元组里，最后两个会存到字典里\n\n### 局部变量和全局变量\n\n局部变量和全局变量，即使名字一样，但是地址不一样。\n\n使用时，查找顺序：局部变量>全局变量\n\n​\tlocals()\t\t返回全部局部变量，以字典的形式。\n\n​\tglobals()\t\t返会全部变量\n\n在局部引用一个全局变量    声明（如果没有则创建）：global  name  然后再使用    //不建议这么使用\n\n### 局部引用字典、列表\n\n局部的函数里可以修改字典、列表里的数据，但是字典和列表本身时不可以修改的。\n\n### 嵌套函数\n\n函数里面再定义一个函数，这个小函数的作用域只在这个函数里面。临时函数。\n\n### 匿名函数(lambda)\n\n```python\ndef func(x):\n\treturn x**2\n\n#lambda表达式\nex = lambda x : x**2\n```\n\n最复杂是一个三元表达式    \n\n```python\nex = lambda x : x**2 if x>10 else x**3\n```\n\nmap( func , [   ] )\t\t把列表里的数据依次作为第一个函数的参数执行\n\n```python\nput = map ( lambda x:x**2 , [1,2,3,4,5] )\nfor i in map :\n\tprint(i)\n    \n输出的是: 1\n\t     4\n    \t 9.....\n```\n\n### 高阶函数\n\n满足其一则为高阶函数：接受一个函数输入、返回一个函数\n\n​\t\tdef  func1 ( .... ) : .....\n\n​\t\tdef  func2 ( x , y , f ) :   f (x)+ f(y) .....\n\n​\t\tfunc2 ( x , y , func2 )\n\n### 函数递归\n\n效率不高，会导致栈溢出\n\n栈类似于队列\n\n### 内置函数\n\nabs\t求绝对值\n\nall \t判断列表、字典、集合里面是否有 None 或者 0 。即如果每一个元素都   在 bool() 返回true，则为True。\n\nany \t判断是否有一个满足  bool(x) = True。\n\nascii \t如果是在ascii表里的，返回原来的字符。如果不在，则返回unicode编码。\" \\ \\ u \"开头\n\nbin \t\t返回这个十进制数字的二进制形式\n\nbool \t\t判断是否为0和None，如果是，则返回False\n\nbytearray\t将bytes类型变成一个可以修改的bytes数组。例如 b [1] = ...是不可以的，转成数组之后可以。\n\nbytes\t\t转化成bytes类型，以b 开头 。  a = bytes ( \"中国 \" , \"utf-8\" )   --->a为    b'\\xd6\\xd0\\xb9\\xfa'\n\nchr \t返回数字对应的字符\t\n\ncomplex \t返回复数    complex ( 1,2 )    --->  1+2 j\n\ndict\t返回一个空字典\n\ndir \t返回能进行的操作（类似帮助）\n\ndivmod\t除然后取模  --->  divmod( 8,3 )    =    ( 2, 2 )\n\nenumerate \t返回列表的索引和元素。  a = [\"alex\",\"kiki\"]    enumerate后得到 (0,\"alex\") (1,\"kiki\")\n\neval \t把字符串变成对应的数据类型\n\nexec\t把字符串变成可以执行的语句   exec(\"print (\"12345) \")  会打印12345\n\nexit \t退出程序\n\nfilter\t过滤不满足条件的数据     。    list(filter ( lambda x: x<10 , [1,2,3,4,5,11,22,33] ))\n   --->   [1, 2, 3, 4, 5]\n\nfloat  \t强制转换浮点数类型\n\nfrozenset\t把集合变成不能改的\n\nglobals\t返回所有变量、函数\n\nhash \t返回一串以hash编码的到的数据\n\nhelp\t帮助。help(hash) 返回关于hash的定义和使用方法。\n\nhex \t16进制\n\nid \t返回数据的地址\n\ninput\t输入\n\nint\t转换整型\n\nisinstance \t判断是否是某个数据类型    isinstance( a , string )\n\nlen \t长度\n\nlist\t返回空列表\n\nlocals\t返回局部变量\n\nmap\tmap(function , list)  把列表中的数据一个一个带入到函数中\n\nmax\t最大值\n\nmin \t最小值\n\noct \t返回10进制数的8进制表示\n\nopen\t打开\n\nord \t返回字符的ASCII码\n\nprint\t输出\n\nquit\t离开程序\n\nrange\t一个列表\n\nround\t四舍五入\n\nset\t返回空集合\n\nsorted\t排序\n\nstr\t转化成字符串\n\nsum \t加法\n\ntuple\t返回空元组\n\ntype\t返回数据类型\n\nzip\t可以合并两个列表  a = [1,2,3]   b = [\"alex\" , \"kiki\" ]  \n\n​\t\t\t\t\t\t\tzip(a,b)   --->   [   (1,\"alex\") ,  ( 2,\"kiki\" )    ]   取小的那个\n\n### 名称空间\n\nLEGB\n\n​\tlocals：局部的，函数内部的\n\n​\tenclosing function：嵌套函数最近的父函数\n\n​\tglobals：全局变量\n\n​\tbuiltins：所有函数，包括内置函数\n\n### 闭包\n\n外层函数返回内层函数\n\n函数运行完，函数的作用域不会消失\n\n调用外层函数的时候，先不执行内部的函数，直接return  内部函数的地址\n\n### 装饰器\n\n问题产生：“开放-封闭”原则\n\n​\t\t封闭：已经实现的函数不能修改\n\n​\t\t开放：对现有函数进行扩展\n\n​\t不能改函数名\n\n​\t不能改调用方式\n\n语法：\n\n```python\ndef func1:.....\ndef func2:.....\n    \nfunc1 = func2(func1)\n#等于\n@func2\ndef func1:...\n```\n\n可以加参数，非固定参数：*args   **kwargs\n\n##### 列表生成式\n\n给一个列表元素都加1的办法\n\n```python\na = [1,3,4,5,6,7]\n\n#for循环\nb = []\nfor i in a:\n    b = append(i+1)\n    \n#第二种循环\nfor index,i in enumerate(a):\n    a[index] = i+1\n    \n#lambda表达式、map函数\na = list(map(lambda x:x+1,a))\n\n#列表生成式\na = [i+1 for i in a]\n```\n\n##### 生成器：惰性算法\n\n用循环，range会首先生成一个列表，占空间\n\n生成器优点：边执行边计算\n\n语法：把列表生成式的[]改成()就好了    p = ( i for i in range(10) )\n\n​\t\t执行：next( p )\n\n循环调用\n\n```\nfor i in p :\n\tprint( i )\n```\n\n##### 函数生成器\n\n把函数里面的return 改成yield\n\nyield  b ： 程序或者循环  暂停，并且返回   b\n\n一个有yield 的函数，可以在中间去执行别的代码，然后再返回来执行\n\n执行方式\n\n```python\nnext (func)\n或者\nfunc. __next__()\n\n可以中途去干别的事情\nnext(func)\n......do something else\nnext(func)\n```\n\n但是此时函数会暂停，并且永不结束。\n\n一般用for来调用，就不会这样了。\n\n\n\n发送值给函数生成器\n\n```python\ndef func(value):\n\tfor i < value:\n        a = yield\n        \nf = func(100)\nf.__next__()   #发送一个None给yield\nf.send( a )    #发送一个值，并且执行\n```\n\n##### 单线程下的多并发\n\n线程：cpu执行任务的单元\n\n多核：多个线程，并行运算\n\n```python\nimport time\n\ndef consumer(name):\n    print(\"%s 准备吃包子啦!\" %name)\n    while True:\n       baozi = yield  # yield可以接收到外部send传过来的数据并赋值给baozi\n       print(\"包子[%s]来了,被[%s]吃了!\" %(baozi,name))\n        \nc = consumer('A')\nc2 = consumer('B')\nc.__next__() # 执行一下next可以使上面的函数走到yield那句。 这样后面的send语法才能生效\nc2.__next__()\n\nprint(\"----老子开始准备做包子啦!----\")\n\nfor i in range(10):\n    time.sleep(1)\n    print(\"做了2个包子!\")\n    c.send(i)  # send的作用=next, 同时还把数据传给了上面函数里的yield\n    c2.send(i)\n```\n\n### 迭代器iterator\n\n迭代对象：\t1.可以用于for循环的数据类型：set、tuple、list、dic、str\n\n​\t\t\t\t\t  2.迭代器和迭代器函数\n\n可迭代：Interable   可遍历、可循环\t\t\t用isinstance()判断是不是可迭代对象\n\n\n\n迭代器：可以用next()执行下一次的    例如generator\n\n可以用iter()强制转换成迭代器\n\n\n\n## 第四天\n\n### OS库：跟系统调用相关\n\nos 模块提供了很多允许你的程序与操作系统直接交互的功能\n\n```c\n得到当前工作目录，即当前Python脚本工作的目录路径: os.getcwd()\n返回指定目录下的所有文件和目录名:os.listdir()\n函数用来删除一个文件:os.remove()\n删除多个目录：os.removedirs（r“c：\\python”）\n检验给出的路径是否是一个文件：os.path.isfile()\n检验给出的路径是否是一个目录：os.path.isdir()\n判断是否是绝对路径：os.path.isabs()\n检验给出的路径是否真地存:os.path.exists()\n返回一个路径的目录名和文件名:os.path.split()     e.g os.path.split('/home/swaroop/byte/code/poem.txt') 结果：('/home/swaroop/byte/code', 'poem.txt') \n分离扩展名：os.path.splitext()       e.g  os.path.splitext('/usr/local/test.py')    结果：('/usr/local/test', '.py')\n获取路径名：os.path.dirname()\n获得绝对路径: os.path.abspath()  \n获取文件名：os.path.basename()\n运行shell命令: os.system()\n读取操作系统环境变量HOME的值:os.getenv(\"HOME\") \n返回操作系统所有的环境变量： os.environ \n设置系统环境变量，仅程序运行时有效：os.environ.setdefault('HOME','/home/alex')\n给出当前平台使用的行终止符:os.linesep    Windows使用'\\r\\n'，Linux and MAC使用'\\n'\n指示你正在使用的平台：os.name       对于Windows，它是'nt'，而对于Linux/Unix用户，它是'posix'\n重命名：os.rename（old， new）\n创建多级目录：os.makedirs（r“c：\\python\\test”）\n创建单个目录：os.mkdir（“test”）\n获取文件属性：os.stat（file）\n修改文件权限与时间戳：os.chmod（file）\n获取文件大小：os.path.getsize（filename）\n结合目录名与文件名：os.path.join(dir,filename)\n改变工作目录到dirname: os.chdir(dirname)\n获取当前终端的大小: os.get_terminal_size()\n杀死进程: os.kill(10884,signal.SIGKILL)\n```\n\n### sys库\n\n```python\nsys.argv           命令行参数List，第一个元素是程序本身路径\nsys.exit(n)        退出程序，正常退出时exit(0)\nsys.version        获取Python解释程序的版本信息\nsys.maxint         最大的Int值\nsys.path           返回模块的搜索路径，初始化时使用PYTHONPATH环境变量的值\nsys.platform       返回操作系统平台名称\nsys.stdout.write('please:')  #标准输出 , 引出进度条的例子， 注，在py3上不行，可以用print代替\nval = sys.stdin.readline()[:-1] #标准输入\nsys.getrecursionlimit() #获取最大递归层数\nsys.setrecursionlimit(1200) #设置最大递归层数\nsys.getdefaultencoding()  #获取解释器默认编码\nsys.getfilesystemencoding  #获取内存数据存到文件里的默认编码\n```\n\n### time模块\n\n时间戳timestamp：从1970年1月1日到现在过去了多少秒\n\n元组struct_time：年月日时分秒周  一年中第几天  是否是夏令时\n\nUTC (Coordinated Universal Time ,世界协调时)：中国时UTC+8\n\nDST (Daylight Saving Time)：夏令时\n\n```python\ntime.localtime( [ timestamp ] )：将一个时间戳转换为当前时区的struct_time。若secs参数未提供，则以当前时间为准。\ntime.gmtime( [ secs ] )：和localtime()方法类似，gmtime()方法是将一个时间戳转换为UTC时区（0时区）的struct_time。\ntime.time()：返回当前时间的时间戳。\ntime.asctime([t])：把一个表示时间的元组或者struct_time表示为这种形式：’Sun Oct 1 12:04:38 2019’。如果没有参数，将会将time.localtime()作为参数传入。\ntime.ctime([secs])：把一个时间戳转化为time.asctime()的形式。如果参数未给或者为None的时候，将会默认time.time()为参数。它的作用相当于time.asctime(time.localtime(secs))。\n\ntime.mktime(t)：将一个struct_time转化为时间戳。\ntime.strftime(format[, t])：把一个代表时间的元组或者struct_time（如由time.localtime()和time.gmtime()返回）转化为格式化的时间字符串。如果t未指定，将传入time.localtime()。举例：time.strftime(“%Y-%m-%d %X”, time.localtime()) #输出’2017-10-01 12:14:23’\ntime.strptime(string[, format])：把一个格式化时间字符串转化为struct_time。实际上它和strftime()是逆操作。\n举例：time.strptime(‘2017-10-3 17:54’,”%Y-%m-%d %H:%M”) #输出 time.struct_time(tm_year=2017, tm_mon=10, tm_mday=3, tm_hour=17, tm_min=54, tm_sec=0, tm_wday=1, tm_yday=276, tm_isdst=-1)\n\ntime.sleep(secs)：线程推迟指定的时间运行,单位为秒。\n```\n\n### datatime模块\n\n相比于time模块，datetime模块的接口则更直观、更容易调用\n\n```\ndatetime.date：表示日期的类。常用的属性有year, month, day；\n\ndatetime.time：表示时间的类。常用的属性有hour, minute, second, microsecond；\n\ndatetime.datetime：表示日期时间。\n\ndatetime.timedelta：表示时间间隔，即两个时间点之间的长度。\n\ndatetime.tzinfo：与时区有关的相关信息。（这里不详细充分讨论该类，感兴趣的童鞋可以参考python手册）\n```\n\n```python\n1. d=datetime.datetime.now() 返回当前的datetime日期类型\nd.timestamp(),d.today(), d.year,d.timetuple()等方法可以调用\n\n2. datetime.date.fromtimestamp(322222) 把一个时间戳转为datetime日期类型\n\n3. 时间运算\n>>> datetime.datetime.now()\ndatetime.datetime(2017, 10, 1, 12, 53, 11, 821218)\n>>> datetime.datetime.now() + datetime.timedelta(4) #当前时间 +4天\ndatetime.datetime(2017, 10, 5, 12, 53, 35, 276589)\n>>> datetime.datetime.now() + datetime.timedelta(hours=4) #当前时间+4小时\ndatetime.datetime(2017, 10, 1, 16, 53, 42, 876275)\n\n4.时间替换\n>>> d.replace(year=2999,month=11,day=30)\ndatetime.date(2999, 11, 30)\n```\n\n### pickle  &&  json\n\n序列化：数据的 网络传输和储存在硬盘 的形式是 bytes类型。把各种数据类型转化成可以网络传输和储存的类型称为序列化。\n\n反向过程叫做 反序列化\n\n```python\n#pickle\n\nstr = pickle.dumps( data )   #把data转化成python可识别的字符串\n\npickle.dump(data,file)\t\t#把data以字符串写入file种\n\n#file = open(\"  \" , rb)\n#json时，open(\" \" , r )     \t\t\npickle.loads( str )\t\t\t#把str反序列化\n\npickle.load( file )\t\t\t#从文件加载\n\n#遵循先进先出的原则\n```\n\n```\nJson模块也提供了四个功能：dumps、dump、loads、load，用法跟pickle一致\n```\n\npickle 和 json的区别\n\n- JSON:\n\n  优点：跨语言(不同语言间的数据传递可用json交接)、体积小\n\n  缺点：只能支持int\\str\\list\\tuple\\dict\n\n  \n\n  Pickle:\n\n  优点：专为python设计，支持python所有的数据类型\n\n  缺点：只能在python中使用，存储数据占空间大\n\n### hashlib\n\n#### HASH加密\n\n一般译作散列或者哈希。是把任意输入（预映射）转化成固定长度（128位）的输出，这个输出称之为散列值。这是一种压缩算法。\n\n#### 密码学相关\n\n碰撞：不同字符串通过hash算法得到相同的散列。\n\n撞库：用穷举法反解散列值，以获得原来的明文密码。\n\n加盐：通过给hash得到的散列通过加盐算法增加字符然后再次hash。\n\n拖库：黑客获取了密码库。\n\n#### MD5(Message-Digest Algorithm)\n\n讯息摘要演算法。一种加密算法。\n\n##### MD5的特点\n\n- 压缩性：得到的散列一般比原数据 占内存小\n- 易计算：通过MD5的算法，计算时间短\n- 抗修改：修改原数据，将得到不同的HASH值\n- 抗碰撞：一般不会有相同的HASH值\n- 不可逆\n\n##### MD5的效果\n\n1. 防篡改：发送和接受时的HASH值一样，则没有被篡改\n2. 防抵赖：申请数字签名\n3. 防看到明文：看不到密码\n\n##### MD5的操作\n\n```python\nimport hashlib\n#获取一个md5对象\nm = hashlib.md5()\n#给md5对象一个值，要bytes类型。多次update是将字符串拼接\nm .update(\"str\".encode(\"type\"))\n#默认得到是二进制，也可以转化成十六进制\nm .hexdigest()\n```\n\n#### SHA(Secure hash Algorithnm)\n\nsha - 1 :得到160位的散列值。\n\nsha - 256：得到256位。\n\n一般用在密码学上，操作和MD5一样。\n\n### shutil模块\n\n```python\n#shutil.copyfileobj ( open(fsrc, \"rb\"), open(fdes, \"wb\") )\nshutil.copyfileobj(open(\"d:\\\\my1.txt\", \"rb\"), open(\"d:\\\\my2.txt\", \"wb\"))\n\n#shutil.copyfile(\"file1\" , \"file2\") ，f2非必须存在\n\n#copy权限\nshutil.copymode( fsrc , fdes )\n\n#拷贝状态信息，time、bits...\nshutil.copystat( fsrc , fdes )\n\n#拷贝文件和权限\nshutil.copy( fsrc , fdes )\n\n#拷贝文件和状态\nshutil.copy2(  ,  )\n\n#忽略某种格式\nshutil.ignore_patterns(*patterns)\n#example: *.txt、filename* ....\n\n#拷贝文件夹\nshutil.copytree(src,des,symlinks=\"False\",ignore=\"False\")\n\n#创建压缩包并返回路径\nshuil.makearchive( base_name , format , root , )\n#base_name：压缩包的路径和名字，若只有名字，则保存到当前目录\n#format：压缩包的格式'zip''rar''tar'\n#root：要压缩的文件夹的路径\n\n#删除文件夹\nshutil.rmtree(  )\n\n#重命名\nshutil.move(\"f1\",\"f2\")\n\n```\n\n#### zipfile压缩&解压缩\n\n```python\nimport zipfile\n# 压缩\nz = zipfile.ZipFile('laxi.zip', 'w')\nz.write('a.log')\nz.write('data.data')\nz.close()\n\n# 解压\nz = zipfile.ZipFile('laxi.zip', 'r')\nz.extractall(path='.')\nz.close()\n```\n\n#### tarfile压缩&解压缩\n\n```python\nimport tarfile\n# 压缩\n>>> t=tarfile.open('/tmp/egon.tar','w')\n>>> t.add('/test1/a.py',arcname='a.bak')\n>>> t.add('/test1/b.py',arcname='b.bak')\n>>> t.close()\n\n# 解压\n>>> t=tarfile.open('/tmp/egon.tar','r')\n>>> t.extractall('/egon')\n>>> t.close()\n```\n\n### re正则匹配\n\n#### 匹配规则\n\n- re.match()\t从第一个字符开始匹配，如果不符合则返回None\n- re.search()    匹配全局，返回第一个\n- re.findall()      把所有匹配到的字符，放到一个列表返回\n- re.split()      以匹配到的字符当做列表分隔符，与findall相反\n- re.sub 匹配字符并替换    re.sub( 要替换，替换成，字符串，count=替换次数)\n- re.fullmatch    精确匹配，这个字符串必须完全符合规则\n\n#### 表达式规则\n\n```python\n'.'     默认匹配除\\n之外的任意一个字符，若指定flag DOTALL,则匹配任意字符，包括换行\n'^'     匹配字符开头，若指定flags MULTILINE,这种也可以匹配上(r\"^a\",\"\\nabc\\neee\",flags=re.MULTILINE)\n'$'     匹配字符结尾， 若指定flags MULTILINE ,re.search('foo.$','foo1\\nfoo2\\n',re.MULTILINE).group() 会匹配到foo1\n'*'     匹配*号前的字符0次或多次， re.search('a*','aaaabac')  结果'aaaa'\n'+'     匹配前一个字符1次或多次，re.findall(\"ab+\",\"ab+cd+abb+bba\") 结果['ab', 'abb']\n'?'     匹配前一个字符1次或0次 ,re.search('b?','alex').group() 匹配b 0次\n'{m}'   匹配前一个字符m次 ,re.search('b{3}','alexbbbs').group()  匹配到'bbb'\n'{n,m}' 匹配前一个字符n到m次，re.findall(\"ab{1,3}\",\"abb abc abbcbbb\") 结果'abb', 'ab', 'abb']\n'|'     匹配|左或|右的字符，re.search(\"abc|ABC\",\"ABCBabcCD\").group() 结果'ABC'\n'(...)' 分组匹配， re.search(\"(abc){2}a(123|45)\", \"abcabca456c\").group() 结果为'abcabca45'\n'[...]' 匹配[]范围里面的字符。[0-9]、[a-z]、[0-9a-zA-Z]\n\n'\\A'    只从字符开头匹配，re.search(\"\\Aabc\",\"alexabc\") 是匹配不到的，相当于re.match('abc',\"alexabc\") 或^\n'\\Z'    匹配字符结尾，同$ \n'\\d'    匹配数字0-9\n'\\D'    匹配非数字\n'\\w'    匹配[A-Za-z0-9]\n'\\W'    匹配非[A-Za-z0-9]\n's'     匹配空白字符、\\t、\\n、\\r , re.search(\"\\s+\",\"ab\\tc1\\n3\").group() 结果 '\\t'\n'(?P...)' 分组匹配 re.search(\"(?P<name>[0-9]{4}) (?P<name>[0-9]{2}) (?P<name>[0-9]{4})\" , str)  a.groups()  -->返回元组,     a.groupdict() -->返回字典，key是name\n```\n\n#### re.compile(pattern, flags=0)\n\n把这个规则先编译，这样就不用每次调用都重新编译\n\n```python\nprog = re.compile(pattern)\nresult = prog.match(string)\n```\n\n#### Flags标志符\n\n- re.I (re.IGNORECASE): 忽略大小写（括号内是完整写法，下同）\n- re.M (MULTILINE): 多行模式，不会忽略 \\n，改变’^’和’$’的行为\n- re.S (DOTALL): 改变 ’ . ’ 的行为，能匹配特殊符号\n- re.X (re.VERBOSE) 可以给你的表达式写注释，使其更可读，下面这2个意思一样\n\n```\na = re.compile ( r\"\"\"\\d + # the integral part                \n\t\t\t\t\\. # the decimal point                \n\t\t\t\t\\d * # some fractional digits\"\"\",                 \n\t\t\t\tre.X)\nb = re.compile(r\"\\d+\\.\\d*\")\n```\n\n","source":"_posts/lang-py02PythonAlexNotes.md","raw":"---\ntitle: Python学习日记(Alex老师)\ndate: 2020-01-01 23:11:00\nid: py2\ncategories:\n- lang\ntags:\n- py\n---\n\n\n\n\n\n跟着Alex老师学的Python，视频链接：[96天从小白炼成PYTHON开发](https://www.bilibili.com/video/BV1j7411e7MD)\n\n\n\n<!-- more -->\n\n\n\n# Python学习日记\n\n## 第一天\n\n### 字符串\n\n拼接：a+b\n\n次数：a*3\n\n赋值：单引号、双引号、多引号（多行）\n\n### 列表（数组）\n\n添加：插入name.insert(3,'alex')、追加name.append（“tony”）\n\n修改：name[2]=\" \"\n\n删除：del name[2],name.remove(\"   \")\n\n查找：in     \n\n查找下标：name.index()返回坐标\n\n### 字符串格式化输出\n\n占位符：%s，%d，%f\n\n![image-20200315220331079](C:\\Users\\10956\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200315220331079.png)\n\n### 深圳小事\n\n不要烂在泥土里\n\n贪欲吞噬人性\n\n### 运算符\n\n算数运算：幂**   取整除//\n\n比较运算：\n\n赋值运算：**=、//=\n\n逻辑运算：and、or、not\n\n### while..else循环\n\n如果while没有给break终止的话，执行else后的语句\n\n\n\n## 第二天\n\n### 课前鸡汤\n\n复合型人才\n\n### 变量的创建过程\n\n​\ta=“alex”\n\n​\tb=a\n\na、b都指向alex而不是b指向a\n\n​\ta='alex'\n\n​\ta='boy'\n\n此时上下a指向的地址不一样\n\n### 身份运算\n\nis /is not\n\n​\ta=‘alex'\n\n​\ttype(a)   is   string     (true)\n\nNone 空值\n\n​\ta = None \n\n​\tif a is None :\n\n### 三元运算\n\n变量  =  值A   if   条件A   else   条件B\n\n### 寻找帮助\n\nhelp()\n\n​\thelp(names.remove)\n\n获取能进行的操作\n\n​\tnames.\n\n### 数据类型\n\n列表\n\nhttps://book.apeland.cn/details/30/\n\n元组：只读列表\n\n​\t长度：len()\t\n\n字符串：\n\n​\t不转义r(原生字符raw)\t\ta = r ' alex\\n '     print(a)   得到alex\\n\n\n字典：\n\n## 第三天\n\n### bytes类型\n\n​\t\tf = open ( \" python learning . txt \" , \"w\" , encoding = \"utf - 8\" )     用utff-8的格式编码\n\n​\t\tf = open (\"    \"   ,    \"wb\"     )      不要加encoding   因为是用二进制的格式打开        \t\n\npython 和 pycharm 加载和编码都是默认utf8 \n\n​\t\tstr.encode()        ---->得到的是对应的bytes类型， 以   b ’ ‘ 标识\n\n要转成二进制的情况 : 网络传输、写入硬盘\n\n### copy\n\n在字符串、列表和集合中，修改一个字符串会创建一个新的地址，然后把原来的那个删除。\n\n但是在字典中，s = s1   ，s和s1都指向同样的地址（容器）。\n\n​\t\t字典中每一个数据都有一个地址（容器里的物体）。\n\n\n\ncopy   \n\n​\t\t浅copy     \t\ts1 = s.copy()   只复制第一层，  \t\t当字典里面还有字典的话，改小字典的数据之后，两份都会影响。\n\n​\t\t深copy \t\t\timport  copy             s1 = s.deepcopy()    完全复制一份新的\n\n### 编码和解码\n\n编码 ：str , encode(\"utf-8\")   用utf-8编码\n\n解码： str. decode(\"utf-8\")\t之前是用utf-8编码的，现在要把utf-8解码出来，解码后是unicode的格式\n\n### 编码转换\n\n在windows系统上，是gbk的方式编码\n\n在mac/linux上，是以utf-8的方式编码\n\n所以传输文件之后，要改变编码格式，不然会出现乱码。\n\ngbk\t--->\tunicode\t--->\tutf-8\n\n​\t\t代码实现 utf-8\t--->\tgbk\n\n```python\n#用utf-8格式 写入文件\nf = open ( \"data.txt\" , \"w\" )\ns_uft8 = \"你好未来\"\nf.write ( s_utf8 . encode (\"utf-8\") )\nf.close\n\n#转换\ns_unicode = s_utf8 .decode (\"utf-8\")\ns_gbk = s_unicode .encode (\"gbk\")\n\n#写入文件\nf = open (\"data.txt\" , \"wb\" )\nf.write(s_gbk)\nf.close\n```\n\n### 函数的定义\n\n默认返回值是None\n\n返回多个，则会返回元组\t\treturn 1,2,3,4,5    --->   \t (1,2,3,4,5)\n\n### 函数的参数\n\n参数的定义从右到左，参数的赋值从左到右\n\n形参：相当于临时变量\n\n实参\n\n默认参数：靠右定义\n\n\n\n位置参数\t\n\n关键参数\n\n​\t\tdef  func( age , name , school )\n\n​\t\tfunc( 22  ,   name=\"alex\" ,  school = \"scnu\" )   前一个是位置参数，后两个是关键参数\n\n​\t优先级：位置参数 > 默认参数/关键参数\n\n\n\n非固定参数\n\n​\t\tdef  func( name , *args , **kwargs )     args会返回元组，kwargs会返回字典\n\n​\t\tfunc ( \"alex\" , 21 , 22 , age = 33 , sex = \"female\" )     第一个是位置参数，后四个是非固定参数\n\n​\t\t\t\t\t\t\t\t\t\t\t第二三个会存到元组里，最后两个会存到字典里\n\n### 局部变量和全局变量\n\n局部变量和全局变量，即使名字一样，但是地址不一样。\n\n使用时，查找顺序：局部变量>全局变量\n\n​\tlocals()\t\t返回全部局部变量，以字典的形式。\n\n​\tglobals()\t\t返会全部变量\n\n在局部引用一个全局变量    声明（如果没有则创建）：global  name  然后再使用    //不建议这么使用\n\n### 局部引用字典、列表\n\n局部的函数里可以修改字典、列表里的数据，但是字典和列表本身时不可以修改的。\n\n### 嵌套函数\n\n函数里面再定义一个函数，这个小函数的作用域只在这个函数里面。临时函数。\n\n### 匿名函数(lambda)\n\n```python\ndef func(x):\n\treturn x**2\n\n#lambda表达式\nex = lambda x : x**2\n```\n\n最复杂是一个三元表达式    \n\n```python\nex = lambda x : x**2 if x>10 else x**3\n```\n\nmap( func , [   ] )\t\t把列表里的数据依次作为第一个函数的参数执行\n\n```python\nput = map ( lambda x:x**2 , [1,2,3,4,5] )\nfor i in map :\n\tprint(i)\n    \n输出的是: 1\n\t     4\n    \t 9.....\n```\n\n### 高阶函数\n\n满足其一则为高阶函数：接受一个函数输入、返回一个函数\n\n​\t\tdef  func1 ( .... ) : .....\n\n​\t\tdef  func2 ( x , y , f ) :   f (x)+ f(y) .....\n\n​\t\tfunc2 ( x , y , func2 )\n\n### 函数递归\n\n效率不高，会导致栈溢出\n\n栈类似于队列\n\n### 内置函数\n\nabs\t求绝对值\n\nall \t判断列表、字典、集合里面是否有 None 或者 0 。即如果每一个元素都   在 bool() 返回true，则为True。\n\nany \t判断是否有一个满足  bool(x) = True。\n\nascii \t如果是在ascii表里的，返回原来的字符。如果不在，则返回unicode编码。\" \\ \\ u \"开头\n\nbin \t\t返回这个十进制数字的二进制形式\n\nbool \t\t判断是否为0和None，如果是，则返回False\n\nbytearray\t将bytes类型变成一个可以修改的bytes数组。例如 b [1] = ...是不可以的，转成数组之后可以。\n\nbytes\t\t转化成bytes类型，以b 开头 。  a = bytes ( \"中国 \" , \"utf-8\" )   --->a为    b'\\xd6\\xd0\\xb9\\xfa'\n\nchr \t返回数字对应的字符\t\n\ncomplex \t返回复数    complex ( 1,2 )    --->  1+2 j\n\ndict\t返回一个空字典\n\ndir \t返回能进行的操作（类似帮助）\n\ndivmod\t除然后取模  --->  divmod( 8,3 )    =    ( 2, 2 )\n\nenumerate \t返回列表的索引和元素。  a = [\"alex\",\"kiki\"]    enumerate后得到 (0,\"alex\") (1,\"kiki\")\n\neval \t把字符串变成对应的数据类型\n\nexec\t把字符串变成可以执行的语句   exec(\"print (\"12345) \")  会打印12345\n\nexit \t退出程序\n\nfilter\t过滤不满足条件的数据     。    list(filter ( lambda x: x<10 , [1,2,3,4,5,11,22,33] ))\n   --->   [1, 2, 3, 4, 5]\n\nfloat  \t强制转换浮点数类型\n\nfrozenset\t把集合变成不能改的\n\nglobals\t返回所有变量、函数\n\nhash \t返回一串以hash编码的到的数据\n\nhelp\t帮助。help(hash) 返回关于hash的定义和使用方法。\n\nhex \t16进制\n\nid \t返回数据的地址\n\ninput\t输入\n\nint\t转换整型\n\nisinstance \t判断是否是某个数据类型    isinstance( a , string )\n\nlen \t长度\n\nlist\t返回空列表\n\nlocals\t返回局部变量\n\nmap\tmap(function , list)  把列表中的数据一个一个带入到函数中\n\nmax\t最大值\n\nmin \t最小值\n\noct \t返回10进制数的8进制表示\n\nopen\t打开\n\nord \t返回字符的ASCII码\n\nprint\t输出\n\nquit\t离开程序\n\nrange\t一个列表\n\nround\t四舍五入\n\nset\t返回空集合\n\nsorted\t排序\n\nstr\t转化成字符串\n\nsum \t加法\n\ntuple\t返回空元组\n\ntype\t返回数据类型\n\nzip\t可以合并两个列表  a = [1,2,3]   b = [\"alex\" , \"kiki\" ]  \n\n​\t\t\t\t\t\t\tzip(a,b)   --->   [   (1,\"alex\") ,  ( 2,\"kiki\" )    ]   取小的那个\n\n### 名称空间\n\nLEGB\n\n​\tlocals：局部的，函数内部的\n\n​\tenclosing function：嵌套函数最近的父函数\n\n​\tglobals：全局变量\n\n​\tbuiltins：所有函数，包括内置函数\n\n### 闭包\n\n外层函数返回内层函数\n\n函数运行完，函数的作用域不会消失\n\n调用外层函数的时候，先不执行内部的函数，直接return  内部函数的地址\n\n### 装饰器\n\n问题产生：“开放-封闭”原则\n\n​\t\t封闭：已经实现的函数不能修改\n\n​\t\t开放：对现有函数进行扩展\n\n​\t不能改函数名\n\n​\t不能改调用方式\n\n语法：\n\n```python\ndef func1:.....\ndef func2:.....\n    \nfunc1 = func2(func1)\n#等于\n@func2\ndef func1:...\n```\n\n可以加参数，非固定参数：*args   **kwargs\n\n##### 列表生成式\n\n给一个列表元素都加1的办法\n\n```python\na = [1,3,4,5,6,7]\n\n#for循环\nb = []\nfor i in a:\n    b = append(i+1)\n    \n#第二种循环\nfor index,i in enumerate(a):\n    a[index] = i+1\n    \n#lambda表达式、map函数\na = list(map(lambda x:x+1,a))\n\n#列表生成式\na = [i+1 for i in a]\n```\n\n##### 生成器：惰性算法\n\n用循环，range会首先生成一个列表，占空间\n\n生成器优点：边执行边计算\n\n语法：把列表生成式的[]改成()就好了    p = ( i for i in range(10) )\n\n​\t\t执行：next( p )\n\n循环调用\n\n```\nfor i in p :\n\tprint( i )\n```\n\n##### 函数生成器\n\n把函数里面的return 改成yield\n\nyield  b ： 程序或者循环  暂停，并且返回   b\n\n一个有yield 的函数，可以在中间去执行别的代码，然后再返回来执行\n\n执行方式\n\n```python\nnext (func)\n或者\nfunc. __next__()\n\n可以中途去干别的事情\nnext(func)\n......do something else\nnext(func)\n```\n\n但是此时函数会暂停，并且永不结束。\n\n一般用for来调用，就不会这样了。\n\n\n\n发送值给函数生成器\n\n```python\ndef func(value):\n\tfor i < value:\n        a = yield\n        \nf = func(100)\nf.__next__()   #发送一个None给yield\nf.send( a )    #发送一个值，并且执行\n```\n\n##### 单线程下的多并发\n\n线程：cpu执行任务的单元\n\n多核：多个线程，并行运算\n\n```python\nimport time\n\ndef consumer(name):\n    print(\"%s 准备吃包子啦!\" %name)\n    while True:\n       baozi = yield  # yield可以接收到外部send传过来的数据并赋值给baozi\n       print(\"包子[%s]来了,被[%s]吃了!\" %(baozi,name))\n        \nc = consumer('A')\nc2 = consumer('B')\nc.__next__() # 执行一下next可以使上面的函数走到yield那句。 这样后面的send语法才能生效\nc2.__next__()\n\nprint(\"----老子开始准备做包子啦!----\")\n\nfor i in range(10):\n    time.sleep(1)\n    print(\"做了2个包子!\")\n    c.send(i)  # send的作用=next, 同时还把数据传给了上面函数里的yield\n    c2.send(i)\n```\n\n### 迭代器iterator\n\n迭代对象：\t1.可以用于for循环的数据类型：set、tuple、list、dic、str\n\n​\t\t\t\t\t  2.迭代器和迭代器函数\n\n可迭代：Interable   可遍历、可循环\t\t\t用isinstance()判断是不是可迭代对象\n\n\n\n迭代器：可以用next()执行下一次的    例如generator\n\n可以用iter()强制转换成迭代器\n\n\n\n## 第四天\n\n### OS库：跟系统调用相关\n\nos 模块提供了很多允许你的程序与操作系统直接交互的功能\n\n```c\n得到当前工作目录，即当前Python脚本工作的目录路径: os.getcwd()\n返回指定目录下的所有文件和目录名:os.listdir()\n函数用来删除一个文件:os.remove()\n删除多个目录：os.removedirs（r“c：\\python”）\n检验给出的路径是否是一个文件：os.path.isfile()\n检验给出的路径是否是一个目录：os.path.isdir()\n判断是否是绝对路径：os.path.isabs()\n检验给出的路径是否真地存:os.path.exists()\n返回一个路径的目录名和文件名:os.path.split()     e.g os.path.split('/home/swaroop/byte/code/poem.txt') 结果：('/home/swaroop/byte/code', 'poem.txt') \n分离扩展名：os.path.splitext()       e.g  os.path.splitext('/usr/local/test.py')    结果：('/usr/local/test', '.py')\n获取路径名：os.path.dirname()\n获得绝对路径: os.path.abspath()  \n获取文件名：os.path.basename()\n运行shell命令: os.system()\n读取操作系统环境变量HOME的值:os.getenv(\"HOME\") \n返回操作系统所有的环境变量： os.environ \n设置系统环境变量，仅程序运行时有效：os.environ.setdefault('HOME','/home/alex')\n给出当前平台使用的行终止符:os.linesep    Windows使用'\\r\\n'，Linux and MAC使用'\\n'\n指示你正在使用的平台：os.name       对于Windows，它是'nt'，而对于Linux/Unix用户，它是'posix'\n重命名：os.rename（old， new）\n创建多级目录：os.makedirs（r“c：\\python\\test”）\n创建单个目录：os.mkdir（“test”）\n获取文件属性：os.stat（file）\n修改文件权限与时间戳：os.chmod（file）\n获取文件大小：os.path.getsize（filename）\n结合目录名与文件名：os.path.join(dir,filename)\n改变工作目录到dirname: os.chdir(dirname)\n获取当前终端的大小: os.get_terminal_size()\n杀死进程: os.kill(10884,signal.SIGKILL)\n```\n\n### sys库\n\n```python\nsys.argv           命令行参数List，第一个元素是程序本身路径\nsys.exit(n)        退出程序，正常退出时exit(0)\nsys.version        获取Python解释程序的版本信息\nsys.maxint         最大的Int值\nsys.path           返回模块的搜索路径，初始化时使用PYTHONPATH环境变量的值\nsys.platform       返回操作系统平台名称\nsys.stdout.write('please:')  #标准输出 , 引出进度条的例子， 注，在py3上不行，可以用print代替\nval = sys.stdin.readline()[:-1] #标准输入\nsys.getrecursionlimit() #获取最大递归层数\nsys.setrecursionlimit(1200) #设置最大递归层数\nsys.getdefaultencoding()  #获取解释器默认编码\nsys.getfilesystemencoding  #获取内存数据存到文件里的默认编码\n```\n\n### time模块\n\n时间戳timestamp：从1970年1月1日到现在过去了多少秒\n\n元组struct_time：年月日时分秒周  一年中第几天  是否是夏令时\n\nUTC (Coordinated Universal Time ,世界协调时)：中国时UTC+8\n\nDST (Daylight Saving Time)：夏令时\n\n```python\ntime.localtime( [ timestamp ] )：将一个时间戳转换为当前时区的struct_time。若secs参数未提供，则以当前时间为准。\ntime.gmtime( [ secs ] )：和localtime()方法类似，gmtime()方法是将一个时间戳转换为UTC时区（0时区）的struct_time。\ntime.time()：返回当前时间的时间戳。\ntime.asctime([t])：把一个表示时间的元组或者struct_time表示为这种形式：’Sun Oct 1 12:04:38 2019’。如果没有参数，将会将time.localtime()作为参数传入。\ntime.ctime([secs])：把一个时间戳转化为time.asctime()的形式。如果参数未给或者为None的时候，将会默认time.time()为参数。它的作用相当于time.asctime(time.localtime(secs))。\n\ntime.mktime(t)：将一个struct_time转化为时间戳。\ntime.strftime(format[, t])：把一个代表时间的元组或者struct_time（如由time.localtime()和time.gmtime()返回）转化为格式化的时间字符串。如果t未指定，将传入time.localtime()。举例：time.strftime(“%Y-%m-%d %X”, time.localtime()) #输出’2017-10-01 12:14:23’\ntime.strptime(string[, format])：把一个格式化时间字符串转化为struct_time。实际上它和strftime()是逆操作。\n举例：time.strptime(‘2017-10-3 17:54’,”%Y-%m-%d %H:%M”) #输出 time.struct_time(tm_year=2017, tm_mon=10, tm_mday=3, tm_hour=17, tm_min=54, tm_sec=0, tm_wday=1, tm_yday=276, tm_isdst=-1)\n\ntime.sleep(secs)：线程推迟指定的时间运行,单位为秒。\n```\n\n### datatime模块\n\n相比于time模块，datetime模块的接口则更直观、更容易调用\n\n```\ndatetime.date：表示日期的类。常用的属性有year, month, day；\n\ndatetime.time：表示时间的类。常用的属性有hour, minute, second, microsecond；\n\ndatetime.datetime：表示日期时间。\n\ndatetime.timedelta：表示时间间隔，即两个时间点之间的长度。\n\ndatetime.tzinfo：与时区有关的相关信息。（这里不详细充分讨论该类，感兴趣的童鞋可以参考python手册）\n```\n\n```python\n1. d=datetime.datetime.now() 返回当前的datetime日期类型\nd.timestamp(),d.today(), d.year,d.timetuple()等方法可以调用\n\n2. datetime.date.fromtimestamp(322222) 把一个时间戳转为datetime日期类型\n\n3. 时间运算\n>>> datetime.datetime.now()\ndatetime.datetime(2017, 10, 1, 12, 53, 11, 821218)\n>>> datetime.datetime.now() + datetime.timedelta(4) #当前时间 +4天\ndatetime.datetime(2017, 10, 5, 12, 53, 35, 276589)\n>>> datetime.datetime.now() + datetime.timedelta(hours=4) #当前时间+4小时\ndatetime.datetime(2017, 10, 1, 16, 53, 42, 876275)\n\n4.时间替换\n>>> d.replace(year=2999,month=11,day=30)\ndatetime.date(2999, 11, 30)\n```\n\n### pickle  &&  json\n\n序列化：数据的 网络传输和储存在硬盘 的形式是 bytes类型。把各种数据类型转化成可以网络传输和储存的类型称为序列化。\n\n反向过程叫做 反序列化\n\n```python\n#pickle\n\nstr = pickle.dumps( data )   #把data转化成python可识别的字符串\n\npickle.dump(data,file)\t\t#把data以字符串写入file种\n\n#file = open(\"  \" , rb)\n#json时，open(\" \" , r )     \t\t\npickle.loads( str )\t\t\t#把str反序列化\n\npickle.load( file )\t\t\t#从文件加载\n\n#遵循先进先出的原则\n```\n\n```\nJson模块也提供了四个功能：dumps、dump、loads、load，用法跟pickle一致\n```\n\npickle 和 json的区别\n\n- JSON:\n\n  优点：跨语言(不同语言间的数据传递可用json交接)、体积小\n\n  缺点：只能支持int\\str\\list\\tuple\\dict\n\n  \n\n  Pickle:\n\n  优点：专为python设计，支持python所有的数据类型\n\n  缺点：只能在python中使用，存储数据占空间大\n\n### hashlib\n\n#### HASH加密\n\n一般译作散列或者哈希。是把任意输入（预映射）转化成固定长度（128位）的输出，这个输出称之为散列值。这是一种压缩算法。\n\n#### 密码学相关\n\n碰撞：不同字符串通过hash算法得到相同的散列。\n\n撞库：用穷举法反解散列值，以获得原来的明文密码。\n\n加盐：通过给hash得到的散列通过加盐算法增加字符然后再次hash。\n\n拖库：黑客获取了密码库。\n\n#### MD5(Message-Digest Algorithm)\n\n讯息摘要演算法。一种加密算法。\n\n##### MD5的特点\n\n- 压缩性：得到的散列一般比原数据 占内存小\n- 易计算：通过MD5的算法，计算时间短\n- 抗修改：修改原数据，将得到不同的HASH值\n- 抗碰撞：一般不会有相同的HASH值\n- 不可逆\n\n##### MD5的效果\n\n1. 防篡改：发送和接受时的HASH值一样，则没有被篡改\n2. 防抵赖：申请数字签名\n3. 防看到明文：看不到密码\n\n##### MD5的操作\n\n```python\nimport hashlib\n#获取一个md5对象\nm = hashlib.md5()\n#给md5对象一个值，要bytes类型。多次update是将字符串拼接\nm .update(\"str\".encode(\"type\"))\n#默认得到是二进制，也可以转化成十六进制\nm .hexdigest()\n```\n\n#### SHA(Secure hash Algorithnm)\n\nsha - 1 :得到160位的散列值。\n\nsha - 256：得到256位。\n\n一般用在密码学上，操作和MD5一样。\n\n### shutil模块\n\n```python\n#shutil.copyfileobj ( open(fsrc, \"rb\"), open(fdes, \"wb\") )\nshutil.copyfileobj(open(\"d:\\\\my1.txt\", \"rb\"), open(\"d:\\\\my2.txt\", \"wb\"))\n\n#shutil.copyfile(\"file1\" , \"file2\") ，f2非必须存在\n\n#copy权限\nshutil.copymode( fsrc , fdes )\n\n#拷贝状态信息，time、bits...\nshutil.copystat( fsrc , fdes )\n\n#拷贝文件和权限\nshutil.copy( fsrc , fdes )\n\n#拷贝文件和状态\nshutil.copy2(  ,  )\n\n#忽略某种格式\nshutil.ignore_patterns(*patterns)\n#example: *.txt、filename* ....\n\n#拷贝文件夹\nshutil.copytree(src,des,symlinks=\"False\",ignore=\"False\")\n\n#创建压缩包并返回路径\nshuil.makearchive( base_name , format , root , )\n#base_name：压缩包的路径和名字，若只有名字，则保存到当前目录\n#format：压缩包的格式'zip''rar''tar'\n#root：要压缩的文件夹的路径\n\n#删除文件夹\nshutil.rmtree(  )\n\n#重命名\nshutil.move(\"f1\",\"f2\")\n\n```\n\n#### zipfile压缩&解压缩\n\n```python\nimport zipfile\n# 压缩\nz = zipfile.ZipFile('laxi.zip', 'w')\nz.write('a.log')\nz.write('data.data')\nz.close()\n\n# 解压\nz = zipfile.ZipFile('laxi.zip', 'r')\nz.extractall(path='.')\nz.close()\n```\n\n#### tarfile压缩&解压缩\n\n```python\nimport tarfile\n# 压缩\n>>> t=tarfile.open('/tmp/egon.tar','w')\n>>> t.add('/test1/a.py',arcname='a.bak')\n>>> t.add('/test1/b.py',arcname='b.bak')\n>>> t.close()\n\n# 解压\n>>> t=tarfile.open('/tmp/egon.tar','r')\n>>> t.extractall('/egon')\n>>> t.close()\n```\n\n### re正则匹配\n\n#### 匹配规则\n\n- re.match()\t从第一个字符开始匹配，如果不符合则返回None\n- re.search()    匹配全局，返回第一个\n- re.findall()      把所有匹配到的字符，放到一个列表返回\n- re.split()      以匹配到的字符当做列表分隔符，与findall相反\n- re.sub 匹配字符并替换    re.sub( 要替换，替换成，字符串，count=替换次数)\n- re.fullmatch    精确匹配，这个字符串必须完全符合规则\n\n#### 表达式规则\n\n```python\n'.'     默认匹配除\\n之外的任意一个字符，若指定flag DOTALL,则匹配任意字符，包括换行\n'^'     匹配字符开头，若指定flags MULTILINE,这种也可以匹配上(r\"^a\",\"\\nabc\\neee\",flags=re.MULTILINE)\n'$'     匹配字符结尾， 若指定flags MULTILINE ,re.search('foo.$','foo1\\nfoo2\\n',re.MULTILINE).group() 会匹配到foo1\n'*'     匹配*号前的字符0次或多次， re.search('a*','aaaabac')  结果'aaaa'\n'+'     匹配前一个字符1次或多次，re.findall(\"ab+\",\"ab+cd+abb+bba\") 结果['ab', 'abb']\n'?'     匹配前一个字符1次或0次 ,re.search('b?','alex').group() 匹配b 0次\n'{m}'   匹配前一个字符m次 ,re.search('b{3}','alexbbbs').group()  匹配到'bbb'\n'{n,m}' 匹配前一个字符n到m次，re.findall(\"ab{1,3}\",\"abb abc abbcbbb\") 结果'abb', 'ab', 'abb']\n'|'     匹配|左或|右的字符，re.search(\"abc|ABC\",\"ABCBabcCD\").group() 结果'ABC'\n'(...)' 分组匹配， re.search(\"(abc){2}a(123|45)\", \"abcabca456c\").group() 结果为'abcabca45'\n'[...]' 匹配[]范围里面的字符。[0-9]、[a-z]、[0-9a-zA-Z]\n\n'\\A'    只从字符开头匹配，re.search(\"\\Aabc\",\"alexabc\") 是匹配不到的，相当于re.match('abc',\"alexabc\") 或^\n'\\Z'    匹配字符结尾，同$ \n'\\d'    匹配数字0-9\n'\\D'    匹配非数字\n'\\w'    匹配[A-Za-z0-9]\n'\\W'    匹配非[A-Za-z0-9]\n's'     匹配空白字符、\\t、\\n、\\r , re.search(\"\\s+\",\"ab\\tc1\\n3\").group() 结果 '\\t'\n'(?P...)' 分组匹配 re.search(\"(?P<name>[0-9]{4}) (?P<name>[0-9]{2}) (?P<name>[0-9]{4})\" , str)  a.groups()  -->返回元组,     a.groupdict() -->返回字典，key是name\n```\n\n#### re.compile(pattern, flags=0)\n\n把这个规则先编译，这样就不用每次调用都重新编译\n\n```python\nprog = re.compile(pattern)\nresult = prog.match(string)\n```\n\n#### Flags标志符\n\n- re.I (re.IGNORECASE): 忽略大小写（括号内是完整写法，下同）\n- re.M (MULTILINE): 多行模式，不会忽略 \\n，改变’^’和’$’的行为\n- re.S (DOTALL): 改变 ’ . ’ 的行为，能匹配特殊符号\n- re.X (re.VERBOSE) 可以给你的表达式写注释，使其更可读，下面这2个意思一样\n\n```\na = re.compile ( r\"\"\"\\d + # the integral part                \n\t\t\t\t\\. # the decimal point                \n\t\t\t\t\\d * # some fractional digits\"\"\",                 \n\t\t\t\tre.X)\nb = re.compile(r\"\\d+\\.\\d*\")\n```\n\n","slug":"lang-py02PythonAlexNotes","published":1,"updated":"2022-04-16T23:07:38.315Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70tu00205oss2zbe2mjq","content":"<p>跟着Alex老师学的Python，视频链接：<a href=\"https://www.bilibili.com/video/BV1j7411e7MD\">96天从小白炼成PYTHON开发</a></p>\n<span id=\"more\"></span>\n\n\n\n<h1 id=\"Python学习日记\"><a href=\"#Python学习日记\" class=\"headerlink\" title=\"Python学习日记\"></a>Python学习日记</h1><h2 id=\"第一天\"><a href=\"#第一天\" class=\"headerlink\" title=\"第一天\"></a>第一天</h2><h3 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h3><p>拼接：a+b</p>\n<p>次数：a*3</p>\n<p>赋值：单引号、双引号、多引号（多行）</p>\n<h3 id=\"列表（数组）\"><a href=\"#列表（数组）\" class=\"headerlink\" title=\"列表（数组）\"></a>列表（数组）</h3><p>添加：插入name.insert(3,’alex’)、追加name.append（“tony”）</p>\n<p>修改：name[2]=” “</p>\n<p>删除：del name[2],name.remove(“   “)</p>\n<p>查找：in     </p>\n<p>查找下标：name.index()返回坐标</p>\n<h3 id=\"字符串格式化输出\"><a href=\"#字符串格式化输出\" class=\"headerlink\" title=\"字符串格式化输出\"></a>字符串格式化输出</h3><p>占位符：%s，%d，%f</p>\n<p><img src=\"C:\\Users\\10956\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200315220331079.png\" alt=\"image-20200315220331079\"></p>\n<h3 id=\"深圳小事\"><a href=\"#深圳小事\" class=\"headerlink\" title=\"深圳小事\"></a>深圳小事</h3><p>不要烂在泥土里</p>\n<p>贪欲吞噬人性</p>\n<h3 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h3><p>算数运算：幂**   取整除//</p>\n<p>比较运算：</p>\n<p>赋值运算：**=、//=</p>\n<p>逻辑运算：and、or、not</p>\n<h3 id=\"while-else循环\"><a href=\"#while-else循环\" class=\"headerlink\" title=\"while..else循环\"></a>while..else循环</h3><p>如果while没有给break终止的话，执行else后的语句</p>\n<h2 id=\"第二天\"><a href=\"#第二天\" class=\"headerlink\" title=\"第二天\"></a>第二天</h2><h3 id=\"课前鸡汤\"><a href=\"#课前鸡汤\" class=\"headerlink\" title=\"课前鸡汤\"></a>课前鸡汤</h3><p>复合型人才</p>\n<h3 id=\"变量的创建过程\"><a href=\"#变量的创建过程\" class=\"headerlink\" title=\"变量的创建过程\"></a>变量的创建过程</h3><p>​    a=“alex”</p>\n<p>​    b=a</p>\n<p>a、b都指向alex而不是b指向a</p>\n<p>​    a=’alex’</p>\n<p>​    a=’boy’</p>\n<p>此时上下a指向的地址不一样</p>\n<h3 id=\"身份运算\"><a href=\"#身份运算\" class=\"headerlink\" title=\"身份运算\"></a>身份运算</h3><p>is /is not</p>\n<p>​    a=‘alex’</p>\n<p>​    type(a)   is   string     (true)</p>\n<p>None 空值</p>\n<p>​    a = None </p>\n<p>​    if a is None :</p>\n<h3 id=\"三元运算\"><a href=\"#三元运算\" class=\"headerlink\" title=\"三元运算\"></a>三元运算</h3><p>变量  =  值A   if   条件A   else   条件B</p>\n<h3 id=\"寻找帮助\"><a href=\"#寻找帮助\" class=\"headerlink\" title=\"寻找帮助\"></a>寻找帮助</h3><p>help()</p>\n<p>​    help(names.remove)</p>\n<p>获取能进行的操作</p>\n<p>​    names.</p>\n<h3 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3><p>列表</p>\n<p><a href=\"https://book.apeland.cn/details/30/\">https://book.apeland.cn/details/30/</a></p>\n<p>元组：只读列表</p>\n<p>​    长度：len()    </p>\n<p>字符串：</p>\n<p>​    不转义r(原生字符raw)        a = r ‘ alex\\n ‘     print(a)   得到alex\\n</p>\n<p>字典：</p>\n<h2 id=\"第三天\"><a href=\"#第三天\" class=\"headerlink\" title=\"第三天\"></a>第三天</h2><h3 id=\"bytes类型\"><a href=\"#bytes类型\" class=\"headerlink\" title=\"bytes类型\"></a>bytes类型</h3><p>​        f = open ( “ python learning . txt “ , “w” , encoding = “utf - 8” )     用utff-8的格式编码</p>\n<p>​        f = open (“    “   ,    “wb”     )      不要加encoding   因为是用二进制的格式打开            </p>\n<p>python 和 pycharm 加载和编码都是默认utf8 </p>\n<p>​        str.encode()        —-&gt;得到的是对应的bytes类型， 以   b ’ ‘ 标识</p>\n<p>要转成二进制的情况 : 网络传输、写入硬盘</p>\n<h3 id=\"copy\"><a href=\"#copy\" class=\"headerlink\" title=\"copy\"></a>copy</h3><p>在字符串、列表和集合中，修改一个字符串会创建一个新的地址，然后把原来的那个删除。</p>\n<p>但是在字典中，s = s1   ，s和s1都指向同样的地址（容器）。</p>\n<p>​        字典中每一个数据都有一个地址（容器里的物体）。</p>\n<p>copy   </p>\n<p>​        浅copy             s1 = s.copy()   只复制第一层，          当字典里面还有字典的话，改小字典的数据之后，两份都会影响。</p>\n<p>​        深copy             import  copy             s1 = s.deepcopy()    完全复制一份新的</p>\n<h3 id=\"编码和解码\"><a href=\"#编码和解码\" class=\"headerlink\" title=\"编码和解码\"></a>编码和解码</h3><p>编码 ：str , encode(“utf-8”)   用utf-8编码</p>\n<p>解码： str. decode(“utf-8”)    之前是用utf-8编码的，现在要把utf-8解码出来，解码后是unicode的格式</p>\n<h3 id=\"编码转换\"><a href=\"#编码转换\" class=\"headerlink\" title=\"编码转换\"></a>编码转换</h3><p>在windows系统上，是gbk的方式编码</p>\n<p>在mac/linux上，是以utf-8的方式编码</p>\n<p>所以传输文件之后，要改变编码格式，不然会出现乱码。</p>\n<p>gbk    —&gt;    unicode    —&gt;    utf-8</p>\n<p>​        代码实现 utf-8    —&gt;    gbk</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#用utf-8格式 写入文件</span></span><br><span class=\"line\">f = <span class=\"built_in\">open</span> ( <span class=\"string\">&quot;data.txt&quot;</span> , <span class=\"string\">&quot;w&quot;</span> )</span><br><span class=\"line\">s_uft8 = <span class=\"string\">&quot;你好未来&quot;</span></span><br><span class=\"line\">f.write ( s_utf8 . encode (<span class=\"string\">&quot;utf-8&quot;</span>) )</span><br><span class=\"line\">f.close</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#转换</span></span><br><span class=\"line\">s_unicode = s_utf8 .decode (<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">s_gbk = s_unicode .encode (<span class=\"string\">&quot;gbk&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#写入文件</span></span><br><span class=\"line\">f = <span class=\"built_in\">open</span> (<span class=\"string\">&quot;data.txt&quot;</span> , <span class=\"string\">&quot;wb&quot;</span> )</span><br><span class=\"line\">f.write(s_gbk)</span><br><span class=\"line\">f.close</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数的定义\"><a href=\"#函数的定义\" class=\"headerlink\" title=\"函数的定义\"></a>函数的定义</h3><p>默认返回值是None</p>\n<p>返回多个，则会返回元组        return 1,2,3,4,5    —&gt;        (1,2,3,4,5)</p>\n<h3 id=\"函数的参数\"><a href=\"#函数的参数\" class=\"headerlink\" title=\"函数的参数\"></a>函数的参数</h3><p>参数的定义从右到左，参数的赋值从左到右</p>\n<p>形参：相当于临时变量</p>\n<p>实参</p>\n<p>默认参数：靠右定义</p>\n<p>位置参数    </p>\n<p>关键参数</p>\n<p>​        def  func( age , name , school )</p>\n<p>​        func( 22  ,   name=”alex” ,  school = “scnu” )   前一个是位置参数，后两个是关键参数</p>\n<p>​    优先级：位置参数 &gt; 默认参数/关键参数</p>\n<p>非固定参数</p>\n<p>​        def  func( name , *args , **kwargs )     args会返回元组，kwargs会返回字典</p>\n<p>​        func ( “alex” , 21 , 22 , age = 33 , sex = “female” )     第一个是位置参数，后四个是非固定参数</p>\n<p>​                                            第二三个会存到元组里，最后两个会存到字典里</p>\n<h3 id=\"局部变量和全局变量\"><a href=\"#局部变量和全局变量\" class=\"headerlink\" title=\"局部变量和全局变量\"></a>局部变量和全局变量</h3><p>局部变量和全局变量，即使名字一样，但是地址不一样。</p>\n<p>使用时，查找顺序：局部变量&gt;全局变量</p>\n<p>​    locals()        返回全部局部变量，以字典的形式。</p>\n<p>​    globals()        返会全部变量</p>\n<p>在局部引用一个全局变量    声明（如果没有则创建）：global  name  然后再使用    //不建议这么使用</p>\n<h3 id=\"局部引用字典、列表\"><a href=\"#局部引用字典、列表\" class=\"headerlink\" title=\"局部引用字典、列表\"></a>局部引用字典、列表</h3><p>局部的函数里可以修改字典、列表里的数据，但是字典和列表本身时不可以修改的。</p>\n<h3 id=\"嵌套函数\"><a href=\"#嵌套函数\" class=\"headerlink\" title=\"嵌套函数\"></a>嵌套函数</h3><p>函数里面再定义一个函数，这个小函数的作用域只在这个函数里面。临时函数。</p>\n<h3 id=\"匿名函数-lambda\"><a href=\"#匿名函数-lambda\" class=\"headerlink\" title=\"匿名函数(lambda)\"></a>匿名函数(lambda)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>(<span class=\"params\">x</span>):</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x**<span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#lambda表达式</span></span><br><span class=\"line\">ex = <span class=\"keyword\">lambda</span> x : x**<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<p>最复杂是一个三元表达式    </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ex = <span class=\"keyword\">lambda</span> x : x**<span class=\"number\">2</span> <span class=\"keyword\">if</span> x&gt;<span class=\"number\">10</span> <span class=\"keyword\">else</span> x**<span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n\n<p>map( func , [   ] )        把列表里的数据依次作为第一个函数的参数执行</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">put = <span class=\"built_in\">map</span> ( <span class=\"keyword\">lambda</span> x:x**<span class=\"number\">2</span> , [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>] )</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">map</span> :</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">    </span><br><span class=\"line\">输出的是: <span class=\"number\">1</span></span><br><span class=\"line\">\t     <span class=\"number\">4</span></span><br><span class=\"line\">    \t <span class=\"number\">9.</span>....</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"高阶函数\"><a href=\"#高阶函数\" class=\"headerlink\" title=\"高阶函数\"></a>高阶函数</h3><p>满足其一则为高阶函数：接受一个函数输入、返回一个函数</p>\n<p>​        def  func1 ( …. ) : …..</p>\n<p>​        def  func2 ( x , y , f ) :   f (x)+ f(y) …..</p>\n<p>​        func2 ( x , y , func2 )</p>\n<h3 id=\"函数递归\"><a href=\"#函数递归\" class=\"headerlink\" title=\"函数递归\"></a>函数递归</h3><p>效率不高，会导致栈溢出</p>\n<p>栈类似于队列</p>\n<h3 id=\"内置函数\"><a href=\"#内置函数\" class=\"headerlink\" title=\"内置函数\"></a>内置函数</h3><p>abs    求绝对值</p>\n<p>all     判断列表、字典、集合里面是否有 None 或者 0 。即如果每一个元素都   在 bool() 返回true，则为True。</p>\n<p>any     判断是否有一个满足  bool(x) = True。</p>\n<p>ascii     如果是在ascii表里的，返回原来的字符。如果不在，则返回unicode编码。” \\ \\ u “开头</p>\n<p>bin         返回这个十进制数字的二进制形式</p>\n<p>bool         判断是否为0和None，如果是，则返回False</p>\n<p>bytearray    将bytes类型变成一个可以修改的bytes数组。例如 b [1] = …是不可以的，转成数组之后可以。</p>\n<p>bytes        转化成bytes类型，以b 开头 。  a = bytes ( “中国 “ , “utf-8” )   —&gt;a为    b’\\xd6\\xd0\\xb9\\xfa’</p>\n<p>chr     返回数字对应的字符    </p>\n<p>complex     返回复数    complex ( 1,2 )    —&gt;  1+2 j</p>\n<p>dict    返回一个空字典</p>\n<p>dir     返回能进行的操作（类似帮助）</p>\n<p>divmod    除然后取模  —&gt;  divmod( 8,3 )    =    ( 2, 2 )</p>\n<p>enumerate     返回列表的索引和元素。  a = [“alex”,”kiki”]    enumerate后得到 (0,”alex”) (1,”kiki”)</p>\n<p>eval     把字符串变成对应的数据类型</p>\n<p>exec    把字符串变成可以执行的语句   exec(“print (“12345) “)  会打印12345</p>\n<p>exit     退出程序</p>\n<p>filter    过滤不满足条件的数据     。    list(filter ( lambda x: x&lt;10 , [1,2,3,4,5,11,22,33] ))<br>   —&gt;   [1, 2, 3, 4, 5]</p>\n<p>float      强制转换浮点数类型</p>\n<p>frozenset    把集合变成不能改的</p>\n<p>globals    返回所有变量、函数</p>\n<p>hash     返回一串以hash编码的到的数据</p>\n<p>help    帮助。help(hash) 返回关于hash的定义和使用方法。</p>\n<p>hex     16进制</p>\n<p>id     返回数据的地址</p>\n<p>input    输入</p>\n<p>int    转换整型</p>\n<p>isinstance     判断是否是某个数据类型    isinstance( a , string )</p>\n<p>len     长度</p>\n<p>list    返回空列表</p>\n<p>locals    返回局部变量</p>\n<p>map    map(function , list)  把列表中的数据一个一个带入到函数中</p>\n<p>max    最大值</p>\n<p>min     最小值</p>\n<p>oct     返回10进制数的8进制表示</p>\n<p>open    打开</p>\n<p>ord     返回字符的ASCII码</p>\n<p>print    输出</p>\n<p>quit    离开程序</p>\n<p>range    一个列表</p>\n<p>round    四舍五入</p>\n<p>set    返回空集合</p>\n<p>sorted    排序</p>\n<p>str    转化成字符串</p>\n<p>sum     加法</p>\n<p>tuple    返回空元组</p>\n<p>type    返回数据类型</p>\n<p>zip    可以合并两个列表  a = [1,2,3]   b = [“alex” , “kiki” ]  </p>\n<p>​                            zip(a,b)   —&gt;   [   (1,”alex”) ,  ( 2,”kiki” )    ]   取小的那个</p>\n<h3 id=\"名称空间\"><a href=\"#名称空间\" class=\"headerlink\" title=\"名称空间\"></a>名称空间</h3><p>LEGB</p>\n<p>​    locals：局部的，函数内部的</p>\n<p>​    enclosing function：嵌套函数最近的父函数</p>\n<p>​    globals：全局变量</p>\n<p>​    builtins：所有函数，包括内置函数</p>\n<h3 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h3><p>外层函数返回内层函数</p>\n<p>函数运行完，函数的作用域不会消失</p>\n<p>调用外层函数的时候，先不执行内部的函数，直接return  内部函数的地址</p>\n<h3 id=\"装饰器\"><a href=\"#装饰器\" class=\"headerlink\" title=\"装饰器\"></a>装饰器</h3><p>问题产生：“开放-封闭”原则</p>\n<p>​        封闭：已经实现的函数不能修改</p>\n<p>​        开放：对现有函数进行扩展</p>\n<p>​    不能改函数名</p>\n<p>​    不能改调用方式</p>\n<p>语法：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func1</span>:.....</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func2</span>:.....</span><br><span class=\"line\">    </span><br><span class=\"line\">func1 = func2(func1)</span><br><span class=\"line\"><span class=\"comment\">#等于</span></span><br><span class=\"line\"><span class=\"meta\">@func2</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func1</span>:...</span><br></pre></td></tr></table></figure>\n\n<p>可以加参数，非固定参数：*args   **kwargs</p>\n<h5 id=\"列表生成式\"><a href=\"#列表生成式\" class=\"headerlink\" title=\"列表生成式\"></a>列表生成式</h5><p>给一个列表元素都加1的办法</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#for循环</span></span><br><span class=\"line\">b = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">    b = append(i+<span class=\"number\">1</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#第二种循环</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> index,i <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(a):</span><br><span class=\"line\">    a[index] = i+<span class=\"number\">1</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#lambda表达式、map函数</span></span><br><span class=\"line\">a = <span class=\"built_in\">list</span>(<span class=\"built_in\">map</span>(<span class=\"keyword\">lambda</span> x:x+<span class=\"number\">1</span>,a))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#列表生成式</span></span><br><span class=\"line\">a = [i+<span class=\"number\">1</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a]</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"生成器：惰性算法\"><a href=\"#生成器：惰性算法\" class=\"headerlink\" title=\"生成器：惰性算法\"></a>生成器：惰性算法</h5><p>用循环，range会首先生成一个列表，占空间</p>\n<p>生成器优点：边执行边计算</p>\n<p>语法：把列表生成式的[]改成()就好了    p = ( i for i in range(10) )</p>\n<p>​        执行：next( p )</p>\n<p>循环调用</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"selector-tag\">i</span> <span class=\"keyword\">in</span> <span class=\"selector-tag\">p</span> :</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>( <span class=\"selector-tag\">i</span> )</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"函数生成器\"><a href=\"#函数生成器\" class=\"headerlink\" title=\"函数生成器\"></a>函数生成器</h5><p>把函数里面的return 改成yield</p>\n<p>yield  b ： 程序或者循环  暂停，并且返回   b</p>\n<p>一个有yield 的函数，可以在中间去执行别的代码，然后再返回来执行</p>\n<p>执行方式</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">next</span> (func)</span><br><span class=\"line\">或者</span><br><span class=\"line\">func. __next__()</span><br><span class=\"line\"></span><br><span class=\"line\">可以中途去干别的事情</span><br><span class=\"line\"><span class=\"built_in\">next</span>(func)</span><br><span class=\"line\">......do something <span class=\"keyword\">else</span></span><br><span class=\"line\"><span class=\"built_in\">next</span>(func)</span><br></pre></td></tr></table></figure>\n\n<p>但是此时函数会暂停，并且永不结束。</p>\n<p>一般用for来调用，就不会这样了。</p>\n<p>发送值给函数生成器</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>(<span class=\"params\">value</span>):</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i &lt; value:</span><br><span class=\"line\">        a = <span class=\"keyword\">yield</span></span><br><span class=\"line\">        </span><br><span class=\"line\">f = func(<span class=\"number\">100</span>)</span><br><span class=\"line\">f.__next__()   <span class=\"comment\">#发送一个None给yield</span></span><br><span class=\"line\">f.send( a )    <span class=\"comment\">#发送一个值，并且执行</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"单线程下的多并发\"><a href=\"#单线程下的多并发\" class=\"headerlink\" title=\"单线程下的多并发\"></a>单线程下的多并发</h5><p>线程：cpu执行任务的单元</p>\n<p>多核：多个线程，并行运算</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">consumer</span>(<span class=\"params\">name</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;%s 准备吃包子啦!&quot;</span> %name)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">       baozi = <span class=\"keyword\">yield</span>  <span class=\"comment\"># yield可以接收到外部send传过来的数据并赋值给baozi</span></span><br><span class=\"line\">       <span class=\"built_in\">print</span>(<span class=\"string\">&quot;包子[%s]来了,被[%s]吃了!&quot;</span> %(baozi,name))</span><br><span class=\"line\">        </span><br><span class=\"line\">c = consumer(<span class=\"string\">&#x27;A&#x27;</span>)</span><br><span class=\"line\">c2 = consumer(<span class=\"string\">&#x27;B&#x27;</span>)</span><br><span class=\"line\">c.__next__() <span class=\"comment\"># 执行一下next可以使上面的函数走到yield那句。 这样后面的send语法才能生效</span></span><br><span class=\"line\">c2.__next__()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;----老子开始准备做包子啦!----&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    time.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;做了2个包子!&quot;</span>)</span><br><span class=\"line\">    c.send(i)  <span class=\"comment\"># send的作用=next, 同时还把数据传给了上面函数里的yield</span></span><br><span class=\"line\">    c2.send(i)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"迭代器iterator\"><a href=\"#迭代器iterator\" class=\"headerlink\" title=\"迭代器iterator\"></a>迭代器iterator</h3><p>迭代对象：    1.可以用于for循环的数据类型：set、tuple、list、dic、str</p>\n<p>​                      2.迭代器和迭代器函数</p>\n<p>可迭代：Interable   可遍历、可循环            用isinstance()判断是不是可迭代对象</p>\n<p>迭代器：可以用next()执行下一次的    例如generator</p>\n<p>可以用iter()强制转换成迭代器</p>\n<h2 id=\"第四天\"><a href=\"#第四天\" class=\"headerlink\" title=\"第四天\"></a>第四天</h2><h3 id=\"OS库：跟系统调用相关\"><a href=\"#OS库：跟系统调用相关\" class=\"headerlink\" title=\"OS库：跟系统调用相关\"></a>OS库：跟系统调用相关</h3><p>os 模块提供了很多允许你的程序与操作系统直接交互的功能</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">得到当前工作目录，即当前Python脚本工作的目录路径: os.getcwd()</span><br><span class=\"line\">返回指定目录下的所有文件和目录名:os.listdir()</span><br><span class=\"line\">函数用来删除一个文件:os.remove()</span><br><span class=\"line\">删除多个目录：os.removedirs（r“c：\\python”）</span><br><span class=\"line\">检验给出的路径是否是一个文件：os.path.isfile()</span><br><span class=\"line\">检验给出的路径是否是一个目录：os.path.isdir()</span><br><span class=\"line\">判断是否是绝对路径：os.path.isabs()</span><br><span class=\"line\">检验给出的路径是否真地存:os.path.exists()</span><br><span class=\"line\">返回一个路径的目录名和文件名:os.path.split()     e.g os.path.split(<span class=\"string\">&#x27;/home/swaroop/byte/code/poem.txt&#x27;</span>) 结果：(<span class=\"string\">&#x27;/home/swaroop/byte/code&#x27;</span>, <span class=\"string\">&#x27;poem.txt&#x27;</span>) </span><br><span class=\"line\">分离扩展名：os.path.splitext()       e.g  os.path.splitext(<span class=\"string\">&#x27;/usr/local/test.py&#x27;</span>)    结果：(<span class=\"string\">&#x27;/usr/local/test&#x27;</span>, <span class=\"string\">&#x27;.py&#x27;</span>)</span><br><span class=\"line\">获取路径名：os.path.dirname()</span><br><span class=\"line\">获得绝对路径: os.path.abspath()  </span><br><span class=\"line\">获取文件名：os.path.basename()</span><br><span class=\"line\">运行shell命令: os.system()</span><br><span class=\"line\">读取操作系统环境变量HOME的值:os.getenv(<span class=\"string\">&quot;HOME&quot;</span>) </span><br><span class=\"line\">返回操作系统所有的环境变量： os.environ </span><br><span class=\"line\">设置系统环境变量，仅程序运行时有效：os.environ.setdefault(<span class=\"string\">&#x27;HOME&#x27;</span>,<span class=\"string\">&#x27;/home/alex&#x27;</span>)</span><br><span class=\"line\">给出当前平台使用的行终止符:os.linesep    Windows使用<span class=\"string\">&#x27;\\r\\n&#x27;</span>，Linux and MAC使用<span class=\"string\">&#x27;\\n&#x27;</span></span><br><span class=\"line\">指示你正在使用的平台：os.name       对于Windows，它是<span class=\"string\">&#x27;nt&#x27;</span>，而对于Linux/Unix用户，它是<span class=\"string\">&#x27;posix&#x27;</span></span><br><span class=\"line\">重命名：os.rename（old， new）</span><br><span class=\"line\">创建多级目录：os.makedirs（r“c：\\python\\test”）</span><br><span class=\"line\">创建单个目录：os.mkdir（“test”）</span><br><span class=\"line\">获取文件属性：os.stat（file）</span><br><span class=\"line\">修改文件权限与时间戳：os.chmod（file）</span><br><span class=\"line\">获取文件大小：os.path.getsize（filename）</span><br><span class=\"line\">结合目录名与文件名：os.path.join(dir,filename)</span><br><span class=\"line\">改变工作目录到dirname: os.chdir(dirname)</span><br><span class=\"line\">获取当前终端的大小: os.get_terminal_size()</span><br><span class=\"line\">杀死进程: os.kill(<span class=\"number\">10884</span>,signal.SIGKILL)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"sys库\"><a href=\"#sys库\" class=\"headerlink\" title=\"sys库\"></a>sys库</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sys.argv           命令行参数<span class=\"type\">List</span>，第一个元素是程序本身路径</span><br><span class=\"line\">sys.exit(n)        退出程序，正常退出时exit(<span class=\"number\">0</span>)</span><br><span class=\"line\">sys.version        获取Python解释程序的版本信息</span><br><span class=\"line\">sys.maxint         最大的Int值</span><br><span class=\"line\">sys.path           返回模块的搜索路径，初始化时使用PYTHONPATH环境变量的值</span><br><span class=\"line\">sys.platform       返回操作系统平台名称</span><br><span class=\"line\">sys.stdout.write(<span class=\"string\">&#x27;please:&#x27;</span>)  <span class=\"comment\">#标准输出 , 引出进度条的例子， 注，在py3上不行，可以用print代替</span></span><br><span class=\"line\">val = sys.stdin.readline()[:-<span class=\"number\">1</span>] <span class=\"comment\">#标准输入</span></span><br><span class=\"line\">sys.getrecursionlimit() <span class=\"comment\">#获取最大递归层数</span></span><br><span class=\"line\">sys.setrecursionlimit(<span class=\"number\">1200</span>) <span class=\"comment\">#设置最大递归层数</span></span><br><span class=\"line\">sys.getdefaultencoding()  <span class=\"comment\">#获取解释器默认编码</span></span><br><span class=\"line\">sys.getfilesystemencoding  <span class=\"comment\">#获取内存数据存到文件里的默认编码</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"time模块\"><a href=\"#time模块\" class=\"headerlink\" title=\"time模块\"></a>time模块</h3><p>时间戳timestamp：从1970年1月1日到现在过去了多少秒</p>\n<p>元组struct_time：年月日时分秒周  一年中第几天  是否是夏令时</p>\n<p>UTC (Coordinated Universal Time ,世界协调时)：中国时UTC+8</p>\n<p>DST (Daylight Saving Time)：夏令时</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">time.localtime( [ timestamp ] )：将一个时间戳转换为当前时区的struct_time。若secs参数未提供，则以当前时间为准。</span><br><span class=\"line\">time.gmtime( [ secs ] )：和localtime()方法类似，gmtime()方法是将一个时间戳转换为UTC时区（<span class=\"number\">0</span>时区）的struct_time。</span><br><span class=\"line\">time.time()：返回当前时间的时间戳。</span><br><span class=\"line\">time.asctime([t])：把一个表示时间的元组或者struct_time表示为这种形式：’Sun Oct <span class=\"number\">1</span> <span class=\"number\">12</span>:04:<span class=\"number\">38</span> <span class=\"number\">2019</span>’。如果没有参数，将会将time.localtime()作为参数传入。</span><br><span class=\"line\">time.ctime([secs])：把一个时间戳转化为time.asctime()的形式。如果参数未给或者为<span class=\"literal\">None</span>的时候，将会默认time.time()为参数。它的作用相当于time.asctime(time.localtime(secs))。</span><br><span class=\"line\"></span><br><span class=\"line\">time.mktime(t)：将一个struct_time转化为时间戳。</span><br><span class=\"line\">time.strftime(<span class=\"built_in\">format</span>[, t])：把一个代表时间的元组或者struct_time（如由time.localtime()和time.gmtime()返回）转化为格式化的时间字符串。如果t未指定，将传入time.localtime()。举例：time.strftime(“%Y-%m-%d %X”, time.localtime()) <span class=\"comment\">#输出’2017-10-01 12:14:23’</span></span><br><span class=\"line\">time.strptime(string[, <span class=\"built_in\">format</span>])：把一个格式化时间字符串转化为struct_time。实际上它和strftime()是逆操作。</span><br><span class=\"line\">举例：time.strptime(‘<span class=\"number\">2017</span>-<span class=\"number\">10</span>-<span class=\"number\">3</span> <span class=\"number\">17</span>:<span class=\"number\">54</span>’,”%Y-%m-%d %H:%M”) <span class=\"comment\">#输出 time.struct_time(tm_year=2017, tm_mon=10, tm_mday=3, tm_hour=17, tm_min=54, tm_sec=0, tm_wday=1, tm_yday=276, tm_isdst=-1)</span></span><br><span class=\"line\"></span><br><span class=\"line\">time.sleep(secs)：线程推迟指定的时间运行,单位为秒。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"datatime模块\"><a href=\"#datatime模块\" class=\"headerlink\" title=\"datatime模块\"></a>datatime模块</h3><p>相比于time模块，datetime模块的接口则更直观、更容易调用</p>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">datetime.<span class=\"built_in\">date</span>：表示日期的类。常用的属性有<span class=\"built_in\">year</span>, <span class=\"built_in\">month</span>, <span class=\"built_in\">day</span>；</span><br><span class=\"line\"></span><br><span class=\"line\">datetime.time：表示时间的类。常用的属性有<span class=\"built_in\">hour</span>, <span class=\"built_in\">minute</span>, <span class=\"built_in\">second</span>, microsecond；</span><br><span class=\"line\"></span><br><span class=\"line\">datetime.datetime：表示日期时间。</span><br><span class=\"line\"></span><br><span class=\"line\">datetime.timedelta：表示时间间隔，即两个时间点之间的长度。</span><br><span class=\"line\"></span><br><span class=\"line\">datetime.tzinfo：与时区有关的相关信息。（这里不详细充分讨论该类，感兴趣的童鞋可以参考python手册）</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> d=datetime.datetime.now() 返回当前的datetime日期类型</span><br><span class=\"line\">d.timestamp(),d.today(), d.year,d.timetuple()等方法可以调用</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> datetime.date.fromtimestamp(<span class=\"number\">322222</span>) 把一个时间戳转为datetime日期类型</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3.</span> 时间运算</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>datetime.datetime.now()</span><br><span class=\"line\">datetime.datetime(<span class=\"number\">2017</span>, <span class=\"number\">10</span>, <span class=\"number\">1</span>, <span class=\"number\">12</span>, <span class=\"number\">53</span>, <span class=\"number\">11</span>, <span class=\"number\">821218</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>datetime.datetime.now() + datetime.timedelta(<span class=\"number\">4</span>) <span class=\"comment\">#当前时间 +4天</span></span><br><span class=\"line\">datetime.datetime(<span class=\"number\">2017</span>, <span class=\"number\">10</span>, <span class=\"number\">5</span>, <span class=\"number\">12</span>, <span class=\"number\">53</span>, <span class=\"number\">35</span>, <span class=\"number\">276589</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>datetime.datetime.now() + datetime.timedelta(hours=<span class=\"number\">4</span>) <span class=\"comment\">#当前时间+4小时</span></span><br><span class=\"line\">datetime.datetime(<span class=\"number\">2017</span>, <span class=\"number\">10</span>, <span class=\"number\">1</span>, <span class=\"number\">16</span>, <span class=\"number\">53</span>, <span class=\"number\">42</span>, <span class=\"number\">876275</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4.</span>时间替换</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d.replace(year=<span class=\"number\">2999</span>,month=<span class=\"number\">11</span>,day=<span class=\"number\">30</span>)</span><br><span class=\"line\">datetime.date(<span class=\"number\">2999</span>, <span class=\"number\">11</span>, <span class=\"number\">30</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"pickle-amp-amp-json\"><a href=\"#pickle-amp-amp-json\" class=\"headerlink\" title=\"pickle  &amp;&amp;  json\"></a>pickle  &amp;&amp;  json</h3><p>序列化：数据的 网络传输和储存在硬盘 的形式是 bytes类型。把各种数据类型转化成可以网络传输和储存的类型称为序列化。</p>\n<p>反向过程叫做 反序列化</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#pickle</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">str</span> = pickle.dumps( data )   <span class=\"comment\">#把data转化成python可识别的字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\">pickle.dump(data,file)\t\t<span class=\"comment\">#把data以字符串写入file种</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#file = open(&quot;  &quot; , rb)</span></span><br><span class=\"line\"><span class=\"comment\">#json时，open(&quot; &quot; , r )     \t\t</span></span><br><span class=\"line\">pickle.loads( <span class=\"built_in\">str</span> )\t\t\t<span class=\"comment\">#把str反序列化</span></span><br><span class=\"line\"></span><br><span class=\"line\">pickle.load( file )\t\t\t<span class=\"comment\">#从文件加载</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#遵循先进先出的原则</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Json模块也提供了四个功能：dumps、dump、<span class=\"keyword\">loads</span>、<span class=\"keyword\">load</span>，用法跟pickle一致</span><br></pre></td></tr></table></figure>\n\n<p>pickle 和 json的区别</p>\n<ul>\n<li><p>JSON:</p>\n<p>优点：跨语言(不同语言间的数据传递可用json交接)、体积小</p>\n<p>缺点：只能支持int\\str\\list\\tuple\\dict</p>\n<p>Pickle:</p>\n<p>优点：专为python设计，支持python所有的数据类型</p>\n<p>缺点：只能在python中使用，存储数据占空间大</p>\n</li>\n</ul>\n<h3 id=\"hashlib\"><a href=\"#hashlib\" class=\"headerlink\" title=\"hashlib\"></a>hashlib</h3><h4 id=\"HASH加密\"><a href=\"#HASH加密\" class=\"headerlink\" title=\"HASH加密\"></a>HASH加密</h4><p>一般译作散列或者哈希。是把任意输入（预映射）转化成固定长度（128位）的输出，这个输出称之为散列值。这是一种压缩算法。</p>\n<h4 id=\"密码学相关\"><a href=\"#密码学相关\" class=\"headerlink\" title=\"密码学相关\"></a>密码学相关</h4><p>碰撞：不同字符串通过hash算法得到相同的散列。</p>\n<p>撞库：用穷举法反解散列值，以获得原来的明文密码。</p>\n<p>加盐：通过给hash得到的散列通过加盐算法增加字符然后再次hash。</p>\n<p>拖库：黑客获取了密码库。</p>\n<h4 id=\"MD5-Message-Digest-Algorithm\"><a href=\"#MD5-Message-Digest-Algorithm\" class=\"headerlink\" title=\"MD5(Message-Digest Algorithm)\"></a>MD5(Message-Digest Algorithm)</h4><p>讯息摘要演算法。一种加密算法。</p>\n<h5 id=\"MD5的特点\"><a href=\"#MD5的特点\" class=\"headerlink\" title=\"MD5的特点\"></a>MD5的特点</h5><ul>\n<li>压缩性：得到的散列一般比原数据 占内存小</li>\n<li>易计算：通过MD5的算法，计算时间短</li>\n<li>抗修改：修改原数据，将得到不同的HASH值</li>\n<li>抗碰撞：一般不会有相同的HASH值</li>\n<li>不可逆</li>\n</ul>\n<h5 id=\"MD5的效果\"><a href=\"#MD5的效果\" class=\"headerlink\" title=\"MD5的效果\"></a>MD5的效果</h5><ol>\n<li>防篡改：发送和接受时的HASH值一样，则没有被篡改</li>\n<li>防抵赖：申请数字签名</li>\n<li>防看到明文：看不到密码</li>\n</ol>\n<h5 id=\"MD5的操作\"><a href=\"#MD5的操作\" class=\"headerlink\" title=\"MD5的操作\"></a>MD5的操作</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"><span class=\"comment\">#获取一个md5对象</span></span><br><span class=\"line\">m = hashlib.md5()</span><br><span class=\"line\"><span class=\"comment\">#给md5对象一个值，要bytes类型。多次update是将字符串拼接</span></span><br><span class=\"line\">m .update(<span class=\"string\">&quot;str&quot;</span>.encode(<span class=\"string\">&quot;type&quot;</span>))</span><br><span class=\"line\"><span class=\"comment\">#默认得到是二进制，也可以转化成十六进制</span></span><br><span class=\"line\">m .hexdigest()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"SHA-Secure-hash-Algorithnm\"><a href=\"#SHA-Secure-hash-Algorithnm\" class=\"headerlink\" title=\"SHA(Secure hash Algorithnm)\"></a>SHA(Secure hash Algorithnm)</h4><p>sha - 1 :得到160位的散列值。</p>\n<p>sha - 256：得到256位。</p>\n<p>一般用在密码学上，操作和MD5一样。</p>\n<h3 id=\"shutil模块\"><a href=\"#shutil模块\" class=\"headerlink\" title=\"shutil模块\"></a>shutil模块</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#shutil.copyfileobj ( open(fsrc, &quot;rb&quot;), open(fdes, &quot;wb&quot;) )</span></span><br><span class=\"line\">shutil.copyfileobj(<span class=\"built_in\">open</span>(<span class=\"string\">&quot;d:\\\\my1.txt&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>), <span class=\"built_in\">open</span>(<span class=\"string\">&quot;d:\\\\my2.txt&quot;</span>, <span class=\"string\">&quot;wb&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#shutil.copyfile(&quot;file1&quot; , &quot;file2&quot;) ，f2非必须存在</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#copy权限</span></span><br><span class=\"line\">shutil.copymode( fsrc , fdes )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#拷贝状态信息，time、bits...</span></span><br><span class=\"line\">shutil.copystat( fsrc , fdes )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#拷贝文件和权限</span></span><br><span class=\"line\">shutil.copy( fsrc , fdes )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#拷贝文件和状态</span></span><br><span class=\"line\">shutil.copy2(  ,  )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#忽略某种格式</span></span><br><span class=\"line\">shutil.ignore_patterns(*patterns)</span><br><span class=\"line\"><span class=\"comment\">#example: *.txt、filename* ....</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#拷贝文件夹</span></span><br><span class=\"line\">shutil.copytree(src,des,symlinks=<span class=\"string\">&quot;False&quot;</span>,ignore=<span class=\"string\">&quot;False&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#创建压缩包并返回路径</span></span><br><span class=\"line\">shuil.makearchive( base_name , <span class=\"built_in\">format</span> , root , )</span><br><span class=\"line\"><span class=\"comment\">#base_name：压缩包的路径和名字，若只有名字，则保存到当前目录</span></span><br><span class=\"line\"><span class=\"comment\">#format：压缩包的格式&#x27;zip&#x27;&#x27;rar&#x27;&#x27;tar&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#root：要压缩的文件夹的路径</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#删除文件夹</span></span><br><span class=\"line\">shutil.rmtree(  )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#重命名</span></span><br><span class=\"line\">shutil.move(<span class=\"string\">&quot;f1&quot;</span>,<span class=\"string\">&quot;f2&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"zipfile压缩-amp-解压缩\"><a href=\"#zipfile压缩-amp-解压缩\" class=\"headerlink\" title=\"zipfile压缩&amp;解压缩\"></a>zipfile压缩&amp;解压缩</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> zipfile</span><br><span class=\"line\"><span class=\"comment\"># 压缩</span></span><br><span class=\"line\">z = zipfile.ZipFile(<span class=\"string\">&#x27;laxi.zip&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">z.write(<span class=\"string\">&#x27;a.log&#x27;</span>)</span><br><span class=\"line\">z.write(<span class=\"string\">&#x27;data.data&#x27;</span>)</span><br><span class=\"line\">z.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\">z = zipfile.ZipFile(<span class=\"string\">&#x27;laxi.zip&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">z.extractall(path=<span class=\"string\">&#x27;.&#x27;</span>)</span><br><span class=\"line\">z.close()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"tarfile压缩-amp-解压缩\"><a href=\"#tarfile压缩-amp-解压缩\" class=\"headerlink\" title=\"tarfile压缩&amp;解压缩\"></a>tarfile压缩&amp;解压缩</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tarfile</span><br><span class=\"line\"><span class=\"comment\"># 压缩</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t=tarfile.<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;/tmp/egon.tar&#x27;</span>,<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t.add(<span class=\"string\">&#x27;/test1/a.py&#x27;</span>,arcname=<span class=\"string\">&#x27;a.bak&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t.add(<span class=\"string\">&#x27;/test1/b.py&#x27;</span>,arcname=<span class=\"string\">&#x27;b.bak&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t=tarfile.<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;/tmp/egon.tar&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t.extractall(<span class=\"string\">&#x27;/egon&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t.close()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"re正则匹配\"><a href=\"#re正则匹配\" class=\"headerlink\" title=\"re正则匹配\"></a>re正则匹配</h3><h4 id=\"匹配规则\"><a href=\"#匹配规则\" class=\"headerlink\" title=\"匹配规则\"></a>匹配规则</h4><ul>\n<li>re.match()    从第一个字符开始匹配，如果不符合则返回None</li>\n<li>re.search()    匹配全局，返回第一个</li>\n<li>re.findall()      把所有匹配到的字符，放到一个列表返回</li>\n<li>re.split()      以匹配到的字符当做列表分隔符，与findall相反</li>\n<li>re.sub 匹配字符并替换    re.sub( 要替换，替换成，字符串，count=替换次数)</li>\n<li>re.fullmatch    精确匹配，这个字符串必须完全符合规则</li>\n</ul>\n<h4 id=\"表达式规则\"><a href=\"#表达式规则\" class=\"headerlink\" title=\"表达式规则\"></a>表达式规则</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;.&#x27;</span>     默认匹配除\\n之外的任意一个字符，若指定flag DOTALL,则匹配任意字符，包括换行</span><br><span class=\"line\"><span class=\"string\">&#x27;^&#x27;</span>     匹配字符开头，若指定flags MULTILINE,这种也可以匹配上(<span class=\"string\">r&quot;^a&quot;</span>,<span class=\"string\">&quot;\\nabc\\neee&quot;</span>,flags=re.MULTILINE)</span><br><span class=\"line\"><span class=\"string\">&#x27;$&#x27;</span>     匹配字符结尾， 若指定flags MULTILINE ,re.search(<span class=\"string\">&#x27;foo.$&#x27;</span>,<span class=\"string\">&#x27;foo1\\nfoo2\\n&#x27;</span>,re.MULTILINE).group() 会匹配到foo1</span><br><span class=\"line\"><span class=\"string\">&#x27;*&#x27;</span>     匹配*号前的字符<span class=\"number\">0</span>次或多次， re.search(<span class=\"string\">&#x27;a*&#x27;</span>,<span class=\"string\">&#x27;aaaabac&#x27;</span>)  结果<span class=\"string\">&#x27;aaaa&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;+&#x27;</span>     匹配前一个字符<span class=\"number\">1</span>次或多次，re.findall(<span class=\"string\">&quot;ab+&quot;</span>,<span class=\"string\">&quot;ab+cd+abb+bba&quot;</span>) 结果[<span class=\"string\">&#x27;ab&#x27;</span>, <span class=\"string\">&#x27;abb&#x27;</span>]</span><br><span class=\"line\"><span class=\"string\">&#x27;?&#x27;</span>     匹配前一个字符<span class=\"number\">1</span>次或<span class=\"number\">0</span>次 ,re.search(<span class=\"string\">&#x27;b?&#x27;</span>,<span class=\"string\">&#x27;alex&#x27;</span>).group() 匹配b <span class=\"number\">0</span>次</span><br><span class=\"line\"><span class=\"string\">&#x27;&#123;m&#125;&#x27;</span>   匹配前一个字符m次 ,re.search(<span class=\"string\">&#x27;b&#123;3&#125;&#x27;</span>,<span class=\"string\">&#x27;alexbbbs&#x27;</span>).group()  匹配到<span class=\"string\">&#x27;bbb&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#123;n,m&#125;&#x27;</span> 匹配前一个字符n到m次，re.findall(<span class=\"string\">&quot;ab&#123;1,3&#125;&quot;</span>,<span class=\"string\">&quot;abb abc abbcbbb&quot;</span>) 结果<span class=\"string\">&#x27;abb&#x27;</span>, <span class=\"string\">&#x27;ab&#x27;</span>, <span class=\"string\">&#x27;abb&#x27;</span>]</span><br><span class=\"line\"><span class=\"string\">&#x27;|&#x27;</span>     匹配|左或|右的字符，re.search(<span class=\"string\">&quot;abc|ABC&quot;</span>,<span class=\"string\">&quot;ABCBabcCD&quot;</span>).group() 结果<span class=\"string\">&#x27;ABC&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;(...)&#x27;</span> 分组匹配， re.search(<span class=\"string\">&quot;(abc)&#123;2&#125;a(123|45)&quot;</span>, <span class=\"string\">&quot;abcabca456c&quot;</span>).group() 结果为<span class=\"string\">&#x27;abcabca45&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;[...]&#x27;</span> 匹配[]范围里面的字符。[<span class=\"number\">0</span>-<span class=\"number\">9</span>]、[a-z]、[<span class=\"number\">0</span>-9a-zA-Z]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;\\A&#x27;</span>    只从字符开头匹配，re.search(<span class=\"string\">&quot;\\Aabc&quot;</span>,<span class=\"string\">&quot;alexabc&quot;</span>) 是匹配不到的，相当于re.match(<span class=\"string\">&#x27;abc&#x27;</span>,<span class=\"string\">&quot;alexabc&quot;</span>) 或^</span><br><span class=\"line\"><span class=\"string\">&#x27;\\Z&#x27;</span>    匹配字符结尾，同$ </span><br><span class=\"line\"><span class=\"string\">&#x27;\\d&#x27;</span>    匹配数字<span class=\"number\">0</span>-<span class=\"number\">9</span></span><br><span class=\"line\"><span class=\"string\">&#x27;\\D&#x27;</span>    匹配非数字</span><br><span class=\"line\"><span class=\"string\">&#x27;\\w&#x27;</span>    匹配[A-Za-z0-<span class=\"number\">9</span>]</span><br><span class=\"line\"><span class=\"string\">&#x27;\\W&#x27;</span>    匹配非[A-Za-z0-<span class=\"number\">9</span>]</span><br><span class=\"line\"><span class=\"string\">&#x27;s&#x27;</span>     匹配空白字符、\\t、\\n、\\r , re.search(<span class=\"string\">&quot;\\s+&quot;</span>,<span class=\"string\">&quot;ab\\tc1\\n3&quot;</span>).group() 结果 <span class=\"string\">&#x27;\\t&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;(?P...)&#x27;</span> 分组匹配 re.search(<span class=\"string\">&quot;(?P&lt;name&gt;[0-9]&#123;4&#125;) (?P&lt;name&gt;[0-9]&#123;2&#125;) (?P&lt;name&gt;[0-9]&#123;4&#125;)&quot;</span> , <span class=\"built_in\">str</span>)  a.groups()  --&gt;返回元组,     a.groupdict() --&gt;返回字典，key是name</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"re-compile-pattern-flags-0\"><a href=\"#re-compile-pattern-flags-0\" class=\"headerlink\" title=\"re.compile(pattern, flags=0)\"></a>re.compile(pattern, flags=0)</h4><p>把这个规则先编译，这样就不用每次调用都重新编译</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prog = re.<span class=\"built_in\">compile</span>(pattern)</span><br><span class=\"line\">result = prog.match(string)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Flags标志符\"><a href=\"#Flags标志符\" class=\"headerlink\" title=\"Flags标志符\"></a>Flags标志符</h4><ul>\n<li>re.I (re.IGNORECASE): 忽略大小写（括号内是完整写法，下同）</li>\n<li>re.M (MULTILINE): 多行模式，不会忽略 \\n，改变’^’和’$’的行为</li>\n<li>re.S (DOTALL): 改变 ’ . ’ 的行为，能匹配特殊符号</li>\n<li>re.X (re.VERBOSE) 可以给你的表达式写注释，使其更可读，下面这2个意思一样</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = re.<span class=\"built_in\">compile</span> ( <span class=\"string\">r&quot;&quot;&quot;\\d + # the integral part                </span></span><br><span class=\"line\"><span class=\"string\">\t\t\t\t\\. # the decimal point                </span></span><br><span class=\"line\"><span class=\"string\">\t\t\t\t\\d * # some fractional digits&quot;&quot;&quot;</span>,                 </span><br><span class=\"line\">\t\t\t\tre.X)</span><br><span class=\"line\">b = re.<span class=\"built_in\">compile</span>(<span class=\"string\">r&quot;\\d+\\.\\d*&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>跟着Alex老师学的Python，视频链接：<a href=\"https://www.bilibili.com/video/BV1j7411e7MD\">96天从小白炼成PYTHON开发</a></p>","more":"<h1 id=\"Python学习日记\"><a href=\"#Python学习日记\" class=\"headerlink\" title=\"Python学习日记\"></a>Python学习日记</h1><h2 id=\"第一天\"><a href=\"#第一天\" class=\"headerlink\" title=\"第一天\"></a>第一天</h2><h3 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h3><p>拼接：a+b</p>\n<p>次数：a*3</p>\n<p>赋值：单引号、双引号、多引号（多行）</p>\n<h3 id=\"列表（数组）\"><a href=\"#列表（数组）\" class=\"headerlink\" title=\"列表（数组）\"></a>列表（数组）</h3><p>添加：插入name.insert(3,’alex’)、追加name.append（“tony”）</p>\n<p>修改：name[2]=” “</p>\n<p>删除：del name[2],name.remove(“   “)</p>\n<p>查找：in     </p>\n<p>查找下标：name.index()返回坐标</p>\n<h3 id=\"字符串格式化输出\"><a href=\"#字符串格式化输出\" class=\"headerlink\" title=\"字符串格式化输出\"></a>字符串格式化输出</h3><p>占位符：%s，%d，%f</p>\n<p><img src=\"C:\\Users\\10956\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200315220331079.png\" alt=\"image-20200315220331079\"></p>\n<h3 id=\"深圳小事\"><a href=\"#深圳小事\" class=\"headerlink\" title=\"深圳小事\"></a>深圳小事</h3><p>不要烂在泥土里</p>\n<p>贪欲吞噬人性</p>\n<h3 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h3><p>算数运算：幂**   取整除//</p>\n<p>比较运算：</p>\n<p>赋值运算：**=、//=</p>\n<p>逻辑运算：and、or、not</p>\n<h3 id=\"while-else循环\"><a href=\"#while-else循环\" class=\"headerlink\" title=\"while..else循环\"></a>while..else循环</h3><p>如果while没有给break终止的话，执行else后的语句</p>\n<h2 id=\"第二天\"><a href=\"#第二天\" class=\"headerlink\" title=\"第二天\"></a>第二天</h2><h3 id=\"课前鸡汤\"><a href=\"#课前鸡汤\" class=\"headerlink\" title=\"课前鸡汤\"></a>课前鸡汤</h3><p>复合型人才</p>\n<h3 id=\"变量的创建过程\"><a href=\"#变量的创建过程\" class=\"headerlink\" title=\"变量的创建过程\"></a>变量的创建过程</h3><p>​    a=“alex”</p>\n<p>​    b=a</p>\n<p>a、b都指向alex而不是b指向a</p>\n<p>​    a=’alex’</p>\n<p>​    a=’boy’</p>\n<p>此时上下a指向的地址不一样</p>\n<h3 id=\"身份运算\"><a href=\"#身份运算\" class=\"headerlink\" title=\"身份运算\"></a>身份运算</h3><p>is /is not</p>\n<p>​    a=‘alex’</p>\n<p>​    type(a)   is   string     (true)</p>\n<p>None 空值</p>\n<p>​    a = None </p>\n<p>​    if a is None :</p>\n<h3 id=\"三元运算\"><a href=\"#三元运算\" class=\"headerlink\" title=\"三元运算\"></a>三元运算</h3><p>变量  =  值A   if   条件A   else   条件B</p>\n<h3 id=\"寻找帮助\"><a href=\"#寻找帮助\" class=\"headerlink\" title=\"寻找帮助\"></a>寻找帮助</h3><p>help()</p>\n<p>​    help(names.remove)</p>\n<p>获取能进行的操作</p>\n<p>​    names.</p>\n<h3 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3><p>列表</p>\n<p><a href=\"https://book.apeland.cn/details/30/\">https://book.apeland.cn/details/30/</a></p>\n<p>元组：只读列表</p>\n<p>​    长度：len()    </p>\n<p>字符串：</p>\n<p>​    不转义r(原生字符raw)        a = r ‘ alex\\n ‘     print(a)   得到alex\\n</p>\n<p>字典：</p>\n<h2 id=\"第三天\"><a href=\"#第三天\" class=\"headerlink\" title=\"第三天\"></a>第三天</h2><h3 id=\"bytes类型\"><a href=\"#bytes类型\" class=\"headerlink\" title=\"bytes类型\"></a>bytes类型</h3><p>​        f = open ( “ python learning . txt “ , “w” , encoding = “utf - 8” )     用utff-8的格式编码</p>\n<p>​        f = open (“    “   ,    “wb”     )      不要加encoding   因为是用二进制的格式打开            </p>\n<p>python 和 pycharm 加载和编码都是默认utf8 </p>\n<p>​        str.encode()        —-&gt;得到的是对应的bytes类型， 以   b ’ ‘ 标识</p>\n<p>要转成二进制的情况 : 网络传输、写入硬盘</p>\n<h3 id=\"copy\"><a href=\"#copy\" class=\"headerlink\" title=\"copy\"></a>copy</h3><p>在字符串、列表和集合中，修改一个字符串会创建一个新的地址，然后把原来的那个删除。</p>\n<p>但是在字典中，s = s1   ，s和s1都指向同样的地址（容器）。</p>\n<p>​        字典中每一个数据都有一个地址（容器里的物体）。</p>\n<p>copy   </p>\n<p>​        浅copy             s1 = s.copy()   只复制第一层，          当字典里面还有字典的话，改小字典的数据之后，两份都会影响。</p>\n<p>​        深copy             import  copy             s1 = s.deepcopy()    完全复制一份新的</p>\n<h3 id=\"编码和解码\"><a href=\"#编码和解码\" class=\"headerlink\" title=\"编码和解码\"></a>编码和解码</h3><p>编码 ：str , encode(“utf-8”)   用utf-8编码</p>\n<p>解码： str. decode(“utf-8”)    之前是用utf-8编码的，现在要把utf-8解码出来，解码后是unicode的格式</p>\n<h3 id=\"编码转换\"><a href=\"#编码转换\" class=\"headerlink\" title=\"编码转换\"></a>编码转换</h3><p>在windows系统上，是gbk的方式编码</p>\n<p>在mac/linux上，是以utf-8的方式编码</p>\n<p>所以传输文件之后，要改变编码格式，不然会出现乱码。</p>\n<p>gbk    —&gt;    unicode    —&gt;    utf-8</p>\n<p>​        代码实现 utf-8    —&gt;    gbk</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#用utf-8格式 写入文件</span></span><br><span class=\"line\">f = <span class=\"built_in\">open</span> ( <span class=\"string\">&quot;data.txt&quot;</span> , <span class=\"string\">&quot;w&quot;</span> )</span><br><span class=\"line\">s_uft8 = <span class=\"string\">&quot;你好未来&quot;</span></span><br><span class=\"line\">f.write ( s_utf8 . encode (<span class=\"string\">&quot;utf-8&quot;</span>) )</span><br><span class=\"line\">f.close</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#转换</span></span><br><span class=\"line\">s_unicode = s_utf8 .decode (<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">s_gbk = s_unicode .encode (<span class=\"string\">&quot;gbk&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#写入文件</span></span><br><span class=\"line\">f = <span class=\"built_in\">open</span> (<span class=\"string\">&quot;data.txt&quot;</span> , <span class=\"string\">&quot;wb&quot;</span> )</span><br><span class=\"line\">f.write(s_gbk)</span><br><span class=\"line\">f.close</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数的定义\"><a href=\"#函数的定义\" class=\"headerlink\" title=\"函数的定义\"></a>函数的定义</h3><p>默认返回值是None</p>\n<p>返回多个，则会返回元组        return 1,2,3,4,5    —&gt;        (1,2,3,4,5)</p>\n<h3 id=\"函数的参数\"><a href=\"#函数的参数\" class=\"headerlink\" title=\"函数的参数\"></a>函数的参数</h3><p>参数的定义从右到左，参数的赋值从左到右</p>\n<p>形参：相当于临时变量</p>\n<p>实参</p>\n<p>默认参数：靠右定义</p>\n<p>位置参数    </p>\n<p>关键参数</p>\n<p>​        def  func( age , name , school )</p>\n<p>​        func( 22  ,   name=”alex” ,  school = “scnu” )   前一个是位置参数，后两个是关键参数</p>\n<p>​    优先级：位置参数 &gt; 默认参数/关键参数</p>\n<p>非固定参数</p>\n<p>​        def  func( name , *args , **kwargs )     args会返回元组，kwargs会返回字典</p>\n<p>​        func ( “alex” , 21 , 22 , age = 33 , sex = “female” )     第一个是位置参数，后四个是非固定参数</p>\n<p>​                                            第二三个会存到元组里，最后两个会存到字典里</p>\n<h3 id=\"局部变量和全局变量\"><a href=\"#局部变量和全局变量\" class=\"headerlink\" title=\"局部变量和全局变量\"></a>局部变量和全局变量</h3><p>局部变量和全局变量，即使名字一样，但是地址不一样。</p>\n<p>使用时，查找顺序：局部变量&gt;全局变量</p>\n<p>​    locals()        返回全部局部变量，以字典的形式。</p>\n<p>​    globals()        返会全部变量</p>\n<p>在局部引用一个全局变量    声明（如果没有则创建）：global  name  然后再使用    //不建议这么使用</p>\n<h3 id=\"局部引用字典、列表\"><a href=\"#局部引用字典、列表\" class=\"headerlink\" title=\"局部引用字典、列表\"></a>局部引用字典、列表</h3><p>局部的函数里可以修改字典、列表里的数据，但是字典和列表本身时不可以修改的。</p>\n<h3 id=\"嵌套函数\"><a href=\"#嵌套函数\" class=\"headerlink\" title=\"嵌套函数\"></a>嵌套函数</h3><p>函数里面再定义一个函数，这个小函数的作用域只在这个函数里面。临时函数。</p>\n<h3 id=\"匿名函数-lambda\"><a href=\"#匿名函数-lambda\" class=\"headerlink\" title=\"匿名函数(lambda)\"></a>匿名函数(lambda)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>(<span class=\"params\">x</span>):</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x**<span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#lambda表达式</span></span><br><span class=\"line\">ex = <span class=\"keyword\">lambda</span> x : x**<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<p>最复杂是一个三元表达式    </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ex = <span class=\"keyword\">lambda</span> x : x**<span class=\"number\">2</span> <span class=\"keyword\">if</span> x&gt;<span class=\"number\">10</span> <span class=\"keyword\">else</span> x**<span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n\n<p>map( func , [   ] )        把列表里的数据依次作为第一个函数的参数执行</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">put = <span class=\"built_in\">map</span> ( <span class=\"keyword\">lambda</span> x:x**<span class=\"number\">2</span> , [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>] )</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">map</span> :</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">    </span><br><span class=\"line\">输出的是: <span class=\"number\">1</span></span><br><span class=\"line\">\t     <span class=\"number\">4</span></span><br><span class=\"line\">    \t <span class=\"number\">9.</span>....</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"高阶函数\"><a href=\"#高阶函数\" class=\"headerlink\" title=\"高阶函数\"></a>高阶函数</h3><p>满足其一则为高阶函数：接受一个函数输入、返回一个函数</p>\n<p>​        def  func1 ( …. ) : …..</p>\n<p>​        def  func2 ( x , y , f ) :   f (x)+ f(y) …..</p>\n<p>​        func2 ( x , y , func2 )</p>\n<h3 id=\"函数递归\"><a href=\"#函数递归\" class=\"headerlink\" title=\"函数递归\"></a>函数递归</h3><p>效率不高，会导致栈溢出</p>\n<p>栈类似于队列</p>\n<h3 id=\"内置函数\"><a href=\"#内置函数\" class=\"headerlink\" title=\"内置函数\"></a>内置函数</h3><p>abs    求绝对值</p>\n<p>all     判断列表、字典、集合里面是否有 None 或者 0 。即如果每一个元素都   在 bool() 返回true，则为True。</p>\n<p>any     判断是否有一个满足  bool(x) = True。</p>\n<p>ascii     如果是在ascii表里的，返回原来的字符。如果不在，则返回unicode编码。” \\ \\ u “开头</p>\n<p>bin         返回这个十进制数字的二进制形式</p>\n<p>bool         判断是否为0和None，如果是，则返回False</p>\n<p>bytearray    将bytes类型变成一个可以修改的bytes数组。例如 b [1] = …是不可以的，转成数组之后可以。</p>\n<p>bytes        转化成bytes类型，以b 开头 。  a = bytes ( “中国 “ , “utf-8” )   —&gt;a为    b’\\xd6\\xd0\\xb9\\xfa’</p>\n<p>chr     返回数字对应的字符    </p>\n<p>complex     返回复数    complex ( 1,2 )    —&gt;  1+2 j</p>\n<p>dict    返回一个空字典</p>\n<p>dir     返回能进行的操作（类似帮助）</p>\n<p>divmod    除然后取模  —&gt;  divmod( 8,3 )    =    ( 2, 2 )</p>\n<p>enumerate     返回列表的索引和元素。  a = [“alex”,”kiki”]    enumerate后得到 (0,”alex”) (1,”kiki”)</p>\n<p>eval     把字符串变成对应的数据类型</p>\n<p>exec    把字符串变成可以执行的语句   exec(“print (“12345) “)  会打印12345</p>\n<p>exit     退出程序</p>\n<p>filter    过滤不满足条件的数据     。    list(filter ( lambda x: x&lt;10 , [1,2,3,4,5,11,22,33] ))<br>   —&gt;   [1, 2, 3, 4, 5]</p>\n<p>float      强制转换浮点数类型</p>\n<p>frozenset    把集合变成不能改的</p>\n<p>globals    返回所有变量、函数</p>\n<p>hash     返回一串以hash编码的到的数据</p>\n<p>help    帮助。help(hash) 返回关于hash的定义和使用方法。</p>\n<p>hex     16进制</p>\n<p>id     返回数据的地址</p>\n<p>input    输入</p>\n<p>int    转换整型</p>\n<p>isinstance     判断是否是某个数据类型    isinstance( a , string )</p>\n<p>len     长度</p>\n<p>list    返回空列表</p>\n<p>locals    返回局部变量</p>\n<p>map    map(function , list)  把列表中的数据一个一个带入到函数中</p>\n<p>max    最大值</p>\n<p>min     最小值</p>\n<p>oct     返回10进制数的8进制表示</p>\n<p>open    打开</p>\n<p>ord     返回字符的ASCII码</p>\n<p>print    输出</p>\n<p>quit    离开程序</p>\n<p>range    一个列表</p>\n<p>round    四舍五入</p>\n<p>set    返回空集合</p>\n<p>sorted    排序</p>\n<p>str    转化成字符串</p>\n<p>sum     加法</p>\n<p>tuple    返回空元组</p>\n<p>type    返回数据类型</p>\n<p>zip    可以合并两个列表  a = [1,2,3]   b = [“alex” , “kiki” ]  </p>\n<p>​                            zip(a,b)   —&gt;   [   (1,”alex”) ,  ( 2,”kiki” )    ]   取小的那个</p>\n<h3 id=\"名称空间\"><a href=\"#名称空间\" class=\"headerlink\" title=\"名称空间\"></a>名称空间</h3><p>LEGB</p>\n<p>​    locals：局部的，函数内部的</p>\n<p>​    enclosing function：嵌套函数最近的父函数</p>\n<p>​    globals：全局变量</p>\n<p>​    builtins：所有函数，包括内置函数</p>\n<h3 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h3><p>外层函数返回内层函数</p>\n<p>函数运行完，函数的作用域不会消失</p>\n<p>调用外层函数的时候，先不执行内部的函数，直接return  内部函数的地址</p>\n<h3 id=\"装饰器\"><a href=\"#装饰器\" class=\"headerlink\" title=\"装饰器\"></a>装饰器</h3><p>问题产生：“开放-封闭”原则</p>\n<p>​        封闭：已经实现的函数不能修改</p>\n<p>​        开放：对现有函数进行扩展</p>\n<p>​    不能改函数名</p>\n<p>​    不能改调用方式</p>\n<p>语法：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func1</span>:.....</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func2</span>:.....</span><br><span class=\"line\">    </span><br><span class=\"line\">func1 = func2(func1)</span><br><span class=\"line\"><span class=\"comment\">#等于</span></span><br><span class=\"line\"><span class=\"meta\">@func2</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func1</span>:...</span><br></pre></td></tr></table></figure>\n\n<p>可以加参数，非固定参数：*args   **kwargs</p>\n<h5 id=\"列表生成式\"><a href=\"#列表生成式\" class=\"headerlink\" title=\"列表生成式\"></a>列表生成式</h5><p>给一个列表元素都加1的办法</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#for循环</span></span><br><span class=\"line\">b = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">    b = append(i+<span class=\"number\">1</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#第二种循环</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> index,i <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(a):</span><br><span class=\"line\">    a[index] = i+<span class=\"number\">1</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#lambda表达式、map函数</span></span><br><span class=\"line\">a = <span class=\"built_in\">list</span>(<span class=\"built_in\">map</span>(<span class=\"keyword\">lambda</span> x:x+<span class=\"number\">1</span>,a))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#列表生成式</span></span><br><span class=\"line\">a = [i+<span class=\"number\">1</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a]</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"生成器：惰性算法\"><a href=\"#生成器：惰性算法\" class=\"headerlink\" title=\"生成器：惰性算法\"></a>生成器：惰性算法</h5><p>用循环，range会首先生成一个列表，占空间</p>\n<p>生成器优点：边执行边计算</p>\n<p>语法：把列表生成式的[]改成()就好了    p = ( i for i in range(10) )</p>\n<p>​        执行：next( p )</p>\n<p>循环调用</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"selector-tag\">i</span> <span class=\"keyword\">in</span> <span class=\"selector-tag\">p</span> :</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>( <span class=\"selector-tag\">i</span> )</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"函数生成器\"><a href=\"#函数生成器\" class=\"headerlink\" title=\"函数生成器\"></a>函数生成器</h5><p>把函数里面的return 改成yield</p>\n<p>yield  b ： 程序或者循环  暂停，并且返回   b</p>\n<p>一个有yield 的函数，可以在中间去执行别的代码，然后再返回来执行</p>\n<p>执行方式</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">next</span> (func)</span><br><span class=\"line\">或者</span><br><span class=\"line\">func. __next__()</span><br><span class=\"line\"></span><br><span class=\"line\">可以中途去干别的事情</span><br><span class=\"line\"><span class=\"built_in\">next</span>(func)</span><br><span class=\"line\">......do something <span class=\"keyword\">else</span></span><br><span class=\"line\"><span class=\"built_in\">next</span>(func)</span><br></pre></td></tr></table></figure>\n\n<p>但是此时函数会暂停，并且永不结束。</p>\n<p>一般用for来调用，就不会这样了。</p>\n<p>发送值给函数生成器</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>(<span class=\"params\">value</span>):</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i &lt; value:</span><br><span class=\"line\">        a = <span class=\"keyword\">yield</span></span><br><span class=\"line\">        </span><br><span class=\"line\">f = func(<span class=\"number\">100</span>)</span><br><span class=\"line\">f.__next__()   <span class=\"comment\">#发送一个None给yield</span></span><br><span class=\"line\">f.send( a )    <span class=\"comment\">#发送一个值，并且执行</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"单线程下的多并发\"><a href=\"#单线程下的多并发\" class=\"headerlink\" title=\"单线程下的多并发\"></a>单线程下的多并发</h5><p>线程：cpu执行任务的单元</p>\n<p>多核：多个线程，并行运算</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">consumer</span>(<span class=\"params\">name</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;%s 准备吃包子啦!&quot;</span> %name)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">       baozi = <span class=\"keyword\">yield</span>  <span class=\"comment\"># yield可以接收到外部send传过来的数据并赋值给baozi</span></span><br><span class=\"line\">       <span class=\"built_in\">print</span>(<span class=\"string\">&quot;包子[%s]来了,被[%s]吃了!&quot;</span> %(baozi,name))</span><br><span class=\"line\">        </span><br><span class=\"line\">c = consumer(<span class=\"string\">&#x27;A&#x27;</span>)</span><br><span class=\"line\">c2 = consumer(<span class=\"string\">&#x27;B&#x27;</span>)</span><br><span class=\"line\">c.__next__() <span class=\"comment\"># 执行一下next可以使上面的函数走到yield那句。 这样后面的send语法才能生效</span></span><br><span class=\"line\">c2.__next__()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;----老子开始准备做包子啦!----&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    time.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;做了2个包子!&quot;</span>)</span><br><span class=\"line\">    c.send(i)  <span class=\"comment\"># send的作用=next, 同时还把数据传给了上面函数里的yield</span></span><br><span class=\"line\">    c2.send(i)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"迭代器iterator\"><a href=\"#迭代器iterator\" class=\"headerlink\" title=\"迭代器iterator\"></a>迭代器iterator</h3><p>迭代对象：    1.可以用于for循环的数据类型：set、tuple、list、dic、str</p>\n<p>​                      2.迭代器和迭代器函数</p>\n<p>可迭代：Interable   可遍历、可循环            用isinstance()判断是不是可迭代对象</p>\n<p>迭代器：可以用next()执行下一次的    例如generator</p>\n<p>可以用iter()强制转换成迭代器</p>\n<h2 id=\"第四天\"><a href=\"#第四天\" class=\"headerlink\" title=\"第四天\"></a>第四天</h2><h3 id=\"OS库：跟系统调用相关\"><a href=\"#OS库：跟系统调用相关\" class=\"headerlink\" title=\"OS库：跟系统调用相关\"></a>OS库：跟系统调用相关</h3><p>os 模块提供了很多允许你的程序与操作系统直接交互的功能</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">得到当前工作目录，即当前Python脚本工作的目录路径: os.getcwd()</span><br><span class=\"line\">返回指定目录下的所有文件和目录名:os.listdir()</span><br><span class=\"line\">函数用来删除一个文件:os.remove()</span><br><span class=\"line\">删除多个目录：os.removedirs（r“c：\\python”）</span><br><span class=\"line\">检验给出的路径是否是一个文件：os.path.isfile()</span><br><span class=\"line\">检验给出的路径是否是一个目录：os.path.isdir()</span><br><span class=\"line\">判断是否是绝对路径：os.path.isabs()</span><br><span class=\"line\">检验给出的路径是否真地存:os.path.exists()</span><br><span class=\"line\">返回一个路径的目录名和文件名:os.path.split()     e.g os.path.split(<span class=\"string\">&#x27;/home/swaroop/byte/code/poem.txt&#x27;</span>) 结果：(<span class=\"string\">&#x27;/home/swaroop/byte/code&#x27;</span>, <span class=\"string\">&#x27;poem.txt&#x27;</span>) </span><br><span class=\"line\">分离扩展名：os.path.splitext()       e.g  os.path.splitext(<span class=\"string\">&#x27;/usr/local/test.py&#x27;</span>)    结果：(<span class=\"string\">&#x27;/usr/local/test&#x27;</span>, <span class=\"string\">&#x27;.py&#x27;</span>)</span><br><span class=\"line\">获取路径名：os.path.dirname()</span><br><span class=\"line\">获得绝对路径: os.path.abspath()  </span><br><span class=\"line\">获取文件名：os.path.basename()</span><br><span class=\"line\">运行shell命令: os.system()</span><br><span class=\"line\">读取操作系统环境变量HOME的值:os.getenv(<span class=\"string\">&quot;HOME&quot;</span>) </span><br><span class=\"line\">返回操作系统所有的环境变量： os.environ </span><br><span class=\"line\">设置系统环境变量，仅程序运行时有效：os.environ.setdefault(<span class=\"string\">&#x27;HOME&#x27;</span>,<span class=\"string\">&#x27;/home/alex&#x27;</span>)</span><br><span class=\"line\">给出当前平台使用的行终止符:os.linesep    Windows使用<span class=\"string\">&#x27;\\r\\n&#x27;</span>，Linux and MAC使用<span class=\"string\">&#x27;\\n&#x27;</span></span><br><span class=\"line\">指示你正在使用的平台：os.name       对于Windows，它是<span class=\"string\">&#x27;nt&#x27;</span>，而对于Linux/Unix用户，它是<span class=\"string\">&#x27;posix&#x27;</span></span><br><span class=\"line\">重命名：os.rename（old， new）</span><br><span class=\"line\">创建多级目录：os.makedirs（r“c：\\python\\test”）</span><br><span class=\"line\">创建单个目录：os.mkdir（“test”）</span><br><span class=\"line\">获取文件属性：os.stat（file）</span><br><span class=\"line\">修改文件权限与时间戳：os.chmod（file）</span><br><span class=\"line\">获取文件大小：os.path.getsize（filename）</span><br><span class=\"line\">结合目录名与文件名：os.path.join(dir,filename)</span><br><span class=\"line\">改变工作目录到dirname: os.chdir(dirname)</span><br><span class=\"line\">获取当前终端的大小: os.get_terminal_size()</span><br><span class=\"line\">杀死进程: os.kill(<span class=\"number\">10884</span>,signal.SIGKILL)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"sys库\"><a href=\"#sys库\" class=\"headerlink\" title=\"sys库\"></a>sys库</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sys.argv           命令行参数<span class=\"type\">List</span>，第一个元素是程序本身路径</span><br><span class=\"line\">sys.exit(n)        退出程序，正常退出时exit(<span class=\"number\">0</span>)</span><br><span class=\"line\">sys.version        获取Python解释程序的版本信息</span><br><span class=\"line\">sys.maxint         最大的Int值</span><br><span class=\"line\">sys.path           返回模块的搜索路径，初始化时使用PYTHONPATH环境变量的值</span><br><span class=\"line\">sys.platform       返回操作系统平台名称</span><br><span class=\"line\">sys.stdout.write(<span class=\"string\">&#x27;please:&#x27;</span>)  <span class=\"comment\">#标准输出 , 引出进度条的例子， 注，在py3上不行，可以用print代替</span></span><br><span class=\"line\">val = sys.stdin.readline()[:-<span class=\"number\">1</span>] <span class=\"comment\">#标准输入</span></span><br><span class=\"line\">sys.getrecursionlimit() <span class=\"comment\">#获取最大递归层数</span></span><br><span class=\"line\">sys.setrecursionlimit(<span class=\"number\">1200</span>) <span class=\"comment\">#设置最大递归层数</span></span><br><span class=\"line\">sys.getdefaultencoding()  <span class=\"comment\">#获取解释器默认编码</span></span><br><span class=\"line\">sys.getfilesystemencoding  <span class=\"comment\">#获取内存数据存到文件里的默认编码</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"time模块\"><a href=\"#time模块\" class=\"headerlink\" title=\"time模块\"></a>time模块</h3><p>时间戳timestamp：从1970年1月1日到现在过去了多少秒</p>\n<p>元组struct_time：年月日时分秒周  一年中第几天  是否是夏令时</p>\n<p>UTC (Coordinated Universal Time ,世界协调时)：中国时UTC+8</p>\n<p>DST (Daylight Saving Time)：夏令时</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">time.localtime( [ timestamp ] )：将一个时间戳转换为当前时区的struct_time。若secs参数未提供，则以当前时间为准。</span><br><span class=\"line\">time.gmtime( [ secs ] )：和localtime()方法类似，gmtime()方法是将一个时间戳转换为UTC时区（<span class=\"number\">0</span>时区）的struct_time。</span><br><span class=\"line\">time.time()：返回当前时间的时间戳。</span><br><span class=\"line\">time.asctime([t])：把一个表示时间的元组或者struct_time表示为这种形式：’Sun Oct <span class=\"number\">1</span> <span class=\"number\">12</span>:04:<span class=\"number\">38</span> <span class=\"number\">2019</span>’。如果没有参数，将会将time.localtime()作为参数传入。</span><br><span class=\"line\">time.ctime([secs])：把一个时间戳转化为time.asctime()的形式。如果参数未给或者为<span class=\"literal\">None</span>的时候，将会默认time.time()为参数。它的作用相当于time.asctime(time.localtime(secs))。</span><br><span class=\"line\"></span><br><span class=\"line\">time.mktime(t)：将一个struct_time转化为时间戳。</span><br><span class=\"line\">time.strftime(<span class=\"built_in\">format</span>[, t])：把一个代表时间的元组或者struct_time（如由time.localtime()和time.gmtime()返回）转化为格式化的时间字符串。如果t未指定，将传入time.localtime()。举例：time.strftime(“%Y-%m-%d %X”, time.localtime()) <span class=\"comment\">#输出’2017-10-01 12:14:23’</span></span><br><span class=\"line\">time.strptime(string[, <span class=\"built_in\">format</span>])：把一个格式化时间字符串转化为struct_time。实际上它和strftime()是逆操作。</span><br><span class=\"line\">举例：time.strptime(‘<span class=\"number\">2017</span>-<span class=\"number\">10</span>-<span class=\"number\">3</span> <span class=\"number\">17</span>:<span class=\"number\">54</span>’,”%Y-%m-%d %H:%M”) <span class=\"comment\">#输出 time.struct_time(tm_year=2017, tm_mon=10, tm_mday=3, tm_hour=17, tm_min=54, tm_sec=0, tm_wday=1, tm_yday=276, tm_isdst=-1)</span></span><br><span class=\"line\"></span><br><span class=\"line\">time.sleep(secs)：线程推迟指定的时间运行,单位为秒。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"datatime模块\"><a href=\"#datatime模块\" class=\"headerlink\" title=\"datatime模块\"></a>datatime模块</h3><p>相比于time模块，datetime模块的接口则更直观、更容易调用</p>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">datetime.<span class=\"built_in\">date</span>：表示日期的类。常用的属性有<span class=\"built_in\">year</span>, <span class=\"built_in\">month</span>, <span class=\"built_in\">day</span>；</span><br><span class=\"line\"></span><br><span class=\"line\">datetime.time：表示时间的类。常用的属性有<span class=\"built_in\">hour</span>, <span class=\"built_in\">minute</span>, <span class=\"built_in\">second</span>, microsecond；</span><br><span class=\"line\"></span><br><span class=\"line\">datetime.datetime：表示日期时间。</span><br><span class=\"line\"></span><br><span class=\"line\">datetime.timedelta：表示时间间隔，即两个时间点之间的长度。</span><br><span class=\"line\"></span><br><span class=\"line\">datetime.tzinfo：与时区有关的相关信息。（这里不详细充分讨论该类，感兴趣的童鞋可以参考python手册）</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> d=datetime.datetime.now() 返回当前的datetime日期类型</span><br><span class=\"line\">d.timestamp(),d.today(), d.year,d.timetuple()等方法可以调用</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> datetime.date.fromtimestamp(<span class=\"number\">322222</span>) 把一个时间戳转为datetime日期类型</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3.</span> 时间运算</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>datetime.datetime.now()</span><br><span class=\"line\">datetime.datetime(<span class=\"number\">2017</span>, <span class=\"number\">10</span>, <span class=\"number\">1</span>, <span class=\"number\">12</span>, <span class=\"number\">53</span>, <span class=\"number\">11</span>, <span class=\"number\">821218</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>datetime.datetime.now() + datetime.timedelta(<span class=\"number\">4</span>) <span class=\"comment\">#当前时间 +4天</span></span><br><span class=\"line\">datetime.datetime(<span class=\"number\">2017</span>, <span class=\"number\">10</span>, <span class=\"number\">5</span>, <span class=\"number\">12</span>, <span class=\"number\">53</span>, <span class=\"number\">35</span>, <span class=\"number\">276589</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>datetime.datetime.now() + datetime.timedelta(hours=<span class=\"number\">4</span>) <span class=\"comment\">#当前时间+4小时</span></span><br><span class=\"line\">datetime.datetime(<span class=\"number\">2017</span>, <span class=\"number\">10</span>, <span class=\"number\">1</span>, <span class=\"number\">16</span>, <span class=\"number\">53</span>, <span class=\"number\">42</span>, <span class=\"number\">876275</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4.</span>时间替换</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d.replace(year=<span class=\"number\">2999</span>,month=<span class=\"number\">11</span>,day=<span class=\"number\">30</span>)</span><br><span class=\"line\">datetime.date(<span class=\"number\">2999</span>, <span class=\"number\">11</span>, <span class=\"number\">30</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"pickle-amp-amp-json\"><a href=\"#pickle-amp-amp-json\" class=\"headerlink\" title=\"pickle  &amp;&amp;  json\"></a>pickle  &amp;&amp;  json</h3><p>序列化：数据的 网络传输和储存在硬盘 的形式是 bytes类型。把各种数据类型转化成可以网络传输和储存的类型称为序列化。</p>\n<p>反向过程叫做 反序列化</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#pickle</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">str</span> = pickle.dumps( data )   <span class=\"comment\">#把data转化成python可识别的字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\">pickle.dump(data,file)\t\t<span class=\"comment\">#把data以字符串写入file种</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#file = open(&quot;  &quot; , rb)</span></span><br><span class=\"line\"><span class=\"comment\">#json时，open(&quot; &quot; , r )     \t\t</span></span><br><span class=\"line\">pickle.loads( <span class=\"built_in\">str</span> )\t\t\t<span class=\"comment\">#把str反序列化</span></span><br><span class=\"line\"></span><br><span class=\"line\">pickle.load( file )\t\t\t<span class=\"comment\">#从文件加载</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#遵循先进先出的原则</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Json模块也提供了四个功能：dumps、dump、<span class=\"keyword\">loads</span>、<span class=\"keyword\">load</span>，用法跟pickle一致</span><br></pre></td></tr></table></figure>\n\n<p>pickle 和 json的区别</p>\n<ul>\n<li><p>JSON:</p>\n<p>优点：跨语言(不同语言间的数据传递可用json交接)、体积小</p>\n<p>缺点：只能支持int\\str\\list\\tuple\\dict</p>\n<p>Pickle:</p>\n<p>优点：专为python设计，支持python所有的数据类型</p>\n<p>缺点：只能在python中使用，存储数据占空间大</p>\n</li>\n</ul>\n<h3 id=\"hashlib\"><a href=\"#hashlib\" class=\"headerlink\" title=\"hashlib\"></a>hashlib</h3><h4 id=\"HASH加密\"><a href=\"#HASH加密\" class=\"headerlink\" title=\"HASH加密\"></a>HASH加密</h4><p>一般译作散列或者哈希。是把任意输入（预映射）转化成固定长度（128位）的输出，这个输出称之为散列值。这是一种压缩算法。</p>\n<h4 id=\"密码学相关\"><a href=\"#密码学相关\" class=\"headerlink\" title=\"密码学相关\"></a>密码学相关</h4><p>碰撞：不同字符串通过hash算法得到相同的散列。</p>\n<p>撞库：用穷举法反解散列值，以获得原来的明文密码。</p>\n<p>加盐：通过给hash得到的散列通过加盐算法增加字符然后再次hash。</p>\n<p>拖库：黑客获取了密码库。</p>\n<h4 id=\"MD5-Message-Digest-Algorithm\"><a href=\"#MD5-Message-Digest-Algorithm\" class=\"headerlink\" title=\"MD5(Message-Digest Algorithm)\"></a>MD5(Message-Digest Algorithm)</h4><p>讯息摘要演算法。一种加密算法。</p>\n<h5 id=\"MD5的特点\"><a href=\"#MD5的特点\" class=\"headerlink\" title=\"MD5的特点\"></a>MD5的特点</h5><ul>\n<li>压缩性：得到的散列一般比原数据 占内存小</li>\n<li>易计算：通过MD5的算法，计算时间短</li>\n<li>抗修改：修改原数据，将得到不同的HASH值</li>\n<li>抗碰撞：一般不会有相同的HASH值</li>\n<li>不可逆</li>\n</ul>\n<h5 id=\"MD5的效果\"><a href=\"#MD5的效果\" class=\"headerlink\" title=\"MD5的效果\"></a>MD5的效果</h5><ol>\n<li>防篡改：发送和接受时的HASH值一样，则没有被篡改</li>\n<li>防抵赖：申请数字签名</li>\n<li>防看到明文：看不到密码</li>\n</ol>\n<h5 id=\"MD5的操作\"><a href=\"#MD5的操作\" class=\"headerlink\" title=\"MD5的操作\"></a>MD5的操作</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"><span class=\"comment\">#获取一个md5对象</span></span><br><span class=\"line\">m = hashlib.md5()</span><br><span class=\"line\"><span class=\"comment\">#给md5对象一个值，要bytes类型。多次update是将字符串拼接</span></span><br><span class=\"line\">m .update(<span class=\"string\">&quot;str&quot;</span>.encode(<span class=\"string\">&quot;type&quot;</span>))</span><br><span class=\"line\"><span class=\"comment\">#默认得到是二进制，也可以转化成十六进制</span></span><br><span class=\"line\">m .hexdigest()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"SHA-Secure-hash-Algorithnm\"><a href=\"#SHA-Secure-hash-Algorithnm\" class=\"headerlink\" title=\"SHA(Secure hash Algorithnm)\"></a>SHA(Secure hash Algorithnm)</h4><p>sha - 1 :得到160位的散列值。</p>\n<p>sha - 256：得到256位。</p>\n<p>一般用在密码学上，操作和MD5一样。</p>\n<h3 id=\"shutil模块\"><a href=\"#shutil模块\" class=\"headerlink\" title=\"shutil模块\"></a>shutil模块</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#shutil.copyfileobj ( open(fsrc, &quot;rb&quot;), open(fdes, &quot;wb&quot;) )</span></span><br><span class=\"line\">shutil.copyfileobj(<span class=\"built_in\">open</span>(<span class=\"string\">&quot;d:\\\\my1.txt&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>), <span class=\"built_in\">open</span>(<span class=\"string\">&quot;d:\\\\my2.txt&quot;</span>, <span class=\"string\">&quot;wb&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#shutil.copyfile(&quot;file1&quot; , &quot;file2&quot;) ，f2非必须存在</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#copy权限</span></span><br><span class=\"line\">shutil.copymode( fsrc , fdes )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#拷贝状态信息，time、bits...</span></span><br><span class=\"line\">shutil.copystat( fsrc , fdes )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#拷贝文件和权限</span></span><br><span class=\"line\">shutil.copy( fsrc , fdes )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#拷贝文件和状态</span></span><br><span class=\"line\">shutil.copy2(  ,  )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#忽略某种格式</span></span><br><span class=\"line\">shutil.ignore_patterns(*patterns)</span><br><span class=\"line\"><span class=\"comment\">#example: *.txt、filename* ....</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#拷贝文件夹</span></span><br><span class=\"line\">shutil.copytree(src,des,symlinks=<span class=\"string\">&quot;False&quot;</span>,ignore=<span class=\"string\">&quot;False&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#创建压缩包并返回路径</span></span><br><span class=\"line\">shuil.makearchive( base_name , <span class=\"built_in\">format</span> , root , )</span><br><span class=\"line\"><span class=\"comment\">#base_name：压缩包的路径和名字，若只有名字，则保存到当前目录</span></span><br><span class=\"line\"><span class=\"comment\">#format：压缩包的格式&#x27;zip&#x27;&#x27;rar&#x27;&#x27;tar&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#root：要压缩的文件夹的路径</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#删除文件夹</span></span><br><span class=\"line\">shutil.rmtree(  )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#重命名</span></span><br><span class=\"line\">shutil.move(<span class=\"string\">&quot;f1&quot;</span>,<span class=\"string\">&quot;f2&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"zipfile压缩-amp-解压缩\"><a href=\"#zipfile压缩-amp-解压缩\" class=\"headerlink\" title=\"zipfile压缩&amp;解压缩\"></a>zipfile压缩&amp;解压缩</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> zipfile</span><br><span class=\"line\"><span class=\"comment\"># 压缩</span></span><br><span class=\"line\">z = zipfile.ZipFile(<span class=\"string\">&#x27;laxi.zip&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">z.write(<span class=\"string\">&#x27;a.log&#x27;</span>)</span><br><span class=\"line\">z.write(<span class=\"string\">&#x27;data.data&#x27;</span>)</span><br><span class=\"line\">z.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\">z = zipfile.ZipFile(<span class=\"string\">&#x27;laxi.zip&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">z.extractall(path=<span class=\"string\">&#x27;.&#x27;</span>)</span><br><span class=\"line\">z.close()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"tarfile压缩-amp-解压缩\"><a href=\"#tarfile压缩-amp-解压缩\" class=\"headerlink\" title=\"tarfile压缩&amp;解压缩\"></a>tarfile压缩&amp;解压缩</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tarfile</span><br><span class=\"line\"><span class=\"comment\"># 压缩</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t=tarfile.<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;/tmp/egon.tar&#x27;</span>,<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t.add(<span class=\"string\">&#x27;/test1/a.py&#x27;</span>,arcname=<span class=\"string\">&#x27;a.bak&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t.add(<span class=\"string\">&#x27;/test1/b.py&#x27;</span>,arcname=<span class=\"string\">&#x27;b.bak&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t=tarfile.<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;/tmp/egon.tar&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t.extractall(<span class=\"string\">&#x27;/egon&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t.close()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"re正则匹配\"><a href=\"#re正则匹配\" class=\"headerlink\" title=\"re正则匹配\"></a>re正则匹配</h3><h4 id=\"匹配规则\"><a href=\"#匹配规则\" class=\"headerlink\" title=\"匹配规则\"></a>匹配规则</h4><ul>\n<li>re.match()    从第一个字符开始匹配，如果不符合则返回None</li>\n<li>re.search()    匹配全局，返回第一个</li>\n<li>re.findall()      把所有匹配到的字符，放到一个列表返回</li>\n<li>re.split()      以匹配到的字符当做列表分隔符，与findall相反</li>\n<li>re.sub 匹配字符并替换    re.sub( 要替换，替换成，字符串，count=替换次数)</li>\n<li>re.fullmatch    精确匹配，这个字符串必须完全符合规则</li>\n</ul>\n<h4 id=\"表达式规则\"><a href=\"#表达式规则\" class=\"headerlink\" title=\"表达式规则\"></a>表达式规则</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;.&#x27;</span>     默认匹配除\\n之外的任意一个字符，若指定flag DOTALL,则匹配任意字符，包括换行</span><br><span class=\"line\"><span class=\"string\">&#x27;^&#x27;</span>     匹配字符开头，若指定flags MULTILINE,这种也可以匹配上(<span class=\"string\">r&quot;^a&quot;</span>,<span class=\"string\">&quot;\\nabc\\neee&quot;</span>,flags=re.MULTILINE)</span><br><span class=\"line\"><span class=\"string\">&#x27;$&#x27;</span>     匹配字符结尾， 若指定flags MULTILINE ,re.search(<span class=\"string\">&#x27;foo.$&#x27;</span>,<span class=\"string\">&#x27;foo1\\nfoo2\\n&#x27;</span>,re.MULTILINE).group() 会匹配到foo1</span><br><span class=\"line\"><span class=\"string\">&#x27;*&#x27;</span>     匹配*号前的字符<span class=\"number\">0</span>次或多次， re.search(<span class=\"string\">&#x27;a*&#x27;</span>,<span class=\"string\">&#x27;aaaabac&#x27;</span>)  结果<span class=\"string\">&#x27;aaaa&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;+&#x27;</span>     匹配前一个字符<span class=\"number\">1</span>次或多次，re.findall(<span class=\"string\">&quot;ab+&quot;</span>,<span class=\"string\">&quot;ab+cd+abb+bba&quot;</span>) 结果[<span class=\"string\">&#x27;ab&#x27;</span>, <span class=\"string\">&#x27;abb&#x27;</span>]</span><br><span class=\"line\"><span class=\"string\">&#x27;?&#x27;</span>     匹配前一个字符<span class=\"number\">1</span>次或<span class=\"number\">0</span>次 ,re.search(<span class=\"string\">&#x27;b?&#x27;</span>,<span class=\"string\">&#x27;alex&#x27;</span>).group() 匹配b <span class=\"number\">0</span>次</span><br><span class=\"line\"><span class=\"string\">&#x27;&#123;m&#125;&#x27;</span>   匹配前一个字符m次 ,re.search(<span class=\"string\">&#x27;b&#123;3&#125;&#x27;</span>,<span class=\"string\">&#x27;alexbbbs&#x27;</span>).group()  匹配到<span class=\"string\">&#x27;bbb&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#123;n,m&#125;&#x27;</span> 匹配前一个字符n到m次，re.findall(<span class=\"string\">&quot;ab&#123;1,3&#125;&quot;</span>,<span class=\"string\">&quot;abb abc abbcbbb&quot;</span>) 结果<span class=\"string\">&#x27;abb&#x27;</span>, <span class=\"string\">&#x27;ab&#x27;</span>, <span class=\"string\">&#x27;abb&#x27;</span>]</span><br><span class=\"line\"><span class=\"string\">&#x27;|&#x27;</span>     匹配|左或|右的字符，re.search(<span class=\"string\">&quot;abc|ABC&quot;</span>,<span class=\"string\">&quot;ABCBabcCD&quot;</span>).group() 结果<span class=\"string\">&#x27;ABC&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;(...)&#x27;</span> 分组匹配， re.search(<span class=\"string\">&quot;(abc)&#123;2&#125;a(123|45)&quot;</span>, <span class=\"string\">&quot;abcabca456c&quot;</span>).group() 结果为<span class=\"string\">&#x27;abcabca45&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;[...]&#x27;</span> 匹配[]范围里面的字符。[<span class=\"number\">0</span>-<span class=\"number\">9</span>]、[a-z]、[<span class=\"number\">0</span>-9a-zA-Z]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;\\A&#x27;</span>    只从字符开头匹配，re.search(<span class=\"string\">&quot;\\Aabc&quot;</span>,<span class=\"string\">&quot;alexabc&quot;</span>) 是匹配不到的，相当于re.match(<span class=\"string\">&#x27;abc&#x27;</span>,<span class=\"string\">&quot;alexabc&quot;</span>) 或^</span><br><span class=\"line\"><span class=\"string\">&#x27;\\Z&#x27;</span>    匹配字符结尾，同$ </span><br><span class=\"line\"><span class=\"string\">&#x27;\\d&#x27;</span>    匹配数字<span class=\"number\">0</span>-<span class=\"number\">9</span></span><br><span class=\"line\"><span class=\"string\">&#x27;\\D&#x27;</span>    匹配非数字</span><br><span class=\"line\"><span class=\"string\">&#x27;\\w&#x27;</span>    匹配[A-Za-z0-<span class=\"number\">9</span>]</span><br><span class=\"line\"><span class=\"string\">&#x27;\\W&#x27;</span>    匹配非[A-Za-z0-<span class=\"number\">9</span>]</span><br><span class=\"line\"><span class=\"string\">&#x27;s&#x27;</span>     匹配空白字符、\\t、\\n、\\r , re.search(<span class=\"string\">&quot;\\s+&quot;</span>,<span class=\"string\">&quot;ab\\tc1\\n3&quot;</span>).group() 结果 <span class=\"string\">&#x27;\\t&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;(?P...)&#x27;</span> 分组匹配 re.search(<span class=\"string\">&quot;(?P&lt;name&gt;[0-9]&#123;4&#125;) (?P&lt;name&gt;[0-9]&#123;2&#125;) (?P&lt;name&gt;[0-9]&#123;4&#125;)&quot;</span> , <span class=\"built_in\">str</span>)  a.groups()  --&gt;返回元组,     a.groupdict() --&gt;返回字典，key是name</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"re-compile-pattern-flags-0\"><a href=\"#re-compile-pattern-flags-0\" class=\"headerlink\" title=\"re.compile(pattern, flags=0)\"></a>re.compile(pattern, flags=0)</h4><p>把这个规则先编译，这样就不用每次调用都重新编译</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prog = re.<span class=\"built_in\">compile</span>(pattern)</span><br><span class=\"line\">result = prog.match(string)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Flags标志符\"><a href=\"#Flags标志符\" class=\"headerlink\" title=\"Flags标志符\"></a>Flags标志符</h4><ul>\n<li>re.I (re.IGNORECASE): 忽略大小写（括号内是完整写法，下同）</li>\n<li>re.M (MULTILINE): 多行模式，不会忽略 \\n，改变’^’和’$’的行为</li>\n<li>re.S (DOTALL): 改变 ’ . ’ 的行为，能匹配特殊符号</li>\n<li>re.X (re.VERBOSE) 可以给你的表达式写注释，使其更可读，下面这2个意思一样</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = re.<span class=\"built_in\">compile</span> ( <span class=\"string\">r&quot;&quot;&quot;\\d + # the integral part                </span></span><br><span class=\"line\"><span class=\"string\">\t\t\t\t\\. # the decimal point                </span></span><br><span class=\"line\"><span class=\"string\">\t\t\t\t\\d * # some fractional digits&quot;&quot;&quot;</span>,                 </span><br><span class=\"line\">\t\t\t\tre.X)</span><br><span class=\"line\">b = re.<span class=\"built_in\">compile</span>(<span class=\"string\">r&quot;\\d+\\.\\d*&quot;</span>)</span><br></pre></td></tr></table></figure>"},{"title":"Python网络爬虫和信息提取","date":"2020-01-01T15:33:00.000Z","id":"py3","_content":"\n\n\nPython爬虫和信息提取：[8天搞定Python爬虫开发](https://www.bilibili.com/video/BV1x54y1d7ny)\n\n\n\n<!-- more -->\n\n# 网络爬虫和信息提取\n\n1. Requests: 自动爬取网页, 自动提交请求\n2. robots.txt: 网络爬虫排除标准\n3. BeautifulSoup: 解析HTML页面\n\n\n\n## requests库\n\n### requests库入门\n\nthe website is the API\n\n\n\n\n\n####  HTTP协议\n\nHTTP : Hypertext Transform Protocol , 超文本传输协议\n\nHTTP基于\"请求与响应\"模式的 , 无状态的应用层协议\n\n##### URL（Uniform Resource Locator:统一资源定位符),即是网络地址\n\nhttp://host [ :port] [ path]\n\nhost : 合法的Internet主机域名或IP地址\n\nport : 端口号, 默认80\n\npath : 请求资源的路径\n\n\n\n#### HTTP协议对资源的操作\n\nGET\t请求获取URL的资源\n\nHEAD\t请求获取URL的响应报告, 即获取头部信息\n\nPOST\t附加新的数据\n\nPUT\t请求储存一个资源, 覆盖原来的资源\n\nPATCH\t局部更新\n\nDELETE\t请求删除\n\n\n\n#### requests 的7个方法\n\n##### requests.request(P)\t设置一个requests请求,是下面7个的支撑\n\nrequests.request( method, url, **kwargs)\n\nmethod : 请求方式, 对应下面6种, 加上OPTIONS\n\nurl     : 对应链接\n\n**kwargs : 控制访问的参数, 共13个\n\n​\t\tparams : 字典或字节序列, 作为参数添加到url中\n\n​\t\tdata : 字典或字节序列或文件对象, 作为Request的内容\n\n​\t\tjson : json格式的数据, 作为Request的内容\n\n​\t\theader : 字典, HTTP定制头. 改变浏览器的类型\n\n​\t\tcookies : 字典或cookieJar, Request中的cookie\n\n​\t\tauth : 元组, 支持HTTP的认证功能\n\n​\t\tfiles : 字典, 传输文件\n\n​\t\ttimeout : 设定超时时间, 单位s\n\n​\t\tproxies : 字典, 设置访问代理服务器, 增加认证\n\n​\t\tallow_redirects : Ture或False, 默认True, 重定向开关\n\n​\t\tstream : T或F, 默认T, 获取内容立即下载开关\n\n​\t\tverify : T或F, 默认T, 认证SSL证书开关\n\n​\t\tcert : 本地SSL证书路径\n\n\n\n##### requests.get(P)\t获取一个网页的内容\n\n##### requests.post( url, data=None, json=None, **kwargs)\t在后面接上内容\n\n##### requests.put( url, data=None, **kwargs)\t替换全部内容\n\n##### requests.patch( url, data=None, **kwargs)\t修改部分内容\n\n##### requests.head( url, **kwargs)\t获取头部信息,当整个数据比较大的时候\n\n##### requests.delete( url, **kwargs)\t删除\n\n\n\n#### (P) stand for (url, params=None, **kwargs)\n\nurl           :  网页的地址\n\nparams    : 额外参数,以字典或字节流的格式\n\n**kwrags : 12个控制访问的参数\n\n\n\n#### requests库的两个对象\n\nr = requests.get(P)\n\nr : Response 包含爬虫返回的内容, 也包含Request信息\n\nget(P) : Request \n\n\n\n#### Respones对象的属性\n\nr.status_code\t返回一个状态值, 200则代表连接成功, 404或其他表示失败\n\nr.content\t返回内容的二进制格式\n\nr.encoding\t返回编码格式, 从header猜测, 可以改变. 如果hearder不存在charset, 则默认为ISO-8859-1\n\nr.apparent_encoding\t如果上一个不正确, 则从内容中猜测编码形式\n\nr.text\t根据encoding格式返回内容\n\n\n\n#### Requests库的异常\n\nrequests.Timeout\t请求URL超时\n\nrequests.ConnectTimeout\t网络连接超时\n\nrequests.HTTPError\tHTTP错误异常\n\nrequests.ConnectionError\t网络连接错误异常, 如DNS查询失败, 拒绝连接等\n\nrequests.TooManyRedicrets\t超过最大重定向次数\n\nrequests.URLRequired\tURL缺失\n\n\n\n#### Resopnse异常\n\nr.raise_for_status()\t如果返回状态值不是200, 则产生一个错误信息requests.HTTPError\n\n#### 爬取网页的通用代码 : 注重异常处理\n\ndef getHTMLText (url) :\n\n​        try:\n\n​\t\t\t\tr = requests.get(P)\n\n​\t\t\t\tr.raise_for_status()\n\n​\t\t\t\tr.encoding = r.apparent_encoding\n\n​\t\t\t\treturn r.text\n\n​\t\texcept\n\n​\t\t\t\treturn \"产生异常\"\n\n\n\n### 盗亦有道\n\n#### 网络爬虫的尺寸\n\n小规模(爬取网页\\玩转网页): requests库\n\n中规模\\对速度敏感: Scrap库\n\n大规模\\搜索引擎: 定制开发\n\n\n\n#### 网站对爬虫的限制\n\n##### 来源审查: 判断User-Agent进行限制\n\n检查来访的HTTP header头User-Agent域, 只响应浏览器或者友好爬虫的访问\n\n##### 发布公告: Robots协议\n\n告知所有爬虫的爬取策略, 要求爬虫遵守\n\n根目录下的robots.txt文件\n\n​\t/代表根目录\n\n​\t*代表所有\n\n​\t\n\n### Requests库网络爬取实战\n\n##### 京东商品\n\n```python\nimport requests\nurl = \ntry:\n\tr = requests.get(url)\n\tr.raise_for_status()\n\tr.encoding = r.apparent_encoding\n\tprint(r.text[:1000])\nexcept:\n\tprint(\"爬取失败\")\n```\n\n##### 亚马逊商品\n\n```python\nimport requests\nurl = \ntry:\n\tkv = {\"User-Agent\": \"Mozilla/5.0\"}\n\tr = requests.get(url, headers = kv)\n\tr.raise_for_status()\n\tr.encoding = r.apparent_encoding\n\tprint(r.text[...])\nexcept:\n\tprint(\"error\")\n```\n\n##### 百度搜索\n\n```python\nimport requests\nurl = \"www.baidu.com/s\"\ntry:\n\tkv = {\"wd\": Keyword}\n\tr = requests.get(url, params = kv)\n\tprintr(r.requests.url)\n\tr.\n```\n\n##### 图片爬取\n\n```python\nimport requests\nimport os\n\nurl = 图片地址\nroot = \"保存图片的文件夹\"\npath = root + url.split('/')[-1]\n\ntry:\n\tr = requests.get(url)\n\tr.raise_for_status()\n\t\n\tif not os.path.exists(root):\n\t\tos.mkdir(root)\n\tif not os.path.exists(root + path)\n\t\twith open(path, \"wb\") as f:\n\t\tf.write(r.content)\n\t\tf.close()\n\t\tprint(\"sucessfully\")\n\telse:\n\t\tprint(\"the file is exist\")\nexcept:\n\tprint(\"error\")\n```\n\n\n\n\n\n## BeautifulSoup\n\n这个库是解析, 遍历, 维护\"标签树\"的功能库\n\n### 标签\n\n```\n<p class=\"title\"> ... </>  尖括号里包含的内容就是标签\np 标签的名称Name\nclass 即是标签的一个属性Atrributes\n... 是标签的string\n```\n\n\n\n### 基本元素\n\n#### BeautifulSoup 类\n\n一颗BS 对应一个 HTML/XML 文档的全部内容\n\n#### BS解析器\n\n-   bs4 的HTML 解析器: BeautifulSoup(mk, 'html.parser')\n-   lxml 的HTML 解析器: (mk, 'lxml')\n-   lxml 的XML 解析器: 'xml'\n-   html5lib 解析器: 'html5lib'\n\n#### 基本元素\n\n```python\nimport requests\nfrom bs4 import BeautifulSoup\n\nurl = \ntry:\n\t...\nexcept:\n\t...\ndemo = r.text()\nsoup = BeautifulSoup(demo, 'html.parser')\n\n```\n\n\n\n-   Tag\t标签\n\n    ​\t\tsoup.title\n\n    ​\t\tsoup.p 获取标签<p>, 如果有多个, 返回第一个.\n\n    \n\n-   Name    名字    <tap>.name\n\n    ​\t\tsoup.p.name\n\n    \n\n-   Attributes    属性    <tap>.attrs\n\n    ​\t\tsoup.p.attrs['one of attributes']\n\n    ​\t\tsuch as 'class', 'href'\n\n    \n\n-   NavigableString    非属性字符串    <tag>.string\n\n    ​\t\tsoup.string or soup.p.string\n\n    \n\n-   Commet    注释   \n\n    ​\t\t一种特殊的string\n\n\n\n### 基于bs4库的HTML内容遍历方法\n\nHTML的基本格式: 标签树\n\n#### 遍历方式\n\n-   下行\n    -   soup.p.contents    子节点的列表\n    -   .chrildren    子节点的迭代类型, 用于循环\n    -   descendants    子孙节点的迭代类型\n-   上行\n    -   .parent    父辈\n    -   .parents    先辈\n-   平行\n    -   next_sibiling    下一个平行节点的标签\n    -   previous_sibling    上一个平行节点的标签\n    -   next_siblings    迭代类型\n    -   previous_siblings    迭代类型\n\n#### prettify()方法\n\nsoup.prettify()\n\n\n\n\n### 信息标记的三种形式\n\n#### XML   \n\nHTML 是XML 的一个子类\n\n#### JSON\n\n类似字典, 有类型的键值对\n\n#### YAML\n\n无类型的键值对\n\n### 基于bs4的信息提取\n\n-   find()\n-   find_parents()\n-   find_parent()\n-   find_next_siblings()\n-   find_next_sibling()\n-   find_previous_siblings()\n-   find_previous_sibling()\n\n\n\n#### soup.find_all(name, attrs, recursive, string, **kwargs)    返回的是一个列表\n\n##### name\n\n标签的名字, 多个的话[a, b].   name=True, 返回所有标签名字\n\n以b 开头的标签, re.compile(\"b\")\n\n\n\n##### attrs\n\n标注类型\n\n\n\n##### recursive = True\n\n是否对全部子孙遍历\n\n\n\n##### string\n\n对字符串区域检索字符串\n\n\n\n##### kwrags","source":"_posts/lang-py03PythonWebCrawler.md","raw":"---\ntitle: Python网络爬虫和信息提取\ndate: 2020-01-01 23:33:00\nid: py3\ncategories:\n- lang\ntags:\n- py\n---\n\n\n\nPython爬虫和信息提取：[8天搞定Python爬虫开发](https://www.bilibili.com/video/BV1x54y1d7ny)\n\n\n\n<!-- more -->\n\n# 网络爬虫和信息提取\n\n1. Requests: 自动爬取网页, 自动提交请求\n2. robots.txt: 网络爬虫排除标准\n3. BeautifulSoup: 解析HTML页面\n\n\n\n## requests库\n\n### requests库入门\n\nthe website is the API\n\n\n\n\n\n####  HTTP协议\n\nHTTP : Hypertext Transform Protocol , 超文本传输协议\n\nHTTP基于\"请求与响应\"模式的 , 无状态的应用层协议\n\n##### URL（Uniform Resource Locator:统一资源定位符),即是网络地址\n\nhttp://host [ :port] [ path]\n\nhost : 合法的Internet主机域名或IP地址\n\nport : 端口号, 默认80\n\npath : 请求资源的路径\n\n\n\n#### HTTP协议对资源的操作\n\nGET\t请求获取URL的资源\n\nHEAD\t请求获取URL的响应报告, 即获取头部信息\n\nPOST\t附加新的数据\n\nPUT\t请求储存一个资源, 覆盖原来的资源\n\nPATCH\t局部更新\n\nDELETE\t请求删除\n\n\n\n#### requests 的7个方法\n\n##### requests.request(P)\t设置一个requests请求,是下面7个的支撑\n\nrequests.request( method, url, **kwargs)\n\nmethod : 请求方式, 对应下面6种, 加上OPTIONS\n\nurl     : 对应链接\n\n**kwargs : 控制访问的参数, 共13个\n\n​\t\tparams : 字典或字节序列, 作为参数添加到url中\n\n​\t\tdata : 字典或字节序列或文件对象, 作为Request的内容\n\n​\t\tjson : json格式的数据, 作为Request的内容\n\n​\t\theader : 字典, HTTP定制头. 改变浏览器的类型\n\n​\t\tcookies : 字典或cookieJar, Request中的cookie\n\n​\t\tauth : 元组, 支持HTTP的认证功能\n\n​\t\tfiles : 字典, 传输文件\n\n​\t\ttimeout : 设定超时时间, 单位s\n\n​\t\tproxies : 字典, 设置访问代理服务器, 增加认证\n\n​\t\tallow_redirects : Ture或False, 默认True, 重定向开关\n\n​\t\tstream : T或F, 默认T, 获取内容立即下载开关\n\n​\t\tverify : T或F, 默认T, 认证SSL证书开关\n\n​\t\tcert : 本地SSL证书路径\n\n\n\n##### requests.get(P)\t获取一个网页的内容\n\n##### requests.post( url, data=None, json=None, **kwargs)\t在后面接上内容\n\n##### requests.put( url, data=None, **kwargs)\t替换全部内容\n\n##### requests.patch( url, data=None, **kwargs)\t修改部分内容\n\n##### requests.head( url, **kwargs)\t获取头部信息,当整个数据比较大的时候\n\n##### requests.delete( url, **kwargs)\t删除\n\n\n\n#### (P) stand for (url, params=None, **kwargs)\n\nurl           :  网页的地址\n\nparams    : 额外参数,以字典或字节流的格式\n\n**kwrags : 12个控制访问的参数\n\n\n\n#### requests库的两个对象\n\nr = requests.get(P)\n\nr : Response 包含爬虫返回的内容, 也包含Request信息\n\nget(P) : Request \n\n\n\n#### Respones对象的属性\n\nr.status_code\t返回一个状态值, 200则代表连接成功, 404或其他表示失败\n\nr.content\t返回内容的二进制格式\n\nr.encoding\t返回编码格式, 从header猜测, 可以改变. 如果hearder不存在charset, 则默认为ISO-8859-1\n\nr.apparent_encoding\t如果上一个不正确, 则从内容中猜测编码形式\n\nr.text\t根据encoding格式返回内容\n\n\n\n#### Requests库的异常\n\nrequests.Timeout\t请求URL超时\n\nrequests.ConnectTimeout\t网络连接超时\n\nrequests.HTTPError\tHTTP错误异常\n\nrequests.ConnectionError\t网络连接错误异常, 如DNS查询失败, 拒绝连接等\n\nrequests.TooManyRedicrets\t超过最大重定向次数\n\nrequests.URLRequired\tURL缺失\n\n\n\n#### Resopnse异常\n\nr.raise_for_status()\t如果返回状态值不是200, 则产生一个错误信息requests.HTTPError\n\n#### 爬取网页的通用代码 : 注重异常处理\n\ndef getHTMLText (url) :\n\n​        try:\n\n​\t\t\t\tr = requests.get(P)\n\n​\t\t\t\tr.raise_for_status()\n\n​\t\t\t\tr.encoding = r.apparent_encoding\n\n​\t\t\t\treturn r.text\n\n​\t\texcept\n\n​\t\t\t\treturn \"产生异常\"\n\n\n\n### 盗亦有道\n\n#### 网络爬虫的尺寸\n\n小规模(爬取网页\\玩转网页): requests库\n\n中规模\\对速度敏感: Scrap库\n\n大规模\\搜索引擎: 定制开发\n\n\n\n#### 网站对爬虫的限制\n\n##### 来源审查: 判断User-Agent进行限制\n\n检查来访的HTTP header头User-Agent域, 只响应浏览器或者友好爬虫的访问\n\n##### 发布公告: Robots协议\n\n告知所有爬虫的爬取策略, 要求爬虫遵守\n\n根目录下的robots.txt文件\n\n​\t/代表根目录\n\n​\t*代表所有\n\n​\t\n\n### Requests库网络爬取实战\n\n##### 京东商品\n\n```python\nimport requests\nurl = \ntry:\n\tr = requests.get(url)\n\tr.raise_for_status()\n\tr.encoding = r.apparent_encoding\n\tprint(r.text[:1000])\nexcept:\n\tprint(\"爬取失败\")\n```\n\n##### 亚马逊商品\n\n```python\nimport requests\nurl = \ntry:\n\tkv = {\"User-Agent\": \"Mozilla/5.0\"}\n\tr = requests.get(url, headers = kv)\n\tr.raise_for_status()\n\tr.encoding = r.apparent_encoding\n\tprint(r.text[...])\nexcept:\n\tprint(\"error\")\n```\n\n##### 百度搜索\n\n```python\nimport requests\nurl = \"www.baidu.com/s\"\ntry:\n\tkv = {\"wd\": Keyword}\n\tr = requests.get(url, params = kv)\n\tprintr(r.requests.url)\n\tr.\n```\n\n##### 图片爬取\n\n```python\nimport requests\nimport os\n\nurl = 图片地址\nroot = \"保存图片的文件夹\"\npath = root + url.split('/')[-1]\n\ntry:\n\tr = requests.get(url)\n\tr.raise_for_status()\n\t\n\tif not os.path.exists(root):\n\t\tos.mkdir(root)\n\tif not os.path.exists(root + path)\n\t\twith open(path, \"wb\") as f:\n\t\tf.write(r.content)\n\t\tf.close()\n\t\tprint(\"sucessfully\")\n\telse:\n\t\tprint(\"the file is exist\")\nexcept:\n\tprint(\"error\")\n```\n\n\n\n\n\n## BeautifulSoup\n\n这个库是解析, 遍历, 维护\"标签树\"的功能库\n\n### 标签\n\n```\n<p class=\"title\"> ... </>  尖括号里包含的内容就是标签\np 标签的名称Name\nclass 即是标签的一个属性Atrributes\n... 是标签的string\n```\n\n\n\n### 基本元素\n\n#### BeautifulSoup 类\n\n一颗BS 对应一个 HTML/XML 文档的全部内容\n\n#### BS解析器\n\n-   bs4 的HTML 解析器: BeautifulSoup(mk, 'html.parser')\n-   lxml 的HTML 解析器: (mk, 'lxml')\n-   lxml 的XML 解析器: 'xml'\n-   html5lib 解析器: 'html5lib'\n\n#### 基本元素\n\n```python\nimport requests\nfrom bs4 import BeautifulSoup\n\nurl = \ntry:\n\t...\nexcept:\n\t...\ndemo = r.text()\nsoup = BeautifulSoup(demo, 'html.parser')\n\n```\n\n\n\n-   Tag\t标签\n\n    ​\t\tsoup.title\n\n    ​\t\tsoup.p 获取标签<p>, 如果有多个, 返回第一个.\n\n    \n\n-   Name    名字    <tap>.name\n\n    ​\t\tsoup.p.name\n\n    \n\n-   Attributes    属性    <tap>.attrs\n\n    ​\t\tsoup.p.attrs['one of attributes']\n\n    ​\t\tsuch as 'class', 'href'\n\n    \n\n-   NavigableString    非属性字符串    <tag>.string\n\n    ​\t\tsoup.string or soup.p.string\n\n    \n\n-   Commet    注释   \n\n    ​\t\t一种特殊的string\n\n\n\n### 基于bs4库的HTML内容遍历方法\n\nHTML的基本格式: 标签树\n\n#### 遍历方式\n\n-   下行\n    -   soup.p.contents    子节点的列表\n    -   .chrildren    子节点的迭代类型, 用于循环\n    -   descendants    子孙节点的迭代类型\n-   上行\n    -   .parent    父辈\n    -   .parents    先辈\n-   平行\n    -   next_sibiling    下一个平行节点的标签\n    -   previous_sibling    上一个平行节点的标签\n    -   next_siblings    迭代类型\n    -   previous_siblings    迭代类型\n\n#### prettify()方法\n\nsoup.prettify()\n\n\n\n\n### 信息标记的三种形式\n\n#### XML   \n\nHTML 是XML 的一个子类\n\n#### JSON\n\n类似字典, 有类型的键值对\n\n#### YAML\n\n无类型的键值对\n\n### 基于bs4的信息提取\n\n-   find()\n-   find_parents()\n-   find_parent()\n-   find_next_siblings()\n-   find_next_sibling()\n-   find_previous_siblings()\n-   find_previous_sibling()\n\n\n\n#### soup.find_all(name, attrs, recursive, string, **kwargs)    返回的是一个列表\n\n##### name\n\n标签的名字, 多个的话[a, b].   name=True, 返回所有标签名字\n\n以b 开头的标签, re.compile(\"b\")\n\n\n\n##### attrs\n\n标注类型\n\n\n\n##### recursive = True\n\n是否对全部子孙遍历\n\n\n\n##### string\n\n对字符串区域检索字符串\n\n\n\n##### kwrags","slug":"lang-py03PythonWebCrawler","published":1,"updated":"2022-04-16T23:07:53.119Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70tw00235oss5qrk23pk","content":"<p>Python爬虫和信息提取：<a href=\"https://www.bilibili.com/video/BV1x54y1d7ny\">8天搞定Python爬虫开发</a></p>\n<span id=\"more\"></span>\n\n<h1 id=\"网络爬虫和信息提取\"><a href=\"#网络爬虫和信息提取\" class=\"headerlink\" title=\"网络爬虫和信息提取\"></a>网络爬虫和信息提取</h1><ol>\n<li>Requests: 自动爬取网页, 自动提交请求</li>\n<li>robots.txt: 网络爬虫排除标准</li>\n<li>BeautifulSoup: 解析HTML页面</li>\n</ol>\n<h2 id=\"requests库\"><a href=\"#requests库\" class=\"headerlink\" title=\"requests库\"></a>requests库</h2><h3 id=\"requests库入门\"><a href=\"#requests库入门\" class=\"headerlink\" title=\"requests库入门\"></a>requests库入门</h3><p>the website is the API</p>\n<h4 id=\"HTTP协议\"><a href=\"#HTTP协议\" class=\"headerlink\" title=\"HTTP协议\"></a>HTTP协议</h4><p>HTTP : Hypertext Transform Protocol , 超文本传输协议</p>\n<p>HTTP基于”请求与响应”模式的 , 无状态的应用层协议</p>\n<h5 id=\"URL（Uniform-Resource-Locator-统一资源定位符-即是网络地址\"><a href=\"#URL（Uniform-Resource-Locator-统一资源定位符-即是网络地址\" class=\"headerlink\" title=\"URL（Uniform Resource Locator:统一资源定位符),即是网络地址\"></a>URL（Uniform Resource Locator:统一资源定位符),即是网络地址</h5><p><a href=\"http://host/\">http://host</a> [ :port] [ path]</p>\n<p>host : 合法的Internet主机域名或IP地址</p>\n<p>port : 端口号, 默认80</p>\n<p>path : 请求资源的路径</p>\n<h4 id=\"HTTP协议对资源的操作\"><a href=\"#HTTP协议对资源的操作\" class=\"headerlink\" title=\"HTTP协议对资源的操作\"></a>HTTP协议对资源的操作</h4><p>GET    请求获取URL的资源</p>\n<p>HEAD    请求获取URL的响应报告, 即获取头部信息</p>\n<p>POST    附加新的数据</p>\n<p>PUT    请求储存一个资源, 覆盖原来的资源</p>\n<p>PATCH    局部更新</p>\n<p>DELETE    请求删除</p>\n<h4 id=\"requests-的7个方法\"><a href=\"#requests-的7个方法\" class=\"headerlink\" title=\"requests 的7个方法\"></a>requests 的7个方法</h4><h5 id=\"requests-request-P-设置一个requests请求-是下面7个的支撑\"><a href=\"#requests-request-P-设置一个requests请求-是下面7个的支撑\" class=\"headerlink\" title=\"requests.request(P)    设置一个requests请求,是下面7个的支撑\"></a>requests.request(P)    设置一个requests请求,是下面7个的支撑</h5><p>requests.request( method, url, **kwargs)</p>\n<p>method : 请求方式, 对应下面6种, 加上OPTIONS</p>\n<p>url     : 对应链接</p>\n<p>**kwargs : 控制访问的参数, 共13个</p>\n<p>​        params : 字典或字节序列, 作为参数添加到url中</p>\n<p>​        data : 字典或字节序列或文件对象, 作为Request的内容</p>\n<p>​        json : json格式的数据, 作为Request的内容</p>\n<p>​        header : 字典, HTTP定制头. 改变浏览器的类型</p>\n<p>​        cookies : 字典或cookieJar, Request中的cookie</p>\n<p>​        auth : 元组, 支持HTTP的认证功能</p>\n<p>​        files : 字典, 传输文件</p>\n<p>​        timeout : 设定超时时间, 单位s</p>\n<p>​        proxies : 字典, 设置访问代理服务器, 增加认证</p>\n<p>​        allow_redirects : Ture或False, 默认True, 重定向开关</p>\n<p>​        stream : T或F, 默认T, 获取内容立即下载开关</p>\n<p>​        verify : T或F, 默认T, 认证SSL证书开关</p>\n<p>​        cert : 本地SSL证书路径</p>\n<h5 id=\"requests-get-P-获取一个网页的内容\"><a href=\"#requests-get-P-获取一个网页的内容\" class=\"headerlink\" title=\"requests.get(P)    获取一个网页的内容\"></a>requests.get(P)    获取一个网页的内容</h5><h5 id=\"requests-post-url-data-None-json-None-kwargs-在后面接上内容\"><a href=\"#requests-post-url-data-None-json-None-kwargs-在后面接上内容\" class=\"headerlink\" title=\"requests.post( url, data=None, json=None, **kwargs)    在后面接上内容\"></a>requests.post( url, data=None, json=None, **kwargs)    在后面接上内容</h5><h5 id=\"requests-put-url-data-None-kwargs-替换全部内容\"><a href=\"#requests-put-url-data-None-kwargs-替换全部内容\" class=\"headerlink\" title=\"requests.put( url, data=None, **kwargs)    替换全部内容\"></a>requests.put( url, data=None, **kwargs)    替换全部内容</h5><h5 id=\"requests-patch-url-data-None-kwargs-修改部分内容\"><a href=\"#requests-patch-url-data-None-kwargs-修改部分内容\" class=\"headerlink\" title=\"requests.patch( url, data=None, **kwargs)    修改部分内容\"></a>requests.patch( url, data=None, **kwargs)    修改部分内容</h5><h5 id=\"requests-head-url-kwargs-获取头部信息-当整个数据比较大的时候\"><a href=\"#requests-head-url-kwargs-获取头部信息-当整个数据比较大的时候\" class=\"headerlink\" title=\"requests.head( url, **kwargs)    获取头部信息,当整个数据比较大的时候\"></a>requests.head( url, **kwargs)    获取头部信息,当整个数据比较大的时候</h5><h5 id=\"requests-delete-url-kwargs-删除\"><a href=\"#requests-delete-url-kwargs-删除\" class=\"headerlink\" title=\"requests.delete( url, **kwargs)    删除\"></a>requests.delete( url, **kwargs)    删除</h5><h4 id=\"P-stand-for-url-params-None-kwargs\"><a href=\"#P-stand-for-url-params-None-kwargs\" class=\"headerlink\" title=\"(P) stand for (url, params=None, **kwargs)\"></a>(P) stand for (url, params=None, **kwargs)</h4><p>url           :  网页的地址</p>\n<p>params    : 额外参数,以字典或字节流的格式</p>\n<p>**kwrags : 12个控制访问的参数</p>\n<h4 id=\"requests库的两个对象\"><a href=\"#requests库的两个对象\" class=\"headerlink\" title=\"requests库的两个对象\"></a>requests库的两个对象</h4><p>r = requests.get(P)</p>\n<p>r : Response 包含爬虫返回的内容, 也包含Request信息</p>\n<p>get(P) : Request </p>\n<h4 id=\"Respones对象的属性\"><a href=\"#Respones对象的属性\" class=\"headerlink\" title=\"Respones对象的属性\"></a>Respones对象的属性</h4><p>r.status_code    返回一个状态值, 200则代表连接成功, 404或其他表示失败</p>\n<p>r.content    返回内容的二进制格式</p>\n<p>r.encoding    返回编码格式, 从header猜测, 可以改变. 如果hearder不存在charset, 则默认为ISO-8859-1</p>\n<p>r.apparent_encoding    如果上一个不正确, 则从内容中猜测编码形式</p>\n<p>r.text    根据encoding格式返回内容</p>\n<h4 id=\"Requests库的异常\"><a href=\"#Requests库的异常\" class=\"headerlink\" title=\"Requests库的异常\"></a>Requests库的异常</h4><p>requests.Timeout    请求URL超时</p>\n<p>requests.ConnectTimeout    网络连接超时</p>\n<p>requests.HTTPError    HTTP错误异常</p>\n<p>requests.ConnectionError    网络连接错误异常, 如DNS查询失败, 拒绝连接等</p>\n<p>requests.TooManyRedicrets    超过最大重定向次数</p>\n<p>requests.URLRequired    URL缺失</p>\n<h4 id=\"Resopnse异常\"><a href=\"#Resopnse异常\" class=\"headerlink\" title=\"Resopnse异常\"></a>Resopnse异常</h4><p>r.raise_for_status()    如果返回状态值不是200, 则产生一个错误信息requests.HTTPError</p>\n<h4 id=\"爬取网页的通用代码-注重异常处理\"><a href=\"#爬取网页的通用代码-注重异常处理\" class=\"headerlink\" title=\"爬取网页的通用代码 : 注重异常处理\"></a>爬取网页的通用代码 : 注重异常处理</h4><p>def getHTMLText (url) :</p>\n<p>​        try:</p>\n<p>​                r = requests.get(P)</p>\n<p>​                r.raise_for_status()</p>\n<p>​                r.encoding = r.apparent_encoding</p>\n<p>​                return r.text</p>\n<p>​        except</p>\n<p>​                return “产生异常”</p>\n<h3 id=\"盗亦有道\"><a href=\"#盗亦有道\" class=\"headerlink\" title=\"盗亦有道\"></a>盗亦有道</h3><h4 id=\"网络爬虫的尺寸\"><a href=\"#网络爬虫的尺寸\" class=\"headerlink\" title=\"网络爬虫的尺寸\"></a>网络爬虫的尺寸</h4><p>小规模(爬取网页\\玩转网页): requests库</p>\n<p>中规模\\对速度敏感: Scrap库</p>\n<p>大规模\\搜索引擎: 定制开发</p>\n<h4 id=\"网站对爬虫的限制\"><a href=\"#网站对爬虫的限制\" class=\"headerlink\" title=\"网站对爬虫的限制\"></a>网站对爬虫的限制</h4><h5 id=\"来源审查-判断User-Agent进行限制\"><a href=\"#来源审查-判断User-Agent进行限制\" class=\"headerlink\" title=\"来源审查: 判断User-Agent进行限制\"></a>来源审查: 判断User-Agent进行限制</h5><p>检查来访的HTTP header头User-Agent域, 只响应浏览器或者友好爬虫的访问</p>\n<h5 id=\"发布公告-Robots协议\"><a href=\"#发布公告-Robots协议\" class=\"headerlink\" title=\"发布公告: Robots协议\"></a>发布公告: Robots协议</h5><p>告知所有爬虫的爬取策略, 要求爬虫遵守</p>\n<p>根目录下的robots.txt文件</p>\n<p>​    /代表根目录</p>\n<p>​    *代表所有</p>\n<p>​    </p>\n<h3 id=\"Requests库网络爬取实战\"><a href=\"#Requests库网络爬取实战\" class=\"headerlink\" title=\"Requests库网络爬取实战\"></a>Requests库网络爬取实战</h3><h5 id=\"京东商品\"><a href=\"#京东商品\" class=\"headerlink\" title=\"京东商品\"></a>京东商品</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">url = </span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">\tr = requests.get(url)</span><br><span class=\"line\">\tr.raise_for_status()</span><br><span class=\"line\">\tr.encoding = r.apparent_encoding</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(r.text[:<span class=\"number\">1000</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&quot;爬取失败&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"亚马逊商品\"><a href=\"#亚马逊商品\" class=\"headerlink\" title=\"亚马逊商品\"></a>亚马逊商品</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">url = </span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">\tkv = &#123;<span class=\"string\">&quot;User-Agent&quot;</span>: <span class=\"string\">&quot;Mozilla/5.0&quot;</span>&#125;</span><br><span class=\"line\">\tr = requests.get(url, headers = kv)</span><br><span class=\"line\">\tr.raise_for_status()</span><br><span class=\"line\">\tr.encoding = r.apparent_encoding</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(r.text[...])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&quot;error&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"百度搜索\"><a href=\"#百度搜索\" class=\"headerlink\" title=\"百度搜索\"></a>百度搜索</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">url = <span class=\"string\">&quot;www.baidu.com/s&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">\tkv = &#123;<span class=\"string\">&quot;wd&quot;</span>: Keyword&#125;</span><br><span class=\"line\">\tr = requests.get(url, params = kv)</span><br><span class=\"line\">\tprintr(r.requests.url)</span><br><span class=\"line\">\tr.</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"图片爬取\"><a href=\"#图片爬取\" class=\"headerlink\" title=\"图片爬取\"></a>图片爬取</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\">url = 图片地址</span><br><span class=\"line\">root = <span class=\"string\">&quot;保存图片的文件夹&quot;</span></span><br><span class=\"line\">path = root + url.split(<span class=\"string\">&#x27;/&#x27;</span>)[-<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">\tr = requests.get(url)</span><br><span class=\"line\">\tr.raise_for_status()</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(root):</span><br><span class=\"line\">\t\tos.mkdir(root)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(root + path)</span><br><span class=\"line\">\t\t<span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(path, <span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">\t\tf.write(r.content)</span><br><span class=\"line\">\t\tf.close()</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span>(<span class=\"string\">&quot;sucessfully&quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span>(<span class=\"string\">&quot;the file is exist&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&quot;error&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"BeautifulSoup\"><a href=\"#BeautifulSoup\" class=\"headerlink\" title=\"BeautifulSoup\"></a>BeautifulSoup</h2><p>这个库是解析, 遍历, 维护”标签树”的功能库</p>\n<h3 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p <span class=\"built_in\">class</span>=<span class=\"string\">&quot;title&quot;</span>&gt; ... &lt;/&gt;  尖括号里包含的内容就是标签</span><br><span class=\"line\">p 标签的名称Name</span><br><span class=\"line\"><span class=\"built_in\">class</span> 即是标签的一个属性Atrributes</span><br><span class=\"line\">... 是标签的<span class=\"built_in\">string</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"基本元素\"><a href=\"#基本元素\" class=\"headerlink\" title=\"基本元素\"></a>基本元素</h3><h4 id=\"BeautifulSoup-类\"><a href=\"#BeautifulSoup-类\" class=\"headerlink\" title=\"BeautifulSoup 类\"></a>BeautifulSoup 类</h4><p>一颗BS 对应一个 HTML/XML 文档的全部内容</p>\n<h4 id=\"BS解析器\"><a href=\"#BS解析器\" class=\"headerlink\" title=\"BS解析器\"></a>BS解析器</h4><ul>\n<li>  bs4 的HTML 解析器: BeautifulSoup(mk, ‘html.parser’)</li>\n<li>  lxml 的HTML 解析器: (mk, ‘lxml’)</li>\n<li>  lxml 的XML 解析器: ‘xml’</li>\n<li>  html5lib 解析器: ‘html5lib’</li>\n</ul>\n<h4 id=\"基本元素-1\"><a href=\"#基本元素-1\" class=\"headerlink\" title=\"基本元素\"></a>基本元素</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"></span><br><span class=\"line\">url = </span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">\t...</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">\t...</span><br><span class=\"line\">demo = r.text()</span><br><span class=\"line\">soup = BeautifulSoup(demo, <span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><p>Tag    标签</p>\n<p>  ​        soup.title</p>\n<p>  ​        soup.p 获取标签<p>, 如果有多个, 返回第一个.</p>\n</li>\n<li><p>Name    名字    <tap>.name</p>\n<p>  ​        soup.p.name</p>\n</li>\n<li><p>Attributes    属性    <tap>.attrs</p>\n<p>  ​        soup.p.attrs[‘one of attributes’]</p>\n<p>  ​        such as ‘class’, ‘href’</p>\n</li>\n<li><p>NavigableString    非属性字符串    <tag>.string</p>\n<p>  ​        soup.string or soup.p.string</p>\n</li>\n<li><p>Commet    注释   </p>\n<p>  ​        一种特殊的string</p>\n</li>\n</ul>\n<h3 id=\"基于bs4库的HTML内容遍历方法\"><a href=\"#基于bs4库的HTML内容遍历方法\" class=\"headerlink\" title=\"基于bs4库的HTML内容遍历方法\"></a>基于bs4库的HTML内容遍历方法</h3><p>HTML的基本格式: 标签树</p>\n<h4 id=\"遍历方式\"><a href=\"#遍历方式\" class=\"headerlink\" title=\"遍历方式\"></a>遍历方式</h4><ul>\n<li>下行<ul>\n<li>  soup.p.contents    子节点的列表</li>\n<li>  .chrildren    子节点的迭代类型, 用于循环</li>\n<li>  descendants    子孙节点的迭代类型</li>\n</ul>\n</li>\n<li>上行<ul>\n<li>  .parent    父辈</li>\n<li>  .parents    先辈</li>\n</ul>\n</li>\n<li>平行<ul>\n<li>  next_sibiling    下一个平行节点的标签</li>\n<li>  previous_sibling    上一个平行节点的标签</li>\n<li>  next_siblings    迭代类型</li>\n<li>  previous_siblings    迭代类型</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"prettify-方法\"><a href=\"#prettify-方法\" class=\"headerlink\" title=\"prettify()方法\"></a>prettify()方法</h4><p>soup.prettify()</p>\n<h3 id=\"信息标记的三种形式\"><a href=\"#信息标记的三种形式\" class=\"headerlink\" title=\"信息标记的三种形式\"></a>信息标记的三种形式</h3><h4 id=\"XML\"><a href=\"#XML\" class=\"headerlink\" title=\"XML\"></a>XML</h4><p>HTML 是XML 的一个子类</p>\n<h4 id=\"JSON\"><a href=\"#JSON\" class=\"headerlink\" title=\"JSON\"></a>JSON</h4><p>类似字典, 有类型的键值对</p>\n<h4 id=\"YAML\"><a href=\"#YAML\" class=\"headerlink\" title=\"YAML\"></a>YAML</h4><p>无类型的键值对</p>\n<h3 id=\"基于bs4的信息提取\"><a href=\"#基于bs4的信息提取\" class=\"headerlink\" title=\"基于bs4的信息提取\"></a>基于bs4的信息提取</h3><ul>\n<li>  find()</li>\n<li>  find_parents()</li>\n<li>  find_parent()</li>\n<li>  find_next_siblings()</li>\n<li>  find_next_sibling()</li>\n<li>  find_previous_siblings()</li>\n<li>  find_previous_sibling()</li>\n</ul>\n<h4 id=\"soup-find-all-name-attrs-recursive-string-kwargs-返回的是一个列表\"><a href=\"#soup-find-all-name-attrs-recursive-string-kwargs-返回的是一个列表\" class=\"headerlink\" title=\"soup.find_all(name, attrs, recursive, string, **kwargs)    返回的是一个列表\"></a>soup.find_all(name, attrs, recursive, string, **kwargs)    返回的是一个列表</h4><h5 id=\"name\"><a href=\"#name\" class=\"headerlink\" title=\"name\"></a>name</h5><p>标签的名字, 多个的话[a, b].   name=True, 返回所有标签名字</p>\n<p>以b 开头的标签, re.compile(“b”)</p>\n<h5 id=\"attrs\"><a href=\"#attrs\" class=\"headerlink\" title=\"attrs\"></a>attrs</h5><p>标注类型</p>\n<h5 id=\"recursive-True\"><a href=\"#recursive-True\" class=\"headerlink\" title=\"recursive = True\"></a>recursive = True</h5><p>是否对全部子孙遍历</p>\n<h5 id=\"string\"><a href=\"#string\" class=\"headerlink\" title=\"string\"></a>string</h5><p>对字符串区域检索字符串</p>\n<h5 id=\"kwrags\"><a href=\"#kwrags\" class=\"headerlink\" title=\"kwrags\"></a>kwrags</h5>","site":{"data":{}},"excerpt":"<p>Python爬虫和信息提取：<a href=\"https://www.bilibili.com/video/BV1x54y1d7ny\">8天搞定Python爬虫开发</a></p>","more":"<h1 id=\"网络爬虫和信息提取\"><a href=\"#网络爬虫和信息提取\" class=\"headerlink\" title=\"网络爬虫和信息提取\"></a>网络爬虫和信息提取</h1><ol>\n<li>Requests: 自动爬取网页, 自动提交请求</li>\n<li>robots.txt: 网络爬虫排除标准</li>\n<li>BeautifulSoup: 解析HTML页面</li>\n</ol>\n<h2 id=\"requests库\"><a href=\"#requests库\" class=\"headerlink\" title=\"requests库\"></a>requests库</h2><h3 id=\"requests库入门\"><a href=\"#requests库入门\" class=\"headerlink\" title=\"requests库入门\"></a>requests库入门</h3><p>the website is the API</p>\n<h4 id=\"HTTP协议\"><a href=\"#HTTP协议\" class=\"headerlink\" title=\"HTTP协议\"></a>HTTP协议</h4><p>HTTP : Hypertext Transform Protocol , 超文本传输协议</p>\n<p>HTTP基于”请求与响应”模式的 , 无状态的应用层协议</p>\n<h5 id=\"URL（Uniform-Resource-Locator-统一资源定位符-即是网络地址\"><a href=\"#URL（Uniform-Resource-Locator-统一资源定位符-即是网络地址\" class=\"headerlink\" title=\"URL（Uniform Resource Locator:统一资源定位符),即是网络地址\"></a>URL（Uniform Resource Locator:统一资源定位符),即是网络地址</h5><p><a href=\"http://host/\">http://host</a> [ :port] [ path]</p>\n<p>host : 合法的Internet主机域名或IP地址</p>\n<p>port : 端口号, 默认80</p>\n<p>path : 请求资源的路径</p>\n<h4 id=\"HTTP协议对资源的操作\"><a href=\"#HTTP协议对资源的操作\" class=\"headerlink\" title=\"HTTP协议对资源的操作\"></a>HTTP协议对资源的操作</h4><p>GET    请求获取URL的资源</p>\n<p>HEAD    请求获取URL的响应报告, 即获取头部信息</p>\n<p>POST    附加新的数据</p>\n<p>PUT    请求储存一个资源, 覆盖原来的资源</p>\n<p>PATCH    局部更新</p>\n<p>DELETE    请求删除</p>\n<h4 id=\"requests-的7个方法\"><a href=\"#requests-的7个方法\" class=\"headerlink\" title=\"requests 的7个方法\"></a>requests 的7个方法</h4><h5 id=\"requests-request-P-设置一个requests请求-是下面7个的支撑\"><a href=\"#requests-request-P-设置一个requests请求-是下面7个的支撑\" class=\"headerlink\" title=\"requests.request(P)    设置一个requests请求,是下面7个的支撑\"></a>requests.request(P)    设置一个requests请求,是下面7个的支撑</h5><p>requests.request( method, url, **kwargs)</p>\n<p>method : 请求方式, 对应下面6种, 加上OPTIONS</p>\n<p>url     : 对应链接</p>\n<p>**kwargs : 控制访问的参数, 共13个</p>\n<p>​        params : 字典或字节序列, 作为参数添加到url中</p>\n<p>​        data : 字典或字节序列或文件对象, 作为Request的内容</p>\n<p>​        json : json格式的数据, 作为Request的内容</p>\n<p>​        header : 字典, HTTP定制头. 改变浏览器的类型</p>\n<p>​        cookies : 字典或cookieJar, Request中的cookie</p>\n<p>​        auth : 元组, 支持HTTP的认证功能</p>\n<p>​        files : 字典, 传输文件</p>\n<p>​        timeout : 设定超时时间, 单位s</p>\n<p>​        proxies : 字典, 设置访问代理服务器, 增加认证</p>\n<p>​        allow_redirects : Ture或False, 默认True, 重定向开关</p>\n<p>​        stream : T或F, 默认T, 获取内容立即下载开关</p>\n<p>​        verify : T或F, 默认T, 认证SSL证书开关</p>\n<p>​        cert : 本地SSL证书路径</p>\n<h5 id=\"requests-get-P-获取一个网页的内容\"><a href=\"#requests-get-P-获取一个网页的内容\" class=\"headerlink\" title=\"requests.get(P)    获取一个网页的内容\"></a>requests.get(P)    获取一个网页的内容</h5><h5 id=\"requests-post-url-data-None-json-None-kwargs-在后面接上内容\"><a href=\"#requests-post-url-data-None-json-None-kwargs-在后面接上内容\" class=\"headerlink\" title=\"requests.post( url, data=None, json=None, **kwargs)    在后面接上内容\"></a>requests.post( url, data=None, json=None, **kwargs)    在后面接上内容</h5><h5 id=\"requests-put-url-data-None-kwargs-替换全部内容\"><a href=\"#requests-put-url-data-None-kwargs-替换全部内容\" class=\"headerlink\" title=\"requests.put( url, data=None, **kwargs)    替换全部内容\"></a>requests.put( url, data=None, **kwargs)    替换全部内容</h5><h5 id=\"requests-patch-url-data-None-kwargs-修改部分内容\"><a href=\"#requests-patch-url-data-None-kwargs-修改部分内容\" class=\"headerlink\" title=\"requests.patch( url, data=None, **kwargs)    修改部分内容\"></a>requests.patch( url, data=None, **kwargs)    修改部分内容</h5><h5 id=\"requests-head-url-kwargs-获取头部信息-当整个数据比较大的时候\"><a href=\"#requests-head-url-kwargs-获取头部信息-当整个数据比较大的时候\" class=\"headerlink\" title=\"requests.head( url, **kwargs)    获取头部信息,当整个数据比较大的时候\"></a>requests.head( url, **kwargs)    获取头部信息,当整个数据比较大的时候</h5><h5 id=\"requests-delete-url-kwargs-删除\"><a href=\"#requests-delete-url-kwargs-删除\" class=\"headerlink\" title=\"requests.delete( url, **kwargs)    删除\"></a>requests.delete( url, **kwargs)    删除</h5><h4 id=\"P-stand-for-url-params-None-kwargs\"><a href=\"#P-stand-for-url-params-None-kwargs\" class=\"headerlink\" title=\"(P) stand for (url, params=None, **kwargs)\"></a>(P) stand for (url, params=None, **kwargs)</h4><p>url           :  网页的地址</p>\n<p>params    : 额外参数,以字典或字节流的格式</p>\n<p>**kwrags : 12个控制访问的参数</p>\n<h4 id=\"requests库的两个对象\"><a href=\"#requests库的两个对象\" class=\"headerlink\" title=\"requests库的两个对象\"></a>requests库的两个对象</h4><p>r = requests.get(P)</p>\n<p>r : Response 包含爬虫返回的内容, 也包含Request信息</p>\n<p>get(P) : Request </p>\n<h4 id=\"Respones对象的属性\"><a href=\"#Respones对象的属性\" class=\"headerlink\" title=\"Respones对象的属性\"></a>Respones对象的属性</h4><p>r.status_code    返回一个状态值, 200则代表连接成功, 404或其他表示失败</p>\n<p>r.content    返回内容的二进制格式</p>\n<p>r.encoding    返回编码格式, 从header猜测, 可以改变. 如果hearder不存在charset, 则默认为ISO-8859-1</p>\n<p>r.apparent_encoding    如果上一个不正确, 则从内容中猜测编码形式</p>\n<p>r.text    根据encoding格式返回内容</p>\n<h4 id=\"Requests库的异常\"><a href=\"#Requests库的异常\" class=\"headerlink\" title=\"Requests库的异常\"></a>Requests库的异常</h4><p>requests.Timeout    请求URL超时</p>\n<p>requests.ConnectTimeout    网络连接超时</p>\n<p>requests.HTTPError    HTTP错误异常</p>\n<p>requests.ConnectionError    网络连接错误异常, 如DNS查询失败, 拒绝连接等</p>\n<p>requests.TooManyRedicrets    超过最大重定向次数</p>\n<p>requests.URLRequired    URL缺失</p>\n<h4 id=\"Resopnse异常\"><a href=\"#Resopnse异常\" class=\"headerlink\" title=\"Resopnse异常\"></a>Resopnse异常</h4><p>r.raise_for_status()    如果返回状态值不是200, 则产生一个错误信息requests.HTTPError</p>\n<h4 id=\"爬取网页的通用代码-注重异常处理\"><a href=\"#爬取网页的通用代码-注重异常处理\" class=\"headerlink\" title=\"爬取网页的通用代码 : 注重异常处理\"></a>爬取网页的通用代码 : 注重异常处理</h4><p>def getHTMLText (url) :</p>\n<p>​        try:</p>\n<p>​                r = requests.get(P)</p>\n<p>​                r.raise_for_status()</p>\n<p>​                r.encoding = r.apparent_encoding</p>\n<p>​                return r.text</p>\n<p>​        except</p>\n<p>​                return “产生异常”</p>\n<h3 id=\"盗亦有道\"><a href=\"#盗亦有道\" class=\"headerlink\" title=\"盗亦有道\"></a>盗亦有道</h3><h4 id=\"网络爬虫的尺寸\"><a href=\"#网络爬虫的尺寸\" class=\"headerlink\" title=\"网络爬虫的尺寸\"></a>网络爬虫的尺寸</h4><p>小规模(爬取网页\\玩转网页): requests库</p>\n<p>中规模\\对速度敏感: Scrap库</p>\n<p>大规模\\搜索引擎: 定制开发</p>\n<h4 id=\"网站对爬虫的限制\"><a href=\"#网站对爬虫的限制\" class=\"headerlink\" title=\"网站对爬虫的限制\"></a>网站对爬虫的限制</h4><h5 id=\"来源审查-判断User-Agent进行限制\"><a href=\"#来源审查-判断User-Agent进行限制\" class=\"headerlink\" title=\"来源审查: 判断User-Agent进行限制\"></a>来源审查: 判断User-Agent进行限制</h5><p>检查来访的HTTP header头User-Agent域, 只响应浏览器或者友好爬虫的访问</p>\n<h5 id=\"发布公告-Robots协议\"><a href=\"#发布公告-Robots协议\" class=\"headerlink\" title=\"发布公告: Robots协议\"></a>发布公告: Robots协议</h5><p>告知所有爬虫的爬取策略, 要求爬虫遵守</p>\n<p>根目录下的robots.txt文件</p>\n<p>​    /代表根目录</p>\n<p>​    *代表所有</p>\n<p>​    </p>\n<h3 id=\"Requests库网络爬取实战\"><a href=\"#Requests库网络爬取实战\" class=\"headerlink\" title=\"Requests库网络爬取实战\"></a>Requests库网络爬取实战</h3><h5 id=\"京东商品\"><a href=\"#京东商品\" class=\"headerlink\" title=\"京东商品\"></a>京东商品</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">url = </span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">\tr = requests.get(url)</span><br><span class=\"line\">\tr.raise_for_status()</span><br><span class=\"line\">\tr.encoding = r.apparent_encoding</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(r.text[:<span class=\"number\">1000</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&quot;爬取失败&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"亚马逊商品\"><a href=\"#亚马逊商品\" class=\"headerlink\" title=\"亚马逊商品\"></a>亚马逊商品</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">url = </span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">\tkv = &#123;<span class=\"string\">&quot;User-Agent&quot;</span>: <span class=\"string\">&quot;Mozilla/5.0&quot;</span>&#125;</span><br><span class=\"line\">\tr = requests.get(url, headers = kv)</span><br><span class=\"line\">\tr.raise_for_status()</span><br><span class=\"line\">\tr.encoding = r.apparent_encoding</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(r.text[...])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&quot;error&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"百度搜索\"><a href=\"#百度搜索\" class=\"headerlink\" title=\"百度搜索\"></a>百度搜索</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">url = <span class=\"string\">&quot;www.baidu.com/s&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">\tkv = &#123;<span class=\"string\">&quot;wd&quot;</span>: Keyword&#125;</span><br><span class=\"line\">\tr = requests.get(url, params = kv)</span><br><span class=\"line\">\tprintr(r.requests.url)</span><br><span class=\"line\">\tr.</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"图片爬取\"><a href=\"#图片爬取\" class=\"headerlink\" title=\"图片爬取\"></a>图片爬取</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\">url = 图片地址</span><br><span class=\"line\">root = <span class=\"string\">&quot;保存图片的文件夹&quot;</span></span><br><span class=\"line\">path = root + url.split(<span class=\"string\">&#x27;/&#x27;</span>)[-<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">\tr = requests.get(url)</span><br><span class=\"line\">\tr.raise_for_status()</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(root):</span><br><span class=\"line\">\t\tos.mkdir(root)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(root + path)</span><br><span class=\"line\">\t\t<span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(path, <span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">\t\tf.write(r.content)</span><br><span class=\"line\">\t\tf.close()</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span>(<span class=\"string\">&quot;sucessfully&quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span>(<span class=\"string\">&quot;the file is exist&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&quot;error&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"BeautifulSoup\"><a href=\"#BeautifulSoup\" class=\"headerlink\" title=\"BeautifulSoup\"></a>BeautifulSoup</h2><p>这个库是解析, 遍历, 维护”标签树”的功能库</p>\n<h3 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p <span class=\"built_in\">class</span>=<span class=\"string\">&quot;title&quot;</span>&gt; ... &lt;/&gt;  尖括号里包含的内容就是标签</span><br><span class=\"line\">p 标签的名称Name</span><br><span class=\"line\"><span class=\"built_in\">class</span> 即是标签的一个属性Atrributes</span><br><span class=\"line\">... 是标签的<span class=\"built_in\">string</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"基本元素\"><a href=\"#基本元素\" class=\"headerlink\" title=\"基本元素\"></a>基本元素</h3><h4 id=\"BeautifulSoup-类\"><a href=\"#BeautifulSoup-类\" class=\"headerlink\" title=\"BeautifulSoup 类\"></a>BeautifulSoup 类</h4><p>一颗BS 对应一个 HTML/XML 文档的全部内容</p>\n<h4 id=\"BS解析器\"><a href=\"#BS解析器\" class=\"headerlink\" title=\"BS解析器\"></a>BS解析器</h4><ul>\n<li>  bs4 的HTML 解析器: BeautifulSoup(mk, ‘html.parser’)</li>\n<li>  lxml 的HTML 解析器: (mk, ‘lxml’)</li>\n<li>  lxml 的XML 解析器: ‘xml’</li>\n<li>  html5lib 解析器: ‘html5lib’</li>\n</ul>\n<h4 id=\"基本元素-1\"><a href=\"#基本元素-1\" class=\"headerlink\" title=\"基本元素\"></a>基本元素</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"></span><br><span class=\"line\">url = </span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">\t...</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">\t...</span><br><span class=\"line\">demo = r.text()</span><br><span class=\"line\">soup = BeautifulSoup(demo, <span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><p>Tag    标签</p>\n<p>  ​        soup.title</p>\n<p>  ​        soup.p 获取标签<p>, 如果有多个, 返回第一个.</p>\n</li>\n<li><p>Name    名字    <tap>.name</p>\n<p>  ​        soup.p.name</p>\n</li>\n<li><p>Attributes    属性    <tap>.attrs</p>\n<p>  ​        soup.p.attrs[‘one of attributes’]</p>\n<p>  ​        such as ‘class’, ‘href’</p>\n</li>\n<li><p>NavigableString    非属性字符串    <tag>.string</p>\n<p>  ​        soup.string or soup.p.string</p>\n</li>\n<li><p>Commet    注释   </p>\n<p>  ​        一种特殊的string</p>\n</li>\n</ul>\n<h3 id=\"基于bs4库的HTML内容遍历方法\"><a href=\"#基于bs4库的HTML内容遍历方法\" class=\"headerlink\" title=\"基于bs4库的HTML内容遍历方法\"></a>基于bs4库的HTML内容遍历方法</h3><p>HTML的基本格式: 标签树</p>\n<h4 id=\"遍历方式\"><a href=\"#遍历方式\" class=\"headerlink\" title=\"遍历方式\"></a>遍历方式</h4><ul>\n<li>下行<ul>\n<li>  soup.p.contents    子节点的列表</li>\n<li>  .chrildren    子节点的迭代类型, 用于循环</li>\n<li>  descendants    子孙节点的迭代类型</li>\n</ul>\n</li>\n<li>上行<ul>\n<li>  .parent    父辈</li>\n<li>  .parents    先辈</li>\n</ul>\n</li>\n<li>平行<ul>\n<li>  next_sibiling    下一个平行节点的标签</li>\n<li>  previous_sibling    上一个平行节点的标签</li>\n<li>  next_siblings    迭代类型</li>\n<li>  previous_siblings    迭代类型</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"prettify-方法\"><a href=\"#prettify-方法\" class=\"headerlink\" title=\"prettify()方法\"></a>prettify()方法</h4><p>soup.prettify()</p>\n<h3 id=\"信息标记的三种形式\"><a href=\"#信息标记的三种形式\" class=\"headerlink\" title=\"信息标记的三种形式\"></a>信息标记的三种形式</h3><h4 id=\"XML\"><a href=\"#XML\" class=\"headerlink\" title=\"XML\"></a>XML</h4><p>HTML 是XML 的一个子类</p>\n<h4 id=\"JSON\"><a href=\"#JSON\" class=\"headerlink\" title=\"JSON\"></a>JSON</h4><p>类似字典, 有类型的键值对</p>\n<h4 id=\"YAML\"><a href=\"#YAML\" class=\"headerlink\" title=\"YAML\"></a>YAML</h4><p>无类型的键值对</p>\n<h3 id=\"基于bs4的信息提取\"><a href=\"#基于bs4的信息提取\" class=\"headerlink\" title=\"基于bs4的信息提取\"></a>基于bs4的信息提取</h3><ul>\n<li>  find()</li>\n<li>  find_parents()</li>\n<li>  find_parent()</li>\n<li>  find_next_siblings()</li>\n<li>  find_next_sibling()</li>\n<li>  find_previous_siblings()</li>\n<li>  find_previous_sibling()</li>\n</ul>\n<h4 id=\"soup-find-all-name-attrs-recursive-string-kwargs-返回的是一个列表\"><a href=\"#soup-find-all-name-attrs-recursive-string-kwargs-返回的是一个列表\" class=\"headerlink\" title=\"soup.find_all(name, attrs, recursive, string, **kwargs)    返回的是一个列表\"></a>soup.find_all(name, attrs, recursive, string, **kwargs)    返回的是一个列表</h4><h5 id=\"name\"><a href=\"#name\" class=\"headerlink\" title=\"name\"></a>name</h5><p>标签的名字, 多个的话[a, b].   name=True, 返回所有标签名字</p>\n<p>以b 开头的标签, re.compile(“b”)</p>\n<h5 id=\"attrs\"><a href=\"#attrs\" class=\"headerlink\" title=\"attrs\"></a>attrs</h5><p>标注类型</p>\n<h5 id=\"recursive-True\"><a href=\"#recursive-True\" class=\"headerlink\" title=\"recursive = True\"></a>recursive = True</h5><p>是否对全部子孙遍历</p>\n<h5 id=\"string\"><a href=\"#string\" class=\"headerlink\" title=\"string\"></a>string</h5><p>对字符串区域检索字符串</p>\n<h5 id=\"kwrags\"><a href=\"#kwrags\" class=\"headerlink\" title=\"kwrags\"></a>kwrags</h5>"},{"title":"Python Mooc笔记","date":"2020-01-01T15:00:00.000Z","id":"py1","_content":"\n\n\n大一下学期，2020年上半年，疫情在家上网课，当时看的Python所做的笔记。\n\nPython常用的语法，各种库的应用以及主函数的定义。\n\n\n\n<!-- more -->\n\n\n\n# Python MOOC\n\n### 数据类型\n\n##### 不确定尾数\n\n十进制转化成二进制，产生误差，转化回十进制时，会产生不确定尾速10**-16\n\n0.1 + 0.2 == 0.3     ----> False\n\nround( 0.1 + 0.3 ) == 0.3 ---->True\n\n##### 科学计数法\n\n<a>e<b> == a*(10**b)\n\n##### 复数\n\na + b j\n\nz.real  ---->获得实部\n\nz.imag  ---->获得虚部\n\n##### 字符串\n\n![](C:\\Users\\10956\\Desktop\\微信截图_20200318204634.png)\n\n\n\n### 运算\n\n##### 数值运算\n\nabs(value)   绝对值\n\ndivmod(x,y)   返回(商,余数)\n\npow(a,b,z)   a**b%z\n\nround(x,a)    四舍五入几位\n\n\n\n### time 库的使用\n\n##### 获取时间\n\ntime.time()    浮点数\n\ntime.ctime()    人能看\n\ntime.gmtime()    计算机可处理\n\n##### 时间格式化\n\n time.shrftime(tpl , ts)\n\n###### \t\t\t\t\ttime.shrftime(\"%Y-%m-%d  %H:%M:%S\" , time.gmtime )\n\n###### %Y    %m数字    %B%b英文    %d    %A%a星期    %H 24h  %I 12h     %p  pmam    %M    %S\n\ntime.strptime(str , tpl)\n\n##### 程序计时\n\ntime.perf_counter()\n\n​\tstart = ...    end = ...   time = end - start\n\n sleep(s)\n\n##### perf_counter()和process_time()的不同\n\n它们常用于对一段代码计算运行时间\n\nperf_counter()会记录sleep()的时间\n\n而process_time()不会\n\n\n\n### timeit模块\n\ntimeit . timeit ( function  ,  count )  执行function ,次数为count次 , 返回运行的时间\n\n\n\n### tqmd模块:进度条配置模块\n\ntqmd.tqmd( range() )    \n\n\n\n### 程序控制结构\n\n##### if ...else   的紧凑模式（三元表达式）\n\n例如：  print( \" { } \" .format{ \"对\" if  num > 10 else \"错\"  }  )\n\n##### 异常处理结构\n\n```python\ntry:\n    < >        \nexcept:\n    < >\t\t\t\t#如果try语句出现异常，则运行这个内容\nelse:\n    < >\t\t\t\t#如果不出现异常，奖励性运行这个内容\nfinally:\n    < >\t\t\t\t#最后一定要运行的，无论有没有发生异常\n```\n\n##### print 的一个使用\n\n以 某个字符 结尾：print( i , end = \"   char  \"  )\n\n\n\n### Random 库\n\n##### 基本函数\n\nrandom .seed(  )  如果没有参数，则默认是随系统时间改变，不可复现\n\n​\t\t\t\t\t\t\t如果有参数，则是某以固定的随机序列，每次重新调用的时候，都是一样的随机数。\n\nrandom .random()  是0到1的随机数\n\n##### 扩展随机数函数\n\n```python\nrandom.ranint( a , b )    #产生一个[a,b]之间的整数\nrandom.shuffle( seq ) \t  #对序列seq进行重新排序\nrandom.choice( seq )\t  #返回一个seq的元素\nrandom.ranrange(a,b[,c])  #产生一个a到b，步长为c的整数\nrandom.uniform(a , b) \t  #产生一个[a,b]之间的小数\nrandom.getranbits(k)  \t  #产生一个k比特长的随机整数\n```\n\n### _ _name__  =='_  _ _ main_ _'\n\n如果没有的话,程序就会从第一个函数开始执行\n\nmain函数调用这个函数之后,又会执行一遍\n\n如果用了这个的话,程序就会在main函数开始执行\n\n\n\n\n\n\n\n## jieba库的使用\n\n### jieba.lcut(str, cut_all = False)\n\n### jieba.cut_for_search( str )\n\n\n\n## wordcloud库\n\n生成一个word cloud对象\tw = wordcloud.WordCloud(width=400, height=200, font_size=2, font_path=None, max_font=根据高度自动调节, min_font=4, background_color=\"black\", font_step=2, max_words=200, stop_words={\"\",\"} , mask=)\n\nw.generate(str)\n\nw.to_file(filename)","source":"_posts/lang-py01PythonMoocNotes.md","raw":"---\ntitle: Python Mooc笔记\ndate: 2020-01-01 23:00:00\nid: py1\ncategories:\n- lang\ntags:\n- py\n---\n\n\n\n大一下学期，2020年上半年，疫情在家上网课，当时看的Python所做的笔记。\n\nPython常用的语法，各种库的应用以及主函数的定义。\n\n\n\n<!-- more -->\n\n\n\n# Python MOOC\n\n### 数据类型\n\n##### 不确定尾数\n\n十进制转化成二进制，产生误差，转化回十进制时，会产生不确定尾速10**-16\n\n0.1 + 0.2 == 0.3     ----> False\n\nround( 0.1 + 0.3 ) == 0.3 ---->True\n\n##### 科学计数法\n\n<a>e<b> == a*(10**b)\n\n##### 复数\n\na + b j\n\nz.real  ---->获得实部\n\nz.imag  ---->获得虚部\n\n##### 字符串\n\n![](C:\\Users\\10956\\Desktop\\微信截图_20200318204634.png)\n\n\n\n### 运算\n\n##### 数值运算\n\nabs(value)   绝对值\n\ndivmod(x,y)   返回(商,余数)\n\npow(a,b,z)   a**b%z\n\nround(x,a)    四舍五入几位\n\n\n\n### time 库的使用\n\n##### 获取时间\n\ntime.time()    浮点数\n\ntime.ctime()    人能看\n\ntime.gmtime()    计算机可处理\n\n##### 时间格式化\n\n time.shrftime(tpl , ts)\n\n###### \t\t\t\t\ttime.shrftime(\"%Y-%m-%d  %H:%M:%S\" , time.gmtime )\n\n###### %Y    %m数字    %B%b英文    %d    %A%a星期    %H 24h  %I 12h     %p  pmam    %M    %S\n\ntime.strptime(str , tpl)\n\n##### 程序计时\n\ntime.perf_counter()\n\n​\tstart = ...    end = ...   time = end - start\n\n sleep(s)\n\n##### perf_counter()和process_time()的不同\n\n它们常用于对一段代码计算运行时间\n\nperf_counter()会记录sleep()的时间\n\n而process_time()不会\n\n\n\n### timeit模块\n\ntimeit . timeit ( function  ,  count )  执行function ,次数为count次 , 返回运行的时间\n\n\n\n### tqmd模块:进度条配置模块\n\ntqmd.tqmd( range() )    \n\n\n\n### 程序控制结构\n\n##### if ...else   的紧凑模式（三元表达式）\n\n例如：  print( \" { } \" .format{ \"对\" if  num > 10 else \"错\"  }  )\n\n##### 异常处理结构\n\n```python\ntry:\n    < >        \nexcept:\n    < >\t\t\t\t#如果try语句出现异常，则运行这个内容\nelse:\n    < >\t\t\t\t#如果不出现异常，奖励性运行这个内容\nfinally:\n    < >\t\t\t\t#最后一定要运行的，无论有没有发生异常\n```\n\n##### print 的一个使用\n\n以 某个字符 结尾：print( i , end = \"   char  \"  )\n\n\n\n### Random 库\n\n##### 基本函数\n\nrandom .seed(  )  如果没有参数，则默认是随系统时间改变，不可复现\n\n​\t\t\t\t\t\t\t如果有参数，则是某以固定的随机序列，每次重新调用的时候，都是一样的随机数。\n\nrandom .random()  是0到1的随机数\n\n##### 扩展随机数函数\n\n```python\nrandom.ranint( a , b )    #产生一个[a,b]之间的整数\nrandom.shuffle( seq ) \t  #对序列seq进行重新排序\nrandom.choice( seq )\t  #返回一个seq的元素\nrandom.ranrange(a,b[,c])  #产生一个a到b，步长为c的整数\nrandom.uniform(a , b) \t  #产生一个[a,b]之间的小数\nrandom.getranbits(k)  \t  #产生一个k比特长的随机整数\n```\n\n### _ _name__  =='_  _ _ main_ _'\n\n如果没有的话,程序就会从第一个函数开始执行\n\nmain函数调用这个函数之后,又会执行一遍\n\n如果用了这个的话,程序就会在main函数开始执行\n\n\n\n\n\n\n\n## jieba库的使用\n\n### jieba.lcut(str, cut_all = False)\n\n### jieba.cut_for_search( str )\n\n\n\n## wordcloud库\n\n生成一个word cloud对象\tw = wordcloud.WordCloud(width=400, height=200, font_size=2, font_path=None, max_font=根据高度自动调节, min_font=4, background_color=\"black\", font_step=2, max_words=200, stop_words={\"\",\"} , mask=)\n\nw.generate(str)\n\nw.to_file(filename)","slug":"lang-py01PythonMoocNotes","published":1,"updated":"2022-04-16T23:07:26.724Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70ty00285oss6sxx1yia","content":"<p>大一下学期，2020年上半年，疫情在家上网课，当时看的Python所做的笔记。</p>\n<p>Python常用的语法，各种库的应用以及主函数的定义。</p>\n<span id=\"more\"></span>\n\n\n\n<h1 id=\"Python-MOOC\"><a href=\"#Python-MOOC\" class=\"headerlink\" title=\"Python MOOC\"></a>Python MOOC</h1><h3 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3><h5 id=\"不确定尾数\"><a href=\"#不确定尾数\" class=\"headerlink\" title=\"不确定尾数\"></a>不确定尾数</h5><p>十进制转化成二进制，产生误差，转化回十进制时，会产生不确定尾速10**-16</p>\n<p>0.1 + 0.2 == 0.3     —-&gt; False</p>\n<p>round( 0.1 + 0.3 ) == 0.3 —-&gt;True</p>\n<h5 id=\"科学计数法\"><a href=\"#科学计数法\" class=\"headerlink\" title=\"科学计数法\"></a>科学计数法</h5><p><a>e<b> == a*(10**b)</p>\n<h5 id=\"复数\"><a href=\"#复数\" class=\"headerlink\" title=\"复数\"></a>复数</h5><p>a + b j</p>\n<p>z.real  —-&gt;获得实部</p>\n<p>z.imag  —-&gt;获得虚部</p>\n<h5 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h5><p><img src=\"C:\\Users\\10956\\Desktop\\微信截图_20200318204634.png\"></p>\n<h3 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h3><h5 id=\"数值运算\"><a href=\"#数值运算\" class=\"headerlink\" title=\"数值运算\"></a>数值运算</h5><p>abs(value)   绝对值</p>\n<p>divmod(x,y)   返回(商,余数)</p>\n<p>pow(a,b,z)   a**b%z</p>\n<p>round(x,a)    四舍五入几位</p>\n<h3 id=\"time-库的使用\"><a href=\"#time-库的使用\" class=\"headerlink\" title=\"time 库的使用\"></a>time 库的使用</h3><h5 id=\"获取时间\"><a href=\"#获取时间\" class=\"headerlink\" title=\"获取时间\"></a>获取时间</h5><p>time.time()    浮点数</p>\n<p>time.ctime()    人能看</p>\n<p>time.gmtime()    计算机可处理</p>\n<h5 id=\"时间格式化\"><a href=\"#时间格式化\" class=\"headerlink\" title=\"时间格式化\"></a>时间格式化</h5><p> time.shrftime(tpl , ts)</p>\n<h6 id=\"time-shrftime-“-Y-m-d-H-M-S”-time-gmtime\"><a href=\"#time-shrftime-“-Y-m-d-H-M-S”-time-gmtime\" class=\"headerlink\" title=\"time.shrftime(“%Y-%m-%d  %H:%M:%S” , time.gmtime )\"></a>time.shrftime(“%Y-%m-%d  %H:%M:%S” , time.gmtime )</h6><h6 id=\"Y-m数字-B-b英文-d-A-a星期-H-24h-I-12h-p-pmam-M-S\"><a href=\"#Y-m数字-B-b英文-d-A-a星期-H-24h-I-12h-p-pmam-M-S\" class=\"headerlink\" title=\"%Y    %m数字    %B%b英文    %d    %A%a星期    %H 24h  %I 12h     %p  pmam    %M    %S\"></a>%Y    %m数字    %B%b英文    %d    %A%a星期    %H 24h  %I 12h     %p  pmam    %M    %S</h6><p>time.strptime(str , tpl)</p>\n<h5 id=\"程序计时\"><a href=\"#程序计时\" class=\"headerlink\" title=\"程序计时\"></a>程序计时</h5><p>time.perf_counter()</p>\n<p>​    start = …    end = …   time = end - start</p>\n<p> sleep(s)</p>\n<h5 id=\"perf-counter-和process-time-的不同\"><a href=\"#perf-counter-和process-time-的不同\" class=\"headerlink\" title=\"perf_counter()和process_time()的不同\"></a>perf_counter()和process_time()的不同</h5><p>它们常用于对一段代码计算运行时间</p>\n<p>perf_counter()会记录sleep()的时间</p>\n<p>而process_time()不会</p>\n<h3 id=\"timeit模块\"><a href=\"#timeit模块\" class=\"headerlink\" title=\"timeit模块\"></a>timeit模块</h3><p>timeit . timeit ( function  ,  count )  执行function ,次数为count次 , 返回运行的时间</p>\n<h3 id=\"tqmd模块-进度条配置模块\"><a href=\"#tqmd模块-进度条配置模块\" class=\"headerlink\" title=\"tqmd模块:进度条配置模块\"></a>tqmd模块:进度条配置模块</h3><p>tqmd.tqmd( range() )    </p>\n<h3 id=\"程序控制结构\"><a href=\"#程序控制结构\" class=\"headerlink\" title=\"程序控制结构\"></a>程序控制结构</h3><h5 id=\"if-…else-的紧凑模式（三元表达式）\"><a href=\"#if-…else-的紧凑模式（三元表达式）\" class=\"headerlink\" title=\"if …else   的紧凑模式（三元表达式）\"></a>if …else   的紧凑模式（三元表达式）</h5><p>例如：  print( “ { } “ .format{ “对” if  num &gt; 10 else “错”  }  )</p>\n<h5 id=\"异常处理结构\"><a href=\"#异常处理结构\" class=\"headerlink\" title=\"异常处理结构\"></a>异常处理结构</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    &lt; &gt;        </span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    &lt; &gt;\t\t\t\t<span class=\"comment\">#如果try语句出现异常，则运行这个内容</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    &lt; &gt;\t\t\t\t<span class=\"comment\">#如果不出现异常，奖励性运行这个内容</span></span><br><span class=\"line\"><span class=\"keyword\">finally</span>:</span><br><span class=\"line\">    &lt; &gt;\t\t\t\t<span class=\"comment\">#最后一定要运行的，无论有没有发生异常</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"print-的一个使用\"><a href=\"#print-的一个使用\" class=\"headerlink\" title=\"print 的一个使用\"></a>print 的一个使用</h5><p>以 某个字符 结尾：print( i , end = “   char  “  )</p>\n<h3 id=\"Random-库\"><a href=\"#Random-库\" class=\"headerlink\" title=\"Random 库\"></a>Random 库</h3><h5 id=\"基本函数\"><a href=\"#基本函数\" class=\"headerlink\" title=\"基本函数\"></a>基本函数</h5><p>random .seed(  )  如果没有参数，则默认是随系统时间改变，不可复现</p>\n<p>​                            如果有参数，则是某以固定的随机序列，每次重新调用的时候，都是一样的随机数。</p>\n<p>random .random()  是0到1的随机数</p>\n<h5 id=\"扩展随机数函数\"><a href=\"#扩展随机数函数\" class=\"headerlink\" title=\"扩展随机数函数\"></a>扩展随机数函数</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">random.ranint( a , b )    <span class=\"comment\">#产生一个[a,b]之间的整数</span></span><br><span class=\"line\">random.shuffle( seq ) \t  <span class=\"comment\">#对序列seq进行重新排序</span></span><br><span class=\"line\">random.choice( seq )\t  <span class=\"comment\">#返回一个seq的元素</span></span><br><span class=\"line\">random.ranrange(a,b[,c])  <span class=\"comment\">#产生一个a到b，步长为c的整数</span></span><br><span class=\"line\">random.uniform(a , b) \t  <span class=\"comment\">#产生一个[a,b]之间的小数</span></span><br><span class=\"line\">random.getranbits(k)  \t  <span class=\"comment\">#产生一个k比特长的随机整数</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"name-’-main-’\"><a href=\"#name-’-main-’\" class=\"headerlink\" title=\"_ name_  ==’_  _ _ main_ _’\"></a>_ <em>name</em>_  ==’_  _ _ main_ _’</h3><p>如果没有的话,程序就会从第一个函数开始执行</p>\n<p>main函数调用这个函数之后,又会执行一遍</p>\n<p>如果用了这个的话,程序就会在main函数开始执行</p>\n<h2 id=\"jieba库的使用\"><a href=\"#jieba库的使用\" class=\"headerlink\" title=\"jieba库的使用\"></a>jieba库的使用</h2><h3 id=\"jieba-lcut-str-cut-all-False\"><a href=\"#jieba-lcut-str-cut-all-False\" class=\"headerlink\" title=\"jieba.lcut(str, cut_all = False)\"></a>jieba.lcut(str, cut_all = False)</h3><h3 id=\"jieba-cut-for-search-str\"><a href=\"#jieba-cut-for-search-str\" class=\"headerlink\" title=\"jieba.cut_for_search( str )\"></a>jieba.cut_for_search( str )</h3><h2 id=\"wordcloud库\"><a href=\"#wordcloud库\" class=\"headerlink\" title=\"wordcloud库\"></a>wordcloud库</h2><p>生成一个word cloud对象    w = wordcloud.WordCloud(width=400, height=200, font_size=2, font_path=None, max_font=根据高度自动调节, min_font=4, background_color=”black”, font_step=2, max_words=200, stop_words={“”,”} , mask=)</p>\n<p>w.generate(str)</p>\n<p>w.to_file(filename)</p>\n","site":{"data":{}},"excerpt":"<p>大一下学期，2020年上半年，疫情在家上网课，当时看的Python所做的笔记。</p>\n<p>Python常用的语法，各种库的应用以及主函数的定义。</p>","more":"<h1 id=\"Python-MOOC\"><a href=\"#Python-MOOC\" class=\"headerlink\" title=\"Python MOOC\"></a>Python MOOC</h1><h3 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3><h5 id=\"不确定尾数\"><a href=\"#不确定尾数\" class=\"headerlink\" title=\"不确定尾数\"></a>不确定尾数</h5><p>十进制转化成二进制，产生误差，转化回十进制时，会产生不确定尾速10**-16</p>\n<p>0.1 + 0.2 == 0.3     —-&gt; False</p>\n<p>round( 0.1 + 0.3 ) == 0.3 —-&gt;True</p>\n<h5 id=\"科学计数法\"><a href=\"#科学计数法\" class=\"headerlink\" title=\"科学计数法\"></a>科学计数法</h5><p><a>e<b> == a*(10**b)</p>\n<h5 id=\"复数\"><a href=\"#复数\" class=\"headerlink\" title=\"复数\"></a>复数</h5><p>a + b j</p>\n<p>z.real  —-&gt;获得实部</p>\n<p>z.imag  —-&gt;获得虚部</p>\n<h5 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h5><p><img src=\"C:\\Users\\10956\\Desktop\\微信截图_20200318204634.png\"></p>\n<h3 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h3><h5 id=\"数值运算\"><a href=\"#数值运算\" class=\"headerlink\" title=\"数值运算\"></a>数值运算</h5><p>abs(value)   绝对值</p>\n<p>divmod(x,y)   返回(商,余数)</p>\n<p>pow(a,b,z)   a**b%z</p>\n<p>round(x,a)    四舍五入几位</p>\n<h3 id=\"time-库的使用\"><a href=\"#time-库的使用\" class=\"headerlink\" title=\"time 库的使用\"></a>time 库的使用</h3><h5 id=\"获取时间\"><a href=\"#获取时间\" class=\"headerlink\" title=\"获取时间\"></a>获取时间</h5><p>time.time()    浮点数</p>\n<p>time.ctime()    人能看</p>\n<p>time.gmtime()    计算机可处理</p>\n<h5 id=\"时间格式化\"><a href=\"#时间格式化\" class=\"headerlink\" title=\"时间格式化\"></a>时间格式化</h5><p> time.shrftime(tpl , ts)</p>\n<h6 id=\"time-shrftime-“-Y-m-d-H-M-S”-time-gmtime\"><a href=\"#time-shrftime-“-Y-m-d-H-M-S”-time-gmtime\" class=\"headerlink\" title=\"time.shrftime(“%Y-%m-%d  %H:%M:%S” , time.gmtime )\"></a>time.shrftime(“%Y-%m-%d  %H:%M:%S” , time.gmtime )</h6><h6 id=\"Y-m数字-B-b英文-d-A-a星期-H-24h-I-12h-p-pmam-M-S\"><a href=\"#Y-m数字-B-b英文-d-A-a星期-H-24h-I-12h-p-pmam-M-S\" class=\"headerlink\" title=\"%Y    %m数字    %B%b英文    %d    %A%a星期    %H 24h  %I 12h     %p  pmam    %M    %S\"></a>%Y    %m数字    %B%b英文    %d    %A%a星期    %H 24h  %I 12h     %p  pmam    %M    %S</h6><p>time.strptime(str , tpl)</p>\n<h5 id=\"程序计时\"><a href=\"#程序计时\" class=\"headerlink\" title=\"程序计时\"></a>程序计时</h5><p>time.perf_counter()</p>\n<p>​    start = …    end = …   time = end - start</p>\n<p> sleep(s)</p>\n<h5 id=\"perf-counter-和process-time-的不同\"><a href=\"#perf-counter-和process-time-的不同\" class=\"headerlink\" title=\"perf_counter()和process_time()的不同\"></a>perf_counter()和process_time()的不同</h5><p>它们常用于对一段代码计算运行时间</p>\n<p>perf_counter()会记录sleep()的时间</p>\n<p>而process_time()不会</p>\n<h3 id=\"timeit模块\"><a href=\"#timeit模块\" class=\"headerlink\" title=\"timeit模块\"></a>timeit模块</h3><p>timeit . timeit ( function  ,  count )  执行function ,次数为count次 , 返回运行的时间</p>\n<h3 id=\"tqmd模块-进度条配置模块\"><a href=\"#tqmd模块-进度条配置模块\" class=\"headerlink\" title=\"tqmd模块:进度条配置模块\"></a>tqmd模块:进度条配置模块</h3><p>tqmd.tqmd( range() )    </p>\n<h3 id=\"程序控制结构\"><a href=\"#程序控制结构\" class=\"headerlink\" title=\"程序控制结构\"></a>程序控制结构</h3><h5 id=\"if-…else-的紧凑模式（三元表达式）\"><a href=\"#if-…else-的紧凑模式（三元表达式）\" class=\"headerlink\" title=\"if …else   的紧凑模式（三元表达式）\"></a>if …else   的紧凑模式（三元表达式）</h5><p>例如：  print( “ { } “ .format{ “对” if  num &gt; 10 else “错”  }  )</p>\n<h5 id=\"异常处理结构\"><a href=\"#异常处理结构\" class=\"headerlink\" title=\"异常处理结构\"></a>异常处理结构</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    &lt; &gt;        </span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    &lt; &gt;\t\t\t\t<span class=\"comment\">#如果try语句出现异常，则运行这个内容</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    &lt; &gt;\t\t\t\t<span class=\"comment\">#如果不出现异常，奖励性运行这个内容</span></span><br><span class=\"line\"><span class=\"keyword\">finally</span>:</span><br><span class=\"line\">    &lt; &gt;\t\t\t\t<span class=\"comment\">#最后一定要运行的，无论有没有发生异常</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"print-的一个使用\"><a href=\"#print-的一个使用\" class=\"headerlink\" title=\"print 的一个使用\"></a>print 的一个使用</h5><p>以 某个字符 结尾：print( i , end = “   char  “  )</p>\n<h3 id=\"Random-库\"><a href=\"#Random-库\" class=\"headerlink\" title=\"Random 库\"></a>Random 库</h3><h5 id=\"基本函数\"><a href=\"#基本函数\" class=\"headerlink\" title=\"基本函数\"></a>基本函数</h5><p>random .seed(  )  如果没有参数，则默认是随系统时间改变，不可复现</p>\n<p>​                            如果有参数，则是某以固定的随机序列，每次重新调用的时候，都是一样的随机数。</p>\n<p>random .random()  是0到1的随机数</p>\n<h5 id=\"扩展随机数函数\"><a href=\"#扩展随机数函数\" class=\"headerlink\" title=\"扩展随机数函数\"></a>扩展随机数函数</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">random.ranint( a , b )    <span class=\"comment\">#产生一个[a,b]之间的整数</span></span><br><span class=\"line\">random.shuffle( seq ) \t  <span class=\"comment\">#对序列seq进行重新排序</span></span><br><span class=\"line\">random.choice( seq )\t  <span class=\"comment\">#返回一个seq的元素</span></span><br><span class=\"line\">random.ranrange(a,b[,c])  <span class=\"comment\">#产生一个a到b，步长为c的整数</span></span><br><span class=\"line\">random.uniform(a , b) \t  <span class=\"comment\">#产生一个[a,b]之间的小数</span></span><br><span class=\"line\">random.getranbits(k)  \t  <span class=\"comment\">#产生一个k比特长的随机整数</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"name-’-main-’\"><a href=\"#name-’-main-’\" class=\"headerlink\" title=\"_ name_  ==’_  _ _ main_ _’\"></a>_ <em>name</em>_  ==’_  _ _ main_ _’</h3><p>如果没有的话,程序就会从第一个函数开始执行</p>\n<p>main函数调用这个函数之后,又会执行一遍</p>\n<p>如果用了这个的话,程序就会在main函数开始执行</p>\n<h2 id=\"jieba库的使用\"><a href=\"#jieba库的使用\" class=\"headerlink\" title=\"jieba库的使用\"></a>jieba库的使用</h2><h3 id=\"jieba-lcut-str-cut-all-False\"><a href=\"#jieba-lcut-str-cut-all-False\" class=\"headerlink\" title=\"jieba.lcut(str, cut_all = False)\"></a>jieba.lcut(str, cut_all = False)</h3><h3 id=\"jieba-cut-for-search-str\"><a href=\"#jieba-cut-for-search-str\" class=\"headerlink\" title=\"jieba.cut_for_search( str )\"></a>jieba.cut_for_search( str )</h3><h2 id=\"wordcloud库\"><a href=\"#wordcloud库\" class=\"headerlink\" title=\"wordcloud库\"></a>wordcloud库</h2><p>生成一个word cloud对象    w = wordcloud.WordCloud(width=400, height=200, font_size=2, font_path=None, max_font=根据高度自动调节, min_font=4, background_color=”black”, font_step=2, max_words=200, stop_words={“”,”} , mask=)</p>\n<p>w.generate(str)</p>\n<p>w.to_file(filename)</p>"},{"title":"NVIDIA Reflex 技术介绍","date":"2020-12-31T17:02:03.000Z","id":"intro1","_content":"\n\n\n\n\nNVIDIA Reflex 是 NVIDIA 公司开发的降低游戏系统延迟的技术，它包含硬件和软件两部分，其中硬件包括 GPU 和 G-SYNC 显示器，软件包括可测量和降低竞技游戏延迟技术。\n\n\n\n<!-- more -->\n\n\n\n\n\nNVIDIA Reflex 是 NVIDIA 公司开发的降低游戏系统延迟的技术，它包含硬件和软件两部分，其中硬件包括 GPU 和 G-SYNC 显示器，软件包括可测量和降低竞技游戏延迟技术。\n\n\n\n![](https://zhenruyi.github.io/images/other01NIVIDIAReflex1.png)\n\n\n\n<div align='center' ><font size='5'>NVIDIA 为什么要开发 Reflex？</font></div>\n\n\n\n我从小就爱玩电子游戏，小时候玩的电子游戏都是《吃豆人》《魂斗罗》这样的闯关型，后来电子游戏从以闯关为主流转变为以对抗为主流，电子竞技成为大多数人的选择。电竞游戏在近十年得到了飞速的发展，涌现出的现象级游戏就有穿越火线（CF）、英雄联盟（LOL）、绝地求生（吃鸡）等。官方介绍文章中提到的“电竞游戏‘英雄联盟 ’在 2019 年的冠军赛中吸引了 1 亿多名观众”这句话里出现的数据，我没有查到相关的资料，但是英雄联盟官方统计到了总决赛观看人数的峰值，这个数字在2019年这个数据是4300多万，而到了2021年则是7300多万。\n\n观看人数的增多侧面反映了游戏玩家的增多和玩家对游戏热情的提高，游戏体验就成了游戏里无法逃避的问题。对于玩家来说，降低延迟至关重要，这样能够保证主机和外设更快响应玩家的操作，从而让玩家迅速发现敌人、击毙敌人，提高玩家的成绩。我要补充的是，系统延迟还能影响玩家的心情、心态，进而影响玩家的身体和心理健康。所以，面对 NVIDIA Reflex 这样降低延迟的技术，就像救玩家于水火之中，我们对此的第一印象应该是：好好好！然后再重回理性，来问这样的好东西贵不贵，思考自己需不需要。\n\n<img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex2.jpeg\" style=\"zoom:50%;\" />\n\nNVIDIA 开发 Reflex 就是为了降低系统延迟，降低系统延迟意味着玩家有更多的反应时间，和更多的操作空间，从而提高玩家的成绩。这正中电竞玩家的下怀，提高自己的成绩带来的满足感，就像被人表扬了一样。玩家们愿意买账的话，这个技术就有意义，NVIDIA 当然希望自己的显卡能卖得更好。\n\n\n\n\n\n<div align='center' ><font size='5'>什么是延迟？ </font></div>\n\n\n\n在研究 NVIDIA Reflex 技术之前，首先要了解什么是延迟。延迟是命令下达之后，到这项命令处理完成之间所经历的时间间隔。延迟的出现是由于在完成命令的过程中，命令要经过多次处理，才能最终实现，而期间的每一步都要花费时间，累计起来的时间间隔就成了不可忽视的影响，于是延迟变成了影响电竞游戏体验的关键。延迟又可以细分为网络延迟和系统延迟。\n\n网络延迟即网络响应时间，既然叫网络延迟，当然和网络有关，是客户端和服务器完成数据交换所需的时间。玩家在自己的主机（客户端）上操作，之后客户端会通过网络把数据传到服务器，服务器通过汇总每个玩家执行的操作，计算处理之后，又把结果通过网络返还给所有的客户端，数据在网络上传输的这段时间称为网络延迟。网络延迟与网络环境有关，通常被称为 ping 值，以英雄联盟为例，它出现在画面的右上角。\n\n![](https://zhenruyi.github.io/images/other01NIVIDIAReflex3.png)\n\n\n\n\n\n<div align='center' ><font size='5'>系统延迟：延迟的一种 </font></div>\n\n\n\n现在详细介绍系统延迟。系统延迟就是玩家在鼠标或者键盘进行操作到显示器产生相应变化之间的时间。这期间玩家的操作会经过外设、CPU、GPU和显示器的处理，最终完成这项操作。系统延迟不涉及网络，不需要和服务器交互，即没有网络延迟，仅仅与玩家的外设、主机和显示器相关。系统延迟包含三部分：\n\n-   外设延迟\n\n    ​\t\t外设将玩家发出的指令传给主机，知道被主机接收，这个时间间隔称为外设延迟。外设延迟经过外设内置硬件和外设 USB 硬件的处理，最终到达主机。外设与主机相连的接口叫做 USB（通用串行总线），因为外设操作的突发性和紧急性，CPU 通过中断方式来响应外设的请求。操作系统的响应过程是这样的：操作系统持续监听外设控制器，当外设产生数据之后，通过USB传输数据到外设控制器的缓存中，外设控制器通过中断线向 CPU 发送中断请求，CPU 响应中断指令，到外设控制器取数据。\n\n    \n\n-   PC 延迟\n\n    ​\t\t主机对数据进行传送以及处理所需的时间。PC 延迟在下文会详细分析。\n\n    \n\n-   显示延迟\n\n    ​\t\t显示器从 GPU 接收数据之后到呈现图形所需要的时间。GPU 完成对图形完成渲染之后，接着对这些图形进行合成。合成完成后，显示器接收到了 GPU 传输的信号，就开始接收从 GPU 传送过来的数据，这些数据会指导显示器呈现图像，显示器上的液晶会进行暗/亮变化，最终绘制出图像。\n    \n    \n\n![](https://zhenruyi.github.io/images/other01NIVIDIAReflex4.png)\n\n\n\n\n\n<div align='center' ><font size='5'>系统延迟里的 PC 延迟 </font></div>\n\n\n\n如前所述，PC 延迟是在主机内部产生的，是数据在主机内部进行传送以及处理所需要的时间。在主机内部，外设传来的指令通过 USB 软件（USB 驱动）进入到操作系统中，然后便会对游戏进行相应的改变，接着将对游戏做出的改变交给图形驱动进行分组，最后提交给 GPU 进行渲染、合成，以待显示器显示出改变后的画面。对游戏做出相应改变产生的延迟叫做游戏延迟，GPU 渲染、合成产生的延迟叫做渲染延迟。下面分别介绍游戏延迟和渲染延迟：\n\n-   游戏延迟\n\n    ​\t\t外设的指令进入操作系统之后，CPU 开始着手按着指令对游戏进行相应的改变，以待提交给GPU渲染，这个过程就是游戏延迟。在这个过程中，CPU首先根据外设的指令在游戏中采样，由于CPU的调度算法不同，这个阶段产生的延迟也不同，接着按照指令对游戏进行更新，游戏更新之后，为了把更新内容显示出来，CPU要记录相关项，把渲染作业发送给GPU，发送过程还需要经过图形驱动。\n\n    ​\t\t这个过程不得不提到CPU和GPU之间的调度，它们之间通过系统总线交换数据，过程是这样的：\n\n    1.  CPU成功读取数据，分离出图像数据，放到系统内存中；\n\n    2.  CPU通过系统总线，把数据从系统内存拷贝到GPU的显存里；\n\n    3.  GPU从队列里拿出一个任务进行渲染，渲染好的数据放回系统内存中。这个时候CPU还会定期询问GPU的情况；\n\n        \n\n-   渲染延迟\n\n    ​\t\t待渲染的数据排队，最终进入GPU直到渲染完毕所需要的时间。在图形驱动提交渲染作业后，该渲染作业会进入GPU的渲染队列。渲染队列是存放GPU来不及处理的数据，能让GPU始终都处在运行状态，以提高GPU的吞吐量。GPU是图形处理器，能加速对图形的渲染和填充，虽然GPU能够提高图形处理速度，但是也更耗电。GPU渲染过程如下：\n\n    1.  应用阶段：这个阶段由CPU完成，对数据进行处理，并把这些数据的渲染状态传给GPU；\n    \n    2.  几何阶段：把CPU发来的数据进一步处理，这个阶段又可以进一步划分为若干个流水线阶段，包括着色、投影、裁剪和屏幕映射；\n    \n    3.  光栅化阶段：把几何阶段得到的顶点，转化成可以在显示器上显示的像素。\n    \n        \n\n![](https://zhenruyi.github.io/images/other01NIVIDIAReflex5.png)\n\n\n\n\n\n<div align='center' ><font size='5'>Reflex 采用的技术 </font></div>\n\n\n\n了解了 NVIDIA Reflex 要解决的问题，下面来了解一下 NVIDIA Reflex 采用什么技术来解决。它采用了两项新技术：\n\n-   NVIDIA Reflex SDK：面向游戏开发者的一套新API；\n\n-   NVIDIA Reflex延迟分析器：系统延迟测量工具。\n\n    \n\n官方是这样介绍的：使用Reflex SDK，游戏开发者可以实现低延迟模式，在这种模式下，游戏引擎能够完成即时渲染，从而消除GPU渲染排队现象，减轻受GPU限制的情况下造成的CPU反压。\n\n什么是反压？反压出现在流水作业中，反压的产生通常是由于短时间内负载高峰导致系统接收数据的速率远高于它处理数据的速率。打个比方，假如上级对下级的压力叫做正压，那么下级对上级的压力就是反压。因为下级处理事情的速度比上级处理事情的速度慢，导致下级拖慢了上级的效率，给上级造成了压力。同理，CPU处理的速度远快于GPU，当渲染队列已经满了之后，CPU的数据无法传到GPU里，而GPU处理速度跟不上，导致CPU被GPU拖慢，这就是CPU反压。\n\n为了解决GPU反压，NVIDIA 的解决办法就是和游戏开发者合作，提供 Reflex SDK，将CPU和GPU完全同步，GPU直接无缝处理CPU发生的指令，以此达成零渲染序列。也就是说，渲染是即时的，不再出现渲染队列，这样就减轻了CPU反压。减轻了CPU反压，于是就降低了渲染延迟。\n\n顾名思义，NVIDIA Reflex 延迟分析器就是测量系统延迟的技术，NVIDIA使用自家的G-SYNC显示器，并配合其他外设厂家的外设，能够实现测量系统延迟的功能。在以前，测量系统延迟的成本很高，而且测量时间不够快，导致系统延迟常常被忽视。Reflex延迟分析器改变了这一局限，它的原理就是检测鼠标点击之后，屏幕上显示的像素变化之间的时间。\n\n总之，NVIDIA Reflex 提供了一整套延迟技术，其中包括低延迟技术和延迟测量工具。\n\n\n\n\n\n<div align='center' ><font size='5'>实现Reflex技术 </font></div>\n\n\n\n我们如何在自己的电脑上实现 Reflex 技术？这个技术需要兼容的硬件及软件，分为4部分：\n\n-   GeForce系列显卡。NVIDIA发布GeForce RTX 30 系列显卡的时候同步推出Reflex 技术，但是这项技术并不单单支持RTX 30 系列，以下几款显卡都支持。\n\n    ![](https://zhenruyi.github.io/images/other01NIVIDIAReflex6.png)\n\n    \n\n-   兼容的游戏。因为Reflex SDK是提供给游戏开发者的，只有开发者使用了SDK，才能实现CPU和GPU完全同步，所以还需要得到游戏开发者的支持。目前兼容的游戏包括APEX英雄、特战英豪、彩虹六号：围攻行动等。\n\n    ![](https://zhenruyi.github.io/images/other01NIVIDIAReflex7.jpg)\n\n    \n\n-   G-SYNC显示器。NVIDIA 推出 Reflex技术的同时，也发布了新一代的G-SYNC显示器，以解决显示延迟的问题。G-SYNC显示器能更好地实现Reflex功能，但是不是必选的。\n\n    ![](https://zhenruyi.github.io/images/other01NIVIDIAReflex8.png)\n\n    \n\n-   兼容的外设。NVIDIA推荐了一批和Reflex技术兼容的外设，这些外设拥有极高的灵敏度，能够配合G-SYNC显示器共同实现延迟测试功能。外设也不是必选的。\n\n    ![](https://zhenruyi.github.io/images/other01NIVIDIAReflex9.png)\n    \n    \n\n搭建好以上的环境，就可以使用 NVIDIA Reflex 技术了。\n\n\n\n\n\n<div align='center' ><font size='5'>Reflex技术的商业价值 </font></div>\n\n\n\n围绕Reflex技术构成了一个产业生态圈：\n\n-   为游戏开发者提供了一套API，这套NVIDIA Reflex SDK 不需要游戏开发者自己研究，节省了游戏开发商的人力和时间成本。游戏开发者通过使用这项技术，能够改善游戏的体验，增加游戏的流畅性。正是由于这样的高效性，游戏开发商乐意和NVIDIA合作推出新功能。有了游戏开发商的支持，NVIDIA在游戏商业上游站稳了脚跟。\n-   要使用NVIDIA Reflex技术，必不可少的配置要求就是要使用NVIDIA家的显卡。这项技术对降低系统延迟有效果，所以NVIDIA调研的游戏玩家，大多数是电竞玩家，这类玩家在挑选显卡的时候，就会首先考虑NVIDIA家的显卡。NVIDIA用技术的升级刺激了显卡的销售。\n-   NVIDIA不仅在显卡领域成为了巨头，他拉拢其他外设厂家、显示器厂家组成它商业帝国的护城河。首先推出的是兼容G-SYNC技术的显示器，这类显示器可以和Reflex延迟分析器共同发挥测量系统误差的功能。接着推出了搭配G-SYNC显示器的鼠标，鼠标通过和显示器相连，实现测量系统误差各阶段误差的功能。\n-   在宣传阵地上，NVIDIA同时在游戏测评领域和硬件测评领域发力，重点突出Reflex技术降低延迟技术和延迟测量工具两项技术的先进性和高效性，前者能够帮助玩家提高反应速度，增强游戏体验，后者让个人用户测量系统误差成为了可能。\n-   在游戏玩家的视角里，要买显卡，只有两种选择：NVIDIA和AMD，就是常说的A卡和N卡。提到NVIDIA的第一印象，可能是高端，而AMD更有性价比。多年来这两个显卡厂家不是55开就是46开，要让玩家选择自己家的显卡，当然自己要有足够的吸引力，也就是要加重砝码，让天平倾向自己这一边。除了硬件要不断升级换代，提高能耗比之外，软件技术也要升级换代。NVIDIA Reflex正中了电竞玩家的下怀。\n\n\n\n\n\n\n\n<div align='center' ><font size='5'>Reflex 技术的操作系统支持 </font></div>\n\n\n\n该技术的操作系统支持，我没有找到相关的资料，以下是我自己分析的，难免有错误。\n\n首先要了解操作系统的主要功能是什么？操作系统的主要功能分为五个：\n\n-   进程管理：主要工作是完成进程调度，分配CPU和内存资源；\n-   存储管理：合理高效利用磁盘资源；\n-   设备管理：对IO设备及其控制器进行管理；\n-   文件管理：管理文件的存储和增删改查；\n-   作业管理：操作系统对用户发的任务的实现；\n\n下面我来分析一下，从触发动作与得到响应之间经过了哪些处理，操作系统又是怎么支持的。\n\n1.  鼠标点击或者键盘按下，触发动作出现，鼠标或键盘（外设）的设备控制器会将外设数据读入设备控制器的数据寄存器里。（设备管理）\n2.  外设的设备控制器通过中断控制线向CPU发送一个中断信号，等待CPU的指令。（设备管理：设备传输控制）\n3.  CPU执行中断程序，向设备控制器发送取数据的指令，设备控制器将自己寄存器内的数据放到数据总线上，CPU于是就收到了外设的数据。（进程管理）\n4.  CPU得到了玩家的输入之后，结合游戏的状态，更新游戏的画面（此时游戏是运行在内存之中的），初步处理之后将数据发送给GPU，并对GPU下达指令。（进程管理）\n5.  GPU的功能，甚至显卡的功能，都是通过显卡驱动提供API给CPU调用；显示器也是提供API接口给需要的设备调用的。（进程管理：进程通信IPC）\n6.  游戏的代码、数据，显卡的驱动，外设驱动，以及所有数据、代码，都由文件组成，都存储在磁盘之中。（存储管理、文件管理）\n7.  以上过程，包括用户的输入、游戏程序和执行过程中的各种规范，都是一个作业。（作业管理）\n\n上面是操作被响应的整个过程的操作系统的支持，但不是 Reflex 技术的操作系统支持，因为我不知道 Reflex 技术具体是怎么实现的，下面是我的猜测：\n\n1.  Reflex 技术的实现集成在了显卡当中，而显卡驱动是要下载安装到磁盘当中的，所以磁盘管理给予了 Reflex 支持，这是最基本的。\n2.  Reflex 技术必定用到进程管理，实现包括进程通信、进程调度、共享内存等功能，因为游戏是一个进程，对游戏的支持也是一个进程。\n3.  Reflex 技术当中的延迟分析器，需要对各种外设和显示器进行管理，所以一定用到了设备管理，以实现设备独立性、设备传输控制。\n\n\n\n\n\n<div align='center' ><font size='5'>Reflex 技术的硬件支持 </font></div>\n\n\n\n我上面提到了，要实现Reflex 技术，需要 NVIDIA 特定的显卡（必选），G-SYNC 显示器和兼容的鼠标（非必选），下面我尝试解释一下：\n\n-   首先是显卡，不同的显卡有不同的架构设计，导致了不同的显卡能实现不同的功能，所以 NVIDIA 自己家有的系列支持 Reflex 技术，有的系列不支持就成了很自然的事情。至于其它厂家的显卡能不能支持 Reflex 技术就不得而知了，在商业厮杀这么激烈的环境下，肯定是不能让友商用自己的技术的。\n-   G-SYNC显示器为什么说是可选呢？因为它解决的是显示延迟的问题，即为了实现Reflex延迟分析器这个功能。这种显示器内置了延迟分析器，连接指定的电竞鼠标之后，就可以实时而且快速测量系统延时的数据。\n-   兼容的鼠标，即指定的鼠标，也是为了实现Reflex延迟分析器的功能。平时我们的鼠标是连接到主板上的USB接口的，但是指定的鼠标是连接到G-SYNC显示器的USB接口上的，这样来实现测量系统延迟的功能。\n\n\n\n\n\n<div align='center' ><font size='5'>Reflex 技术实现细节的猜测 </font></div>\n\n\n\n我们知道，由于CPU对数据的处理效率远高于GPU对数据的处理效率，所以GPU设置了一个渲染队列以应对从CPU源源不断传输过来的数据和指令。但是，这不能解决CPU和GPU效率不匹配的问题，导致渲染队列满了。\n\n因为队列满了，CPU处理好的数据不知道放到哪里，它又不愿意把这些处理好的数据丢弃（我认为无论丢不丢弃，都已经降低了CPU的处理效率），所以CPU拿着这些数据不知所措，停下来等GPU。\n\n因为要等GPU处理，这个时候CPU是不能处理其他任务的，导致等待CPU处理的任务越来多，CPU的压力越来越大。也就是说，因为被GPU拖累，CPU产生了压力，这叫做CPU受到的反压。\n\n不可避免地，反压的出现导致了系统延迟（准确的说是其中的PC延迟）的增加。而Reflex的处理方法是打造零渲染序列，清空渲染队列，让CPU直接对接GPU。\n\n而游戏开发者要做的就是利用Reflex SDK跟CPU进行沟通，让CPU能够与GPU同步，这样就不会出现队列的问题了，CPU发送一个数据，GPU就处理一个数据。这样就消除了CPU受到的反压，降低系统延迟。\n\n但是我有一个疑问，因为Reflex是NVIDIA开发的，而NVIDIA是显卡厂商，它为什么能够对CPU进行控制，让CPU和GPU相匹配，而不是让GPU和CPU进行匹配。\n\n所以，一个更合理的猜测是让GPU的脉冲频率增高，以此来适应CPU。而这又导致了矛盾，因为如果提高脉冲就能提高GPU的效率，为什么不让每一个显卡都提高，而是开发Reflex技术来提高呢？难道是为了省电吗？\n\n以上是对 Reflex SDK 技术实现的猜测，下面对Reflex 延迟分析器的实现进行猜测。\n\n显示器方面：显示器上内置一个特殊的芯片，芯片实现的功能应该是能够检测特定的画面出现，然后记录这个时间。具体是什么画面则需要游戏开发商通过Reflex SDK 告诉显示器，让显示器看到特定的画面出现反应。\n\n比如说，官方提到的看到枪口的火焰为一个特定的画面，因为电竞游戏往往是射击游戏。还可以是任务的起跳或者下蹲动作，还可以是切换武器的动作。\n\n鼠标方面：鼠标通过USB直接和显示器连接，当鼠标进行操作之后，鼠标会发送一个特殊的信号给显示器，显示器收到这个信号之后马上开启计时器，等待对应的画面的出现，当对应的画面出现的时候，停止计时，这个时间就是系统延迟。\n\n![](https://zhenruyi.github.io/images/other01NIVIDIAReflex10.png)\n\n\n\n\n\n<div align='center' ><font size='5'> 总结 </font></div>\n\n1.  电竞游戏成为主流，电竞游戏对延迟十分敏感，玩家需要降低延迟的技术。\n2.  延迟分为网络延迟和系统延迟，网络延迟和网络环境相关，系统延迟和外设、主机、显示器相关。\n3.  NVIDIA Reflex 技术的出现是为了降低系统延迟和测量系统延迟，包括Reflex SDK技术和Reflex 延迟分析器。\n4.  Reflex SDK 提供给游戏开发者使用，令CPU和GPU同步，消除渲染队列，减轻CPU受到的反压，从而降低渲染延迟。\n5.  Reflex 延迟分析器能够测量系统延迟，这需要相关硬件的支持。\n6.  要在个人计算机上完整实现 Reflex 技术，需要显卡、显示器、外设和游戏同时符合要求。\n7.  Reflex 技术给 NVIDIA 带来了巨大的商业价值。\n8.  Reflex 技术得到了操作系统广泛而且坚定的支持。\n9.  Reflex 技术的实现需要特殊的硬件支持。\n10.  对 Reflex 技术的实现做了一些猜测。\n","source":"_posts/other-intro01NIVIDIAReflex.md","raw":"---\ntitle: NVIDIA Reflex 技术介绍\ndate: 2021-01-01 01:02:03\nid: intro1\ncategories:\n- other\ntags:\n- intro\n---\n\n\n\n\n\nNVIDIA Reflex 是 NVIDIA 公司开发的降低游戏系统延迟的技术，它包含硬件和软件两部分，其中硬件包括 GPU 和 G-SYNC 显示器，软件包括可测量和降低竞技游戏延迟技术。\n\n\n\n<!-- more -->\n\n\n\n\n\nNVIDIA Reflex 是 NVIDIA 公司开发的降低游戏系统延迟的技术，它包含硬件和软件两部分，其中硬件包括 GPU 和 G-SYNC 显示器，软件包括可测量和降低竞技游戏延迟技术。\n\n\n\n![](https://zhenruyi.github.io/images/other01NIVIDIAReflex1.png)\n\n\n\n<div align='center' ><font size='5'>NVIDIA 为什么要开发 Reflex？</font></div>\n\n\n\n我从小就爱玩电子游戏，小时候玩的电子游戏都是《吃豆人》《魂斗罗》这样的闯关型，后来电子游戏从以闯关为主流转变为以对抗为主流，电子竞技成为大多数人的选择。电竞游戏在近十年得到了飞速的发展，涌现出的现象级游戏就有穿越火线（CF）、英雄联盟（LOL）、绝地求生（吃鸡）等。官方介绍文章中提到的“电竞游戏‘英雄联盟 ’在 2019 年的冠军赛中吸引了 1 亿多名观众”这句话里出现的数据，我没有查到相关的资料，但是英雄联盟官方统计到了总决赛观看人数的峰值，这个数字在2019年这个数据是4300多万，而到了2021年则是7300多万。\n\n观看人数的增多侧面反映了游戏玩家的增多和玩家对游戏热情的提高，游戏体验就成了游戏里无法逃避的问题。对于玩家来说，降低延迟至关重要，这样能够保证主机和外设更快响应玩家的操作，从而让玩家迅速发现敌人、击毙敌人，提高玩家的成绩。我要补充的是，系统延迟还能影响玩家的心情、心态，进而影响玩家的身体和心理健康。所以，面对 NVIDIA Reflex 这样降低延迟的技术，就像救玩家于水火之中，我们对此的第一印象应该是：好好好！然后再重回理性，来问这样的好东西贵不贵，思考自己需不需要。\n\n<img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex2.jpeg\" style=\"zoom:50%;\" />\n\nNVIDIA 开发 Reflex 就是为了降低系统延迟，降低系统延迟意味着玩家有更多的反应时间，和更多的操作空间，从而提高玩家的成绩。这正中电竞玩家的下怀，提高自己的成绩带来的满足感，就像被人表扬了一样。玩家们愿意买账的话，这个技术就有意义，NVIDIA 当然希望自己的显卡能卖得更好。\n\n\n\n\n\n<div align='center' ><font size='5'>什么是延迟？ </font></div>\n\n\n\n在研究 NVIDIA Reflex 技术之前，首先要了解什么是延迟。延迟是命令下达之后，到这项命令处理完成之间所经历的时间间隔。延迟的出现是由于在完成命令的过程中，命令要经过多次处理，才能最终实现，而期间的每一步都要花费时间，累计起来的时间间隔就成了不可忽视的影响，于是延迟变成了影响电竞游戏体验的关键。延迟又可以细分为网络延迟和系统延迟。\n\n网络延迟即网络响应时间，既然叫网络延迟，当然和网络有关，是客户端和服务器完成数据交换所需的时间。玩家在自己的主机（客户端）上操作，之后客户端会通过网络把数据传到服务器，服务器通过汇总每个玩家执行的操作，计算处理之后，又把结果通过网络返还给所有的客户端，数据在网络上传输的这段时间称为网络延迟。网络延迟与网络环境有关，通常被称为 ping 值，以英雄联盟为例，它出现在画面的右上角。\n\n![](https://zhenruyi.github.io/images/other01NIVIDIAReflex3.png)\n\n\n\n\n\n<div align='center' ><font size='5'>系统延迟：延迟的一种 </font></div>\n\n\n\n现在详细介绍系统延迟。系统延迟就是玩家在鼠标或者键盘进行操作到显示器产生相应变化之间的时间。这期间玩家的操作会经过外设、CPU、GPU和显示器的处理，最终完成这项操作。系统延迟不涉及网络，不需要和服务器交互，即没有网络延迟，仅仅与玩家的外设、主机和显示器相关。系统延迟包含三部分：\n\n-   外设延迟\n\n    ​\t\t外设将玩家发出的指令传给主机，知道被主机接收，这个时间间隔称为外设延迟。外设延迟经过外设内置硬件和外设 USB 硬件的处理，最终到达主机。外设与主机相连的接口叫做 USB（通用串行总线），因为外设操作的突发性和紧急性，CPU 通过中断方式来响应外设的请求。操作系统的响应过程是这样的：操作系统持续监听外设控制器，当外设产生数据之后，通过USB传输数据到外设控制器的缓存中，外设控制器通过中断线向 CPU 发送中断请求，CPU 响应中断指令，到外设控制器取数据。\n\n    \n\n-   PC 延迟\n\n    ​\t\t主机对数据进行传送以及处理所需的时间。PC 延迟在下文会详细分析。\n\n    \n\n-   显示延迟\n\n    ​\t\t显示器从 GPU 接收数据之后到呈现图形所需要的时间。GPU 完成对图形完成渲染之后，接着对这些图形进行合成。合成完成后，显示器接收到了 GPU 传输的信号，就开始接收从 GPU 传送过来的数据，这些数据会指导显示器呈现图像，显示器上的液晶会进行暗/亮变化，最终绘制出图像。\n    \n    \n\n![](https://zhenruyi.github.io/images/other01NIVIDIAReflex4.png)\n\n\n\n\n\n<div align='center' ><font size='5'>系统延迟里的 PC 延迟 </font></div>\n\n\n\n如前所述，PC 延迟是在主机内部产生的，是数据在主机内部进行传送以及处理所需要的时间。在主机内部，外设传来的指令通过 USB 软件（USB 驱动）进入到操作系统中，然后便会对游戏进行相应的改变，接着将对游戏做出的改变交给图形驱动进行分组，最后提交给 GPU 进行渲染、合成，以待显示器显示出改变后的画面。对游戏做出相应改变产生的延迟叫做游戏延迟，GPU 渲染、合成产生的延迟叫做渲染延迟。下面分别介绍游戏延迟和渲染延迟：\n\n-   游戏延迟\n\n    ​\t\t外设的指令进入操作系统之后，CPU 开始着手按着指令对游戏进行相应的改变，以待提交给GPU渲染，这个过程就是游戏延迟。在这个过程中，CPU首先根据外设的指令在游戏中采样，由于CPU的调度算法不同，这个阶段产生的延迟也不同，接着按照指令对游戏进行更新，游戏更新之后，为了把更新内容显示出来，CPU要记录相关项，把渲染作业发送给GPU，发送过程还需要经过图形驱动。\n\n    ​\t\t这个过程不得不提到CPU和GPU之间的调度，它们之间通过系统总线交换数据，过程是这样的：\n\n    1.  CPU成功读取数据，分离出图像数据，放到系统内存中；\n\n    2.  CPU通过系统总线，把数据从系统内存拷贝到GPU的显存里；\n\n    3.  GPU从队列里拿出一个任务进行渲染，渲染好的数据放回系统内存中。这个时候CPU还会定期询问GPU的情况；\n\n        \n\n-   渲染延迟\n\n    ​\t\t待渲染的数据排队，最终进入GPU直到渲染完毕所需要的时间。在图形驱动提交渲染作业后，该渲染作业会进入GPU的渲染队列。渲染队列是存放GPU来不及处理的数据，能让GPU始终都处在运行状态，以提高GPU的吞吐量。GPU是图形处理器，能加速对图形的渲染和填充，虽然GPU能够提高图形处理速度，但是也更耗电。GPU渲染过程如下：\n\n    1.  应用阶段：这个阶段由CPU完成，对数据进行处理，并把这些数据的渲染状态传给GPU；\n    \n    2.  几何阶段：把CPU发来的数据进一步处理，这个阶段又可以进一步划分为若干个流水线阶段，包括着色、投影、裁剪和屏幕映射；\n    \n    3.  光栅化阶段：把几何阶段得到的顶点，转化成可以在显示器上显示的像素。\n    \n        \n\n![](https://zhenruyi.github.io/images/other01NIVIDIAReflex5.png)\n\n\n\n\n\n<div align='center' ><font size='5'>Reflex 采用的技术 </font></div>\n\n\n\n了解了 NVIDIA Reflex 要解决的问题，下面来了解一下 NVIDIA Reflex 采用什么技术来解决。它采用了两项新技术：\n\n-   NVIDIA Reflex SDK：面向游戏开发者的一套新API；\n\n-   NVIDIA Reflex延迟分析器：系统延迟测量工具。\n\n    \n\n官方是这样介绍的：使用Reflex SDK，游戏开发者可以实现低延迟模式，在这种模式下，游戏引擎能够完成即时渲染，从而消除GPU渲染排队现象，减轻受GPU限制的情况下造成的CPU反压。\n\n什么是反压？反压出现在流水作业中，反压的产生通常是由于短时间内负载高峰导致系统接收数据的速率远高于它处理数据的速率。打个比方，假如上级对下级的压力叫做正压，那么下级对上级的压力就是反压。因为下级处理事情的速度比上级处理事情的速度慢，导致下级拖慢了上级的效率，给上级造成了压力。同理，CPU处理的速度远快于GPU，当渲染队列已经满了之后，CPU的数据无法传到GPU里，而GPU处理速度跟不上，导致CPU被GPU拖慢，这就是CPU反压。\n\n为了解决GPU反压，NVIDIA 的解决办法就是和游戏开发者合作，提供 Reflex SDK，将CPU和GPU完全同步，GPU直接无缝处理CPU发生的指令，以此达成零渲染序列。也就是说，渲染是即时的，不再出现渲染队列，这样就减轻了CPU反压。减轻了CPU反压，于是就降低了渲染延迟。\n\n顾名思义，NVIDIA Reflex 延迟分析器就是测量系统延迟的技术，NVIDIA使用自家的G-SYNC显示器，并配合其他外设厂家的外设，能够实现测量系统延迟的功能。在以前，测量系统延迟的成本很高，而且测量时间不够快，导致系统延迟常常被忽视。Reflex延迟分析器改变了这一局限，它的原理就是检测鼠标点击之后，屏幕上显示的像素变化之间的时间。\n\n总之，NVIDIA Reflex 提供了一整套延迟技术，其中包括低延迟技术和延迟测量工具。\n\n\n\n\n\n<div align='center' ><font size='5'>实现Reflex技术 </font></div>\n\n\n\n我们如何在自己的电脑上实现 Reflex 技术？这个技术需要兼容的硬件及软件，分为4部分：\n\n-   GeForce系列显卡。NVIDIA发布GeForce RTX 30 系列显卡的时候同步推出Reflex 技术，但是这项技术并不单单支持RTX 30 系列，以下几款显卡都支持。\n\n    ![](https://zhenruyi.github.io/images/other01NIVIDIAReflex6.png)\n\n    \n\n-   兼容的游戏。因为Reflex SDK是提供给游戏开发者的，只有开发者使用了SDK，才能实现CPU和GPU完全同步，所以还需要得到游戏开发者的支持。目前兼容的游戏包括APEX英雄、特战英豪、彩虹六号：围攻行动等。\n\n    ![](https://zhenruyi.github.io/images/other01NIVIDIAReflex7.jpg)\n\n    \n\n-   G-SYNC显示器。NVIDIA 推出 Reflex技术的同时，也发布了新一代的G-SYNC显示器，以解决显示延迟的问题。G-SYNC显示器能更好地实现Reflex功能，但是不是必选的。\n\n    ![](https://zhenruyi.github.io/images/other01NIVIDIAReflex8.png)\n\n    \n\n-   兼容的外设。NVIDIA推荐了一批和Reflex技术兼容的外设，这些外设拥有极高的灵敏度，能够配合G-SYNC显示器共同实现延迟测试功能。外设也不是必选的。\n\n    ![](https://zhenruyi.github.io/images/other01NIVIDIAReflex9.png)\n    \n    \n\n搭建好以上的环境，就可以使用 NVIDIA Reflex 技术了。\n\n\n\n\n\n<div align='center' ><font size='5'>Reflex技术的商业价值 </font></div>\n\n\n\n围绕Reflex技术构成了一个产业生态圈：\n\n-   为游戏开发者提供了一套API，这套NVIDIA Reflex SDK 不需要游戏开发者自己研究，节省了游戏开发商的人力和时间成本。游戏开发者通过使用这项技术，能够改善游戏的体验，增加游戏的流畅性。正是由于这样的高效性，游戏开发商乐意和NVIDIA合作推出新功能。有了游戏开发商的支持，NVIDIA在游戏商业上游站稳了脚跟。\n-   要使用NVIDIA Reflex技术，必不可少的配置要求就是要使用NVIDIA家的显卡。这项技术对降低系统延迟有效果，所以NVIDIA调研的游戏玩家，大多数是电竞玩家，这类玩家在挑选显卡的时候，就会首先考虑NVIDIA家的显卡。NVIDIA用技术的升级刺激了显卡的销售。\n-   NVIDIA不仅在显卡领域成为了巨头，他拉拢其他外设厂家、显示器厂家组成它商业帝国的护城河。首先推出的是兼容G-SYNC技术的显示器，这类显示器可以和Reflex延迟分析器共同发挥测量系统误差的功能。接着推出了搭配G-SYNC显示器的鼠标，鼠标通过和显示器相连，实现测量系统误差各阶段误差的功能。\n-   在宣传阵地上，NVIDIA同时在游戏测评领域和硬件测评领域发力，重点突出Reflex技术降低延迟技术和延迟测量工具两项技术的先进性和高效性，前者能够帮助玩家提高反应速度，增强游戏体验，后者让个人用户测量系统误差成为了可能。\n-   在游戏玩家的视角里，要买显卡，只有两种选择：NVIDIA和AMD，就是常说的A卡和N卡。提到NVIDIA的第一印象，可能是高端，而AMD更有性价比。多年来这两个显卡厂家不是55开就是46开，要让玩家选择自己家的显卡，当然自己要有足够的吸引力，也就是要加重砝码，让天平倾向自己这一边。除了硬件要不断升级换代，提高能耗比之外，软件技术也要升级换代。NVIDIA Reflex正中了电竞玩家的下怀。\n\n\n\n\n\n\n\n<div align='center' ><font size='5'>Reflex 技术的操作系统支持 </font></div>\n\n\n\n该技术的操作系统支持，我没有找到相关的资料，以下是我自己分析的，难免有错误。\n\n首先要了解操作系统的主要功能是什么？操作系统的主要功能分为五个：\n\n-   进程管理：主要工作是完成进程调度，分配CPU和内存资源；\n-   存储管理：合理高效利用磁盘资源；\n-   设备管理：对IO设备及其控制器进行管理；\n-   文件管理：管理文件的存储和增删改查；\n-   作业管理：操作系统对用户发的任务的实现；\n\n下面我来分析一下，从触发动作与得到响应之间经过了哪些处理，操作系统又是怎么支持的。\n\n1.  鼠标点击或者键盘按下，触发动作出现，鼠标或键盘（外设）的设备控制器会将外设数据读入设备控制器的数据寄存器里。（设备管理）\n2.  外设的设备控制器通过中断控制线向CPU发送一个中断信号，等待CPU的指令。（设备管理：设备传输控制）\n3.  CPU执行中断程序，向设备控制器发送取数据的指令，设备控制器将自己寄存器内的数据放到数据总线上，CPU于是就收到了外设的数据。（进程管理）\n4.  CPU得到了玩家的输入之后，结合游戏的状态，更新游戏的画面（此时游戏是运行在内存之中的），初步处理之后将数据发送给GPU，并对GPU下达指令。（进程管理）\n5.  GPU的功能，甚至显卡的功能，都是通过显卡驱动提供API给CPU调用；显示器也是提供API接口给需要的设备调用的。（进程管理：进程通信IPC）\n6.  游戏的代码、数据，显卡的驱动，外设驱动，以及所有数据、代码，都由文件组成，都存储在磁盘之中。（存储管理、文件管理）\n7.  以上过程，包括用户的输入、游戏程序和执行过程中的各种规范，都是一个作业。（作业管理）\n\n上面是操作被响应的整个过程的操作系统的支持，但不是 Reflex 技术的操作系统支持，因为我不知道 Reflex 技术具体是怎么实现的，下面是我的猜测：\n\n1.  Reflex 技术的实现集成在了显卡当中，而显卡驱动是要下载安装到磁盘当中的，所以磁盘管理给予了 Reflex 支持，这是最基本的。\n2.  Reflex 技术必定用到进程管理，实现包括进程通信、进程调度、共享内存等功能，因为游戏是一个进程，对游戏的支持也是一个进程。\n3.  Reflex 技术当中的延迟分析器，需要对各种外设和显示器进行管理，所以一定用到了设备管理，以实现设备独立性、设备传输控制。\n\n\n\n\n\n<div align='center' ><font size='5'>Reflex 技术的硬件支持 </font></div>\n\n\n\n我上面提到了，要实现Reflex 技术，需要 NVIDIA 特定的显卡（必选），G-SYNC 显示器和兼容的鼠标（非必选），下面我尝试解释一下：\n\n-   首先是显卡，不同的显卡有不同的架构设计，导致了不同的显卡能实现不同的功能，所以 NVIDIA 自己家有的系列支持 Reflex 技术，有的系列不支持就成了很自然的事情。至于其它厂家的显卡能不能支持 Reflex 技术就不得而知了，在商业厮杀这么激烈的环境下，肯定是不能让友商用自己的技术的。\n-   G-SYNC显示器为什么说是可选呢？因为它解决的是显示延迟的问题，即为了实现Reflex延迟分析器这个功能。这种显示器内置了延迟分析器，连接指定的电竞鼠标之后，就可以实时而且快速测量系统延时的数据。\n-   兼容的鼠标，即指定的鼠标，也是为了实现Reflex延迟分析器的功能。平时我们的鼠标是连接到主板上的USB接口的，但是指定的鼠标是连接到G-SYNC显示器的USB接口上的，这样来实现测量系统延迟的功能。\n\n\n\n\n\n<div align='center' ><font size='5'>Reflex 技术实现细节的猜测 </font></div>\n\n\n\n我们知道，由于CPU对数据的处理效率远高于GPU对数据的处理效率，所以GPU设置了一个渲染队列以应对从CPU源源不断传输过来的数据和指令。但是，这不能解决CPU和GPU效率不匹配的问题，导致渲染队列满了。\n\n因为队列满了，CPU处理好的数据不知道放到哪里，它又不愿意把这些处理好的数据丢弃（我认为无论丢不丢弃，都已经降低了CPU的处理效率），所以CPU拿着这些数据不知所措，停下来等GPU。\n\n因为要等GPU处理，这个时候CPU是不能处理其他任务的，导致等待CPU处理的任务越来多，CPU的压力越来越大。也就是说，因为被GPU拖累，CPU产生了压力，这叫做CPU受到的反压。\n\n不可避免地，反压的出现导致了系统延迟（准确的说是其中的PC延迟）的增加。而Reflex的处理方法是打造零渲染序列，清空渲染队列，让CPU直接对接GPU。\n\n而游戏开发者要做的就是利用Reflex SDK跟CPU进行沟通，让CPU能够与GPU同步，这样就不会出现队列的问题了，CPU发送一个数据，GPU就处理一个数据。这样就消除了CPU受到的反压，降低系统延迟。\n\n但是我有一个疑问，因为Reflex是NVIDIA开发的，而NVIDIA是显卡厂商，它为什么能够对CPU进行控制，让CPU和GPU相匹配，而不是让GPU和CPU进行匹配。\n\n所以，一个更合理的猜测是让GPU的脉冲频率增高，以此来适应CPU。而这又导致了矛盾，因为如果提高脉冲就能提高GPU的效率，为什么不让每一个显卡都提高，而是开发Reflex技术来提高呢？难道是为了省电吗？\n\n以上是对 Reflex SDK 技术实现的猜测，下面对Reflex 延迟分析器的实现进行猜测。\n\n显示器方面：显示器上内置一个特殊的芯片，芯片实现的功能应该是能够检测特定的画面出现，然后记录这个时间。具体是什么画面则需要游戏开发商通过Reflex SDK 告诉显示器，让显示器看到特定的画面出现反应。\n\n比如说，官方提到的看到枪口的火焰为一个特定的画面，因为电竞游戏往往是射击游戏。还可以是任务的起跳或者下蹲动作，还可以是切换武器的动作。\n\n鼠标方面：鼠标通过USB直接和显示器连接，当鼠标进行操作之后，鼠标会发送一个特殊的信号给显示器，显示器收到这个信号之后马上开启计时器，等待对应的画面的出现，当对应的画面出现的时候，停止计时，这个时间就是系统延迟。\n\n![](https://zhenruyi.github.io/images/other01NIVIDIAReflex10.png)\n\n\n\n\n\n<div align='center' ><font size='5'> 总结 </font></div>\n\n1.  电竞游戏成为主流，电竞游戏对延迟十分敏感，玩家需要降低延迟的技术。\n2.  延迟分为网络延迟和系统延迟，网络延迟和网络环境相关，系统延迟和外设、主机、显示器相关。\n3.  NVIDIA Reflex 技术的出现是为了降低系统延迟和测量系统延迟，包括Reflex SDK技术和Reflex 延迟分析器。\n4.  Reflex SDK 提供给游戏开发者使用，令CPU和GPU同步，消除渲染队列，减轻CPU受到的反压，从而降低渲染延迟。\n5.  Reflex 延迟分析器能够测量系统延迟，这需要相关硬件的支持。\n6.  要在个人计算机上完整实现 Reflex 技术，需要显卡、显示器、外设和游戏同时符合要求。\n7.  Reflex 技术给 NVIDIA 带来了巨大的商业价值。\n8.  Reflex 技术得到了操作系统广泛而且坚定的支持。\n9.  Reflex 技术的实现需要特殊的硬件支持。\n10.  对 Reflex 技术的实现做了一些猜测。\n","slug":"other-intro01NIVIDIAReflex","published":1,"updated":"2022-04-16T23:08:36.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70u2002g5osseibrfbzk","content":"<p>NVIDIA Reflex 是 NVIDIA 公司开发的降低游戏系统延迟的技术，它包含硬件和软件两部分，其中硬件包括 GPU 和 G-SYNC 显示器，软件包括可测量和降低竞技游戏延迟技术。</p>\n<span id=\"more\"></span>\n\n\n\n\n\n<p>NVIDIA Reflex 是 NVIDIA 公司开发的降低游戏系统延迟的技术，它包含硬件和软件两部分，其中硬件包括 GPU 和 G-SYNC 显示器，软件包括可测量和降低竞技游戏延迟技术。</p>\n<p><img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex1.png\"></p>\n<div align='center' ><font size='5'>NVIDIA 为什么要开发 Reflex？</font></div>\n\n\n\n<p>我从小就爱玩电子游戏，小时候玩的电子游戏都是《吃豆人》《魂斗罗》这样的闯关型，后来电子游戏从以闯关为主流转变为以对抗为主流，电子竞技成为大多数人的选择。电竞游戏在近十年得到了飞速的发展，涌现出的现象级游戏就有穿越火线（CF）、英雄联盟（LOL）、绝地求生（吃鸡）等。官方介绍文章中提到的“电竞游戏‘英雄联盟 ’在 2019 年的冠军赛中吸引了 1 亿多名观众”这句话里出现的数据，我没有查到相关的资料，但是英雄联盟官方统计到了总决赛观看人数的峰值，这个数字在2019年这个数据是4300多万，而到了2021年则是7300多万。</p>\n<p>观看人数的增多侧面反映了游戏玩家的增多和玩家对游戏热情的提高，游戏体验就成了游戏里无法逃避的问题。对于玩家来说，降低延迟至关重要，这样能够保证主机和外设更快响应玩家的操作，从而让玩家迅速发现敌人、击毙敌人，提高玩家的成绩。我要补充的是，系统延迟还能影响玩家的心情、心态，进而影响玩家的身体和心理健康。所以，面对 NVIDIA Reflex 这样降低延迟的技术，就像救玩家于水火之中，我们对此的第一印象应该是：好好好！然后再重回理性，来问这样的好东西贵不贵，思考自己需不需要。</p>\n<img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex2.jpeg\" style=\"zoom:50%;\" />\n\n<p>NVIDIA 开发 Reflex 就是为了降低系统延迟，降低系统延迟意味着玩家有更多的反应时间，和更多的操作空间，从而提高玩家的成绩。这正中电竞玩家的下怀，提高自己的成绩带来的满足感，就像被人表扬了一样。玩家们愿意买账的话，这个技术就有意义，NVIDIA 当然希望自己的显卡能卖得更好。</p>\n<div align='center' ><font size='5'>什么是延迟？ </font></div>\n\n\n\n<p>在研究 NVIDIA Reflex 技术之前，首先要了解什么是延迟。延迟是命令下达之后，到这项命令处理完成之间所经历的时间间隔。延迟的出现是由于在完成命令的过程中，命令要经过多次处理，才能最终实现，而期间的每一步都要花费时间，累计起来的时间间隔就成了不可忽视的影响，于是延迟变成了影响电竞游戏体验的关键。延迟又可以细分为网络延迟和系统延迟。</p>\n<p>网络延迟即网络响应时间，既然叫网络延迟，当然和网络有关，是客户端和服务器完成数据交换所需的时间。玩家在自己的主机（客户端）上操作，之后客户端会通过网络把数据传到服务器，服务器通过汇总每个玩家执行的操作，计算处理之后，又把结果通过网络返还给所有的客户端，数据在网络上传输的这段时间称为网络延迟。网络延迟与网络环境有关，通常被称为 ping 值，以英雄联盟为例，它出现在画面的右上角。</p>\n<p><img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex3.png\"></p>\n<div align='center' ><font size='5'>系统延迟：延迟的一种 </font></div>\n\n\n\n<p>现在详细介绍系统延迟。系统延迟就是玩家在鼠标或者键盘进行操作到显示器产生相应变化之间的时间。这期间玩家的操作会经过外设、CPU、GPU和显示器的处理，最终完成这项操作。系统延迟不涉及网络，不需要和服务器交互，即没有网络延迟，仅仅与玩家的外设、主机和显示器相关。系统延迟包含三部分：</p>\n<ul>\n<li><p>外设延迟</p>\n<p>  ​        外设将玩家发出的指令传给主机，知道被主机接收，这个时间间隔称为外设延迟。外设延迟经过外设内置硬件和外设 USB 硬件的处理，最终到达主机。外设与主机相连的接口叫做 USB（通用串行总线），因为外设操作的突发性和紧急性，CPU 通过中断方式来响应外设的请求。操作系统的响应过程是这样的：操作系统持续监听外设控制器，当外设产生数据之后，通过USB传输数据到外设控制器的缓存中，外设控制器通过中断线向 CPU 发送中断请求，CPU 响应中断指令，到外设控制器取数据。</p>\n</li>\n<li><p>PC 延迟</p>\n<p>  ​        主机对数据进行传送以及处理所需的时间。PC 延迟在下文会详细分析。</p>\n</li>\n<li><p>显示延迟</p>\n<p>  ​        显示器从 GPU 接收数据之后到呈现图形所需要的时间。GPU 完成对图形完成渲染之后，接着对这些图形进行合成。合成完成后，显示器接收到了 GPU 传输的信号，就开始接收从 GPU 传送过来的数据，这些数据会指导显示器呈现图像，显示器上的液晶会进行暗/亮变化，最终绘制出图像。</p>\n</li>\n</ul>\n<p><img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex4.png\"></p>\n<div align='center' ><font size='5'>系统延迟里的 PC 延迟 </font></div>\n\n\n\n<p>如前所述，PC 延迟是在主机内部产生的，是数据在主机内部进行传送以及处理所需要的时间。在主机内部，外设传来的指令通过 USB 软件（USB 驱动）进入到操作系统中，然后便会对游戏进行相应的改变，接着将对游戏做出的改变交给图形驱动进行分组，最后提交给 GPU 进行渲染、合成，以待显示器显示出改变后的画面。对游戏做出相应改变产生的延迟叫做游戏延迟，GPU 渲染、合成产生的延迟叫做渲染延迟。下面分别介绍游戏延迟和渲染延迟：</p>\n<ul>\n<li><p>游戏延迟</p>\n<p>  ​        外设的指令进入操作系统之后，CPU 开始着手按着指令对游戏进行相应的改变，以待提交给GPU渲染，这个过程就是游戏延迟。在这个过程中，CPU首先根据外设的指令在游戏中采样，由于CPU的调度算法不同，这个阶段产生的延迟也不同，接着按照指令对游戏进行更新，游戏更新之后，为了把更新内容显示出来，CPU要记录相关项，把渲染作业发送给GPU，发送过程还需要经过图形驱动。</p>\n<p>  ​        这个过程不得不提到CPU和GPU之间的调度，它们之间通过系统总线交换数据，过程是这样的：</p>\n<ol>\n<li><p> CPU成功读取数据，分离出图像数据，放到系统内存中；</p>\n</li>\n<li><p> CPU通过系统总线，把数据从系统内存拷贝到GPU的显存里；</p>\n</li>\n<li><p>GPU从队列里拿出一个任务进行渲染，渲染好的数据放回系统内存中。这个时候CPU还会定期询问GPU的情况；</p>\n</li>\n</ol>\n</li>\n<li><p>渲染延迟</p>\n<p>  ​        待渲染的数据排队，最终进入GPU直到渲染完毕所需要的时间。在图形驱动提交渲染作业后，该渲染作业会进入GPU的渲染队列。渲染队列是存放GPU来不及处理的数据，能让GPU始终都处在运行状态，以提高GPU的吞吐量。GPU是图形处理器，能加速对图形的渲染和填充，虽然GPU能够提高图形处理速度，但是也更耗电。GPU渲染过程如下：</p>\n<ol>\n<li>应用阶段：这个阶段由CPU完成，对数据进行处理，并把这些数据的渲染状态传给GPU；</li>\n<li>几何阶段：把CPU发来的数据进一步处理，这个阶段又可以进一步划分为若干个流水线阶段，包括着色、投影、裁剪和屏幕映射；</li>\n<li>光栅化阶段：把几何阶段得到的顶点，转化成可以在显示器上显示的像素。</li>\n</ol>\n</li>\n</ul>\n<p><img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex5.png\"></p>\n<div align='center' ><font size='5'>Reflex 采用的技术 </font></div>\n\n\n\n<p>了解了 NVIDIA Reflex 要解决的问题，下面来了解一下 NVIDIA Reflex 采用什么技术来解决。它采用了两项新技术：</p>\n<ul>\n<li><p>  NVIDIA Reflex SDK：面向游戏开发者的一套新API；</p>\n</li>\n<li><p>NVIDIA Reflex延迟分析器：系统延迟测量工具。</p>\n</li>\n</ul>\n<p>官方是这样介绍的：使用Reflex SDK，游戏开发者可以实现低延迟模式，在这种模式下，游戏引擎能够完成即时渲染，从而消除GPU渲染排队现象，减轻受GPU限制的情况下造成的CPU反压。</p>\n<p>什么是反压？反压出现在流水作业中，反压的产生通常是由于短时间内负载高峰导致系统接收数据的速率远高于它处理数据的速率。打个比方，假如上级对下级的压力叫做正压，那么下级对上级的压力就是反压。因为下级处理事情的速度比上级处理事情的速度慢，导致下级拖慢了上级的效率，给上级造成了压力。同理，CPU处理的速度远快于GPU，当渲染队列已经满了之后，CPU的数据无法传到GPU里，而GPU处理速度跟不上，导致CPU被GPU拖慢，这就是CPU反压。</p>\n<p>为了解决GPU反压，NVIDIA 的解决办法就是和游戏开发者合作，提供 Reflex SDK，将CPU和GPU完全同步，GPU直接无缝处理CPU发生的指令，以此达成零渲染序列。也就是说，渲染是即时的，不再出现渲染队列，这样就减轻了CPU反压。减轻了CPU反压，于是就降低了渲染延迟。</p>\n<p>顾名思义，NVIDIA Reflex 延迟分析器就是测量系统延迟的技术，NVIDIA使用自家的G-SYNC显示器，并配合其他外设厂家的外设，能够实现测量系统延迟的功能。在以前，测量系统延迟的成本很高，而且测量时间不够快，导致系统延迟常常被忽视。Reflex延迟分析器改变了这一局限，它的原理就是检测鼠标点击之后，屏幕上显示的像素变化之间的时间。</p>\n<p>总之，NVIDIA Reflex 提供了一整套延迟技术，其中包括低延迟技术和延迟测量工具。</p>\n<div align='center' ><font size='5'>实现Reflex技术 </font></div>\n\n\n\n<p>我们如何在自己的电脑上实现 Reflex 技术？这个技术需要兼容的硬件及软件，分为4部分：</p>\n<ul>\n<li><p>GeForce系列显卡。NVIDIA发布GeForce RTX 30 系列显卡的时候同步推出Reflex 技术，但是这项技术并不单单支持RTX 30 系列，以下几款显卡都支持。</p>\n<p>  <img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex6.png\"></p>\n</li>\n<li><p>兼容的游戏。因为Reflex SDK是提供给游戏开发者的，只有开发者使用了SDK，才能实现CPU和GPU完全同步，所以还需要得到游戏开发者的支持。目前兼容的游戏包括APEX英雄、特战英豪、彩虹六号：围攻行动等。</p>\n<p>  <img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex7.jpg\"></p>\n</li>\n<li><p>G-SYNC显示器。NVIDIA 推出 Reflex技术的同时，也发布了新一代的G-SYNC显示器，以解决显示延迟的问题。G-SYNC显示器能更好地实现Reflex功能，但是不是必选的。</p>\n<p>  <img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex8.png\"></p>\n</li>\n<li><p>兼容的外设。NVIDIA推荐了一批和Reflex技术兼容的外设，这些外设拥有极高的灵敏度，能够配合G-SYNC显示器共同实现延迟测试功能。外设也不是必选的。</p>\n<p>  <img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex9.png\"></p>\n</li>\n</ul>\n<p>搭建好以上的环境，就可以使用 NVIDIA Reflex 技术了。</p>\n<div align='center' ><font size='5'>Reflex技术的商业价值 </font></div>\n\n\n\n<p>围绕Reflex技术构成了一个产业生态圈：</p>\n<ul>\n<li>  为游戏开发者提供了一套API，这套NVIDIA Reflex SDK 不需要游戏开发者自己研究，节省了游戏开发商的人力和时间成本。游戏开发者通过使用这项技术，能够改善游戏的体验，增加游戏的流畅性。正是由于这样的高效性，游戏开发商乐意和NVIDIA合作推出新功能。有了游戏开发商的支持，NVIDIA在游戏商业上游站稳了脚跟。</li>\n<li>  要使用NVIDIA Reflex技术，必不可少的配置要求就是要使用NVIDIA家的显卡。这项技术对降低系统延迟有效果，所以NVIDIA调研的游戏玩家，大多数是电竞玩家，这类玩家在挑选显卡的时候，就会首先考虑NVIDIA家的显卡。NVIDIA用技术的升级刺激了显卡的销售。</li>\n<li>  NVIDIA不仅在显卡领域成为了巨头，他拉拢其他外设厂家、显示器厂家组成它商业帝国的护城河。首先推出的是兼容G-SYNC技术的显示器，这类显示器可以和Reflex延迟分析器共同发挥测量系统误差的功能。接着推出了搭配G-SYNC显示器的鼠标，鼠标通过和显示器相连，实现测量系统误差各阶段误差的功能。</li>\n<li>  在宣传阵地上，NVIDIA同时在游戏测评领域和硬件测评领域发力，重点突出Reflex技术降低延迟技术和延迟测量工具两项技术的先进性和高效性，前者能够帮助玩家提高反应速度，增强游戏体验，后者让个人用户测量系统误差成为了可能。</li>\n<li>  在游戏玩家的视角里，要买显卡，只有两种选择：NVIDIA和AMD，就是常说的A卡和N卡。提到NVIDIA的第一印象，可能是高端，而AMD更有性价比。多年来这两个显卡厂家不是55开就是46开，要让玩家选择自己家的显卡，当然自己要有足够的吸引力，也就是要加重砝码，让天平倾向自己这一边。除了硬件要不断升级换代，提高能耗比之外，软件技术也要升级换代。NVIDIA Reflex正中了电竞玩家的下怀。</li>\n</ul>\n<div align='center' ><font size='5'>Reflex 技术的操作系统支持 </font></div>\n\n\n\n<p>该技术的操作系统支持，我没有找到相关的资料，以下是我自己分析的，难免有错误。</p>\n<p>首先要了解操作系统的主要功能是什么？操作系统的主要功能分为五个：</p>\n<ul>\n<li>  进程管理：主要工作是完成进程调度，分配CPU和内存资源；</li>\n<li>  存储管理：合理高效利用磁盘资源；</li>\n<li>  设备管理：对IO设备及其控制器进行管理；</li>\n<li>  文件管理：管理文件的存储和增删改查；</li>\n<li>  作业管理：操作系统对用户发的任务的实现；</li>\n</ul>\n<p>下面我来分析一下，从触发动作与得到响应之间经过了哪些处理，操作系统又是怎么支持的。</p>\n<ol>\n<li> 鼠标点击或者键盘按下，触发动作出现，鼠标或键盘（外设）的设备控制器会将外设数据读入设备控制器的数据寄存器里。（设备管理）</li>\n<li> 外设的设备控制器通过中断控制线向CPU发送一个中断信号，等待CPU的指令。（设备管理：设备传输控制）</li>\n<li> CPU执行中断程序，向设备控制器发送取数据的指令，设备控制器将自己寄存器内的数据放到数据总线上，CPU于是就收到了外设的数据。（进程管理）</li>\n<li> CPU得到了玩家的输入之后，结合游戏的状态，更新游戏的画面（此时游戏是运行在内存之中的），初步处理之后将数据发送给GPU，并对GPU下达指令。（进程管理）</li>\n<li> GPU的功能，甚至显卡的功能，都是通过显卡驱动提供API给CPU调用；显示器也是提供API接口给需要的设备调用的。（进程管理：进程通信IPC）</li>\n<li> 游戏的代码、数据，显卡的驱动，外设驱动，以及所有数据、代码，都由文件组成，都存储在磁盘之中。（存储管理、文件管理）</li>\n<li> 以上过程，包括用户的输入、游戏程序和执行过程中的各种规范，都是一个作业。（作业管理）</li>\n</ol>\n<p>上面是操作被响应的整个过程的操作系统的支持，但不是 Reflex 技术的操作系统支持，因为我不知道 Reflex 技术具体是怎么实现的，下面是我的猜测：</p>\n<ol>\n<li> Reflex 技术的实现集成在了显卡当中，而显卡驱动是要下载安装到磁盘当中的，所以磁盘管理给予了 Reflex 支持，这是最基本的。</li>\n<li> Reflex 技术必定用到进程管理，实现包括进程通信、进程调度、共享内存等功能，因为游戏是一个进程，对游戏的支持也是一个进程。</li>\n<li> Reflex 技术当中的延迟分析器，需要对各种外设和显示器进行管理，所以一定用到了设备管理，以实现设备独立性、设备传输控制。</li>\n</ol>\n<div align='center' ><font size='5'>Reflex 技术的硬件支持 </font></div>\n\n\n\n<p>我上面提到了，要实现Reflex 技术，需要 NVIDIA 特定的显卡（必选），G-SYNC 显示器和兼容的鼠标（非必选），下面我尝试解释一下：</p>\n<ul>\n<li>  首先是显卡，不同的显卡有不同的架构设计，导致了不同的显卡能实现不同的功能，所以 NVIDIA 自己家有的系列支持 Reflex 技术，有的系列不支持就成了很自然的事情。至于其它厂家的显卡能不能支持 Reflex 技术就不得而知了，在商业厮杀这么激烈的环境下，肯定是不能让友商用自己的技术的。</li>\n<li>  G-SYNC显示器为什么说是可选呢？因为它解决的是显示延迟的问题，即为了实现Reflex延迟分析器这个功能。这种显示器内置了延迟分析器，连接指定的电竞鼠标之后，就可以实时而且快速测量系统延时的数据。</li>\n<li>  兼容的鼠标，即指定的鼠标，也是为了实现Reflex延迟分析器的功能。平时我们的鼠标是连接到主板上的USB接口的，但是指定的鼠标是连接到G-SYNC显示器的USB接口上的，这样来实现测量系统延迟的功能。</li>\n</ul>\n<div align='center' ><font size='5'>Reflex 技术实现细节的猜测 </font></div>\n\n\n\n<p>我们知道，由于CPU对数据的处理效率远高于GPU对数据的处理效率，所以GPU设置了一个渲染队列以应对从CPU源源不断传输过来的数据和指令。但是，这不能解决CPU和GPU效率不匹配的问题，导致渲染队列满了。</p>\n<p>因为队列满了，CPU处理好的数据不知道放到哪里，它又不愿意把这些处理好的数据丢弃（我认为无论丢不丢弃，都已经降低了CPU的处理效率），所以CPU拿着这些数据不知所措，停下来等GPU。</p>\n<p>因为要等GPU处理，这个时候CPU是不能处理其他任务的，导致等待CPU处理的任务越来多，CPU的压力越来越大。也就是说，因为被GPU拖累，CPU产生了压力，这叫做CPU受到的反压。</p>\n<p>不可避免地，反压的出现导致了系统延迟（准确的说是其中的PC延迟）的增加。而Reflex的处理方法是打造零渲染序列，清空渲染队列，让CPU直接对接GPU。</p>\n<p>而游戏开发者要做的就是利用Reflex SDK跟CPU进行沟通，让CPU能够与GPU同步，这样就不会出现队列的问题了，CPU发送一个数据，GPU就处理一个数据。这样就消除了CPU受到的反压，降低系统延迟。</p>\n<p>但是我有一个疑问，因为Reflex是NVIDIA开发的，而NVIDIA是显卡厂商，它为什么能够对CPU进行控制，让CPU和GPU相匹配，而不是让GPU和CPU进行匹配。</p>\n<p>所以，一个更合理的猜测是让GPU的脉冲频率增高，以此来适应CPU。而这又导致了矛盾，因为如果提高脉冲就能提高GPU的效率，为什么不让每一个显卡都提高，而是开发Reflex技术来提高呢？难道是为了省电吗？</p>\n<p>以上是对 Reflex SDK 技术实现的猜测，下面对Reflex 延迟分析器的实现进行猜测。</p>\n<p>显示器方面：显示器上内置一个特殊的芯片，芯片实现的功能应该是能够检测特定的画面出现，然后记录这个时间。具体是什么画面则需要游戏开发商通过Reflex SDK 告诉显示器，让显示器看到特定的画面出现反应。</p>\n<p>比如说，官方提到的看到枪口的火焰为一个特定的画面，因为电竞游戏往往是射击游戏。还可以是任务的起跳或者下蹲动作，还可以是切换武器的动作。</p>\n<p>鼠标方面：鼠标通过USB直接和显示器连接，当鼠标进行操作之后，鼠标会发送一个特殊的信号给显示器，显示器收到这个信号之后马上开启计时器，等待对应的画面的出现，当对应的画面出现的时候，停止计时，这个时间就是系统延迟。</p>\n<p><img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex10.png\"></p>\n<div align='center' ><font size='5'> 总结 </font></div>\n\n<ol>\n<li> 电竞游戏成为主流，电竞游戏对延迟十分敏感，玩家需要降低延迟的技术。</li>\n<li> 延迟分为网络延迟和系统延迟，网络延迟和网络环境相关，系统延迟和外设、主机、显示器相关。</li>\n<li> NVIDIA Reflex 技术的出现是为了降低系统延迟和测量系统延迟，包括Reflex SDK技术和Reflex 延迟分析器。</li>\n<li> Reflex SDK 提供给游戏开发者使用，令CPU和GPU同步，消除渲染队列，减轻CPU受到的反压，从而降低渲染延迟。</li>\n<li> Reflex 延迟分析器能够测量系统延迟，这需要相关硬件的支持。</li>\n<li> 要在个人计算机上完整实现 Reflex 技术，需要显卡、显示器、外设和游戏同时符合要求。</li>\n<li> Reflex 技术给 NVIDIA 带来了巨大的商业价值。</li>\n<li> Reflex 技术得到了操作系统广泛而且坚定的支持。</li>\n<li> Reflex 技术的实现需要特殊的硬件支持。</li>\n<li> 对 Reflex 技术的实现做了一些猜测。</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>NVIDIA Reflex 是 NVIDIA 公司开发的降低游戏系统延迟的技术，它包含硬件和软件两部分，其中硬件包括 GPU 和 G-SYNC 显示器，软件包括可测量和降低竞技游戏延迟技术。</p>","more":"<p>NVIDIA Reflex 是 NVIDIA 公司开发的降低游戏系统延迟的技术，它包含硬件和软件两部分，其中硬件包括 GPU 和 G-SYNC 显示器，软件包括可测量和降低竞技游戏延迟技术。</p>\n<p><img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex1.png\"></p>\n<div align='center' ><font size='5'>NVIDIA 为什么要开发 Reflex？</font></div>\n\n\n\n<p>我从小就爱玩电子游戏，小时候玩的电子游戏都是《吃豆人》《魂斗罗》这样的闯关型，后来电子游戏从以闯关为主流转变为以对抗为主流，电子竞技成为大多数人的选择。电竞游戏在近十年得到了飞速的发展，涌现出的现象级游戏就有穿越火线（CF）、英雄联盟（LOL）、绝地求生（吃鸡）等。官方介绍文章中提到的“电竞游戏‘英雄联盟 ’在 2019 年的冠军赛中吸引了 1 亿多名观众”这句话里出现的数据，我没有查到相关的资料，但是英雄联盟官方统计到了总决赛观看人数的峰值，这个数字在2019年这个数据是4300多万，而到了2021年则是7300多万。</p>\n<p>观看人数的增多侧面反映了游戏玩家的增多和玩家对游戏热情的提高，游戏体验就成了游戏里无法逃避的问题。对于玩家来说，降低延迟至关重要，这样能够保证主机和外设更快响应玩家的操作，从而让玩家迅速发现敌人、击毙敌人，提高玩家的成绩。我要补充的是，系统延迟还能影响玩家的心情、心态，进而影响玩家的身体和心理健康。所以，面对 NVIDIA Reflex 这样降低延迟的技术，就像救玩家于水火之中，我们对此的第一印象应该是：好好好！然后再重回理性，来问这样的好东西贵不贵，思考自己需不需要。</p>\n<img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex2.jpeg\" style=\"zoom:50%;\" />\n\n<p>NVIDIA 开发 Reflex 就是为了降低系统延迟，降低系统延迟意味着玩家有更多的反应时间，和更多的操作空间，从而提高玩家的成绩。这正中电竞玩家的下怀，提高自己的成绩带来的满足感，就像被人表扬了一样。玩家们愿意买账的话，这个技术就有意义，NVIDIA 当然希望自己的显卡能卖得更好。</p>\n<div align='center' ><font size='5'>什么是延迟？ </font></div>\n\n\n\n<p>在研究 NVIDIA Reflex 技术之前，首先要了解什么是延迟。延迟是命令下达之后，到这项命令处理完成之间所经历的时间间隔。延迟的出现是由于在完成命令的过程中，命令要经过多次处理，才能最终实现，而期间的每一步都要花费时间，累计起来的时间间隔就成了不可忽视的影响，于是延迟变成了影响电竞游戏体验的关键。延迟又可以细分为网络延迟和系统延迟。</p>\n<p>网络延迟即网络响应时间，既然叫网络延迟，当然和网络有关，是客户端和服务器完成数据交换所需的时间。玩家在自己的主机（客户端）上操作，之后客户端会通过网络把数据传到服务器，服务器通过汇总每个玩家执行的操作，计算处理之后，又把结果通过网络返还给所有的客户端，数据在网络上传输的这段时间称为网络延迟。网络延迟与网络环境有关，通常被称为 ping 值，以英雄联盟为例，它出现在画面的右上角。</p>\n<p><img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex3.png\"></p>\n<div align='center' ><font size='5'>系统延迟：延迟的一种 </font></div>\n\n\n\n<p>现在详细介绍系统延迟。系统延迟就是玩家在鼠标或者键盘进行操作到显示器产生相应变化之间的时间。这期间玩家的操作会经过外设、CPU、GPU和显示器的处理，最终完成这项操作。系统延迟不涉及网络，不需要和服务器交互，即没有网络延迟，仅仅与玩家的外设、主机和显示器相关。系统延迟包含三部分：</p>\n<ul>\n<li><p>外设延迟</p>\n<p>  ​        外设将玩家发出的指令传给主机，知道被主机接收，这个时间间隔称为外设延迟。外设延迟经过外设内置硬件和外设 USB 硬件的处理，最终到达主机。外设与主机相连的接口叫做 USB（通用串行总线），因为外设操作的突发性和紧急性，CPU 通过中断方式来响应外设的请求。操作系统的响应过程是这样的：操作系统持续监听外设控制器，当外设产生数据之后，通过USB传输数据到外设控制器的缓存中，外设控制器通过中断线向 CPU 发送中断请求，CPU 响应中断指令，到外设控制器取数据。</p>\n</li>\n<li><p>PC 延迟</p>\n<p>  ​        主机对数据进行传送以及处理所需的时间。PC 延迟在下文会详细分析。</p>\n</li>\n<li><p>显示延迟</p>\n<p>  ​        显示器从 GPU 接收数据之后到呈现图形所需要的时间。GPU 完成对图形完成渲染之后，接着对这些图形进行合成。合成完成后，显示器接收到了 GPU 传输的信号，就开始接收从 GPU 传送过来的数据，这些数据会指导显示器呈现图像，显示器上的液晶会进行暗/亮变化，最终绘制出图像。</p>\n</li>\n</ul>\n<p><img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex4.png\"></p>\n<div align='center' ><font size='5'>系统延迟里的 PC 延迟 </font></div>\n\n\n\n<p>如前所述，PC 延迟是在主机内部产生的，是数据在主机内部进行传送以及处理所需要的时间。在主机内部，外设传来的指令通过 USB 软件（USB 驱动）进入到操作系统中，然后便会对游戏进行相应的改变，接着将对游戏做出的改变交给图形驱动进行分组，最后提交给 GPU 进行渲染、合成，以待显示器显示出改变后的画面。对游戏做出相应改变产生的延迟叫做游戏延迟，GPU 渲染、合成产生的延迟叫做渲染延迟。下面分别介绍游戏延迟和渲染延迟：</p>\n<ul>\n<li><p>游戏延迟</p>\n<p>  ​        外设的指令进入操作系统之后，CPU 开始着手按着指令对游戏进行相应的改变，以待提交给GPU渲染，这个过程就是游戏延迟。在这个过程中，CPU首先根据外设的指令在游戏中采样，由于CPU的调度算法不同，这个阶段产生的延迟也不同，接着按照指令对游戏进行更新，游戏更新之后，为了把更新内容显示出来，CPU要记录相关项，把渲染作业发送给GPU，发送过程还需要经过图形驱动。</p>\n<p>  ​        这个过程不得不提到CPU和GPU之间的调度，它们之间通过系统总线交换数据，过程是这样的：</p>\n<ol>\n<li><p> CPU成功读取数据，分离出图像数据，放到系统内存中；</p>\n</li>\n<li><p> CPU通过系统总线，把数据从系统内存拷贝到GPU的显存里；</p>\n</li>\n<li><p>GPU从队列里拿出一个任务进行渲染，渲染好的数据放回系统内存中。这个时候CPU还会定期询问GPU的情况；</p>\n</li>\n</ol>\n</li>\n<li><p>渲染延迟</p>\n<p>  ​        待渲染的数据排队，最终进入GPU直到渲染完毕所需要的时间。在图形驱动提交渲染作业后，该渲染作业会进入GPU的渲染队列。渲染队列是存放GPU来不及处理的数据，能让GPU始终都处在运行状态，以提高GPU的吞吐量。GPU是图形处理器，能加速对图形的渲染和填充，虽然GPU能够提高图形处理速度，但是也更耗电。GPU渲染过程如下：</p>\n<ol>\n<li>应用阶段：这个阶段由CPU完成，对数据进行处理，并把这些数据的渲染状态传给GPU；</li>\n<li>几何阶段：把CPU发来的数据进一步处理，这个阶段又可以进一步划分为若干个流水线阶段，包括着色、投影、裁剪和屏幕映射；</li>\n<li>光栅化阶段：把几何阶段得到的顶点，转化成可以在显示器上显示的像素。</li>\n</ol>\n</li>\n</ul>\n<p><img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex5.png\"></p>\n<div align='center' ><font size='5'>Reflex 采用的技术 </font></div>\n\n\n\n<p>了解了 NVIDIA Reflex 要解决的问题，下面来了解一下 NVIDIA Reflex 采用什么技术来解决。它采用了两项新技术：</p>\n<ul>\n<li><p>  NVIDIA Reflex SDK：面向游戏开发者的一套新API；</p>\n</li>\n<li><p>NVIDIA Reflex延迟分析器：系统延迟测量工具。</p>\n</li>\n</ul>\n<p>官方是这样介绍的：使用Reflex SDK，游戏开发者可以实现低延迟模式，在这种模式下，游戏引擎能够完成即时渲染，从而消除GPU渲染排队现象，减轻受GPU限制的情况下造成的CPU反压。</p>\n<p>什么是反压？反压出现在流水作业中，反压的产生通常是由于短时间内负载高峰导致系统接收数据的速率远高于它处理数据的速率。打个比方，假如上级对下级的压力叫做正压，那么下级对上级的压力就是反压。因为下级处理事情的速度比上级处理事情的速度慢，导致下级拖慢了上级的效率，给上级造成了压力。同理，CPU处理的速度远快于GPU，当渲染队列已经满了之后，CPU的数据无法传到GPU里，而GPU处理速度跟不上，导致CPU被GPU拖慢，这就是CPU反压。</p>\n<p>为了解决GPU反压，NVIDIA 的解决办法就是和游戏开发者合作，提供 Reflex SDK，将CPU和GPU完全同步，GPU直接无缝处理CPU发生的指令，以此达成零渲染序列。也就是说，渲染是即时的，不再出现渲染队列，这样就减轻了CPU反压。减轻了CPU反压，于是就降低了渲染延迟。</p>\n<p>顾名思义，NVIDIA Reflex 延迟分析器就是测量系统延迟的技术，NVIDIA使用自家的G-SYNC显示器，并配合其他外设厂家的外设，能够实现测量系统延迟的功能。在以前，测量系统延迟的成本很高，而且测量时间不够快，导致系统延迟常常被忽视。Reflex延迟分析器改变了这一局限，它的原理就是检测鼠标点击之后，屏幕上显示的像素变化之间的时间。</p>\n<p>总之，NVIDIA Reflex 提供了一整套延迟技术，其中包括低延迟技术和延迟测量工具。</p>\n<div align='center' ><font size='5'>实现Reflex技术 </font></div>\n\n\n\n<p>我们如何在自己的电脑上实现 Reflex 技术？这个技术需要兼容的硬件及软件，分为4部分：</p>\n<ul>\n<li><p>GeForce系列显卡。NVIDIA发布GeForce RTX 30 系列显卡的时候同步推出Reflex 技术，但是这项技术并不单单支持RTX 30 系列，以下几款显卡都支持。</p>\n<p>  <img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex6.png\"></p>\n</li>\n<li><p>兼容的游戏。因为Reflex SDK是提供给游戏开发者的，只有开发者使用了SDK，才能实现CPU和GPU完全同步，所以还需要得到游戏开发者的支持。目前兼容的游戏包括APEX英雄、特战英豪、彩虹六号：围攻行动等。</p>\n<p>  <img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex7.jpg\"></p>\n</li>\n<li><p>G-SYNC显示器。NVIDIA 推出 Reflex技术的同时，也发布了新一代的G-SYNC显示器，以解决显示延迟的问题。G-SYNC显示器能更好地实现Reflex功能，但是不是必选的。</p>\n<p>  <img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex8.png\"></p>\n</li>\n<li><p>兼容的外设。NVIDIA推荐了一批和Reflex技术兼容的外设，这些外设拥有极高的灵敏度，能够配合G-SYNC显示器共同实现延迟测试功能。外设也不是必选的。</p>\n<p>  <img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex9.png\"></p>\n</li>\n</ul>\n<p>搭建好以上的环境，就可以使用 NVIDIA Reflex 技术了。</p>\n<div align='center' ><font size='5'>Reflex技术的商业价值 </font></div>\n\n\n\n<p>围绕Reflex技术构成了一个产业生态圈：</p>\n<ul>\n<li>  为游戏开发者提供了一套API，这套NVIDIA Reflex SDK 不需要游戏开发者自己研究，节省了游戏开发商的人力和时间成本。游戏开发者通过使用这项技术，能够改善游戏的体验，增加游戏的流畅性。正是由于这样的高效性，游戏开发商乐意和NVIDIA合作推出新功能。有了游戏开发商的支持，NVIDIA在游戏商业上游站稳了脚跟。</li>\n<li>  要使用NVIDIA Reflex技术，必不可少的配置要求就是要使用NVIDIA家的显卡。这项技术对降低系统延迟有效果，所以NVIDIA调研的游戏玩家，大多数是电竞玩家，这类玩家在挑选显卡的时候，就会首先考虑NVIDIA家的显卡。NVIDIA用技术的升级刺激了显卡的销售。</li>\n<li>  NVIDIA不仅在显卡领域成为了巨头，他拉拢其他外设厂家、显示器厂家组成它商业帝国的护城河。首先推出的是兼容G-SYNC技术的显示器，这类显示器可以和Reflex延迟分析器共同发挥测量系统误差的功能。接着推出了搭配G-SYNC显示器的鼠标，鼠标通过和显示器相连，实现测量系统误差各阶段误差的功能。</li>\n<li>  在宣传阵地上，NVIDIA同时在游戏测评领域和硬件测评领域发力，重点突出Reflex技术降低延迟技术和延迟测量工具两项技术的先进性和高效性，前者能够帮助玩家提高反应速度，增强游戏体验，后者让个人用户测量系统误差成为了可能。</li>\n<li>  在游戏玩家的视角里，要买显卡，只有两种选择：NVIDIA和AMD，就是常说的A卡和N卡。提到NVIDIA的第一印象，可能是高端，而AMD更有性价比。多年来这两个显卡厂家不是55开就是46开，要让玩家选择自己家的显卡，当然自己要有足够的吸引力，也就是要加重砝码，让天平倾向自己这一边。除了硬件要不断升级换代，提高能耗比之外，软件技术也要升级换代。NVIDIA Reflex正中了电竞玩家的下怀。</li>\n</ul>\n<div align='center' ><font size='5'>Reflex 技术的操作系统支持 </font></div>\n\n\n\n<p>该技术的操作系统支持，我没有找到相关的资料，以下是我自己分析的，难免有错误。</p>\n<p>首先要了解操作系统的主要功能是什么？操作系统的主要功能分为五个：</p>\n<ul>\n<li>  进程管理：主要工作是完成进程调度，分配CPU和内存资源；</li>\n<li>  存储管理：合理高效利用磁盘资源；</li>\n<li>  设备管理：对IO设备及其控制器进行管理；</li>\n<li>  文件管理：管理文件的存储和增删改查；</li>\n<li>  作业管理：操作系统对用户发的任务的实现；</li>\n</ul>\n<p>下面我来分析一下，从触发动作与得到响应之间经过了哪些处理，操作系统又是怎么支持的。</p>\n<ol>\n<li> 鼠标点击或者键盘按下，触发动作出现，鼠标或键盘（外设）的设备控制器会将外设数据读入设备控制器的数据寄存器里。（设备管理）</li>\n<li> 外设的设备控制器通过中断控制线向CPU发送一个中断信号，等待CPU的指令。（设备管理：设备传输控制）</li>\n<li> CPU执行中断程序，向设备控制器发送取数据的指令，设备控制器将自己寄存器内的数据放到数据总线上，CPU于是就收到了外设的数据。（进程管理）</li>\n<li> CPU得到了玩家的输入之后，结合游戏的状态，更新游戏的画面（此时游戏是运行在内存之中的），初步处理之后将数据发送给GPU，并对GPU下达指令。（进程管理）</li>\n<li> GPU的功能，甚至显卡的功能，都是通过显卡驱动提供API给CPU调用；显示器也是提供API接口给需要的设备调用的。（进程管理：进程通信IPC）</li>\n<li> 游戏的代码、数据，显卡的驱动，外设驱动，以及所有数据、代码，都由文件组成，都存储在磁盘之中。（存储管理、文件管理）</li>\n<li> 以上过程，包括用户的输入、游戏程序和执行过程中的各种规范，都是一个作业。（作业管理）</li>\n</ol>\n<p>上面是操作被响应的整个过程的操作系统的支持，但不是 Reflex 技术的操作系统支持，因为我不知道 Reflex 技术具体是怎么实现的，下面是我的猜测：</p>\n<ol>\n<li> Reflex 技术的实现集成在了显卡当中，而显卡驱动是要下载安装到磁盘当中的，所以磁盘管理给予了 Reflex 支持，这是最基本的。</li>\n<li> Reflex 技术必定用到进程管理，实现包括进程通信、进程调度、共享内存等功能，因为游戏是一个进程，对游戏的支持也是一个进程。</li>\n<li> Reflex 技术当中的延迟分析器，需要对各种外设和显示器进行管理，所以一定用到了设备管理，以实现设备独立性、设备传输控制。</li>\n</ol>\n<div align='center' ><font size='5'>Reflex 技术的硬件支持 </font></div>\n\n\n\n<p>我上面提到了，要实现Reflex 技术，需要 NVIDIA 特定的显卡（必选），G-SYNC 显示器和兼容的鼠标（非必选），下面我尝试解释一下：</p>\n<ul>\n<li>  首先是显卡，不同的显卡有不同的架构设计，导致了不同的显卡能实现不同的功能，所以 NVIDIA 自己家有的系列支持 Reflex 技术，有的系列不支持就成了很自然的事情。至于其它厂家的显卡能不能支持 Reflex 技术就不得而知了，在商业厮杀这么激烈的环境下，肯定是不能让友商用自己的技术的。</li>\n<li>  G-SYNC显示器为什么说是可选呢？因为它解决的是显示延迟的问题，即为了实现Reflex延迟分析器这个功能。这种显示器内置了延迟分析器，连接指定的电竞鼠标之后，就可以实时而且快速测量系统延时的数据。</li>\n<li>  兼容的鼠标，即指定的鼠标，也是为了实现Reflex延迟分析器的功能。平时我们的鼠标是连接到主板上的USB接口的，但是指定的鼠标是连接到G-SYNC显示器的USB接口上的，这样来实现测量系统延迟的功能。</li>\n</ul>\n<div align='center' ><font size='5'>Reflex 技术实现细节的猜测 </font></div>\n\n\n\n<p>我们知道，由于CPU对数据的处理效率远高于GPU对数据的处理效率，所以GPU设置了一个渲染队列以应对从CPU源源不断传输过来的数据和指令。但是，这不能解决CPU和GPU效率不匹配的问题，导致渲染队列满了。</p>\n<p>因为队列满了，CPU处理好的数据不知道放到哪里，它又不愿意把这些处理好的数据丢弃（我认为无论丢不丢弃，都已经降低了CPU的处理效率），所以CPU拿着这些数据不知所措，停下来等GPU。</p>\n<p>因为要等GPU处理，这个时候CPU是不能处理其他任务的，导致等待CPU处理的任务越来多，CPU的压力越来越大。也就是说，因为被GPU拖累，CPU产生了压力，这叫做CPU受到的反压。</p>\n<p>不可避免地，反压的出现导致了系统延迟（准确的说是其中的PC延迟）的增加。而Reflex的处理方法是打造零渲染序列，清空渲染队列，让CPU直接对接GPU。</p>\n<p>而游戏开发者要做的就是利用Reflex SDK跟CPU进行沟通，让CPU能够与GPU同步，这样就不会出现队列的问题了，CPU发送一个数据，GPU就处理一个数据。这样就消除了CPU受到的反压，降低系统延迟。</p>\n<p>但是我有一个疑问，因为Reflex是NVIDIA开发的，而NVIDIA是显卡厂商，它为什么能够对CPU进行控制，让CPU和GPU相匹配，而不是让GPU和CPU进行匹配。</p>\n<p>所以，一个更合理的猜测是让GPU的脉冲频率增高，以此来适应CPU。而这又导致了矛盾，因为如果提高脉冲就能提高GPU的效率，为什么不让每一个显卡都提高，而是开发Reflex技术来提高呢？难道是为了省电吗？</p>\n<p>以上是对 Reflex SDK 技术实现的猜测，下面对Reflex 延迟分析器的实现进行猜测。</p>\n<p>显示器方面：显示器上内置一个特殊的芯片，芯片实现的功能应该是能够检测特定的画面出现，然后记录这个时间。具体是什么画面则需要游戏开发商通过Reflex SDK 告诉显示器，让显示器看到特定的画面出现反应。</p>\n<p>比如说，官方提到的看到枪口的火焰为一个特定的画面，因为电竞游戏往往是射击游戏。还可以是任务的起跳或者下蹲动作，还可以是切换武器的动作。</p>\n<p>鼠标方面：鼠标通过USB直接和显示器连接，当鼠标进行操作之后，鼠标会发送一个特殊的信号给显示器，显示器收到这个信号之后马上开启计时器，等待对应的画面的出现，当对应的画面出现的时候，停止计时，这个时间就是系统延迟。</p>\n<p><img src=\"https://zhenruyi.github.io/images/other01NIVIDIAReflex10.png\"></p>\n<div align='center' ><font size='5'> 总结 </font></div>\n\n<ol>\n<li> 电竞游戏成为主流，电竞游戏对延迟十分敏感，玩家需要降低延迟的技术。</li>\n<li> 延迟分为网络延迟和系统延迟，网络延迟和网络环境相关，系统延迟和外设、主机、显示器相关。</li>\n<li> NVIDIA Reflex 技术的出现是为了降低系统延迟和测量系统延迟，包括Reflex SDK技术和Reflex 延迟分析器。</li>\n<li> Reflex SDK 提供给游戏开发者使用，令CPU和GPU同步，消除渲染队列，减轻CPU受到的反压，从而降低渲染延迟。</li>\n<li> Reflex 延迟分析器能够测量系统延迟，这需要相关硬件的支持。</li>\n<li> 要在个人计算机上完整实现 Reflex 技术，需要显卡、显示器、外设和游戏同时符合要求。</li>\n<li> Reflex 技术给 NVIDIA 带来了巨大的商业价值。</li>\n<li> Reflex 技术得到了操作系统广泛而且坚定的支持。</li>\n<li> Reflex 技术的实现需要特殊的硬件支持。</li>\n<li> 对 Reflex 技术的实现做了一些猜测。</li>\n</ol>"},{"title":"坦黎科技面试","date":"2022-03-10T09:16:09.000Z","id":"job1","_content":"\n\n\n2022年3月5日早上面试。\n\n2022年3月10日入职。\n\n\n\n<!-- more -->\n\n\n\n\n\n## Golang\n\n### main函数\n\n#### 1. void main(void)能通过编译吗，有什么潜在问题？\n\n```\n大多数的编译器都是可以通过的，但是会发出警告。main函数的返回值是int而不是void。int返回类型会让程序返回状态值，这点非常重要，特别是当程序作为依赖于程序成功运行的脚本的一部分运行时。\n```\n\n#### 2. \n\n[main函数_百度百科 (baidu.com)](https://baike.baidu.com/item/main函数/6887703)\n\n\n\n### Init函数：外？本包？\n\n[(12条消息) init函数的介绍](https://blog.csdn.net/qq_42303254/article/details/107647925)\n\n[Go语言之init函数 - 云+社区 - 腾讯云 (tencent.com)](https://cloud.tencent.com/developer/article/1608937#:~:text=Go语言有一个特殊的函数init，先于main函数执行，实现包级别的一些初始化操作。 对于init 函数来说：每个包可以包含任意多个 init 函数，这些函数都会在程序执行开始的时候被调用。 所有被编译器发现的,init 函数都会安排在 main 函数之前执行。 init 函数用在设置包、初始化变量或其他要在程序运行前优先完成的引导工作。)\n\n\n\n### 引用类型\n\n[Golang 的引用类型底层实现 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/111796041)\n\n\n\n### 同步锁\n\n[Go语言 | 并发设计中的同步锁与waitgroup用法 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/242105419#)\n\n[(12条消息) Golang同步锁的两种方式_cheene的博客-CSDN博客_go 同步锁](https://blog.csdn.net/weixin_38089997/article/details/108793195)\n\n\n\n### channel特性\n\n[Golang教程之管道篇（六） - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/85632976)\n\n\n\n### 线程和协程\n\n[进程、线程与协程 - FilletNotFish - 博客园 (cnblogs.com)](https://www.cnblogs.com/filletnotfish/p/15057349.html)\n\n[进程和线程、协程的区别 - RunningPower - 博客园 (cnblogs.com)](https://www.cnblogs.com/lxmhhy/p/6041001.html#:~:text=1) \n\n\n\n### 异常 \n\n[go语言之抛出异常 - 传盛 - 博客园 (cnblogs.com)](https://www.cnblogs.com/liucsxiaoxiaobai/p/10805788.html)\n\n除数 panic 空指针\n\n### 选择排序\n\n\n\n## Linux\n\n### su和sudo的区别\n\n[(13条消息) sudo与su的区别_风尘仆的博客-CSDN博客_sudo和su的区别](https://blog.csdn.net/frankcreen/article/details/105048051)\n\n[(13条消息) su 命令和sudo命令的区别_-公子世无双~的博客-CSDN博客_su和sudo命令的区别](https://blog.csdn.net/qq_57422382/article/details/120513820)\n\n### 显示当前路径pwd\n\n### 结束进程的命令：kill\n\n[Linux kill命令详解：终止进程 (biancheng.net)](http://c.biancheng.net/view/1068.html)\n\n### 查询后缀名相同的所有文件，然后删除\n\n[(13条消息) linux shell 批量处理相同后缀文件-服务器-CSDN问答](https://ask.csdn.net/questions/324058)\n\n\n\n## Mysql\n\n### 索引\n\n[(13条消息) 一文搞懂MySQL索引（清晰明了）_Free Joe的博客-CSDN博客_mysql索引](https://blog.csdn.net/wangfeijiu/article/details/113409719?utm_source=app&app_version=5.2.0)\n\n### 多表查询的方式\n\n[SQL：多表查询 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/91973413)\n\n\n\n## Redis\n\n\n\n## 工作内容\n\n1. 推荐系统，开源\n2. 丰富内容，爬虫\n3. IM服务\n","source":"_posts/other-job01MyFirstInterview.md","raw":"---\ntitle: 坦黎科技面试\ndate: 2022-03-10 17:16:09\nid: job1\ncategories:\n- other\ntags:\n- job\n---\n\n\n\n2022年3月5日早上面试。\n\n2022年3月10日入职。\n\n\n\n<!-- more -->\n\n\n\n\n\n## Golang\n\n### main函数\n\n#### 1. void main(void)能通过编译吗，有什么潜在问题？\n\n```\n大多数的编译器都是可以通过的，但是会发出警告。main函数的返回值是int而不是void。int返回类型会让程序返回状态值，这点非常重要，特别是当程序作为依赖于程序成功运行的脚本的一部分运行时。\n```\n\n#### 2. \n\n[main函数_百度百科 (baidu.com)](https://baike.baidu.com/item/main函数/6887703)\n\n\n\n### Init函数：外？本包？\n\n[(12条消息) init函数的介绍](https://blog.csdn.net/qq_42303254/article/details/107647925)\n\n[Go语言之init函数 - 云+社区 - 腾讯云 (tencent.com)](https://cloud.tencent.com/developer/article/1608937#:~:text=Go语言有一个特殊的函数init，先于main函数执行，实现包级别的一些初始化操作。 对于init 函数来说：每个包可以包含任意多个 init 函数，这些函数都会在程序执行开始的时候被调用。 所有被编译器发现的,init 函数都会安排在 main 函数之前执行。 init 函数用在设置包、初始化变量或其他要在程序运行前优先完成的引导工作。)\n\n\n\n### 引用类型\n\n[Golang 的引用类型底层实现 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/111796041)\n\n\n\n### 同步锁\n\n[Go语言 | 并发设计中的同步锁与waitgroup用法 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/242105419#)\n\n[(12条消息) Golang同步锁的两种方式_cheene的博客-CSDN博客_go 同步锁](https://blog.csdn.net/weixin_38089997/article/details/108793195)\n\n\n\n### channel特性\n\n[Golang教程之管道篇（六） - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/85632976)\n\n\n\n### 线程和协程\n\n[进程、线程与协程 - FilletNotFish - 博客园 (cnblogs.com)](https://www.cnblogs.com/filletnotfish/p/15057349.html)\n\n[进程和线程、协程的区别 - RunningPower - 博客园 (cnblogs.com)](https://www.cnblogs.com/lxmhhy/p/6041001.html#:~:text=1) \n\n\n\n### 异常 \n\n[go语言之抛出异常 - 传盛 - 博客园 (cnblogs.com)](https://www.cnblogs.com/liucsxiaoxiaobai/p/10805788.html)\n\n除数 panic 空指针\n\n### 选择排序\n\n\n\n## Linux\n\n### su和sudo的区别\n\n[(13条消息) sudo与su的区别_风尘仆的博客-CSDN博客_sudo和su的区别](https://blog.csdn.net/frankcreen/article/details/105048051)\n\n[(13条消息) su 命令和sudo命令的区别_-公子世无双~的博客-CSDN博客_su和sudo命令的区别](https://blog.csdn.net/qq_57422382/article/details/120513820)\n\n### 显示当前路径pwd\n\n### 结束进程的命令：kill\n\n[Linux kill命令详解：终止进程 (biancheng.net)](http://c.biancheng.net/view/1068.html)\n\n### 查询后缀名相同的所有文件，然后删除\n\n[(13条消息) linux shell 批量处理相同后缀文件-服务器-CSDN问答](https://ask.csdn.net/questions/324058)\n\n\n\n## Mysql\n\n### 索引\n\n[(13条消息) 一文搞懂MySQL索引（清晰明了）_Free Joe的博客-CSDN博客_mysql索引](https://blog.csdn.net/wangfeijiu/article/details/113409719?utm_source=app&app_version=5.2.0)\n\n### 多表查询的方式\n\n[SQL：多表查询 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/91973413)\n\n\n\n## Redis\n\n\n\n## 工作内容\n\n1. 推荐系统，开源\n2. 丰富内容，爬虫\n3. IM服务\n","slug":"other-job01MyFirstInterview","published":1,"updated":"2022-04-16T23:09:07.022Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70u3002k5ossapq33ky7","content":"<p>2022年3月5日早上面试。</p>\n<p>2022年3月10日入职。</p>\n<span id=\"more\"></span>\n\n\n\n\n\n<h2 id=\"Golang\"><a href=\"#Golang\" class=\"headerlink\" title=\"Golang\"></a>Golang</h2><h3 id=\"main函数\"><a href=\"#main函数\" class=\"headerlink\" title=\"main函数\"></a>main函数</h3><h4 id=\"1-void-main-void-能通过编译吗，有什么潜在问题？\"><a href=\"#1-void-main-void-能通过编译吗，有什么潜在问题？\" class=\"headerlink\" title=\"1. void main(void)能通过编译吗，有什么潜在问题？\"></a>1. void main(void)能通过编译吗，有什么潜在问题？</h4><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">大多数的编译器都是可以通过的，但是会发出警告。main函数的返回值是<span class=\"built_in\">int</span>而不是<span class=\"built_in\">void</span>。<span class=\"built_in\">int</span>返回类型会让程序返回状态值，这点非常重要，特别是当程序作为依赖于程序成功运行的脚本的一部分运行时。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2\"><a href=\"#2\" class=\"headerlink\" title=\"2.\"></a>2.</h4><p><a href=\"https://baike.baidu.com/item/main%E5%87%BD%E6%95%B0/6887703\">main函数_百度百科 (baidu.com)</a></p>\n<h3 id=\"Init函数：外？本包？\"><a href=\"#Init函数：外？本包？\" class=\"headerlink\" title=\"Init函数：外？本包？\"></a>Init函数：外？本包？</h3><p><a href=\"https://blog.csdn.net/qq_42303254/article/details/107647925\">(12条消息) init函数的介绍</a></p>\n<p>[Go语言之init函数 - 云+社区 - 腾讯云 (tencent.com)](<a href=\"https://cloud.tencent.com/developer/article/1608937#:~:text=Go%E8%AF%AD%E8%A8%80%E6%9C%89%E4%B8%80%E4%B8%AA%E7%89%B9%E6%AE%8A%E7%9A%84%E5%87%BD%E6%95%B0init%EF%BC%8C%E5%85%88%E4%BA%8Emain%E5%87%BD%E6%95%B0%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%8C%85%E7%BA%A7%E5%88%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E5%88%9D%E5%A7%8B%E5%8C%96%E6%93%8D%E4%BD%9C%E3%80%82\">https://cloud.tencent.com/developer/article/1608937#:~:text=Go语言有一个特殊的函数init，先于main函数执行，实现包级别的一些初始化操作。</a> 对于init 函数来说：每个包可以包含任意多个 init 函数，这些函数都会在程序执行开始的时候被调用。 所有被编译器发现的,init 函数都会安排在 main 函数之前执行。 init 函数用在设置包、初始化变量或其他要在程序运行前优先完成的引导工作。)</p>\n<h3 id=\"引用类型\"><a href=\"#引用类型\" class=\"headerlink\" title=\"引用类型\"></a>引用类型</h3><p><a href=\"https://zhuanlan.zhihu.com/p/111796041\">Golang 的引用类型底层实现 - 知乎 (zhihu.com)</a></p>\n<h3 id=\"同步锁\"><a href=\"#同步锁\" class=\"headerlink\" title=\"同步锁\"></a>同步锁</h3><p><a href=\"https://zhuanlan.zhihu.com/p/242105419#\">Go语言 | 并发设计中的同步锁与waitgroup用法 - 知乎 (zhihu.com)</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_38089997/article/details/108793195\">(12条消息) Golang同步锁的两种方式_cheene的博客-CSDN博客_go 同步锁</a></p>\n<h3 id=\"channel特性\"><a href=\"#channel特性\" class=\"headerlink\" title=\"channel特性\"></a>channel特性</h3><p><a href=\"https://zhuanlan.zhihu.com/p/85632976\">Golang教程之管道篇（六） - 知乎 (zhihu.com)</a></p>\n<h3 id=\"线程和协程\"><a href=\"#线程和协程\" class=\"headerlink\" title=\"线程和协程\"></a>线程和协程</h3><p><a href=\"https://www.cnblogs.com/filletnotfish/p/15057349.html\">进程、线程与协程 - FilletNotFish - 博客园 (cnblogs.com)</a></p>\n<p><a href=\"https://www.cnblogs.com/lxmhhy/p/6041001.html#:~:text=1\">进程和线程、协程的区别 - RunningPower - 博客园 (cnblogs.com)</a> </p>\n<h3 id=\"异常\"><a href=\"#异常\" class=\"headerlink\" title=\"异常\"></a>异常</h3><p><a href=\"https://www.cnblogs.com/liucsxiaoxiaobai/p/10805788.html\">go语言之抛出异常 - 传盛 - 博客园 (cnblogs.com)</a></p>\n<p>除数 panic 空指针</p>\n<h3 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h3><h2 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h2><h3 id=\"su和sudo的区别\"><a href=\"#su和sudo的区别\" class=\"headerlink\" title=\"su和sudo的区别\"></a>su和sudo的区别</h3><p><a href=\"https://blog.csdn.net/frankcreen/article/details/105048051\">(13条消息) sudo与su的区别_风尘仆的博客-CSDN博客_sudo和su的区别</a></p>\n<p><a href=\"https://blog.csdn.net/qq_57422382/article/details/120513820\">(13条消息) su 命令和sudo命令的区别_-公子世无双~的博客-CSDN博客_su和sudo命令的区别</a></p>\n<h3 id=\"显示当前路径pwd\"><a href=\"#显示当前路径pwd\" class=\"headerlink\" title=\"显示当前路径pwd\"></a>显示当前路径pwd</h3><h3 id=\"结束进程的命令：kill\"><a href=\"#结束进程的命令：kill\" class=\"headerlink\" title=\"结束进程的命令：kill\"></a>结束进程的命令：kill</h3><p><a href=\"http://c.biancheng.net/view/1068.html\">Linux kill命令详解：终止进程 (biancheng.net)</a></p>\n<h3 id=\"查询后缀名相同的所有文件，然后删除\"><a href=\"#查询后缀名相同的所有文件，然后删除\" class=\"headerlink\" title=\"查询后缀名相同的所有文件，然后删除\"></a>查询后缀名相同的所有文件，然后删除</h3><p><a href=\"https://ask.csdn.net/questions/324058\">(13条消息) linux shell 批量处理相同后缀文件-服务器-CSDN问答</a></p>\n<h2 id=\"Mysql\"><a href=\"#Mysql\" class=\"headerlink\" title=\"Mysql\"></a>Mysql</h2><h3 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h3><p><a href=\"https://blog.csdn.net/wangfeijiu/article/details/113409719?utm_source=app&app_version=5.2.0\">(13条消息) 一文搞懂MySQL索引（清晰明了）_Free Joe的博客-CSDN博客_mysql索引</a></p>\n<h3 id=\"多表查询的方式\"><a href=\"#多表查询的方式\" class=\"headerlink\" title=\"多表查询的方式\"></a>多表查询的方式</h3><p><a href=\"https://zhuanlan.zhihu.com/p/91973413\">SQL：多表查询 - 知乎 (zhihu.com)</a></p>\n<h2 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h2><h2 id=\"工作内容\"><a href=\"#工作内容\" class=\"headerlink\" title=\"工作内容\"></a>工作内容</h2><ol>\n<li>推荐系统，开源</li>\n<li>丰富内容，爬虫</li>\n<li>IM服务</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>2022年3月5日早上面试。</p>\n<p>2022年3月10日入职。</p>","more":"<h2 id=\"Golang\"><a href=\"#Golang\" class=\"headerlink\" title=\"Golang\"></a>Golang</h2><h3 id=\"main函数\"><a href=\"#main函数\" class=\"headerlink\" title=\"main函数\"></a>main函数</h3><h4 id=\"1-void-main-void-能通过编译吗，有什么潜在问题？\"><a href=\"#1-void-main-void-能通过编译吗，有什么潜在问题？\" class=\"headerlink\" title=\"1. void main(void)能通过编译吗，有什么潜在问题？\"></a>1. void main(void)能通过编译吗，有什么潜在问题？</h4><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">大多数的编译器都是可以通过的，但是会发出警告。main函数的返回值是<span class=\"built_in\">int</span>而不是<span class=\"built_in\">void</span>。<span class=\"built_in\">int</span>返回类型会让程序返回状态值，这点非常重要，特别是当程序作为依赖于程序成功运行的脚本的一部分运行时。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2\"><a href=\"#2\" class=\"headerlink\" title=\"2.\"></a>2.</h4><p><a href=\"https://baike.baidu.com/item/main%E5%87%BD%E6%95%B0/6887703\">main函数_百度百科 (baidu.com)</a></p>\n<h3 id=\"Init函数：外？本包？\"><a href=\"#Init函数：外？本包？\" class=\"headerlink\" title=\"Init函数：外？本包？\"></a>Init函数：外？本包？</h3><p><a href=\"https://blog.csdn.net/qq_42303254/article/details/107647925\">(12条消息) init函数的介绍</a></p>\n<p>[Go语言之init函数 - 云+社区 - 腾讯云 (tencent.com)](<a href=\"https://cloud.tencent.com/developer/article/1608937#:~:text=Go%E8%AF%AD%E8%A8%80%E6%9C%89%E4%B8%80%E4%B8%AA%E7%89%B9%E6%AE%8A%E7%9A%84%E5%87%BD%E6%95%B0init%EF%BC%8C%E5%85%88%E4%BA%8Emain%E5%87%BD%E6%95%B0%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%8C%85%E7%BA%A7%E5%88%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E5%88%9D%E5%A7%8B%E5%8C%96%E6%93%8D%E4%BD%9C%E3%80%82\">https://cloud.tencent.com/developer/article/1608937#:~:text=Go语言有一个特殊的函数init，先于main函数执行，实现包级别的一些初始化操作。</a> 对于init 函数来说：每个包可以包含任意多个 init 函数，这些函数都会在程序执行开始的时候被调用。 所有被编译器发现的,init 函数都会安排在 main 函数之前执行。 init 函数用在设置包、初始化变量或其他要在程序运行前优先完成的引导工作。)</p>\n<h3 id=\"引用类型\"><a href=\"#引用类型\" class=\"headerlink\" title=\"引用类型\"></a>引用类型</h3><p><a href=\"https://zhuanlan.zhihu.com/p/111796041\">Golang 的引用类型底层实现 - 知乎 (zhihu.com)</a></p>\n<h3 id=\"同步锁\"><a href=\"#同步锁\" class=\"headerlink\" title=\"同步锁\"></a>同步锁</h3><p><a href=\"https://zhuanlan.zhihu.com/p/242105419#\">Go语言 | 并发设计中的同步锁与waitgroup用法 - 知乎 (zhihu.com)</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_38089997/article/details/108793195\">(12条消息) Golang同步锁的两种方式_cheene的博客-CSDN博客_go 同步锁</a></p>\n<h3 id=\"channel特性\"><a href=\"#channel特性\" class=\"headerlink\" title=\"channel特性\"></a>channel特性</h3><p><a href=\"https://zhuanlan.zhihu.com/p/85632976\">Golang教程之管道篇（六） - 知乎 (zhihu.com)</a></p>\n<h3 id=\"线程和协程\"><a href=\"#线程和协程\" class=\"headerlink\" title=\"线程和协程\"></a>线程和协程</h3><p><a href=\"https://www.cnblogs.com/filletnotfish/p/15057349.html\">进程、线程与协程 - FilletNotFish - 博客园 (cnblogs.com)</a></p>\n<p><a href=\"https://www.cnblogs.com/lxmhhy/p/6041001.html#:~:text=1\">进程和线程、协程的区别 - RunningPower - 博客园 (cnblogs.com)</a> </p>\n<h3 id=\"异常\"><a href=\"#异常\" class=\"headerlink\" title=\"异常\"></a>异常</h3><p><a href=\"https://www.cnblogs.com/liucsxiaoxiaobai/p/10805788.html\">go语言之抛出异常 - 传盛 - 博客园 (cnblogs.com)</a></p>\n<p>除数 panic 空指针</p>\n<h3 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h3><h2 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h2><h3 id=\"su和sudo的区别\"><a href=\"#su和sudo的区别\" class=\"headerlink\" title=\"su和sudo的区别\"></a>su和sudo的区别</h3><p><a href=\"https://blog.csdn.net/frankcreen/article/details/105048051\">(13条消息) sudo与su的区别_风尘仆的博客-CSDN博客_sudo和su的区别</a></p>\n<p><a href=\"https://blog.csdn.net/qq_57422382/article/details/120513820\">(13条消息) su 命令和sudo命令的区别_-公子世无双~的博客-CSDN博客_su和sudo命令的区别</a></p>\n<h3 id=\"显示当前路径pwd\"><a href=\"#显示当前路径pwd\" class=\"headerlink\" title=\"显示当前路径pwd\"></a>显示当前路径pwd</h3><h3 id=\"结束进程的命令：kill\"><a href=\"#结束进程的命令：kill\" class=\"headerlink\" title=\"结束进程的命令：kill\"></a>结束进程的命令：kill</h3><p><a href=\"http://c.biancheng.net/view/1068.html\">Linux kill命令详解：终止进程 (biancheng.net)</a></p>\n<h3 id=\"查询后缀名相同的所有文件，然后删除\"><a href=\"#查询后缀名相同的所有文件，然后删除\" class=\"headerlink\" title=\"查询后缀名相同的所有文件，然后删除\"></a>查询后缀名相同的所有文件，然后删除</h3><p><a href=\"https://ask.csdn.net/questions/324058\">(13条消息) linux shell 批量处理相同后缀文件-服务器-CSDN问答</a></p>\n<h2 id=\"Mysql\"><a href=\"#Mysql\" class=\"headerlink\" title=\"Mysql\"></a>Mysql</h2><h3 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h3><p><a href=\"https://blog.csdn.net/wangfeijiu/article/details/113409719?utm_source=app&app_version=5.2.0\">(13条消息) 一文搞懂MySQL索引（清晰明了）_Free Joe的博客-CSDN博客_mysql索引</a></p>\n<h3 id=\"多表查询的方式\"><a href=\"#多表查询的方式\" class=\"headerlink\" title=\"多表查询的方式\"></a>多表查询的方式</h3><p><a href=\"https://zhuanlan.zhihu.com/p/91973413\">SQL：多表查询 - 知乎 (zhihu.com)</a></p>\n<h2 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h2><h2 id=\"工作内容\"><a href=\"#工作内容\" class=\"headerlink\" title=\"工作内容\"></a>工作内容</h2><ol>\n<li>推荐系统，开源</li>\n<li>丰富内容，爬虫</li>\n<li>IM服务</li>\n</ol>"},{"title":"hello world","date":"2019-08-31T16:58:42.000Z","id":"useless1","_content":"\n<center>hello, world!</center>\n","source":"_posts/other-useless01HelloWorld.md","raw":"---\ntitle: hello world\ndate: 2019-09-01 00:58:42\nid: useless1\ncategories:\n- other\ntags:\n- useless\n---\n\n<center>hello, world!</center>\n","slug":"other-useless01HelloWorld","published":1,"updated":"2022-04-16T23:09:38.455Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70u5002p5oss1sms3477","content":"<center>hello, world!</center>\n","site":{"data":{}},"excerpt":"","more":"<center>hello, world!</center>\n"},{"title":"HDFS和P2P文件分发系统的比较","date":"2021-12-30T21:18:23.000Z","id":"intro2","_content":"\n\n\n云计算导论课程作业，HDFS和P2P文件分发系统的比较。\n\n\n\n<!-- more -->\n\n\n\n{% pdf https://zhenruyi.github.io/files/HDFSAndP2PFileDistriSys.pdf %}\n","source":"_posts/other-intro02HDFSAndP2PFileDistriSys.md","raw":"---\ntitle: HDFS和P2P文件分发系统的比较\ndate: 2021-12-31 05:18:23\nid: intro2\ncategories:\n- other\ntags:\n- intro\n---\n\n\n\n云计算导论课程作业，HDFS和P2P文件分发系统的比较。\n\n\n\n<!-- more -->\n\n\n\n{% pdf https://zhenruyi.github.io/files/HDFSAndP2PFileDistriSys.pdf %}\n","slug":"other-intro02HDFSAndP2PFileDistriSys","published":1,"updated":"2022-04-16T23:08:54.715Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70u6002t5oss94d1fh7y","content":"<p>云计算导论课程作业，HDFS和P2P文件分发系统的比较。</p>\n<span id=\"more\"></span>\n\n\n\n<div class=\"pdf-container\" data-target=\"https://zhenruyi.github.io/files/HDFSAndP2PFileDistriSys.pdf\" data-height=\"650px\"></div>\n","site":{"data":{}},"excerpt":"<p>云计算导论课程作业，HDFS和P2P文件分发系统的比较。</p>","more":"<div class=\"pdf-container\" data-target=\"https://zhenruyi.github.io/files/HDFSAndP2PFileDistriSys.pdf\" data-height=\"650px\"></div>"},{"title":"互联网理论的作业","date":"2020-12-31T17:02:03.000Z","id":"net1","_content":"\n\n\n互联网理论的作业\n\n<!-- more -->\n\n\n\n\n\n## 第一章 概论作业\n\n#### 1. 什么是协议，什么是算法？\n\n1.  协议：协议是计算机网络中进行数据交换而建立的规则、标准或约定的集合，它规定了通信时信息必须采用的格式和这些格式所代表的意义。网络协议使网络上各种设备能够相互交换信息。\n2.  算法：算法是解决问题的步骤，算法通过有限的步骤，解决特定的问题。\n\n\n\n#### 2. 在20世纪60年代，为什么共享计算资源是最重要的？当万维网出现时，因特网应用发生了什么转变 ？\n\n在20世纪60年代，因为计算机硬件设备的限制，计算资源十分珍贵，所以共享计算资源是最重要的。当万维网出现时，计算机互联成为了非常便利的事情，所以数据交换成了因特网应用的主要功能。\n\n\n\n#### 3. 简述互联网的报文模式和流模式，和建立“连接”有什么关系？\n\n报文模式是面向非连接的，流模式是面向连接的。所以，使用报文模式发送数据包，主机之间不需要建立连接，使用流模式发送数据，则要进行连接的建立。\n\n\n\n#### 4. 什么是点对点通信，什么是端到端通信，在互联网中分别用什么协议完成？\n\n-   点到点协议针对数据链路层或网络层来说的，负责直接相连的两个节点之间的通信，一个节点接收到了数据包，就把它发送到相邻的下一个节点上，就是点对点通信。因为点对点通信在网络层，所以由IP协议完成。\n-   端到端协议针对传输层来说的，负责把数据从发送端传输到接收端，其中会跨越很多个结点，端到端通信建立在点对点通信的基础上。因为端到端通信在传输层，所以由TCP或者UDP协议完成。\n\n\n\n#### 5. 学习观看中国大学视频公开课《信息社会传奇：计算机网络》1、2、6讲（http://www.icourses.cn/viewVCourse.action?courseCode=10574V002），浅谈人类社会发展和信息网络的关系。\n\n​\t\t人类文明发展过程先后经历了农业革命和工业革命，现在已经进入信息革命时代。农业革命是通过技术提高农作物等生产效率，逐步提高和保障人类的温饱问题；工业革命也是通过技术提高工业消费品等生产效率，满足人类物质生活品质提高的问题；信息革命还是通过技术来提高人类精神生活品质。农业革命和工业革命主要是解决物质生产和交流的效率问题，信息革命主要是解决知识生产和交流的效率问题。互联网已经融入社会生活和生产的方方面面，深刻改变了人们的生产和生活方式。互联网对传统行业形态的改变非常显著，强烈影响着国家的政治和经济发展，对文化与价值观念甚至语言的演变同样具有巨大影响。互联网的发展推动了文化的传播乃至占领。语言的演变以前所未有的速度加快。放眼当今世界，正是凭借对网络空间的掌控，一些经济文化大国通过对本民族文化和价值观念的宣扬与传播，悄然侵蚀着他国的传统文化。\n\n　　互联网将改变传统行业的形态，而传统行业自身又很难产生出适应互联网特点的新机制。网络购物不是百货大楼发起的；新媒体的出现不是源自于传统纸媒体；数码相机的广泛使用不是卡达公司的本意；数字出版不是传统出版社的强项；互联网金融业不是传统银行的发明；MOOC的发展也不会是以传统大学为主。互联网对人类文明的影响将不断提升，第一阶段为信息互联，主要是解决人类知情权的平等；第二阶段为消费互联，为人类的物质生活需求提供方便；第三阶段为生产互联，服务于人类就业和事业发展；第四阶段为智慧互联，帮助人类实现对知识和精神生活的追求；最终发展成为生命互联，满足人类健康长寿的愿望。\n\n\n\n\n\n\n\n## 2.1 NAT作业\n\n#### 1. 说明为什么NAT使用能大大节省因特网地址？\n\nNAT协议是网络地址转换协议，在路由器上安装这个协议，就可以保证它至少有一个有效的外部IP地址，而其他主机可以使用本地地址，当主机需要通信的时候，在NAT路由器上将本地地址转换成外部IP地址即可，这样就节省了IP地址。\n\n\n\n#### 2. 说明NAT是否是网络协议，为什么？\n\nNAT不是网络协议，因为NAT协议不参与信息的交换，它只负责将本地的主机地址转换成可以连接到互联网的IP地址。\n\n\n\n#### 3. 说明一个有数百台PC的学校校园网只申请到6个因特网IP地址，如何访问因特网和外部访问学校官网。\n\n这些主机可以分成6组，分别对于6个IP地址，给每台主机配置一个私有地址，然后通过NAT协议转换后，用其中一个因特网IP地址连接到因特网。当外部访问学校的官网时，定位到官网服务器所在的主机，连接到那台主机。\n\n\n\n#### 4. 简述NAPT实现同一IP地址的负载均衡的原理。\n\n外网到内网服务器的访问，表的静态记录项，通过服务端口区分不同服务器的访问。当接受外部主机的请求时，根据已有的NAPT表，把全局地址翻译成不同的内部地址，建立与内部多台主机的连接。\n\n\n\n\n\n\n\n## 2.2 DHCP作业\n\n#### 1. 请简述自举配置协议BOOTP要解决什么问题？\n\n路由器、计算机等开始工作时都要经过初始化参数设置或配置的过程。\n\n协议没有配置前，用什么协议交互数据？\n\n在不知道路由器地址前，怎样和路由器通信呢？（怎样获取地址掩码、默认网关地址 ？）\n\n\n\n#### 2. 请简述DHCP 协议在BOOTP基础上主要改进了什么？\n\nBOOTP 在工作前需要在服务器上配置相关主机参数数据库，且是固定设置值， 只能满足小区域固定 IP 配置的 PC 静态接入网络要求。但对大区域和不固定 IP 配置的用户就无法满足。DHCP在 BOOTP 基础上扩展改进，提出自动获取 IP 地址分配机制，实现即插即用的联网。\n\n\n\n#### 3. 请列出在使用BOOTP协议前，一台计算机在利用网络启动之前，必须在本地需要具有什么协议与参数。\n\n需要ICMP协议，需要MAC地址，然后通过报文获取主机IP地址，以及地址掩码，还有默认路由。\n\n\n\n#### 4. 比较使用绑定方案地址分配协议和DHCP动态地址分配协议，哪个更适用于广域网？\n\nDHCP动态地址分配协议更适合广域网。DHCP对计算机入网的动态配置信息，不需要管理员对配制数据库的修改。DHCP首先随机广播发送发现报文，减少冲撞，在确认DHCP服务器后再发送请求报文；而且通常对获取的DHCP服务器地址在系统中永久保存，以后单播请求，可大大减少网络业务量。\n\n\n\n\n\n## 2.3 路由协议作业 1\n\n#### 1. 路由器中路由协议和路由算法各自完成什么作用？\n\n-   路由协议是一种指定数据包转送方式的网络协议，路由器通过路由表来转发接收到的数据。路由协议指定转发策略，减少网络管理员工作量，并且管理、维护路由表。路由协议可以让路由器自动学习到其他路由器的网络，并且网络拓扑发生改变后自动更新路由表。\n-   路由算法是提高路由协议功能，尽量减少路由时所带来开销的算法，在出现不正常或不可预见事件的情况下必须仍能正常处理。\n\n\n\n#### 2. 什么是跳数？RIP协议为什么将最大跳数设为16？\n\n跳数是到达目的网络经过的路由器数。RIP路由协议设置最大跳数为16跳是因为可能形成环路。\n\n\n\n#### 3. RIP协议工作的基本思想，主要问题在那里？\n\n1.  “坏消息传得慢”，故障或网络变化时，收敛速度慢。\n\n2.  由于目前因特网非常大，如每个路由器的路由表知道所有网络的可达方式，完成路由器间很大量的的信息交换、大表的路由计算是不现实的。\n\n\n\n#### 4. 目前网络路由协议主要考虑的哪些要素？\n\n1.  目前因特网非常大，路由表不能太长；\n2.  路由选择的可扩展性问题，需要找到路由协议和路由表中存储的记录项规模的有效方法；\n3.  IP地址利用问题，确保IP地址空间不会过快消耗完。\n\n\n\n## 2.3 路由协议作业 2\n\n#### 1. 简述互联网为什么要定义自治域AS，解释为什么要分层路由。\n\n-   自治域将整个计算机网络分成了很多个小的网络，这样在这些自治域内部，只需要保证内部的主机的IP地址唯一就可以了，不必让每一台主机都有因特网的IP地址，节省了IP地址。\n-   每一层路由都执行不同的功能，这样方便管理和维护。\n\n\n\n#### 2. RIP与OSPF协议主要特点，各自处理的自治域规模一般多大？\n\n-   RIP是基于距离矢量算法的路由协议，而OSPF是基于链路状态算法的路由协议。RIP非常适合小型网络，它易于理解和配置，同时几乎所有路由器都支持它。但是 RIP的跳数限制为16，超出该距离则无法访问，限制了网络的规模。OSPF为了弥补RIP的缺点，但是当网络中添加了更多路由器时，它无法扩展。而OSPF缺乏可扩展性使其不适合在Internet上进行路由。\n-   RIP的跳数最多为16跳，但是OSPF则没有限制。\n\n\n\n#### 3. 简单说明IGP和EGP协议主要区别。\n\n-   BGP一般用于大型网络，可容纳的路由信息更多；而IGP协议，对于路由条目的存储量是有限的；\n-   IGP是内部网关协议，在AS内部实现路由信息的交换；BGP是边界网关协议，在AS之间实现路由信息的交换；\n-   IGP的设计重点是对路由的学习与交换，发现路由等，而BGP的设计，主要是为了控制路由的传播，即进行路径选择，BGP有丰富的选路策略，与其说BGP是一个路由协议，倒不如说BGP是一个路径选择协议；\n\n\n\n#### 4. 简述自治域划分与因特网主干网、区域ISP和用户接入网的关系。\n\n-   因特网主干网只能转发数据包，它们不直连终端。\n-   自治域划分将自治域分成了多个自治域，每个自治域都有不同的功能。\n-   区域ISP是服务提供商，对IP地址进行管理。\n-   用户接入网是相对主干网来讲的，它们直连用户终端。\n\n\n\n#### 5. BGP协议是否一定能提供最佳路径，为什么？\n\nBGP协议不是一定提供最佳路径，BGP协议是路向量路由协议，这是因为BGP在发布到一个目的网络的可达性的同时，包含了在IP分组到达目的网络过程中所必须经过的AS的列表，不一定是最佳的。\n\n\n\n#### 6. 简述因特网的实际结构和特点，试中国因特网可能的基本组成结构。\n\nChinaNet 是国内计算机互联网名副其实的骨干网。ChinaNet 骨干网的拓扑结构分为核心层和大区层。核心层由北京、上海、广州、沈阳、南京、武汉、成都和西安8个城市的核心节点组成，提供与国际Internet互联,以及大区之间的信息交换通路。北京、上海、广州三个核心层节点各设两台国际出口路由器与国际互联网相联。\n\n\n\n","source":"_posts/sci-net01InternetHomeworkPatch.md","raw":"---\ntitle: 互联网理论的作业\ndate: 2021-01-01 01:02:03\nid: net1\ncategories:\n- sci\ntags:\n- net\n---\n\n\n\n互联网理论的作业\n\n<!-- more -->\n\n\n\n\n\n## 第一章 概论作业\n\n#### 1. 什么是协议，什么是算法？\n\n1.  协议：协议是计算机网络中进行数据交换而建立的规则、标准或约定的集合，它规定了通信时信息必须采用的格式和这些格式所代表的意义。网络协议使网络上各种设备能够相互交换信息。\n2.  算法：算法是解决问题的步骤，算法通过有限的步骤，解决特定的问题。\n\n\n\n#### 2. 在20世纪60年代，为什么共享计算资源是最重要的？当万维网出现时，因特网应用发生了什么转变 ？\n\n在20世纪60年代，因为计算机硬件设备的限制，计算资源十分珍贵，所以共享计算资源是最重要的。当万维网出现时，计算机互联成为了非常便利的事情，所以数据交换成了因特网应用的主要功能。\n\n\n\n#### 3. 简述互联网的报文模式和流模式，和建立“连接”有什么关系？\n\n报文模式是面向非连接的，流模式是面向连接的。所以，使用报文模式发送数据包，主机之间不需要建立连接，使用流模式发送数据，则要进行连接的建立。\n\n\n\n#### 4. 什么是点对点通信，什么是端到端通信，在互联网中分别用什么协议完成？\n\n-   点到点协议针对数据链路层或网络层来说的，负责直接相连的两个节点之间的通信，一个节点接收到了数据包，就把它发送到相邻的下一个节点上，就是点对点通信。因为点对点通信在网络层，所以由IP协议完成。\n-   端到端协议针对传输层来说的，负责把数据从发送端传输到接收端，其中会跨越很多个结点，端到端通信建立在点对点通信的基础上。因为端到端通信在传输层，所以由TCP或者UDP协议完成。\n\n\n\n#### 5. 学习观看中国大学视频公开课《信息社会传奇：计算机网络》1、2、6讲（http://www.icourses.cn/viewVCourse.action?courseCode=10574V002），浅谈人类社会发展和信息网络的关系。\n\n​\t\t人类文明发展过程先后经历了农业革命和工业革命，现在已经进入信息革命时代。农业革命是通过技术提高农作物等生产效率，逐步提高和保障人类的温饱问题；工业革命也是通过技术提高工业消费品等生产效率，满足人类物质生活品质提高的问题；信息革命还是通过技术来提高人类精神生活品质。农业革命和工业革命主要是解决物质生产和交流的效率问题，信息革命主要是解决知识生产和交流的效率问题。互联网已经融入社会生活和生产的方方面面，深刻改变了人们的生产和生活方式。互联网对传统行业形态的改变非常显著，强烈影响着国家的政治和经济发展，对文化与价值观念甚至语言的演变同样具有巨大影响。互联网的发展推动了文化的传播乃至占领。语言的演变以前所未有的速度加快。放眼当今世界，正是凭借对网络空间的掌控，一些经济文化大国通过对本民族文化和价值观念的宣扬与传播，悄然侵蚀着他国的传统文化。\n\n　　互联网将改变传统行业的形态，而传统行业自身又很难产生出适应互联网特点的新机制。网络购物不是百货大楼发起的；新媒体的出现不是源自于传统纸媒体；数码相机的广泛使用不是卡达公司的本意；数字出版不是传统出版社的强项；互联网金融业不是传统银行的发明；MOOC的发展也不会是以传统大学为主。互联网对人类文明的影响将不断提升，第一阶段为信息互联，主要是解决人类知情权的平等；第二阶段为消费互联，为人类的物质生活需求提供方便；第三阶段为生产互联，服务于人类就业和事业发展；第四阶段为智慧互联，帮助人类实现对知识和精神生活的追求；最终发展成为生命互联，满足人类健康长寿的愿望。\n\n\n\n\n\n\n\n## 2.1 NAT作业\n\n#### 1. 说明为什么NAT使用能大大节省因特网地址？\n\nNAT协议是网络地址转换协议，在路由器上安装这个协议，就可以保证它至少有一个有效的外部IP地址，而其他主机可以使用本地地址，当主机需要通信的时候，在NAT路由器上将本地地址转换成外部IP地址即可，这样就节省了IP地址。\n\n\n\n#### 2. 说明NAT是否是网络协议，为什么？\n\nNAT不是网络协议，因为NAT协议不参与信息的交换，它只负责将本地的主机地址转换成可以连接到互联网的IP地址。\n\n\n\n#### 3. 说明一个有数百台PC的学校校园网只申请到6个因特网IP地址，如何访问因特网和外部访问学校官网。\n\n这些主机可以分成6组，分别对于6个IP地址，给每台主机配置一个私有地址，然后通过NAT协议转换后，用其中一个因特网IP地址连接到因特网。当外部访问学校的官网时，定位到官网服务器所在的主机，连接到那台主机。\n\n\n\n#### 4. 简述NAPT实现同一IP地址的负载均衡的原理。\n\n外网到内网服务器的访问，表的静态记录项，通过服务端口区分不同服务器的访问。当接受外部主机的请求时，根据已有的NAPT表，把全局地址翻译成不同的内部地址，建立与内部多台主机的连接。\n\n\n\n\n\n\n\n## 2.2 DHCP作业\n\n#### 1. 请简述自举配置协议BOOTP要解决什么问题？\n\n路由器、计算机等开始工作时都要经过初始化参数设置或配置的过程。\n\n协议没有配置前，用什么协议交互数据？\n\n在不知道路由器地址前，怎样和路由器通信呢？（怎样获取地址掩码、默认网关地址 ？）\n\n\n\n#### 2. 请简述DHCP 协议在BOOTP基础上主要改进了什么？\n\nBOOTP 在工作前需要在服务器上配置相关主机参数数据库，且是固定设置值， 只能满足小区域固定 IP 配置的 PC 静态接入网络要求。但对大区域和不固定 IP 配置的用户就无法满足。DHCP在 BOOTP 基础上扩展改进，提出自动获取 IP 地址分配机制，实现即插即用的联网。\n\n\n\n#### 3. 请列出在使用BOOTP协议前，一台计算机在利用网络启动之前，必须在本地需要具有什么协议与参数。\n\n需要ICMP协议，需要MAC地址，然后通过报文获取主机IP地址，以及地址掩码，还有默认路由。\n\n\n\n#### 4. 比较使用绑定方案地址分配协议和DHCP动态地址分配协议，哪个更适用于广域网？\n\nDHCP动态地址分配协议更适合广域网。DHCP对计算机入网的动态配置信息，不需要管理员对配制数据库的修改。DHCP首先随机广播发送发现报文，减少冲撞，在确认DHCP服务器后再发送请求报文；而且通常对获取的DHCP服务器地址在系统中永久保存，以后单播请求，可大大减少网络业务量。\n\n\n\n\n\n## 2.3 路由协议作业 1\n\n#### 1. 路由器中路由协议和路由算法各自完成什么作用？\n\n-   路由协议是一种指定数据包转送方式的网络协议，路由器通过路由表来转发接收到的数据。路由协议指定转发策略，减少网络管理员工作量，并且管理、维护路由表。路由协议可以让路由器自动学习到其他路由器的网络，并且网络拓扑发生改变后自动更新路由表。\n-   路由算法是提高路由协议功能，尽量减少路由时所带来开销的算法，在出现不正常或不可预见事件的情况下必须仍能正常处理。\n\n\n\n#### 2. 什么是跳数？RIP协议为什么将最大跳数设为16？\n\n跳数是到达目的网络经过的路由器数。RIP路由协议设置最大跳数为16跳是因为可能形成环路。\n\n\n\n#### 3. RIP协议工作的基本思想，主要问题在那里？\n\n1.  “坏消息传得慢”，故障或网络变化时，收敛速度慢。\n\n2.  由于目前因特网非常大，如每个路由器的路由表知道所有网络的可达方式，完成路由器间很大量的的信息交换、大表的路由计算是不现实的。\n\n\n\n#### 4. 目前网络路由协议主要考虑的哪些要素？\n\n1.  目前因特网非常大，路由表不能太长；\n2.  路由选择的可扩展性问题，需要找到路由协议和路由表中存储的记录项规模的有效方法；\n3.  IP地址利用问题，确保IP地址空间不会过快消耗完。\n\n\n\n## 2.3 路由协议作业 2\n\n#### 1. 简述互联网为什么要定义自治域AS，解释为什么要分层路由。\n\n-   自治域将整个计算机网络分成了很多个小的网络，这样在这些自治域内部，只需要保证内部的主机的IP地址唯一就可以了，不必让每一台主机都有因特网的IP地址，节省了IP地址。\n-   每一层路由都执行不同的功能，这样方便管理和维护。\n\n\n\n#### 2. RIP与OSPF协议主要特点，各自处理的自治域规模一般多大？\n\n-   RIP是基于距离矢量算法的路由协议，而OSPF是基于链路状态算法的路由协议。RIP非常适合小型网络，它易于理解和配置，同时几乎所有路由器都支持它。但是 RIP的跳数限制为16，超出该距离则无法访问，限制了网络的规模。OSPF为了弥补RIP的缺点，但是当网络中添加了更多路由器时，它无法扩展。而OSPF缺乏可扩展性使其不适合在Internet上进行路由。\n-   RIP的跳数最多为16跳，但是OSPF则没有限制。\n\n\n\n#### 3. 简单说明IGP和EGP协议主要区别。\n\n-   BGP一般用于大型网络，可容纳的路由信息更多；而IGP协议，对于路由条目的存储量是有限的；\n-   IGP是内部网关协议，在AS内部实现路由信息的交换；BGP是边界网关协议，在AS之间实现路由信息的交换；\n-   IGP的设计重点是对路由的学习与交换，发现路由等，而BGP的设计，主要是为了控制路由的传播，即进行路径选择，BGP有丰富的选路策略，与其说BGP是一个路由协议，倒不如说BGP是一个路径选择协议；\n\n\n\n#### 4. 简述自治域划分与因特网主干网、区域ISP和用户接入网的关系。\n\n-   因特网主干网只能转发数据包，它们不直连终端。\n-   自治域划分将自治域分成了多个自治域，每个自治域都有不同的功能。\n-   区域ISP是服务提供商，对IP地址进行管理。\n-   用户接入网是相对主干网来讲的，它们直连用户终端。\n\n\n\n#### 5. BGP协议是否一定能提供最佳路径，为什么？\n\nBGP协议不是一定提供最佳路径，BGP协议是路向量路由协议，这是因为BGP在发布到一个目的网络的可达性的同时，包含了在IP分组到达目的网络过程中所必须经过的AS的列表，不一定是最佳的。\n\n\n\n#### 6. 简述因特网的实际结构和特点，试中国因特网可能的基本组成结构。\n\nChinaNet 是国内计算机互联网名副其实的骨干网。ChinaNet 骨干网的拓扑结构分为核心层和大区层。核心层由北京、上海、广州、沈阳、南京、武汉、成都和西安8个城市的核心节点组成，提供与国际Internet互联,以及大区之间的信息交换通路。北京、上海、广州三个核心层节点各设两台国际出口路由器与国际互联网相联。\n\n\n\n","slug":"sci-net01InternetHomeworkPatch","published":1,"updated":"2022-04-16T23:09:51.613Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70u8002y5ossbqy3bbom","content":"<p>互联网理论的作业</p>\n<span id=\"more\"></span>\n\n\n\n\n\n<h2 id=\"第一章-概论作业\"><a href=\"#第一章-概论作业\" class=\"headerlink\" title=\"第一章 概论作业\"></a>第一章 概论作业</h2><h4 id=\"1-什么是协议，什么是算法？\"><a href=\"#1-什么是协议，什么是算法？\" class=\"headerlink\" title=\"1. 什么是协议，什么是算法？\"></a>1. 什么是协议，什么是算法？</h4><ol>\n<li> 协议：协议是计算机网络中进行数据交换而建立的规则、标准或约定的集合，它规定了通信时信息必须采用的格式和这些格式所代表的意义。网络协议使网络上各种设备能够相互交换信息。</li>\n<li> 算法：算法是解决问题的步骤，算法通过有限的步骤，解决特定的问题。</li>\n</ol>\n<h4 id=\"2-在20世纪60年代，为什么共享计算资源是最重要的？当万维网出现时，因特网应用发生了什么转变-？\"><a href=\"#2-在20世纪60年代，为什么共享计算资源是最重要的？当万维网出现时，因特网应用发生了什么转变-？\" class=\"headerlink\" title=\"2. 在20世纪60年代，为什么共享计算资源是最重要的？当万维网出现时，因特网应用发生了什么转变 ？\"></a>2. 在20世纪60年代，为什么共享计算资源是最重要的？当万维网出现时，因特网应用发生了什么转变 ？</h4><p>在20世纪60年代，因为计算机硬件设备的限制，计算资源十分珍贵，所以共享计算资源是最重要的。当万维网出现时，计算机互联成为了非常便利的事情，所以数据交换成了因特网应用的主要功能。</p>\n<h4 id=\"3-简述互联网的报文模式和流模式，和建立“连接”有什么关系？\"><a href=\"#3-简述互联网的报文模式和流模式，和建立“连接”有什么关系？\" class=\"headerlink\" title=\"3. 简述互联网的报文模式和流模式，和建立“连接”有什么关系？\"></a>3. 简述互联网的报文模式和流模式，和建立“连接”有什么关系？</h4><p>报文模式是面向非连接的，流模式是面向连接的。所以，使用报文模式发送数据包，主机之间不需要建立连接，使用流模式发送数据，则要进行连接的建立。</p>\n<h4 id=\"4-什么是点对点通信，什么是端到端通信，在互联网中分别用什么协议完成？\"><a href=\"#4-什么是点对点通信，什么是端到端通信，在互联网中分别用什么协议完成？\" class=\"headerlink\" title=\"4. 什么是点对点通信，什么是端到端通信，在互联网中分别用什么协议完成？\"></a>4. 什么是点对点通信，什么是端到端通信，在互联网中分别用什么协议完成？</h4><ul>\n<li>  点到点协议针对数据链路层或网络层来说的，负责直接相连的两个节点之间的通信，一个节点接收到了数据包，就把它发送到相邻的下一个节点上，就是点对点通信。因为点对点通信在网络层，所以由IP协议完成。</li>\n<li>  端到端协议针对传输层来说的，负责把数据从发送端传输到接收端，其中会跨越很多个结点，端到端通信建立在点对点通信的基础上。因为端到端通信在传输层，所以由TCP或者UDP协议完成。</li>\n</ul>\n<h4 id=\"5-学习观看中国大学视频公开课《信息社会传奇：计算机网络》1、2、6讲（http-www-icourses-cn-viewVCourse-action-courseCode-10574V002），浅谈人类社会发展和信息网络的关系。\"><a href=\"#5-学习观看中国大学视频公开课《信息社会传奇：计算机网络》1、2、6讲（http-www-icourses-cn-viewVCourse-action-courseCode-10574V002），浅谈人类社会发展和信息网络的关系。\" class=\"headerlink\" title=\"5. 学习观看中国大学视频公开课《信息社会传奇：计算机网络》1、2、6讲（http://www.icourses.cn/viewVCourse.action?courseCode=10574V002），浅谈人类社会发展和信息网络的关系。\"></a>5. 学习观看中国大学视频公开课《信息社会传奇：计算机网络》1、2、6讲（<a href=\"http://www.icourses.cn/viewVCourse.action?courseCode=10574V002%EF%BC%89%EF%BC%8C%E6%B5%85%E8%B0%88%E4%BA%BA%E7%B1%BB%E7%A4%BE%E4%BC%9A%E5%8F%91%E5%B1%95%E5%92%8C%E4%BF%A1%E6%81%AF%E7%BD%91%E7%BB%9C%E7%9A%84%E5%85%B3%E7%B3%BB%E3%80%82\">http://www.icourses.cn/viewVCourse.action?courseCode=10574V002），浅谈人类社会发展和信息网络的关系。</a></h4><p>​        人类文明发展过程先后经历了农业革命和工业革命，现在已经进入信息革命时代。农业革命是通过技术提高农作物等生产效率，逐步提高和保障人类的温饱问题；工业革命也是通过技术提高工业消费品等生产效率，满足人类物质生活品质提高的问题；信息革命还是通过技术来提高人类精神生活品质。农业革命和工业革命主要是解决物质生产和交流的效率问题，信息革命主要是解决知识生产和交流的效率问题。互联网已经融入社会生活和生产的方方面面，深刻改变了人们的生产和生活方式。互联网对传统行业形态的改变非常显著，强烈影响着国家的政治和经济发展，对文化与价值观念甚至语言的演变同样具有巨大影响。互联网的发展推动了文化的传播乃至占领。语言的演变以前所未有的速度加快。放眼当今世界，正是凭借对网络空间的掌控，一些经济文化大国通过对本民族文化和价值观念的宣扬与传播，悄然侵蚀着他国的传统文化。</p>\n<p>　　互联网将改变传统行业的形态，而传统行业自身又很难产生出适应互联网特点的新机制。网络购物不是百货大楼发起的；新媒体的出现不是源自于传统纸媒体；数码相机的广泛使用不是卡达公司的本意；数字出版不是传统出版社的强项；互联网金融业不是传统银行的发明；MOOC的发展也不会是以传统大学为主。互联网对人类文明的影响将不断提升，第一阶段为信息互联，主要是解决人类知情权的平等；第二阶段为消费互联，为人类的物质生活需求提供方便；第三阶段为生产互联，服务于人类就业和事业发展；第四阶段为智慧互联，帮助人类实现对知识和精神生活的追求；最终发展成为生命互联，满足人类健康长寿的愿望。</p>\n<h2 id=\"2-1-NAT作业\"><a href=\"#2-1-NAT作业\" class=\"headerlink\" title=\"2.1 NAT作业\"></a>2.1 NAT作业</h2><h4 id=\"1-说明为什么NAT使用能大大节省因特网地址？\"><a href=\"#1-说明为什么NAT使用能大大节省因特网地址？\" class=\"headerlink\" title=\"1. 说明为什么NAT使用能大大节省因特网地址？\"></a>1. 说明为什么NAT使用能大大节省因特网地址？</h4><p>NAT协议是网络地址转换协议，在路由器上安装这个协议，就可以保证它至少有一个有效的外部IP地址，而其他主机可以使用本地地址，当主机需要通信的时候，在NAT路由器上将本地地址转换成外部IP地址即可，这样就节省了IP地址。</p>\n<h4 id=\"2-说明NAT是否是网络协议，为什么？\"><a href=\"#2-说明NAT是否是网络协议，为什么？\" class=\"headerlink\" title=\"2. 说明NAT是否是网络协议，为什么？\"></a>2. 说明NAT是否是网络协议，为什么？</h4><p>NAT不是网络协议，因为NAT协议不参与信息的交换，它只负责将本地的主机地址转换成可以连接到互联网的IP地址。</p>\n<h4 id=\"3-说明一个有数百台PC的学校校园网只申请到6个因特网IP地址，如何访问因特网和外部访问学校官网。\"><a href=\"#3-说明一个有数百台PC的学校校园网只申请到6个因特网IP地址，如何访问因特网和外部访问学校官网。\" class=\"headerlink\" title=\"3. 说明一个有数百台PC的学校校园网只申请到6个因特网IP地址，如何访问因特网和外部访问学校官网。\"></a>3. 说明一个有数百台PC的学校校园网只申请到6个因特网IP地址，如何访问因特网和外部访问学校官网。</h4><p>这些主机可以分成6组，分别对于6个IP地址，给每台主机配置一个私有地址，然后通过NAT协议转换后，用其中一个因特网IP地址连接到因特网。当外部访问学校的官网时，定位到官网服务器所在的主机，连接到那台主机。</p>\n<h4 id=\"4-简述NAPT实现同一IP地址的负载均衡的原理。\"><a href=\"#4-简述NAPT实现同一IP地址的负载均衡的原理。\" class=\"headerlink\" title=\"4. 简述NAPT实现同一IP地址的负载均衡的原理。\"></a>4. 简述NAPT实现同一IP地址的负载均衡的原理。</h4><p>外网到内网服务器的访问，表的静态记录项，通过服务端口区分不同服务器的访问。当接受外部主机的请求时，根据已有的NAPT表，把全局地址翻译成不同的内部地址，建立与内部多台主机的连接。</p>\n<h2 id=\"2-2-DHCP作业\"><a href=\"#2-2-DHCP作业\" class=\"headerlink\" title=\"2.2 DHCP作业\"></a>2.2 DHCP作业</h2><h4 id=\"1-请简述自举配置协议BOOTP要解决什么问题？\"><a href=\"#1-请简述自举配置协议BOOTP要解决什么问题？\" class=\"headerlink\" title=\"1. 请简述自举配置协议BOOTP要解决什么问题？\"></a>1. 请简述自举配置协议BOOTP要解决什么问题？</h4><p>路由器、计算机等开始工作时都要经过初始化参数设置或配置的过程。</p>\n<p>协议没有配置前，用什么协议交互数据？</p>\n<p>在不知道路由器地址前，怎样和路由器通信呢？（怎样获取地址掩码、默认网关地址 ？）</p>\n<h4 id=\"2-请简述DHCP-协议在BOOTP基础上主要改进了什么？\"><a href=\"#2-请简述DHCP-协议在BOOTP基础上主要改进了什么？\" class=\"headerlink\" title=\"2. 请简述DHCP 协议在BOOTP基础上主要改进了什么？\"></a>2. 请简述DHCP 协议在BOOTP基础上主要改进了什么？</h4><p>BOOTP 在工作前需要在服务器上配置相关主机参数数据库，且是固定设置值， 只能满足小区域固定 IP 配置的 PC 静态接入网络要求。但对大区域和不固定 IP 配置的用户就无法满足。DHCP在 BOOTP 基础上扩展改进，提出自动获取 IP 地址分配机制，实现即插即用的联网。</p>\n<h4 id=\"3-请列出在使用BOOTP协议前，一台计算机在利用网络启动之前，必须在本地需要具有什么协议与参数。\"><a href=\"#3-请列出在使用BOOTP协议前，一台计算机在利用网络启动之前，必须在本地需要具有什么协议与参数。\" class=\"headerlink\" title=\"3. 请列出在使用BOOTP协议前，一台计算机在利用网络启动之前，必须在本地需要具有什么协议与参数。\"></a>3. 请列出在使用BOOTP协议前，一台计算机在利用网络启动之前，必须在本地需要具有什么协议与参数。</h4><p>需要ICMP协议，需要MAC地址，然后通过报文获取主机IP地址，以及地址掩码，还有默认路由。</p>\n<h4 id=\"4-比较使用绑定方案地址分配协议和DHCP动态地址分配协议，哪个更适用于广域网？\"><a href=\"#4-比较使用绑定方案地址分配协议和DHCP动态地址分配协议，哪个更适用于广域网？\" class=\"headerlink\" title=\"4. 比较使用绑定方案地址分配协议和DHCP动态地址分配协议，哪个更适用于广域网？\"></a>4. 比较使用绑定方案地址分配协议和DHCP动态地址分配协议，哪个更适用于广域网？</h4><p>DHCP动态地址分配协议更适合广域网。DHCP对计算机入网的动态配置信息，不需要管理员对配制数据库的修改。DHCP首先随机广播发送发现报文，减少冲撞，在确认DHCP服务器后再发送请求报文；而且通常对获取的DHCP服务器地址在系统中永久保存，以后单播请求，可大大减少网络业务量。</p>\n<h2 id=\"2-3-路由协议作业-1\"><a href=\"#2-3-路由协议作业-1\" class=\"headerlink\" title=\"2.3 路由协议作业 1\"></a>2.3 路由协议作业 1</h2><h4 id=\"1-路由器中路由协议和路由算法各自完成什么作用？\"><a href=\"#1-路由器中路由协议和路由算法各自完成什么作用？\" class=\"headerlink\" title=\"1. 路由器中路由协议和路由算法各自完成什么作用？\"></a>1. 路由器中路由协议和路由算法各自完成什么作用？</h4><ul>\n<li>  路由协议是一种指定数据包转送方式的网络协议，路由器通过路由表来转发接收到的数据。路由协议指定转发策略，减少网络管理员工作量，并且管理、维护路由表。路由协议可以让路由器自动学习到其他路由器的网络，并且网络拓扑发生改变后自动更新路由表。</li>\n<li>  路由算法是提高路由协议功能，尽量减少路由时所带来开销的算法，在出现不正常或不可预见事件的情况下必须仍能正常处理。</li>\n</ul>\n<h4 id=\"2-什么是跳数？RIP协议为什么将最大跳数设为16？\"><a href=\"#2-什么是跳数？RIP协议为什么将最大跳数设为16？\" class=\"headerlink\" title=\"2. 什么是跳数？RIP协议为什么将最大跳数设为16？\"></a>2. 什么是跳数？RIP协议为什么将最大跳数设为16？</h4><p>跳数是到达目的网络经过的路由器数。RIP路由协议设置最大跳数为16跳是因为可能形成环路。</p>\n<h4 id=\"3-RIP协议工作的基本思想，主要问题在那里？\"><a href=\"#3-RIP协议工作的基本思想，主要问题在那里？\" class=\"headerlink\" title=\"3. RIP协议工作的基本思想，主要问题在那里？\"></a>3. RIP协议工作的基本思想，主要问题在那里？</h4><ol>\n<li><p> “坏消息传得慢”，故障或网络变化时，收敛速度慢。</p>\n</li>\n<li><p> 由于目前因特网非常大，如每个路由器的路由表知道所有网络的可达方式，完成路由器间很大量的的信息交换、大表的路由计算是不现实的。</p>\n</li>\n</ol>\n<h4 id=\"4-目前网络路由协议主要考虑的哪些要素？\"><a href=\"#4-目前网络路由协议主要考虑的哪些要素？\" class=\"headerlink\" title=\"4. 目前网络路由协议主要考虑的哪些要素？\"></a>4. 目前网络路由协议主要考虑的哪些要素？</h4><ol>\n<li> 目前因特网非常大，路由表不能太长；</li>\n<li> 路由选择的可扩展性问题，需要找到路由协议和路由表中存储的记录项规模的有效方法；</li>\n<li> IP地址利用问题，确保IP地址空间不会过快消耗完。</li>\n</ol>\n<h2 id=\"2-3-路由协议作业-2\"><a href=\"#2-3-路由协议作业-2\" class=\"headerlink\" title=\"2.3 路由协议作业 2\"></a>2.3 路由协议作业 2</h2><h4 id=\"1-简述互联网为什么要定义自治域AS，解释为什么要分层路由。\"><a href=\"#1-简述互联网为什么要定义自治域AS，解释为什么要分层路由。\" class=\"headerlink\" title=\"1. 简述互联网为什么要定义自治域AS，解释为什么要分层路由。\"></a>1. 简述互联网为什么要定义自治域AS，解释为什么要分层路由。</h4><ul>\n<li>  自治域将整个计算机网络分成了很多个小的网络，这样在这些自治域内部，只需要保证内部的主机的IP地址唯一就可以了，不必让每一台主机都有因特网的IP地址，节省了IP地址。</li>\n<li>  每一层路由都执行不同的功能，这样方便管理和维护。</li>\n</ul>\n<h4 id=\"2-RIP与OSPF协议主要特点，各自处理的自治域规模一般多大？\"><a href=\"#2-RIP与OSPF协议主要特点，各自处理的自治域规模一般多大？\" class=\"headerlink\" title=\"2. RIP与OSPF协议主要特点，各自处理的自治域规模一般多大？\"></a>2. RIP与OSPF协议主要特点，各自处理的自治域规模一般多大？</h4><ul>\n<li>  RIP是基于距离矢量算法的路由协议，而OSPF是基于链路状态算法的路由协议。RIP非常适合小型网络，它易于理解和配置，同时几乎所有路由器都支持它。但是 RIP的跳数限制为16，超出该距离则无法访问，限制了网络的规模。OSPF为了弥补RIP的缺点，但是当网络中添加了更多路由器时，它无法扩展。而OSPF缺乏可扩展性使其不适合在Internet上进行路由。</li>\n<li>  RIP的跳数最多为16跳，但是OSPF则没有限制。</li>\n</ul>\n<h4 id=\"3-简单说明IGP和EGP协议主要区别。\"><a href=\"#3-简单说明IGP和EGP协议主要区别。\" class=\"headerlink\" title=\"3. 简单说明IGP和EGP协议主要区别。\"></a>3. 简单说明IGP和EGP协议主要区别。</h4><ul>\n<li>  BGP一般用于大型网络，可容纳的路由信息更多；而IGP协议，对于路由条目的存储量是有限的；</li>\n<li>  IGP是内部网关协议，在AS内部实现路由信息的交换；BGP是边界网关协议，在AS之间实现路由信息的交换；</li>\n<li>  IGP的设计重点是对路由的学习与交换，发现路由等，而BGP的设计，主要是为了控制路由的传播，即进行路径选择，BGP有丰富的选路策略，与其说BGP是一个路由协议，倒不如说BGP是一个路径选择协议；</li>\n</ul>\n<h4 id=\"4-简述自治域划分与因特网主干网、区域ISP和用户接入网的关系。\"><a href=\"#4-简述自治域划分与因特网主干网、区域ISP和用户接入网的关系。\" class=\"headerlink\" title=\"4. 简述自治域划分与因特网主干网、区域ISP和用户接入网的关系。\"></a>4. 简述自治域划分与因特网主干网、区域ISP和用户接入网的关系。</h4><ul>\n<li>  因特网主干网只能转发数据包，它们不直连终端。</li>\n<li>  自治域划分将自治域分成了多个自治域，每个自治域都有不同的功能。</li>\n<li>  区域ISP是服务提供商，对IP地址进行管理。</li>\n<li>  用户接入网是相对主干网来讲的，它们直连用户终端。</li>\n</ul>\n<h4 id=\"5-BGP协议是否一定能提供最佳路径，为什么？\"><a href=\"#5-BGP协议是否一定能提供最佳路径，为什么？\" class=\"headerlink\" title=\"5. BGP协议是否一定能提供最佳路径，为什么？\"></a>5. BGP协议是否一定能提供最佳路径，为什么？</h4><p>BGP协议不是一定提供最佳路径，BGP协议是路向量路由协议，这是因为BGP在发布到一个目的网络的可达性的同时，包含了在IP分组到达目的网络过程中所必须经过的AS的列表，不一定是最佳的。</p>\n<h4 id=\"6-简述因特网的实际结构和特点，试中国因特网可能的基本组成结构。\"><a href=\"#6-简述因特网的实际结构和特点，试中国因特网可能的基本组成结构。\" class=\"headerlink\" title=\"6. 简述因特网的实际结构和特点，试中国因特网可能的基本组成结构。\"></a>6. 简述因特网的实际结构和特点，试中国因特网可能的基本组成结构。</h4><p>ChinaNet 是国内计算机互联网名副其实的骨干网。ChinaNet 骨干网的拓扑结构分为核心层和大区层。核心层由北京、上海、广州、沈阳、南京、武汉、成都和西安8个城市的核心节点组成，提供与国际Internet互联,以及大区之间的信息交换通路。北京、上海、广州三个核心层节点各设两台国际出口路由器与国际互联网相联。</p>\n","site":{"data":{}},"excerpt":"<p>互联网理论的作业</p>","more":"<h2 id=\"第一章-概论作业\"><a href=\"#第一章-概论作业\" class=\"headerlink\" title=\"第一章 概论作业\"></a>第一章 概论作业</h2><h4 id=\"1-什么是协议，什么是算法？\"><a href=\"#1-什么是协议，什么是算法？\" class=\"headerlink\" title=\"1. 什么是协议，什么是算法？\"></a>1. 什么是协议，什么是算法？</h4><ol>\n<li> 协议：协议是计算机网络中进行数据交换而建立的规则、标准或约定的集合，它规定了通信时信息必须采用的格式和这些格式所代表的意义。网络协议使网络上各种设备能够相互交换信息。</li>\n<li> 算法：算法是解决问题的步骤，算法通过有限的步骤，解决特定的问题。</li>\n</ol>\n<h4 id=\"2-在20世纪60年代，为什么共享计算资源是最重要的？当万维网出现时，因特网应用发生了什么转变-？\"><a href=\"#2-在20世纪60年代，为什么共享计算资源是最重要的？当万维网出现时，因特网应用发生了什么转变-？\" class=\"headerlink\" title=\"2. 在20世纪60年代，为什么共享计算资源是最重要的？当万维网出现时，因特网应用发生了什么转变 ？\"></a>2. 在20世纪60年代，为什么共享计算资源是最重要的？当万维网出现时，因特网应用发生了什么转变 ？</h4><p>在20世纪60年代，因为计算机硬件设备的限制，计算资源十分珍贵，所以共享计算资源是最重要的。当万维网出现时，计算机互联成为了非常便利的事情，所以数据交换成了因特网应用的主要功能。</p>\n<h4 id=\"3-简述互联网的报文模式和流模式，和建立“连接”有什么关系？\"><a href=\"#3-简述互联网的报文模式和流模式，和建立“连接”有什么关系？\" class=\"headerlink\" title=\"3. 简述互联网的报文模式和流模式，和建立“连接”有什么关系？\"></a>3. 简述互联网的报文模式和流模式，和建立“连接”有什么关系？</h4><p>报文模式是面向非连接的，流模式是面向连接的。所以，使用报文模式发送数据包，主机之间不需要建立连接，使用流模式发送数据，则要进行连接的建立。</p>\n<h4 id=\"4-什么是点对点通信，什么是端到端通信，在互联网中分别用什么协议完成？\"><a href=\"#4-什么是点对点通信，什么是端到端通信，在互联网中分别用什么协议完成？\" class=\"headerlink\" title=\"4. 什么是点对点通信，什么是端到端通信，在互联网中分别用什么协议完成？\"></a>4. 什么是点对点通信，什么是端到端通信，在互联网中分别用什么协议完成？</h4><ul>\n<li>  点到点协议针对数据链路层或网络层来说的，负责直接相连的两个节点之间的通信，一个节点接收到了数据包，就把它发送到相邻的下一个节点上，就是点对点通信。因为点对点通信在网络层，所以由IP协议完成。</li>\n<li>  端到端协议针对传输层来说的，负责把数据从发送端传输到接收端，其中会跨越很多个结点，端到端通信建立在点对点通信的基础上。因为端到端通信在传输层，所以由TCP或者UDP协议完成。</li>\n</ul>\n<h4 id=\"5-学习观看中国大学视频公开课《信息社会传奇：计算机网络》1、2、6讲（http-www-icourses-cn-viewVCourse-action-courseCode-10574V002），浅谈人类社会发展和信息网络的关系。\"><a href=\"#5-学习观看中国大学视频公开课《信息社会传奇：计算机网络》1、2、6讲（http-www-icourses-cn-viewVCourse-action-courseCode-10574V002），浅谈人类社会发展和信息网络的关系。\" class=\"headerlink\" title=\"5. 学习观看中国大学视频公开课《信息社会传奇：计算机网络》1、2、6讲（http://www.icourses.cn/viewVCourse.action?courseCode=10574V002），浅谈人类社会发展和信息网络的关系。\"></a>5. 学习观看中国大学视频公开课《信息社会传奇：计算机网络》1、2、6讲（<a href=\"http://www.icourses.cn/viewVCourse.action?courseCode=10574V002%EF%BC%89%EF%BC%8C%E6%B5%85%E8%B0%88%E4%BA%BA%E7%B1%BB%E7%A4%BE%E4%BC%9A%E5%8F%91%E5%B1%95%E5%92%8C%E4%BF%A1%E6%81%AF%E7%BD%91%E7%BB%9C%E7%9A%84%E5%85%B3%E7%B3%BB%E3%80%82\">http://www.icourses.cn/viewVCourse.action?courseCode=10574V002），浅谈人类社会发展和信息网络的关系。</a></h4><p>​        人类文明发展过程先后经历了农业革命和工业革命，现在已经进入信息革命时代。农业革命是通过技术提高农作物等生产效率，逐步提高和保障人类的温饱问题；工业革命也是通过技术提高工业消费品等生产效率，满足人类物质生活品质提高的问题；信息革命还是通过技术来提高人类精神生活品质。农业革命和工业革命主要是解决物质生产和交流的效率问题，信息革命主要是解决知识生产和交流的效率问题。互联网已经融入社会生活和生产的方方面面，深刻改变了人们的生产和生活方式。互联网对传统行业形态的改变非常显著，强烈影响着国家的政治和经济发展，对文化与价值观念甚至语言的演变同样具有巨大影响。互联网的发展推动了文化的传播乃至占领。语言的演变以前所未有的速度加快。放眼当今世界，正是凭借对网络空间的掌控，一些经济文化大国通过对本民族文化和价值观念的宣扬与传播，悄然侵蚀着他国的传统文化。</p>\n<p>　　互联网将改变传统行业的形态，而传统行业自身又很难产生出适应互联网特点的新机制。网络购物不是百货大楼发起的；新媒体的出现不是源自于传统纸媒体；数码相机的广泛使用不是卡达公司的本意；数字出版不是传统出版社的强项；互联网金融业不是传统银行的发明；MOOC的发展也不会是以传统大学为主。互联网对人类文明的影响将不断提升，第一阶段为信息互联，主要是解决人类知情权的平等；第二阶段为消费互联，为人类的物质生活需求提供方便；第三阶段为生产互联，服务于人类就业和事业发展；第四阶段为智慧互联，帮助人类实现对知识和精神生活的追求；最终发展成为生命互联，满足人类健康长寿的愿望。</p>\n<h2 id=\"2-1-NAT作业\"><a href=\"#2-1-NAT作业\" class=\"headerlink\" title=\"2.1 NAT作业\"></a>2.1 NAT作业</h2><h4 id=\"1-说明为什么NAT使用能大大节省因特网地址？\"><a href=\"#1-说明为什么NAT使用能大大节省因特网地址？\" class=\"headerlink\" title=\"1. 说明为什么NAT使用能大大节省因特网地址？\"></a>1. 说明为什么NAT使用能大大节省因特网地址？</h4><p>NAT协议是网络地址转换协议，在路由器上安装这个协议，就可以保证它至少有一个有效的外部IP地址，而其他主机可以使用本地地址，当主机需要通信的时候，在NAT路由器上将本地地址转换成外部IP地址即可，这样就节省了IP地址。</p>\n<h4 id=\"2-说明NAT是否是网络协议，为什么？\"><a href=\"#2-说明NAT是否是网络协议，为什么？\" class=\"headerlink\" title=\"2. 说明NAT是否是网络协议，为什么？\"></a>2. 说明NAT是否是网络协议，为什么？</h4><p>NAT不是网络协议，因为NAT协议不参与信息的交换，它只负责将本地的主机地址转换成可以连接到互联网的IP地址。</p>\n<h4 id=\"3-说明一个有数百台PC的学校校园网只申请到6个因特网IP地址，如何访问因特网和外部访问学校官网。\"><a href=\"#3-说明一个有数百台PC的学校校园网只申请到6个因特网IP地址，如何访问因特网和外部访问学校官网。\" class=\"headerlink\" title=\"3. 说明一个有数百台PC的学校校园网只申请到6个因特网IP地址，如何访问因特网和外部访问学校官网。\"></a>3. 说明一个有数百台PC的学校校园网只申请到6个因特网IP地址，如何访问因特网和外部访问学校官网。</h4><p>这些主机可以分成6组，分别对于6个IP地址，给每台主机配置一个私有地址，然后通过NAT协议转换后，用其中一个因特网IP地址连接到因特网。当外部访问学校的官网时，定位到官网服务器所在的主机，连接到那台主机。</p>\n<h4 id=\"4-简述NAPT实现同一IP地址的负载均衡的原理。\"><a href=\"#4-简述NAPT实现同一IP地址的负载均衡的原理。\" class=\"headerlink\" title=\"4. 简述NAPT实现同一IP地址的负载均衡的原理。\"></a>4. 简述NAPT实现同一IP地址的负载均衡的原理。</h4><p>外网到内网服务器的访问，表的静态记录项，通过服务端口区分不同服务器的访问。当接受外部主机的请求时，根据已有的NAPT表，把全局地址翻译成不同的内部地址，建立与内部多台主机的连接。</p>\n<h2 id=\"2-2-DHCP作业\"><a href=\"#2-2-DHCP作业\" class=\"headerlink\" title=\"2.2 DHCP作业\"></a>2.2 DHCP作业</h2><h4 id=\"1-请简述自举配置协议BOOTP要解决什么问题？\"><a href=\"#1-请简述自举配置协议BOOTP要解决什么问题？\" class=\"headerlink\" title=\"1. 请简述自举配置协议BOOTP要解决什么问题？\"></a>1. 请简述自举配置协议BOOTP要解决什么问题？</h4><p>路由器、计算机等开始工作时都要经过初始化参数设置或配置的过程。</p>\n<p>协议没有配置前，用什么协议交互数据？</p>\n<p>在不知道路由器地址前，怎样和路由器通信呢？（怎样获取地址掩码、默认网关地址 ？）</p>\n<h4 id=\"2-请简述DHCP-协议在BOOTP基础上主要改进了什么？\"><a href=\"#2-请简述DHCP-协议在BOOTP基础上主要改进了什么？\" class=\"headerlink\" title=\"2. 请简述DHCP 协议在BOOTP基础上主要改进了什么？\"></a>2. 请简述DHCP 协议在BOOTP基础上主要改进了什么？</h4><p>BOOTP 在工作前需要在服务器上配置相关主机参数数据库，且是固定设置值， 只能满足小区域固定 IP 配置的 PC 静态接入网络要求。但对大区域和不固定 IP 配置的用户就无法满足。DHCP在 BOOTP 基础上扩展改进，提出自动获取 IP 地址分配机制，实现即插即用的联网。</p>\n<h4 id=\"3-请列出在使用BOOTP协议前，一台计算机在利用网络启动之前，必须在本地需要具有什么协议与参数。\"><a href=\"#3-请列出在使用BOOTP协议前，一台计算机在利用网络启动之前，必须在本地需要具有什么协议与参数。\" class=\"headerlink\" title=\"3. 请列出在使用BOOTP协议前，一台计算机在利用网络启动之前，必须在本地需要具有什么协议与参数。\"></a>3. 请列出在使用BOOTP协议前，一台计算机在利用网络启动之前，必须在本地需要具有什么协议与参数。</h4><p>需要ICMP协议，需要MAC地址，然后通过报文获取主机IP地址，以及地址掩码，还有默认路由。</p>\n<h4 id=\"4-比较使用绑定方案地址分配协议和DHCP动态地址分配协议，哪个更适用于广域网？\"><a href=\"#4-比较使用绑定方案地址分配协议和DHCP动态地址分配协议，哪个更适用于广域网？\" class=\"headerlink\" title=\"4. 比较使用绑定方案地址分配协议和DHCP动态地址分配协议，哪个更适用于广域网？\"></a>4. 比较使用绑定方案地址分配协议和DHCP动态地址分配协议，哪个更适用于广域网？</h4><p>DHCP动态地址分配协议更适合广域网。DHCP对计算机入网的动态配置信息，不需要管理员对配制数据库的修改。DHCP首先随机广播发送发现报文，减少冲撞，在确认DHCP服务器后再发送请求报文；而且通常对获取的DHCP服务器地址在系统中永久保存，以后单播请求，可大大减少网络业务量。</p>\n<h2 id=\"2-3-路由协议作业-1\"><a href=\"#2-3-路由协议作业-1\" class=\"headerlink\" title=\"2.3 路由协议作业 1\"></a>2.3 路由协议作业 1</h2><h4 id=\"1-路由器中路由协议和路由算法各自完成什么作用？\"><a href=\"#1-路由器中路由协议和路由算法各自完成什么作用？\" class=\"headerlink\" title=\"1. 路由器中路由协议和路由算法各自完成什么作用？\"></a>1. 路由器中路由协议和路由算法各自完成什么作用？</h4><ul>\n<li>  路由协议是一种指定数据包转送方式的网络协议，路由器通过路由表来转发接收到的数据。路由协议指定转发策略，减少网络管理员工作量，并且管理、维护路由表。路由协议可以让路由器自动学习到其他路由器的网络，并且网络拓扑发生改变后自动更新路由表。</li>\n<li>  路由算法是提高路由协议功能，尽量减少路由时所带来开销的算法，在出现不正常或不可预见事件的情况下必须仍能正常处理。</li>\n</ul>\n<h4 id=\"2-什么是跳数？RIP协议为什么将最大跳数设为16？\"><a href=\"#2-什么是跳数？RIP协议为什么将最大跳数设为16？\" class=\"headerlink\" title=\"2. 什么是跳数？RIP协议为什么将最大跳数设为16？\"></a>2. 什么是跳数？RIP协议为什么将最大跳数设为16？</h4><p>跳数是到达目的网络经过的路由器数。RIP路由协议设置最大跳数为16跳是因为可能形成环路。</p>\n<h4 id=\"3-RIP协议工作的基本思想，主要问题在那里？\"><a href=\"#3-RIP协议工作的基本思想，主要问题在那里？\" class=\"headerlink\" title=\"3. RIP协议工作的基本思想，主要问题在那里？\"></a>3. RIP协议工作的基本思想，主要问题在那里？</h4><ol>\n<li><p> “坏消息传得慢”，故障或网络变化时，收敛速度慢。</p>\n</li>\n<li><p> 由于目前因特网非常大，如每个路由器的路由表知道所有网络的可达方式，完成路由器间很大量的的信息交换、大表的路由计算是不现实的。</p>\n</li>\n</ol>\n<h4 id=\"4-目前网络路由协议主要考虑的哪些要素？\"><a href=\"#4-目前网络路由协议主要考虑的哪些要素？\" class=\"headerlink\" title=\"4. 目前网络路由协议主要考虑的哪些要素？\"></a>4. 目前网络路由协议主要考虑的哪些要素？</h4><ol>\n<li> 目前因特网非常大，路由表不能太长；</li>\n<li> 路由选择的可扩展性问题，需要找到路由协议和路由表中存储的记录项规模的有效方法；</li>\n<li> IP地址利用问题，确保IP地址空间不会过快消耗完。</li>\n</ol>\n<h2 id=\"2-3-路由协议作业-2\"><a href=\"#2-3-路由协议作业-2\" class=\"headerlink\" title=\"2.3 路由协议作业 2\"></a>2.3 路由协议作业 2</h2><h4 id=\"1-简述互联网为什么要定义自治域AS，解释为什么要分层路由。\"><a href=\"#1-简述互联网为什么要定义自治域AS，解释为什么要分层路由。\" class=\"headerlink\" title=\"1. 简述互联网为什么要定义自治域AS，解释为什么要分层路由。\"></a>1. 简述互联网为什么要定义自治域AS，解释为什么要分层路由。</h4><ul>\n<li>  自治域将整个计算机网络分成了很多个小的网络，这样在这些自治域内部，只需要保证内部的主机的IP地址唯一就可以了，不必让每一台主机都有因特网的IP地址，节省了IP地址。</li>\n<li>  每一层路由都执行不同的功能，这样方便管理和维护。</li>\n</ul>\n<h4 id=\"2-RIP与OSPF协议主要特点，各自处理的自治域规模一般多大？\"><a href=\"#2-RIP与OSPF协议主要特点，各自处理的自治域规模一般多大？\" class=\"headerlink\" title=\"2. RIP与OSPF协议主要特点，各自处理的自治域规模一般多大？\"></a>2. RIP与OSPF协议主要特点，各自处理的自治域规模一般多大？</h4><ul>\n<li>  RIP是基于距离矢量算法的路由协议，而OSPF是基于链路状态算法的路由协议。RIP非常适合小型网络，它易于理解和配置，同时几乎所有路由器都支持它。但是 RIP的跳数限制为16，超出该距离则无法访问，限制了网络的规模。OSPF为了弥补RIP的缺点，但是当网络中添加了更多路由器时，它无法扩展。而OSPF缺乏可扩展性使其不适合在Internet上进行路由。</li>\n<li>  RIP的跳数最多为16跳，但是OSPF则没有限制。</li>\n</ul>\n<h4 id=\"3-简单说明IGP和EGP协议主要区别。\"><a href=\"#3-简单说明IGP和EGP协议主要区别。\" class=\"headerlink\" title=\"3. 简单说明IGP和EGP协议主要区别。\"></a>3. 简单说明IGP和EGP协议主要区别。</h4><ul>\n<li>  BGP一般用于大型网络，可容纳的路由信息更多；而IGP协议，对于路由条目的存储量是有限的；</li>\n<li>  IGP是内部网关协议，在AS内部实现路由信息的交换；BGP是边界网关协议，在AS之间实现路由信息的交换；</li>\n<li>  IGP的设计重点是对路由的学习与交换，发现路由等，而BGP的设计，主要是为了控制路由的传播，即进行路径选择，BGP有丰富的选路策略，与其说BGP是一个路由协议，倒不如说BGP是一个路径选择协议；</li>\n</ul>\n<h4 id=\"4-简述自治域划分与因特网主干网、区域ISP和用户接入网的关系。\"><a href=\"#4-简述自治域划分与因特网主干网、区域ISP和用户接入网的关系。\" class=\"headerlink\" title=\"4. 简述自治域划分与因特网主干网、区域ISP和用户接入网的关系。\"></a>4. 简述自治域划分与因特网主干网、区域ISP和用户接入网的关系。</h4><ul>\n<li>  因特网主干网只能转发数据包，它们不直连终端。</li>\n<li>  自治域划分将自治域分成了多个自治域，每个自治域都有不同的功能。</li>\n<li>  区域ISP是服务提供商，对IP地址进行管理。</li>\n<li>  用户接入网是相对主干网来讲的，它们直连用户终端。</li>\n</ul>\n<h4 id=\"5-BGP协议是否一定能提供最佳路径，为什么？\"><a href=\"#5-BGP协议是否一定能提供最佳路径，为什么？\" class=\"headerlink\" title=\"5. BGP协议是否一定能提供最佳路径，为什么？\"></a>5. BGP协议是否一定能提供最佳路径，为什么？</h4><p>BGP协议不是一定提供最佳路径，BGP协议是路向量路由协议，这是因为BGP在发布到一个目的网络的可达性的同时，包含了在IP分组到达目的网络过程中所必须经过的AS的列表，不一定是最佳的。</p>\n<h4 id=\"6-简述因特网的实际结构和特点，试中国因特网可能的基本组成结构。\"><a href=\"#6-简述因特网的实际结构和特点，试中国因特网可能的基本组成结构。\" class=\"headerlink\" title=\"6. 简述因特网的实际结构和特点，试中国因特网可能的基本组成结构。\"></a>6. 简述因特网的实际结构和特点，试中国因特网可能的基本组成结构。</h4><p>ChinaNet 是国内计算机互联网名副其实的骨干网。ChinaNet 骨干网的拓扑结构分为核心层和大区层。核心层由北京、上海、广州、沈阳、南京、武汉、成都和西安8个城市的核心节点组成，提供与国际Internet互联,以及大区之间的信息交换通路。北京、上海、广州三个核心层节点各设两台国际出口路由器与国际互联网相联。</p>"},{"title":"计算机安全学的期末复习","date":"2021-12-31T18:34:18.000Z","id":"sec1","_content":"\n\n\n计算机安全学期末复习\n\n\n\n<!-- more -->\n\n\n\n{% pdf https://zhenruyi.github.io/files/ComputerSecurity.pdf %}\n","source":"_posts/sic-sec01ComputerSecurityFinal.md","raw":"---\ntitle: 计算机安全学的期末复习\ndate: 2022-01-01 02:34:18\nid: sec1\ncategories:\n- sci\ntags:\n- sec\n---\n\n\n\n计算机安全学期末复习\n\n\n\n<!-- more -->\n\n\n\n{% pdf https://zhenruyi.github.io/files/ComputerSecurity.pdf %}\n","slug":"sic-sec01ComputerSecurityFinal","published":1,"updated":"2022-04-16T23:10:04.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70u900315ossgj0f8n6e","content":"<p>计算机安全学期末复习</p>\n<span id=\"more\"></span>\n\n\n\n<div class=\"pdf-container\" data-target=\"https://zhenruyi.github.io/files/ComputerSecurity.pdf\" data-height=\"650px\"></div>\n","site":{"data":{}},"excerpt":"<p>计算机安全学期末复习</p>","more":"<div class=\"pdf-container\" data-target=\"https://zhenruyi.github.io/files/ComputerSecurity.pdf\" data-height=\"650px\"></div>"},{"title":"Git常用命令备忘","date":"2022-02-02T14:44:53.000Z","id":"git2","_content":"\n\n\n\n\n\n\nGit的一些常用命令备忘。\n\n\n\n<!-- more -->\n\n\n\n\n\n```bash\ngit --version\ngit config --global --list\ngit config --system --list\ngit config user.name ...\ngit config user.email ...\n\nssh-keygen -t -rsa\n\ngit init\ngit clone ...\ngit status\ngit add .\ngit cmmit -m \"..\"\ngit push\n\ngit branch -v\ngit branah ...\ngit checkout ...\ngit merge ...\n\ngit reset --hard HEAD^\ngit reset --hard HEAD~n\ngit reset --hard ...\ngit reset --mixed ...\ngit reset --soft ...\n\ngit remote -v\ngit remote add origin ...\ngit push origin master\n\npull = fetch + merge\ngit fetch origin master\ngit checkout orgin/master\ngit merge orgin/master\n```\n\n","source":"_posts/tech-git02GithubCmd.md","raw":"---\ntitle: Git常用命令备忘\ndate: 2022-02-02 22:44:53\nid: git2\ncategories:\n- tech\ntags:\n- git\n---\n\n\n\n\n\n\n\nGit的一些常用命令备忘。\n\n\n\n<!-- more -->\n\n\n\n\n\n```bash\ngit --version\ngit config --global --list\ngit config --system --list\ngit config user.name ...\ngit config user.email ...\n\nssh-keygen -t -rsa\n\ngit init\ngit clone ...\ngit status\ngit add .\ngit cmmit -m \"..\"\ngit push\n\ngit branch -v\ngit branah ...\ngit checkout ...\ngit merge ...\n\ngit reset --hard HEAD^\ngit reset --hard HEAD~n\ngit reset --hard ...\ngit reset --mixed ...\ngit reset --soft ...\n\ngit remote -v\ngit remote add origin ...\ngit push origin master\n\npull = fetch + merge\ngit fetch origin master\ngit checkout orgin/master\ngit merge orgin/master\n```\n\n","slug":"tech-git02GithubCmd","published":1,"updated":"2022-04-16T23:10:26.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70ua00375oss6kf72z54","content":"<p>Git的一些常用命令备忘。</p>\n<span id=\"more\"></span>\n\n\n\n\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git --version</span><br><span class=\"line\">git config --global --list</span><br><span class=\"line\">git config --system --list</span><br><span class=\"line\">git config user.name ...</span><br><span class=\"line\">git config user.email ...</span><br><span class=\"line\"></span><br><span class=\"line\">ssh-keygen -t -rsa</span><br><span class=\"line\"></span><br><span class=\"line\">git init</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> ...</span><br><span class=\"line\">git status</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git cmmit -m <span class=\"string\">&quot;..&quot;</span></span><br><span class=\"line\">git push</span><br><span class=\"line\"></span><br><span class=\"line\">git branch -v</span><br><span class=\"line\">git branah ...</span><br><span class=\"line\">git checkout ...</span><br><span class=\"line\">git merge ...</span><br><span class=\"line\"></span><br><span class=\"line\">git reset --hard HEAD^</span><br><span class=\"line\">git reset --hard HEAD~n</span><br><span class=\"line\">git reset --hard ...</span><br><span class=\"line\">git reset --mixed ...</span><br><span class=\"line\">git reset --soft ...</span><br><span class=\"line\"></span><br><span class=\"line\">git remote -v</span><br><span class=\"line\">git remote add origin ...</span><br><span class=\"line\">git push origin master</span><br><span class=\"line\"></span><br><span class=\"line\">pull = fetch + merge</span><br><span class=\"line\">git fetch origin master</span><br><span class=\"line\">git checkout orgin/master</span><br><span class=\"line\">git merge orgin/master</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>Git的一些常用命令备忘。</p>","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git --version</span><br><span class=\"line\">git config --global --list</span><br><span class=\"line\">git config --system --list</span><br><span class=\"line\">git config user.name ...</span><br><span class=\"line\">git config user.email ...</span><br><span class=\"line\"></span><br><span class=\"line\">ssh-keygen -t -rsa</span><br><span class=\"line\"></span><br><span class=\"line\">git init</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> ...</span><br><span class=\"line\">git status</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git cmmit -m <span class=\"string\">&quot;..&quot;</span></span><br><span class=\"line\">git push</span><br><span class=\"line\"></span><br><span class=\"line\">git branch -v</span><br><span class=\"line\">git branah ...</span><br><span class=\"line\">git checkout ...</span><br><span class=\"line\">git merge ...</span><br><span class=\"line\"></span><br><span class=\"line\">git reset --hard HEAD^</span><br><span class=\"line\">git reset --hard HEAD~n</span><br><span class=\"line\">git reset --hard ...</span><br><span class=\"line\">git reset --mixed ...</span><br><span class=\"line\">git reset --soft ...</span><br><span class=\"line\"></span><br><span class=\"line\">git remote -v</span><br><span class=\"line\">git remote add origin ...</span><br><span class=\"line\">git push origin master</span><br><span class=\"line\"></span><br><span class=\"line\">pull = fetch + merge</span><br><span class=\"line\">git fetch origin master</span><br><span class=\"line\">git checkout orgin/master</span><br><span class=\"line\">git merge orgin/master</span><br></pre></td></tr></table></figure>"},{"title":"使用Github搭建自己的博客","date":"2022-03-25T19:05:00.000Z","id":"hexo1","_content":"\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n<!-- more -->\n\n1. 安装node.js\n\n   下载链接：[Node.js (nodejs.org)](https://nodejs.org/en/)\n\n   LTS：Long Term Support，长期支持。node.js的版本更新很快，长期支持版本意味着稳定、可靠。关于版本，官网是这样介绍的：\n\n   > Releases\n   > Major Node.js versions enter Current release status for six months, which gives library authors time to add support for them. \n   > After six months, odd-numbered releases (9, 11, etc.) become unsupported, and even-numbered releases (10, 12, etc.) move to Active LTS status and are ready for general use. \n   > LTS release status is \"long-term support\", which typically guarantees that critical bugs will be fixed for a total of 30 months. \n   > Production applications should only use Active LTS or Maintenance LTS releases.\n\n   主要的node.js版本会经过两个阶段\n\n   - 当前(Current)版本状态，时长六个月，目的是给开发者时间添加支持；\n   - 六个月之后\n     - 奇数版本不再被支持\n     - 偶数版本变成长期支持版本(LTS)，提供广泛使用，并支持30个月。\n\n   ![](https://zhenruyi.github.io/images/01_nodejs_releases.png)\n\n   测试是否安装成功：\n\n   ```bash\n   node -v\n   ```\n\n   ---\n\n2. 安装git\n\n   安装git并配置环境变量。成功配置后cmd输入：\n\n   ```bash\n   git --version\n   ```\n\n   ---\n\n3. 新建GitHub仓库\n\n   仓库名：账号名.github.io\n\n   勾选`Add a README file`\n\n   在setting中打开pages，看到仓库的域名，可以通过外网访问。\n\n   ---\n\n4. 安装hexo\n\n   1 本地新建一个文件夹，命名为“blog”；\n\n   2 在该文件夹打开cmd，输入`npm install hexo -g`。提示升级npm：` Run npm install -g npm@8.5.5 to update!`。\n\n   3 输入`hexo -v`查看hexo版本。\n\n   ---\n\n5. 初始化hexo仓库\n\n   1 输入`hexo init`初始化hexo。报错：\n\n   ```bash\n   ERROR Cannot find module 'hexo' from 'A:\\CodeHub\\blog'\n   ERROR Local hexo loading failed in A:\\CodeHub\\blog\n   ERROR Try running: 'rm -rf node_modules && npm install --force'\n   ```\n\n   原因：博客根目录下缺少node_module文件夹\n\n   解决办法：hexo仓库不是空的，所以把hexo仓库内容删了，重新初始化。\n\n   2 安装组件`npm install`\n   \n   ---\n\n6. 使用hexo\n\n   1 使用`hexo generate`将hexo编译生成HTML代码，在根目录的public目录下。\n\n   2 在本地运行`hexo serve`，浏览器访问`http://localhost:400`\n\n   3 假如页面无法跳转，端口被占用。输入`hexo server -p`指定端口号。\n   \n   ---\n\n7. 将hexo和pages关联起来\n\n   1 配置密钥，公钥给GitHub。\n\n   2 找到_config.yml文件，修改repo值。\n\n   ```yaml\n   # Deployment\n   ## Docs: https://hexo.io/docs/one-command-deployment\n   deploy:\n     type: git\n     repo: git@github.com:zhenruyi/zhenruyi.github.io.git\n     branch: main\n   ```\n\n   3 新建一篇post，`hexo new post \"PostName\"`。\n\n   4 安装一个扩展`npm install hexo-deployer-git --save`\n\n   5 `hexo d -g`生成以及部署\n   \n   ---\n\n8. 其他分支\n\n   ```bash\n   那我博客的源码也想放到 GitHub 上面怎么办呢？其实很简单，新建一个其他的分支就好了，比如我这边就新建了一个 source 分支，代表博客源码的意思。\n   \n   具体的添加过程就很简单了，参加如下命令：\n   \n   git init    # 初始化项目\n   git checkout -b source    # 创建并切换到source分支\n   git add -A    # 添加所有文件到暂存区\n   git commit -m \"init blog\"    # 提交并注释\n   git remote add origin git@github.com:59devops/59devops.github.io.git    # 添加到远程仓库\n   git push origin source    # 将代码提交到远程的source分支\n   在GitHub仓库中可以看到已经有两个分支。\n   ```\n\n   ","source":"_posts/tech-hexo01UseHexoToBuildBlog.md","raw":"---\ntitle: 使用Github搭建自己的博客\ndate: 2022-03-26 03:05:00\nid: hexo1\ncategories:\n- tech\ntags:\n- hexo\n---\n\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n<!-- more -->\n\n1. 安装node.js\n\n   下载链接：[Node.js (nodejs.org)](https://nodejs.org/en/)\n\n   LTS：Long Term Support，长期支持。node.js的版本更新很快，长期支持版本意味着稳定、可靠。关于版本，官网是这样介绍的：\n\n   > Releases\n   > Major Node.js versions enter Current release status for six months, which gives library authors time to add support for them. \n   > After six months, odd-numbered releases (9, 11, etc.) become unsupported, and even-numbered releases (10, 12, etc.) move to Active LTS status and are ready for general use. \n   > LTS release status is \"long-term support\", which typically guarantees that critical bugs will be fixed for a total of 30 months. \n   > Production applications should only use Active LTS or Maintenance LTS releases.\n\n   主要的node.js版本会经过两个阶段\n\n   - 当前(Current)版本状态，时长六个月，目的是给开发者时间添加支持；\n   - 六个月之后\n     - 奇数版本不再被支持\n     - 偶数版本变成长期支持版本(LTS)，提供广泛使用，并支持30个月。\n\n   ![](https://zhenruyi.github.io/images/01_nodejs_releases.png)\n\n   测试是否安装成功：\n\n   ```bash\n   node -v\n   ```\n\n   ---\n\n2. 安装git\n\n   安装git并配置环境变量。成功配置后cmd输入：\n\n   ```bash\n   git --version\n   ```\n\n   ---\n\n3. 新建GitHub仓库\n\n   仓库名：账号名.github.io\n\n   勾选`Add a README file`\n\n   在setting中打开pages，看到仓库的域名，可以通过外网访问。\n\n   ---\n\n4. 安装hexo\n\n   1 本地新建一个文件夹，命名为“blog”；\n\n   2 在该文件夹打开cmd，输入`npm install hexo -g`。提示升级npm：` Run npm install -g npm@8.5.5 to update!`。\n\n   3 输入`hexo -v`查看hexo版本。\n\n   ---\n\n5. 初始化hexo仓库\n\n   1 输入`hexo init`初始化hexo。报错：\n\n   ```bash\n   ERROR Cannot find module 'hexo' from 'A:\\CodeHub\\blog'\n   ERROR Local hexo loading failed in A:\\CodeHub\\blog\n   ERROR Try running: 'rm -rf node_modules && npm install --force'\n   ```\n\n   原因：博客根目录下缺少node_module文件夹\n\n   解决办法：hexo仓库不是空的，所以把hexo仓库内容删了，重新初始化。\n\n   2 安装组件`npm install`\n   \n   ---\n\n6. 使用hexo\n\n   1 使用`hexo generate`将hexo编译生成HTML代码，在根目录的public目录下。\n\n   2 在本地运行`hexo serve`，浏览器访问`http://localhost:400`\n\n   3 假如页面无法跳转，端口被占用。输入`hexo server -p`指定端口号。\n   \n   ---\n\n7. 将hexo和pages关联起来\n\n   1 配置密钥，公钥给GitHub。\n\n   2 找到_config.yml文件，修改repo值。\n\n   ```yaml\n   # Deployment\n   ## Docs: https://hexo.io/docs/one-command-deployment\n   deploy:\n     type: git\n     repo: git@github.com:zhenruyi/zhenruyi.github.io.git\n     branch: main\n   ```\n\n   3 新建一篇post，`hexo new post \"PostName\"`。\n\n   4 安装一个扩展`npm install hexo-deployer-git --save`\n\n   5 `hexo d -g`生成以及部署\n   \n   ---\n\n8. 其他分支\n\n   ```bash\n   那我博客的源码也想放到 GitHub 上面怎么办呢？其实很简单，新建一个其他的分支就好了，比如我这边就新建了一个 source 分支，代表博客源码的意思。\n   \n   具体的添加过程就很简单了，参加如下命令：\n   \n   git init    # 初始化项目\n   git checkout -b source    # 创建并切换到source分支\n   git add -A    # 添加所有文件到暂存区\n   git commit -m \"init blog\"    # 提交并注释\n   git remote add origin git@github.com:59devops/59devops.github.io.git    # 添加到远程仓库\n   git push origin source    # 将代码提交到远程的source分支\n   在GitHub仓库中可以看到已经有两个分支。\n   ```\n\n   ","slug":"tech-hexo01UseHexoToBuildBlog","published":1,"updated":"2022-04-16T23:10:39.141Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70ub00395oss88vk69em","content":"<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n<span id=\"more\"></span>\n\n<ol>\n<li><p>安装node.js</p>\n<p>下载链接：<a href=\"https://nodejs.org/en/\">Node.js (nodejs.org)</a></p>\n<p>LTS：Long Term Support，长期支持。node.js的版本更新很快，长期支持版本意味着稳定、可靠。关于版本，官网是这样介绍的：</p>\n<blockquote>\n<p>Releases<br>Major Node.js versions enter Current release status for six months, which gives library authors time to add support for them.<br>After six months, odd-numbered releases (9, 11, etc.) become unsupported, and even-numbered releases (10, 12, etc.) move to Active LTS status and are ready for general use.<br>LTS release status is “long-term support”, which typically guarantees that critical bugs will be fixed for a total of 30 months.<br>Production applications should only use Active LTS or Maintenance LTS releases.</p>\n</blockquote>\n<p>主要的node.js版本会经过两个阶段</p>\n<ul>\n<li>当前(Current)版本状态，时长六个月，目的是给开发者时间添加支持；</li>\n<li>六个月之后<ul>\n<li>奇数版本不再被支持</li>\n<li>偶数版本变成长期支持版本(LTS)，提供广泛使用，并支持30个月。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://zhenruyi.github.io/images/01_nodejs_releases.png\"></p>\n<p>测试是否安装成功：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n\n<hr>\n</li>\n<li><p>安装git</p>\n<p>安装git并配置环境变量。成功配置后cmd输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git --version</span><br></pre></td></tr></table></figure>\n\n<hr>\n</li>\n<li><p>新建GitHub仓库</p>\n<p>仓库名：账号名.github.io</p>\n<p>勾选<code>Add a README file</code></p>\n<p>在setting中打开pages，看到仓库的域名，可以通过外网访问。</p>\n<hr>\n</li>\n<li><p>安装hexo</p>\n<p>1 本地新建一个文件夹，命名为“blog”；</p>\n<p>2 在该文件夹打开cmd，输入<code>npm install hexo -g</code>。提示升级npm：<code> Run npm install -g npm@8.5.5 to update!</code>。</p>\n<p>3 输入<code>hexo -v</code>查看hexo版本。</p>\n<hr>\n</li>\n<li><p>初始化hexo仓库</p>\n<p>1 输入<code>hexo init</code>初始化hexo。报错：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR Cannot find module <span class=\"string\">&#x27;hexo&#x27;</span> from <span class=\"string\">&#x27;A:\\CodeHub\\blog&#x27;</span></span><br><span class=\"line\">ERROR Local hexo loading failed <span class=\"keyword\">in</span> A:\\CodeHub\\blog</span><br><span class=\"line\">ERROR Try running: <span class=\"string\">&#x27;rm -rf node_modules &amp;&amp; npm install --force&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>原因：博客根目录下缺少node_module文件夹</p>\n<p>解决办法：hexo仓库不是空的，所以把hexo仓库内容删了，重新初始化。</p>\n<p>2 安装组件<code>npm install</code></p>\n<hr>\n</li>\n<li><p>使用hexo</p>\n<p>1 使用<code>hexo generate</code>将hexo编译生成HTML代码，在根目录的public目录下。</p>\n<p>2 在本地运行<code>hexo serve</code>，浏览器访问<code>http://localhost:400</code></p>\n<p>3 假如页面无法跳转，端口被占用。输入<code>hexo server -p</code>指定端口号。</p>\n<hr>\n</li>\n<li><p>将hexo和pages关联起来</p>\n<p>1 配置密钥，公钥给GitHub。</p>\n<p>2 找到_config.yml文件，修改repo值。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">git@github.com:zhenruyi/zhenruyi.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span></span><br></pre></td></tr></table></figure>\n\n<p>3 新建一篇post，<code>hexo new post &quot;PostName&quot;</code>。</p>\n<p>4 安装一个扩展<code>npm install hexo-deployer-git --save</code></p>\n<p>5 <code>hexo d -g</code>生成以及部署</p>\n<hr>\n</li>\n<li><p>其他分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">那我博客的源码也想放到 GitHub 上面怎么办呢？其实很简单，新建一个其他的分支就好了，比如我这边就新建了一个 <span class=\"built_in\">source</span> 分支，代表博客源码的意思。</span><br><span class=\"line\"></span><br><span class=\"line\">具体的添加过程就很简单了，参加如下命令：</span><br><span class=\"line\"></span><br><span class=\"line\">git init    <span class=\"comment\"># 初始化项目</span></span><br><span class=\"line\">git checkout -b <span class=\"built_in\">source</span>    <span class=\"comment\"># 创建并切换到source分支</span></span><br><span class=\"line\">git add -A    <span class=\"comment\"># 添加所有文件到暂存区</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;init blog&quot;</span>    <span class=\"comment\"># 提交并注释</span></span><br><span class=\"line\">git remote add origin git@github.com:59devops/59devops.github.io.git    <span class=\"comment\"># 添加到远程仓库</span></span><br><span class=\"line\">git push origin <span class=\"built_in\">source</span>    <span class=\"comment\"># 将代码提交到远程的source分支</span></span><br><span class=\"line\">在GitHub仓库中可以看到已经有两个分支。</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>","more":"<ol>\n<li><p>安装node.js</p>\n<p>下载链接：<a href=\"https://nodejs.org/en/\">Node.js (nodejs.org)</a></p>\n<p>LTS：Long Term Support，长期支持。node.js的版本更新很快，长期支持版本意味着稳定、可靠。关于版本，官网是这样介绍的：</p>\n<blockquote>\n<p>Releases<br>Major Node.js versions enter Current release status for six months, which gives library authors time to add support for them.<br>After six months, odd-numbered releases (9, 11, etc.) become unsupported, and even-numbered releases (10, 12, etc.) move to Active LTS status and are ready for general use.<br>LTS release status is “long-term support”, which typically guarantees that critical bugs will be fixed for a total of 30 months.<br>Production applications should only use Active LTS or Maintenance LTS releases.</p>\n</blockquote>\n<p>主要的node.js版本会经过两个阶段</p>\n<ul>\n<li>当前(Current)版本状态，时长六个月，目的是给开发者时间添加支持；</li>\n<li>六个月之后<ul>\n<li>奇数版本不再被支持</li>\n<li>偶数版本变成长期支持版本(LTS)，提供广泛使用，并支持30个月。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://zhenruyi.github.io/images/01_nodejs_releases.png\"></p>\n<p>测试是否安装成功：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n\n<hr>\n</li>\n<li><p>安装git</p>\n<p>安装git并配置环境变量。成功配置后cmd输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git --version</span><br></pre></td></tr></table></figure>\n\n<hr>\n</li>\n<li><p>新建GitHub仓库</p>\n<p>仓库名：账号名.github.io</p>\n<p>勾选<code>Add a README file</code></p>\n<p>在setting中打开pages，看到仓库的域名，可以通过外网访问。</p>\n<hr>\n</li>\n<li><p>安装hexo</p>\n<p>1 本地新建一个文件夹，命名为“blog”；</p>\n<p>2 在该文件夹打开cmd，输入<code>npm install hexo -g</code>。提示升级npm：<code> Run npm install -g npm@8.5.5 to update!</code>。</p>\n<p>3 输入<code>hexo -v</code>查看hexo版本。</p>\n<hr>\n</li>\n<li><p>初始化hexo仓库</p>\n<p>1 输入<code>hexo init</code>初始化hexo。报错：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR Cannot find module <span class=\"string\">&#x27;hexo&#x27;</span> from <span class=\"string\">&#x27;A:\\CodeHub\\blog&#x27;</span></span><br><span class=\"line\">ERROR Local hexo loading failed <span class=\"keyword\">in</span> A:\\CodeHub\\blog</span><br><span class=\"line\">ERROR Try running: <span class=\"string\">&#x27;rm -rf node_modules &amp;&amp; npm install --force&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>原因：博客根目录下缺少node_module文件夹</p>\n<p>解决办法：hexo仓库不是空的，所以把hexo仓库内容删了，重新初始化。</p>\n<p>2 安装组件<code>npm install</code></p>\n<hr>\n</li>\n<li><p>使用hexo</p>\n<p>1 使用<code>hexo generate</code>将hexo编译生成HTML代码，在根目录的public目录下。</p>\n<p>2 在本地运行<code>hexo serve</code>，浏览器访问<code>http://localhost:400</code></p>\n<p>3 假如页面无法跳转，端口被占用。输入<code>hexo server -p</code>指定端口号。</p>\n<hr>\n</li>\n<li><p>将hexo和pages关联起来</p>\n<p>1 配置密钥，公钥给GitHub。</p>\n<p>2 找到_config.yml文件，修改repo值。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">git@github.com:zhenruyi/zhenruyi.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span></span><br></pre></td></tr></table></figure>\n\n<p>3 新建一篇post，<code>hexo new post &quot;PostName&quot;</code>。</p>\n<p>4 安装一个扩展<code>npm install hexo-deployer-git --save</code></p>\n<p>5 <code>hexo d -g</code>生成以及部署</p>\n<hr>\n</li>\n<li><p>其他分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">那我博客的源码也想放到 GitHub 上面怎么办呢？其实很简单，新建一个其他的分支就好了，比如我这边就新建了一个 <span class=\"built_in\">source</span> 分支，代表博客源码的意思。</span><br><span class=\"line\"></span><br><span class=\"line\">具体的添加过程就很简单了，参加如下命令：</span><br><span class=\"line\"></span><br><span class=\"line\">git init    <span class=\"comment\"># 初始化项目</span></span><br><span class=\"line\">git checkout -b <span class=\"built_in\">source</span>    <span class=\"comment\"># 创建并切换到source分支</span></span><br><span class=\"line\">git add -A    <span class=\"comment\"># 添加所有文件到暂存区</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;init blog&quot;</span>    <span class=\"comment\"># 提交并注释</span></span><br><span class=\"line\">git remote add origin git@github.com:59devops/59devops.github.io.git    <span class=\"comment\"># 添加到远程仓库</span></span><br><span class=\"line\">git push origin <span class=\"built_in\">source</span>    <span class=\"comment\"># 将代码提交到远程的source分支</span></span><br><span class=\"line\">在GitHub仓库中可以看到已经有两个分支。</span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"Github仓库初始化","date":"2021-02-02T11:00:00.000Z","id":"git1","_content":"\n\n\n将Github的远程仓库和本地仓库关联起来。\n\n\n\n<!-- more -->\n\n\n\n```bash\n…or create a new repository on the command line\necho \"# SortingAlgos\" >> README.md\n\n# 初始化\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin https://github.com/zhenruyi/SortingAlgos.git\ngit push -u origin main\n\n…or push an existing repository from the command line\ngit remote add origin https://github.com/zhenruyi/SortingAlgos.git\ngit branch -M main\ngit push -u origin main\n\n…or import code from another repository\nYou can initialize this repository with code from a Subversion, Mercurial, or TFS project.\n```\n\n","source":"_posts/tech-git01GithubRepositoriesInit.md","raw":"---\ntitle: Github仓库初始化\ndate: 2021-02-02 19:00:00\nid: git1\ncategories:\n- tech\ntags:\n- git\n---\n\n\n\n将Github的远程仓库和本地仓库关联起来。\n\n\n\n<!-- more -->\n\n\n\n```bash\n…or create a new repository on the command line\necho \"# SortingAlgos\" >> README.md\n\n# 初始化\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin https://github.com/zhenruyi/SortingAlgos.git\ngit push -u origin main\n\n…or push an existing repository from the command line\ngit remote add origin https://github.com/zhenruyi/SortingAlgos.git\ngit branch -M main\ngit push -u origin main\n\n…or import code from another repository\nYou can initialize this repository with code from a Subversion, Mercurial, or TFS project.\n```\n\n","slug":"tech-git01GithubRepositoriesInit","published":1,"updated":"2022-04-16T23:10:15.845Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70ud003e5oss2hxs2nfr","content":"<p>将Github的远程仓库和本地仓库关联起来。</p>\n<span id=\"more\"></span>\n\n\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">…or create a new repository on the <span class=\"built_in\">command</span> line</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;# SortingAlgos&quot;</span> &gt;&gt; README.md</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化</span></span><br><span class=\"line\">git init</span><br><span class=\"line\">git add README.md</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;first commit&quot;</span></span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git remote add origin https://github.com/zhenruyi/SortingAlgos.git</span><br><span class=\"line\">git push -u origin main</span><br><span class=\"line\"></span><br><span class=\"line\">…or push an existing repository from the <span class=\"built_in\">command</span> line</span><br><span class=\"line\">git remote add origin https://github.com/zhenruyi/SortingAlgos.git</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git push -u origin main</span><br><span class=\"line\"></span><br><span class=\"line\">…or import code from another repository</span><br><span class=\"line\">You can initialize this repository with code from a Subversion, Mercurial, or TFS project.</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>将Github的远程仓库和本地仓库关联起来。</p>","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">…or create a new repository on the <span class=\"built_in\">command</span> line</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;# SortingAlgos&quot;</span> &gt;&gt; README.md</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化</span></span><br><span class=\"line\">git init</span><br><span class=\"line\">git add README.md</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;first commit&quot;</span></span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git remote add origin https://github.com/zhenruyi/SortingAlgos.git</span><br><span class=\"line\">git push -u origin main</span><br><span class=\"line\"></span><br><span class=\"line\">…or push an existing repository from the <span class=\"built_in\">command</span> line</span><br><span class=\"line\">git remote add origin https://github.com/zhenruyi/SortingAlgos.git</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git push -u origin main</span><br><span class=\"line\"></span><br><span class=\"line\">…or import code from another repository</span><br><span class=\"line\">You can initialize this repository with code from a Subversion, Mercurial, or TFS project.</span><br></pre></td></tr></table></figure>"},{"title":"配置博客信息","date":"2022-03-26T04:31:42.000Z","id":"hexo2","_content":"\n修改站点标题、关键字信息。\n\n修改配置文件以修改站点信息，使用next主题美化站点，配置next主题，修改主题样式，添加站点logo，代码高亮显示。\n\n<!-- more -->\n\n\n\n#### 1 修改站点标题、关键字信息\n\n修改根目录下的`_config.yml`文件，找到Site区域。\n\n```yaml\n# Site\ntitle: zhenruyi #站点标题，标签上的\nsubtitle: 我们都在忍受着漫长 #副标题\ndescription: 学习，工作，生活。 #描述\nkeywords: thinking #关键词\nauthor: luyizheng\nlanguage: en\ntimezone: Asia/Shanghai\n```\n\n---\n\n#### 2 修改主题\n\n目前 Hexo 应用最多的主题是 Next 主题，它支持的插件和功能也极为丰富，配置了这个主题，博客可以支持更多的扩展功能。\n\n##### 2.1 下载主题\n\n```bash\ncd blog\ngit clone https://github.com/theme-next/hexo-theme-next themes/next\n```\n\n##### 2.2 修改主题\n\n修改项目根目录下的 `_config.yml `文件，找到 theme 字段。\n\n```bash\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: next\n```\n\n---\n\n#### 3 修改主题样式\n\n修改 `themes/next/_config.yml `文件，找到scheme字段。\n\nMuse：经典；Mist：Muse的紧凑版；Pisces：双列；Gemini：Prisces的紧凑版。\n\n```yaml\n# ---------------------------------------------------------------\n# Scheme Settings\n# ---------------------------------------------------------------\n\n# Schemes\n#scheme: Muse\n#scheme: Mist\n#scheme: Pisces\nscheme: Gemini\n\n# Dark Mode\ndarkmode: false\n```\n\n---\n\n#### 4 favicon\n\nfavicon 就是站点标签栏的小图标，默认是用的 Hexo 的小图标，如果我们有站点 Logo 的图片的话，我们可以自己定制小图标。\n\n##### 4.1 获取图标\n\n[https://realfavicongenerator.net](https://realfavicongenerator.net/)\n\n##### 4.2 更换图标\n\n图标下载下来之后把它放在 themes/next/source/images 目录下面。\n\n然后在配置文件里面找到 favicon 配置项。\n\n```yaml\nfavicon:\n  small: /images/favicon/favicon-16x16.png\n  medium: /images/favicon/favicon-32x32.png\n  apple_touch_icon: /images/favicon/apple-touch-icon.png\n  safari_pinned_tab: /images/favicon/safari-pinned-tab.svg\n  #android_manifest: /images/manifest.json\n  #ms_browserconfig: /images/browserconfig.xml\n```\n\n---\n\n#### 5 avatar\n\n作者的头像。找到avatar配置项。\n\n```yaml\n# Sidebar Avatar\navatar:\n  # Replace the default image and set the url here.\n  url: #/images/avatar.jpg\n  # If true, the avatar will be dispalyed in circle.\n  rounded: true\n  # If true, the avatar will be rotated with the cursor.\n  rotated: true\n```\n\n---\n\n##### 6 rss\n\n博客一般是需要 RSS 订阅的，如果要开启 RSS 订阅，这里需要安装一个插件，叫做 hexo-generator-feed，安装完成之后，站点会自动生成 RSS Feed 文件，安装命令如下：\n\n```bash\nnpm install hexo-generator-feed --save\n```\n\n在项目根目录下运行这个命令，安装完成之后不需要其他的配置，以后每次编译生成站点的时候就会自动生成 RSS Feed 文件了。\n\n---\n\n##### 7 code block\n\n```yaml\ncodeblock:\n  # Code Highlight theme\n  # Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic\n  # See: https://github.com/chriskempson/tomorrow-theme\n  highlight_theme: galactic\n  # Add copy button on codeblock\n  copy_button:\n    enable: true\n    # Show text copy result.\n    show_result: true\n    # Available values: default | flat | mac\n    style: mac\n```\n\n---\n\n##### 8 back to top\n\n```yaml\nback2top:\n  enable: true\n  # Back to top in sidebar.\n  sidebar: false\n  # Scroll percent label in b2t button.\n  scrollpercent: true\n```\n\n","source":"_posts/tech-hexo02ConfigHexo.md","raw":"---\ntitle: 配置博客信息\ndate: 2022-03-26 12:31:42\nid: hexo2\ncategories:\n- tech\ntags:\n- hexo\n---\n\n修改站点标题、关键字信息。\n\n修改配置文件以修改站点信息，使用next主题美化站点，配置next主题，修改主题样式，添加站点logo，代码高亮显示。\n\n<!-- more -->\n\n\n\n#### 1 修改站点标题、关键字信息\n\n修改根目录下的`_config.yml`文件，找到Site区域。\n\n```yaml\n# Site\ntitle: zhenruyi #站点标题，标签上的\nsubtitle: 我们都在忍受着漫长 #副标题\ndescription: 学习，工作，生活。 #描述\nkeywords: thinking #关键词\nauthor: luyizheng\nlanguage: en\ntimezone: Asia/Shanghai\n```\n\n---\n\n#### 2 修改主题\n\n目前 Hexo 应用最多的主题是 Next 主题，它支持的插件和功能也极为丰富，配置了这个主题，博客可以支持更多的扩展功能。\n\n##### 2.1 下载主题\n\n```bash\ncd blog\ngit clone https://github.com/theme-next/hexo-theme-next themes/next\n```\n\n##### 2.2 修改主题\n\n修改项目根目录下的 `_config.yml `文件，找到 theme 字段。\n\n```bash\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: next\n```\n\n---\n\n#### 3 修改主题样式\n\n修改 `themes/next/_config.yml `文件，找到scheme字段。\n\nMuse：经典；Mist：Muse的紧凑版；Pisces：双列；Gemini：Prisces的紧凑版。\n\n```yaml\n# ---------------------------------------------------------------\n# Scheme Settings\n# ---------------------------------------------------------------\n\n# Schemes\n#scheme: Muse\n#scheme: Mist\n#scheme: Pisces\nscheme: Gemini\n\n# Dark Mode\ndarkmode: false\n```\n\n---\n\n#### 4 favicon\n\nfavicon 就是站点标签栏的小图标，默认是用的 Hexo 的小图标，如果我们有站点 Logo 的图片的话，我们可以自己定制小图标。\n\n##### 4.1 获取图标\n\n[https://realfavicongenerator.net](https://realfavicongenerator.net/)\n\n##### 4.2 更换图标\n\n图标下载下来之后把它放在 themes/next/source/images 目录下面。\n\n然后在配置文件里面找到 favicon 配置项。\n\n```yaml\nfavicon:\n  small: /images/favicon/favicon-16x16.png\n  medium: /images/favicon/favicon-32x32.png\n  apple_touch_icon: /images/favicon/apple-touch-icon.png\n  safari_pinned_tab: /images/favicon/safari-pinned-tab.svg\n  #android_manifest: /images/manifest.json\n  #ms_browserconfig: /images/browserconfig.xml\n```\n\n---\n\n#### 5 avatar\n\n作者的头像。找到avatar配置项。\n\n```yaml\n# Sidebar Avatar\navatar:\n  # Replace the default image and set the url here.\n  url: #/images/avatar.jpg\n  # If true, the avatar will be dispalyed in circle.\n  rounded: true\n  # If true, the avatar will be rotated with the cursor.\n  rotated: true\n```\n\n---\n\n##### 6 rss\n\n博客一般是需要 RSS 订阅的，如果要开启 RSS 订阅，这里需要安装一个插件，叫做 hexo-generator-feed，安装完成之后，站点会自动生成 RSS Feed 文件，安装命令如下：\n\n```bash\nnpm install hexo-generator-feed --save\n```\n\n在项目根目录下运行这个命令，安装完成之后不需要其他的配置，以后每次编译生成站点的时候就会自动生成 RSS Feed 文件了。\n\n---\n\n##### 7 code block\n\n```yaml\ncodeblock:\n  # Code Highlight theme\n  # Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic\n  # See: https://github.com/chriskempson/tomorrow-theme\n  highlight_theme: galactic\n  # Add copy button on codeblock\n  copy_button:\n    enable: true\n    # Show text copy result.\n    show_result: true\n    # Available values: default | flat | mac\n    style: mac\n```\n\n---\n\n##### 8 back to top\n\n```yaml\nback2top:\n  enable: true\n  # Back to top in sidebar.\n  sidebar: false\n  # Scroll percent label in b2t button.\n  scrollpercent: true\n```\n\n","slug":"tech-hexo02ConfigHexo","published":1,"updated":"2022-04-16T23:10:54.865Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70ue003h5oss3iv31te7","content":"<p>修改站点标题、关键字信息。</p>\n<p>修改配置文件以修改站点信息，使用next主题美化站点，配置next主题，修改主题样式，添加站点logo，代码高亮显示。</p>\n<span id=\"more\"></span>\n\n\n\n<h4 id=\"1-修改站点标题、关键字信息\"><a href=\"#1-修改站点标题、关键字信息\" class=\"headerlink\" title=\"1 修改站点标题、关键字信息\"></a>1 修改站点标题、关键字信息</h4><p>修改根目录下的<code>_config.yml</code>文件，找到Site区域。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Site</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">zhenruyi</span> <span class=\"comment\">#站点标题，标签上的</span></span><br><span class=\"line\"><span class=\"attr\">subtitle:</span> <span class=\"string\">我们都在忍受着漫长</span> <span class=\"comment\">#副标题</span></span><br><span class=\"line\"><span class=\"attr\">description:</span> <span class=\"string\">学习，工作，生活。</span> <span class=\"comment\">#描述</span></span><br><span class=\"line\"><span class=\"attr\">keywords:</span> <span class=\"string\">thinking</span> <span class=\"comment\">#关键词</span></span><br><span class=\"line\"><span class=\"attr\">author:</span> <span class=\"string\">luyizheng</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">en</span></span><br><span class=\"line\"><span class=\"attr\">timezone:</span> <span class=\"string\">Asia/Shanghai</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"2-修改主题\"><a href=\"#2-修改主题\" class=\"headerlink\" title=\"2 修改主题\"></a>2 修改主题</h4><p>目前 Hexo 应用最多的主题是 Next 主题，它支持的插件和功能也极为丰富，配置了这个主题，博客可以支持更多的扩展功能。</p>\n<h5 id=\"2-1-下载主题\"><a href=\"#2-1-下载主题\" class=\"headerlink\" title=\"2.1 下载主题\"></a>2.1 下载主题</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> blog</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-修改主题\"><a href=\"#2-2-修改主题\" class=\"headerlink\" title=\"2.2 修改主题\"></a>2.2 修改主题</h5><p>修改项目根目录下的 <code>_config.yml </code>文件，找到 theme 字段。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Extensions</span></span><br><span class=\"line\"><span class=\"comment\">## Plugins: https://hexo.io/plugins/</span></span><br><span class=\"line\"><span class=\"comment\">## Themes: https://hexo.io/themes/</span></span><br><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"3-修改主题样式\"><a href=\"#3-修改主题样式\" class=\"headerlink\" title=\"3 修改主题样式\"></a>3 修改主题样式</h4><p>修改 <code>themes/next/_config.yml </code>文件，找到scheme字段。</p>\n<p>Muse：经典；Mist：Muse的紧凑版；Pisces：双列；Gemini：Prisces的紧凑版。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Scheme Settings</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Schemes</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Muse</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Mist</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Pisces</span></span><br><span class=\"line\"><span class=\"attr\">scheme:</span> <span class=\"string\">Gemini</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Dark Mode</span></span><br><span class=\"line\"><span class=\"attr\">darkmode:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"4-favicon\"><a href=\"#4-favicon\" class=\"headerlink\" title=\"4 favicon\"></a>4 favicon</h4><p>favicon 就是站点标签栏的小图标，默认是用的 Hexo 的小图标，如果我们有站点 Logo 的图片的话，我们可以自己定制小图标。</p>\n<h5 id=\"4-1-获取图标\"><a href=\"#4-1-获取图标\" class=\"headerlink\" title=\"4.1 获取图标\"></a>4.1 获取图标</h5><p><a href=\"https://realfavicongenerator.net/\">https://realfavicongenerator.net</a></p>\n<h5 id=\"4-2-更换图标\"><a href=\"#4-2-更换图标\" class=\"headerlink\" title=\"4.2 更换图标\"></a>4.2 更换图标</h5><p>图标下载下来之后把它放在 themes/next/source/images 目录下面。</p>\n<p>然后在配置文件里面找到 favicon 配置项。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">favicon:</span></span><br><span class=\"line\">  <span class=\"attr\">small:</span> <span class=\"string\">/images/favicon/favicon-16x16.png</span></span><br><span class=\"line\">  <span class=\"attr\">medium:</span> <span class=\"string\">/images/favicon/favicon-32x32.png</span></span><br><span class=\"line\">  <span class=\"attr\">apple_touch_icon:</span> <span class=\"string\">/images/favicon/apple-touch-icon.png</span></span><br><span class=\"line\">  <span class=\"attr\">safari_pinned_tab:</span> <span class=\"string\">/images/favicon/safari-pinned-tab.svg</span></span><br><span class=\"line\">  <span class=\"comment\">#android_manifest: /images/manifest.json</span></span><br><span class=\"line\">  <span class=\"comment\">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"5-avatar\"><a href=\"#5-avatar\" class=\"headerlink\" title=\"5 avatar\"></a>5 avatar</h4><p>作者的头像。找到avatar配置项。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Sidebar Avatar</span></span><br><span class=\"line\"><span class=\"attr\">avatar:</span></span><br><span class=\"line\">  <span class=\"comment\"># Replace the default image and set the url here.</span></span><br><span class=\"line\">  <span class=\"attr\">url:</span> <span class=\"comment\">#/images/avatar.jpg</span></span><br><span class=\"line\">  <span class=\"comment\"># If true, the avatar will be dispalyed in circle.</span></span><br><span class=\"line\">  <span class=\"attr\">rounded:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># If true, the avatar will be rotated with the cursor.</span></span><br><span class=\"line\">  <span class=\"attr\">rotated:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h5 id=\"6-rss\"><a href=\"#6-rss\" class=\"headerlink\" title=\"6 rss\"></a>6 rss</h5><p>博客一般是需要 RSS 订阅的，如果要开启 RSS 订阅，这里需要安装一个插件，叫做 hexo-generator-feed，安装完成之后，站点会自动生成 RSS Feed 文件，安装命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n\n<p>在项目根目录下运行这个命令，安装完成之后不需要其他的配置，以后每次编译生成站点的时候就会自动生成 RSS Feed 文件了。</p>\n<hr>\n<h5 id=\"7-code-block\"><a href=\"#7-code-block\" class=\"headerlink\" title=\"7 code block\"></a>7 code block</h5><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">codeblock:</span></span><br><span class=\"line\">  <span class=\"comment\"># Code Highlight theme</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span><br><span class=\"line\">  <span class=\"comment\"># See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class=\"line\">  <span class=\"attr\">highlight_theme:</span> <span class=\"string\">galactic</span></span><br><span class=\"line\">  <span class=\"comment\"># Add copy button on codeblock</span></span><br><span class=\"line\">  <span class=\"attr\">copy_button:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"comment\"># Show text copy result.</span></span><br><span class=\"line\">    <span class=\"attr\">show_result:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"comment\"># Available values: default | flat | mac</span></span><br><span class=\"line\">    <span class=\"attr\">style:</span> <span class=\"string\">mac</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h5 id=\"8-back-to-top\"><a href=\"#8-back-to-top\" class=\"headerlink\" title=\"8 back to top\"></a>8 back to top</h5><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">back2top:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Back to top in sidebar.</span></span><br><span class=\"line\">  <span class=\"attr\">sidebar:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Scroll percent label in b2t button.</span></span><br><span class=\"line\">  <span class=\"attr\">scrollpercent:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>修改站点标题、关键字信息。</p>\n<p>修改配置文件以修改站点信息，使用next主题美化站点，配置next主题，修改主题样式，添加站点logo，代码高亮显示。</p>","more":"<h4 id=\"1-修改站点标题、关键字信息\"><a href=\"#1-修改站点标题、关键字信息\" class=\"headerlink\" title=\"1 修改站点标题、关键字信息\"></a>1 修改站点标题、关键字信息</h4><p>修改根目录下的<code>_config.yml</code>文件，找到Site区域。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Site</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">zhenruyi</span> <span class=\"comment\">#站点标题，标签上的</span></span><br><span class=\"line\"><span class=\"attr\">subtitle:</span> <span class=\"string\">我们都在忍受着漫长</span> <span class=\"comment\">#副标题</span></span><br><span class=\"line\"><span class=\"attr\">description:</span> <span class=\"string\">学习，工作，生活。</span> <span class=\"comment\">#描述</span></span><br><span class=\"line\"><span class=\"attr\">keywords:</span> <span class=\"string\">thinking</span> <span class=\"comment\">#关键词</span></span><br><span class=\"line\"><span class=\"attr\">author:</span> <span class=\"string\">luyizheng</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">en</span></span><br><span class=\"line\"><span class=\"attr\">timezone:</span> <span class=\"string\">Asia/Shanghai</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"2-修改主题\"><a href=\"#2-修改主题\" class=\"headerlink\" title=\"2 修改主题\"></a>2 修改主题</h4><p>目前 Hexo 应用最多的主题是 Next 主题，它支持的插件和功能也极为丰富，配置了这个主题，博客可以支持更多的扩展功能。</p>\n<h5 id=\"2-1-下载主题\"><a href=\"#2-1-下载主题\" class=\"headerlink\" title=\"2.1 下载主题\"></a>2.1 下载主题</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> blog</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-2-修改主题\"><a href=\"#2-2-修改主题\" class=\"headerlink\" title=\"2.2 修改主题\"></a>2.2 修改主题</h5><p>修改项目根目录下的 <code>_config.yml </code>文件，找到 theme 字段。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Extensions</span></span><br><span class=\"line\"><span class=\"comment\">## Plugins: https://hexo.io/plugins/</span></span><br><span class=\"line\"><span class=\"comment\">## Themes: https://hexo.io/themes/</span></span><br><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"3-修改主题样式\"><a href=\"#3-修改主题样式\" class=\"headerlink\" title=\"3 修改主题样式\"></a>3 修改主题样式</h4><p>修改 <code>themes/next/_config.yml </code>文件，找到scheme字段。</p>\n<p>Muse：经典；Mist：Muse的紧凑版；Pisces：双列；Gemini：Prisces的紧凑版。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Scheme Settings</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Schemes</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Muse</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Mist</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Pisces</span></span><br><span class=\"line\"><span class=\"attr\">scheme:</span> <span class=\"string\">Gemini</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Dark Mode</span></span><br><span class=\"line\"><span class=\"attr\">darkmode:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"4-favicon\"><a href=\"#4-favicon\" class=\"headerlink\" title=\"4 favicon\"></a>4 favicon</h4><p>favicon 就是站点标签栏的小图标，默认是用的 Hexo 的小图标，如果我们有站点 Logo 的图片的话，我们可以自己定制小图标。</p>\n<h5 id=\"4-1-获取图标\"><a href=\"#4-1-获取图标\" class=\"headerlink\" title=\"4.1 获取图标\"></a>4.1 获取图标</h5><p><a href=\"https://realfavicongenerator.net/\">https://realfavicongenerator.net</a></p>\n<h5 id=\"4-2-更换图标\"><a href=\"#4-2-更换图标\" class=\"headerlink\" title=\"4.2 更换图标\"></a>4.2 更换图标</h5><p>图标下载下来之后把它放在 themes/next/source/images 目录下面。</p>\n<p>然后在配置文件里面找到 favicon 配置项。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">favicon:</span></span><br><span class=\"line\">  <span class=\"attr\">small:</span> <span class=\"string\">/images/favicon/favicon-16x16.png</span></span><br><span class=\"line\">  <span class=\"attr\">medium:</span> <span class=\"string\">/images/favicon/favicon-32x32.png</span></span><br><span class=\"line\">  <span class=\"attr\">apple_touch_icon:</span> <span class=\"string\">/images/favicon/apple-touch-icon.png</span></span><br><span class=\"line\">  <span class=\"attr\">safari_pinned_tab:</span> <span class=\"string\">/images/favicon/safari-pinned-tab.svg</span></span><br><span class=\"line\">  <span class=\"comment\">#android_manifest: /images/manifest.json</span></span><br><span class=\"line\">  <span class=\"comment\">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"5-avatar\"><a href=\"#5-avatar\" class=\"headerlink\" title=\"5 avatar\"></a>5 avatar</h4><p>作者的头像。找到avatar配置项。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Sidebar Avatar</span></span><br><span class=\"line\"><span class=\"attr\">avatar:</span></span><br><span class=\"line\">  <span class=\"comment\"># Replace the default image and set the url here.</span></span><br><span class=\"line\">  <span class=\"attr\">url:</span> <span class=\"comment\">#/images/avatar.jpg</span></span><br><span class=\"line\">  <span class=\"comment\"># If true, the avatar will be dispalyed in circle.</span></span><br><span class=\"line\">  <span class=\"attr\">rounded:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># If true, the avatar will be rotated with the cursor.</span></span><br><span class=\"line\">  <span class=\"attr\">rotated:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h5 id=\"6-rss\"><a href=\"#6-rss\" class=\"headerlink\" title=\"6 rss\"></a>6 rss</h5><p>博客一般是需要 RSS 订阅的，如果要开启 RSS 订阅，这里需要安装一个插件，叫做 hexo-generator-feed，安装完成之后，站点会自动生成 RSS Feed 文件，安装命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n\n<p>在项目根目录下运行这个命令，安装完成之后不需要其他的配置，以后每次编译生成站点的时候就会自动生成 RSS Feed 文件了。</p>\n<hr>\n<h5 id=\"7-code-block\"><a href=\"#7-code-block\" class=\"headerlink\" title=\"7 code block\"></a>7 code block</h5><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">codeblock:</span></span><br><span class=\"line\">  <span class=\"comment\"># Code Highlight theme</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span><br><span class=\"line\">  <span class=\"comment\"># See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class=\"line\">  <span class=\"attr\">highlight_theme:</span> <span class=\"string\">galactic</span></span><br><span class=\"line\">  <span class=\"comment\"># Add copy button on codeblock</span></span><br><span class=\"line\">  <span class=\"attr\">copy_button:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"comment\"># Show text copy result.</span></span><br><span class=\"line\">    <span class=\"attr\">show_result:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"comment\"># Available values: default | flat | mac</span></span><br><span class=\"line\">    <span class=\"attr\">style:</span> <span class=\"string\">mac</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h5 id=\"8-back-to-top\"><a href=\"#8-back-to-top\" class=\"headerlink\" title=\"8 back to top\"></a>8 back to top</h5><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">back2top:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Back to top in sidebar.</span></span><br><span class=\"line\">  <span class=\"attr\">sidebar:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Scroll percent label in b2t button.</span></span><br><span class=\"line\">  <span class=\"attr\">scrollpercent:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>"},{"title":"Hexo一些资料的备份","date":"2022-04-05T08:32:11.000Z","id":"hexo3","_content":"\n\n\nHexo一些资料的备份。\n\n\n\n<!-- more -->\n\n\n\n##### next主题添加顶置功能\n\n[hexo-next 添加文章置顶功能和评分功能等 | YouForever (zhyong.cn)](https://www.zhyong.cn/posts/fc22/)\n\n\n\n##### Next主题配置\n\n[(12条消息) Hexo及Next主题配置（最新版）_SantaJiang的博客-CSDN博客_hexo next主题](https://blog.csdn.net/jsd581/article/details/119821267)\n\n\n\n##### Hexo插入图片\n\n[Hexo博客插入图片的方法 - SChen1024 - 博客园 (cnblogs.com)](https://www.cnblogs.com/hugochen1024/p/12570656.html)\n\n```\n在resource建立一个images文件夹，图片对应的链接是：\nhttps://zhenruyi.github.io/images/image_name\n```\n\n\n\n##### hexo分类与标签\n\n[(12条消息) Hexo新建标签、分类、归档等页面_秦时明月之君临天下的博客-CSDN博客_hexo新建页面](https://blog.csdn.net/weixin_41287260/article/details/97758641)\n\n\n\n##### PDF预览\n\n[(12条消息) 使用 Github 空间搭建 Hexo 技术博客——Hexo NexT主题内添加pdf 插件（十一）_WuGenQiang的博客-CSDN博客](https://blog.csdn.net/wugenqiang/article/details/88377669)\n\n```\n记得在主题的配置文件中设置打开pdf\nsource目录下新建一个files文件夹\n在文档中输入{% pdf url %}\nurl: https://zhenruyi.github.io/files/file_name\n```\n\n","source":"_posts/tech-hexo03Collection1.md","raw":"---\ntitle: Hexo一些资料的备份\ndate: 2022-04-05 16:32:11\nid: hexo3\ncategories: \n- tech\ntags:\n- hexo\n---\n\n\n\nHexo一些资料的备份。\n\n\n\n<!-- more -->\n\n\n\n##### next主题添加顶置功能\n\n[hexo-next 添加文章置顶功能和评分功能等 | YouForever (zhyong.cn)](https://www.zhyong.cn/posts/fc22/)\n\n\n\n##### Next主题配置\n\n[(12条消息) Hexo及Next主题配置（最新版）_SantaJiang的博客-CSDN博客_hexo next主题](https://blog.csdn.net/jsd581/article/details/119821267)\n\n\n\n##### Hexo插入图片\n\n[Hexo博客插入图片的方法 - SChen1024 - 博客园 (cnblogs.com)](https://www.cnblogs.com/hugochen1024/p/12570656.html)\n\n```\n在resource建立一个images文件夹，图片对应的链接是：\nhttps://zhenruyi.github.io/images/image_name\n```\n\n\n\n##### hexo分类与标签\n\n[(12条消息) Hexo新建标签、分类、归档等页面_秦时明月之君临天下的博客-CSDN博客_hexo新建页面](https://blog.csdn.net/weixin_41287260/article/details/97758641)\n\n\n\n##### PDF预览\n\n[(12条消息) 使用 Github 空间搭建 Hexo 技术博客——Hexo NexT主题内添加pdf 插件（十一）_WuGenQiang的博客-CSDN博客](https://blog.csdn.net/wugenqiang/article/details/88377669)\n\n```\n记得在主题的配置文件中设置打开pdf\nsource目录下新建一个files文件夹\n在文档中输入{% pdf url %}\nurl: https://zhenruyi.github.io/files/file_name\n```\n\n","slug":"tech-hexo03Collection1","published":1,"updated":"2022-04-16T23:11:06.016Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70uf003m5ossf47v8rjw","content":"<p>Hexo一些资料的备份。</p>\n<span id=\"more\"></span>\n\n\n\n<h5 id=\"next主题添加顶置功能\"><a href=\"#next主题添加顶置功能\" class=\"headerlink\" title=\"next主题添加顶置功能\"></a>next主题添加顶置功能</h5><p><a href=\"https://www.zhyong.cn/posts/fc22/\">hexo-next 添加文章置顶功能和评分功能等 | YouForever (zhyong.cn)</a></p>\n<h5 id=\"Next主题配置\"><a href=\"#Next主题配置\" class=\"headerlink\" title=\"Next主题配置\"></a>Next主题配置</h5><p><a href=\"https://blog.csdn.net/jsd581/article/details/119821267\">(12条消息) Hexo及Next主题配置（最新版）_SantaJiang的博客-CSDN博客_hexo next主题</a></p>\n<h5 id=\"Hexo插入图片\"><a href=\"#Hexo插入图片\" class=\"headerlink\" title=\"Hexo插入图片\"></a>Hexo插入图片</h5><p><a href=\"https://www.cnblogs.com/hugochen1024/p/12570656.html\">Hexo博客插入图片的方法 - SChen1024 - 博客园 (cnblogs.com)</a></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在resource建立一个images文件夹，图片对应的链接是：</span><br><span class=\"line\">https:<span class=\"regexp\">//</span>zhenruyi.github.io<span class=\"regexp\">/images/im</span>age_name</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"hexo分类与标签\"><a href=\"#hexo分类与标签\" class=\"headerlink\" title=\"hexo分类与标签\"></a>hexo分类与标签</h5><p><a href=\"https://blog.csdn.net/weixin_41287260/article/details/97758641\">(12条消息) Hexo新建标签、分类、归档等页面_秦时明月之君临天下的博客-CSDN博客_hexo新建页面</a></p>\n<h5 id=\"PDF预览\"><a href=\"#PDF预览\" class=\"headerlink\" title=\"PDF预览\"></a>PDF预览</h5><p><a href=\"https://blog.csdn.net/wugenqiang/article/details/88377669\">(12条消息) 使用 Github 空间搭建 Hexo 技术博客——Hexo NexT主题内添加pdf 插件（十一）_WuGenQiang的博客-CSDN博客</a></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">记得在主题的配置文件中设置打开pdf</span><br><span class=\"line\">source目录下新建一个files文件夹</span><br><span class=\"line\">在文档中输入&#123;% pdf url %&#125;</span><br><span class=\"line\">url: https:<span class=\"regexp\">//</span>zhenruyi.github.io<span class=\"regexp\">/files/</span>file_name</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>Hexo一些资料的备份。</p>","more":"<h5 id=\"next主题添加顶置功能\"><a href=\"#next主题添加顶置功能\" class=\"headerlink\" title=\"next主题添加顶置功能\"></a>next主题添加顶置功能</h5><p><a href=\"https://www.zhyong.cn/posts/fc22/\">hexo-next 添加文章置顶功能和评分功能等 | YouForever (zhyong.cn)</a></p>\n<h5 id=\"Next主题配置\"><a href=\"#Next主题配置\" class=\"headerlink\" title=\"Next主题配置\"></a>Next主题配置</h5><p><a href=\"https://blog.csdn.net/jsd581/article/details/119821267\">(12条消息) Hexo及Next主题配置（最新版）_SantaJiang的博客-CSDN博客_hexo next主题</a></p>\n<h5 id=\"Hexo插入图片\"><a href=\"#Hexo插入图片\" class=\"headerlink\" title=\"Hexo插入图片\"></a>Hexo插入图片</h5><p><a href=\"https://www.cnblogs.com/hugochen1024/p/12570656.html\">Hexo博客插入图片的方法 - SChen1024 - 博客园 (cnblogs.com)</a></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在resource建立一个images文件夹，图片对应的链接是：</span><br><span class=\"line\">https:<span class=\"regexp\">//</span>zhenruyi.github.io<span class=\"regexp\">/images/im</span>age_name</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"hexo分类与标签\"><a href=\"#hexo分类与标签\" class=\"headerlink\" title=\"hexo分类与标签\"></a>hexo分类与标签</h5><p><a href=\"https://blog.csdn.net/weixin_41287260/article/details/97758641\">(12条消息) Hexo新建标签、分类、归档等页面_秦时明月之君临天下的博客-CSDN博客_hexo新建页面</a></p>\n<h5 id=\"PDF预览\"><a href=\"#PDF预览\" class=\"headerlink\" title=\"PDF预览\"></a>PDF预览</h5><p><a href=\"https://blog.csdn.net/wugenqiang/article/details/88377669\">(12条消息) 使用 Github 空间搭建 Hexo 技术博客——Hexo NexT主题内添加pdf 插件（十一）_WuGenQiang的博客-CSDN博客</a></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">记得在主题的配置文件中设置打开pdf</span><br><span class=\"line\">source目录下新建一个files文件夹</span><br><span class=\"line\">在文档中输入&#123;% pdf url %&#125;</span><br><span class=\"line\">url: https:<span class=\"regexp\">//</span>zhenruyi.github.io<span class=\"regexp\">/files/</span>file_name</span><br></pre></td></tr></table></figure>"},{"title":"目录","top":true,"date":"2019-08-31T22:07:08.000Z","id":"useless0","_content":"\n\n\n<center><a href=\"https://zhenruyi.github.io/categories/algo/\">😊数据结构和算法:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/learn/\">1️⃣学习</a> &nbsp \n<a href=\"https://zhenruyi.github.io/tags/exec/\">2️⃣刷题</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/lang/\">😊编程语言:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/go/\">1️⃣Golang</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/cpp/\">2️⃣C++</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/py/\">3️⃣Python</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/asm/\">4️⃣Assembly</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/db/\">😊数据库:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/mysql/\">1️⃣MySQL</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/redis/\">2️⃣Redis</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/linux/\">😊Linux:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/webServer/\">1️⃣WebServer</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/sci/\">😊计算机科学:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/net/\">1️⃣计算机网络</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/sec/\">2️⃣计算机安全</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/tech/\">😊计算机技术:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/git/\">1️⃣Git&Github</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/hexo/\">2️⃣Hexo</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/other/\">😊其他:</a>&nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/intro/\">1️⃣技术介绍</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/useless/\">2️⃣无意义的文档</a>\n</center>\n","source":"_posts/other-useless00Catalog.md","raw":"---\ntitle: 目录\ntop: true\ndate: 2019-09-01 06:07:08\nid: useless0\ncategories:\n- other\ntags:\n- useless\n---\n\n\n\n<center><a href=\"https://zhenruyi.github.io/categories/algo/\">😊数据结构和算法:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/learn/\">1️⃣学习</a> &nbsp \n<a href=\"https://zhenruyi.github.io/tags/exec/\">2️⃣刷题</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/lang/\">😊编程语言:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/go/\">1️⃣Golang</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/cpp/\">2️⃣C++</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/py/\">3️⃣Python</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/asm/\">4️⃣Assembly</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/db/\">😊数据库:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/mysql/\">1️⃣MySQL</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/redis/\">2️⃣Redis</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/linux/\">😊Linux:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/webServer/\">1️⃣WebServer</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/sci/\">😊计算机科学:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/net/\">1️⃣计算机网络</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/sec/\">2️⃣计算机安全</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/tech/\">😊计算机技术:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/git/\">1️⃣Git&Github</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/hexo/\">2️⃣Hexo</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/other/\">😊其他:</a>&nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/intro/\">1️⃣技术介绍</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/useless/\">2️⃣无意义的文档</a>\n</center>\n","slug":"other-useless00Catalog","published":1,"updated":"2022-04-16T23:09:25.451Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22h70uh003p5oss2b6ca6di","content":"<center><a href=\"https://zhenruyi.github.io/categories/algo/\">😊数据结构和算法:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/learn/\">1️⃣学习</a> &nbsp \n<a href=\"https://zhenruyi.github.io/tags/exec/\">2️⃣刷题</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/lang/\">😊编程语言:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/go/\">1️⃣Golang</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/cpp/\">2️⃣C++</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/py/\">3️⃣Python</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/asm/\">4️⃣Assembly</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/db/\">😊数据库:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/mysql/\">1️⃣MySQL</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/redis/\">2️⃣Redis</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/linux/\">😊Linux:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/webServer/\">1️⃣WebServer</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/sci/\">😊计算机科学:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/net/\">1️⃣计算机网络</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/sec/\">2️⃣计算机安全</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/tech/\">😊计算机技术:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/git/\">1️⃣Git&Github</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/hexo/\">2️⃣Hexo</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/other/\">😊其他:</a>&nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/intro/\">1️⃣技术介绍</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/useless/\">2️⃣无意义的文档</a>\n</center>\n","site":{"data":{}},"excerpt":"","more":"<center><a href=\"https://zhenruyi.github.io/categories/algo/\">😊数据结构和算法:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/learn/\">1️⃣学习</a> &nbsp \n<a href=\"https://zhenruyi.github.io/tags/exec/\">2️⃣刷题</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/lang/\">😊编程语言:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/go/\">1️⃣Golang</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/cpp/\">2️⃣C++</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/py/\">3️⃣Python</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/asm/\">4️⃣Assembly</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/db/\">😊数据库:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/mysql/\">1️⃣MySQL</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/redis/\">2️⃣Redis</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/linux/\">😊Linux:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/webServer/\">1️⃣WebServer</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/sci/\">😊计算机科学:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/net/\">1️⃣计算机网络</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/sec/\">2️⃣计算机安全</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/tech/\">😊计算机技术:</a> &nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/git/\">1️⃣Git&Github</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/hexo/\">2️⃣Hexo</a>\n</center>\n\n<center><a href=\"https://zhenruyi.github.io/categories/other/\">😊其他:</a>&nbsp &nbsp\n<a href=\"https://zhenruyi.github.io/tags/intro/\">1️⃣技术介绍</a> &nbsp\n<a href=\"https://zhenruyi.github.io/tags/useless/\">2️⃣无意义的文档</a>\n</center>\n"},{"title":"Linux高并发服务器开发：框架","date":"2022-04-16T23:15:35.000Z","id":"webServer0","_content":"\n\n\nLinux高并发服务器开发项目的框架。\n\n\n\n<!-- more -->\n\n\n\n---\n\n\n\n\n\n#### 介绍\n\n- 重要性：Linux系统编程和网络编程是C++开发岗位面试必问的。\n- 系统学习规划路线：\n  - Linux系统编程入门；\n  - 多进程、多线程开发；\n  - Linux网络编程；\n  - 项目真实搭建与实现。\n- 项目：Linux下C++开发的轻量级、高性能和高并发的web服务器。\n- 技术架构：\n  - 线程池 + 非阻塞socket + epoll + 事件处理的并发模型；\n  - 状态机解析HTTP请求；\n  - 同步/异步日志系统。\n- 项目的开发工具和环境：Ubuntu18 + VS Code + gcc\n\n\n\n---\n\n\n\n#### 学习笔记\n\n[1 …… Linux系统编程入门](https://zhenruyi.github.io/linux/webServer1/)\n\n[2 …… Linux多进程开发](https://zhenruyi.github.io/linux/webServer2/)\n\n[3 …… Linux多线程开发](https://zhenruyi.github.io/linux/webServer3/)\n\n[4 …… Linux网络编程](https://zhenruyi.github.io/linux/webServer4/)\n\n[5 …… 项目实战与总结](https://zhenruyi.github.io/linux/webServer5/)\n\n","source":"_posts/linux-webServer00Framework.md","raw":"---\ntitle: Linux高并发服务器开发：框架\ndate: 2022-04-17 07:15:35\nid: webServer0\ncategories:\n- linux\ntags:\n- webServer\n---\n\n\n\nLinux高并发服务器开发项目的框架。\n\n\n\n<!-- more -->\n\n\n\n---\n\n\n\n\n\n#### 介绍\n\n- 重要性：Linux系统编程和网络编程是C++开发岗位面试必问的。\n- 系统学习规划路线：\n  - Linux系统编程入门；\n  - 多进程、多线程开发；\n  - Linux网络编程；\n  - 项目真实搭建与实现。\n- 项目：Linux下C++开发的轻量级、高性能和高并发的web服务器。\n- 技术架构：\n  - 线程池 + 非阻塞socket + epoll + 事件处理的并发模型；\n  - 状态机解析HTTP请求；\n  - 同步/异步日志系统。\n- 项目的开发工具和环境：Ubuntu18 + VS Code + gcc\n\n\n\n---\n\n\n\n#### 学习笔记\n\n[1 …… Linux系统编程入门](https://zhenruyi.github.io/linux/webServer1/)\n\n[2 …… Linux多进程开发](https://zhenruyi.github.io/linux/webServer2/)\n\n[3 …… Linux多线程开发](https://zhenruyi.github.io/linux/webServer3/)\n\n[4 …… Linux网络编程](https://zhenruyi.github.io/linux/webServer4/)\n\n[5 …… 项目实战与总结](https://zhenruyi.github.io/linux/webServer5/)\n\n","slug":"linux-webServer00Framework","published":1,"updated":"2022-04-16T23:40:30.676Z","_id":"cl22hj3960003n4ssfr7me0ly","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Linux高并发服务器开发项目的框架。</p>\n<span id=\"more\"></span>\n\n\n\n<hr>\n<h4 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h4><ul>\n<li>重要性：Linux系统编程和网络编程是C++开发岗位面试必问的。</li>\n<li>系统学习规划路线：<ul>\n<li>Linux系统编程入门；</li>\n<li>多进程、多线程开发；</li>\n<li>Linux网络编程；</li>\n<li>项目真实搭建与实现。</li>\n</ul>\n</li>\n<li>项目：Linux下C++开发的轻量级、高性能和高并发的web服务器。</li>\n<li>技术架构：<ul>\n<li>线程池 + 非阻塞socket + epoll + 事件处理的并发模型；</li>\n<li>状态机解析HTTP请求；</li>\n<li>同步/异步日志系统。</li>\n</ul>\n</li>\n<li>项目的开发工具和环境：Ubuntu18 + VS Code + gcc</li>\n</ul>\n<hr>\n<h4 id=\"学习笔记\"><a href=\"#学习笔记\" class=\"headerlink\" title=\"学习笔记\"></a>学习笔记</h4><p><a href=\"https://zhenruyi.github.io/linux/webServer1/\">1 …… Linux系统编程入门</a></p>\n<p><a href=\"https://zhenruyi.github.io/linux/webServer2/\">2 …… Linux多进程开发</a></p>\n<p><a href=\"https://zhenruyi.github.io/linux/webServer3/\">3 …… Linux多线程开发</a></p>\n<p><a href=\"https://zhenruyi.github.io/linux/webServer4/\">4 …… Linux网络编程</a></p>\n<p><a href=\"https://zhenruyi.github.io/linux/webServer5/\">5 …… 项目实战与总结</a></p>\n","site":{"data":{}},"excerpt":"<p>Linux高并发服务器开发项目的框架。</p>","more":"<hr>\n<h4 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h4><ul>\n<li>重要性：Linux系统编程和网络编程是C++开发岗位面试必问的。</li>\n<li>系统学习规划路线：<ul>\n<li>Linux系统编程入门；</li>\n<li>多进程、多线程开发；</li>\n<li>Linux网络编程；</li>\n<li>项目真实搭建与实现。</li>\n</ul>\n</li>\n<li>项目：Linux下C++开发的轻量级、高性能和高并发的web服务器。</li>\n<li>技术架构：<ul>\n<li>线程池 + 非阻塞socket + epoll + 事件处理的并发模型；</li>\n<li>状态机解析HTTP请求；</li>\n<li>同步/异步日志系统。</li>\n</ul>\n</li>\n<li>项目的开发工具和环境：Ubuntu18 + VS Code + gcc</li>\n</ul>\n<hr>\n<h4 id=\"学习笔记\"><a href=\"#学习笔记\" class=\"headerlink\" title=\"学习笔记\"></a>学习笔记</h4><p><a href=\"https://zhenruyi.github.io/linux/webServer1/\">1 …… Linux系统编程入门</a></p>\n<p><a href=\"https://zhenruyi.github.io/linux/webServer2/\">2 …… Linux多进程开发</a></p>\n<p><a href=\"https://zhenruyi.github.io/linux/webServer3/\">3 …… Linux多线程开发</a></p>\n<p><a href=\"https://zhenruyi.github.io/linux/webServer4/\">4 …… Linux网络编程</a></p>\n<p><a href=\"https://zhenruyi.github.io/linux/webServer5/\">5 …… 项目实战与总结</a></p>"},{"title":"Linux系统编程入门","date":"2022-04-16T23:41:39.000Z","id":"webServer1","_content":"\n\n\n内容有：Linux开发环境搭建、Gcc编译、静态库和动态库、Makefile、GDB调试、虚拟地址空间、文件描述符、open 函数、read 函数、write 函数、lseek 函数、stat 函数、目录操作函数、dup 函数、dup2 函数、fcntl函数。\n\n\n\n<!-- more -->\n\n\n\n---\n\n\n\n### 一、 Linux开发环境搭建\n\n### 二、 Gcc编译\n\n### 三、 静态库和动态库\n\n### 四、 Makefile\n\n### 五、 GDB调试\n\n### 六、 虚拟地址空间\n\n### 七、 文件描述符\n\n### 八、 open 函数\n\n### 九、 read 函数\n\n### 十、 write 函数\n\n### 十一、 lseek 函数\n\n### 十二、 stat 函数\n\n### 十三、 目录操作函数\n\n### 十四、 dup 函数\n\n### 十五、 fcntl函数\n","source":"_posts/linux-WebServer01LinuxProgStart.md","raw":"---\ntitle: Linux系统编程入门\ndate: 2022-04-17 07:41:39\nid: webServer1\ncategories:\n- linux\ntags:\n- webServer\n---\n\n\n\n内容有：Linux开发环境搭建、Gcc编译、静态库和动态库、Makefile、GDB调试、虚拟地址空间、文件描述符、open 函数、read 函数、write 函数、lseek 函数、stat 函数、目录操作函数、dup 函数、dup2 函数、fcntl函数。\n\n\n\n<!-- more -->\n\n\n\n---\n\n\n\n### 一、 Linux开发环境搭建\n\n### 二、 Gcc编译\n\n### 三、 静态库和动态库\n\n### 四、 Makefile\n\n### 五、 GDB调试\n\n### 六、 虚拟地址空间\n\n### 七、 文件描述符\n\n### 八、 open 函数\n\n### 九、 read 函数\n\n### 十、 write 函数\n\n### 十一、 lseek 函数\n\n### 十二、 stat 函数\n\n### 十三、 目录操作函数\n\n### 十四、 dup 函数\n\n### 十五、 fcntl函数\n","slug":"linux-WebServer01LinuxProgStart","published":1,"updated":"2022-04-16T23:53:44.583Z","_id":"cl22ia3980000ikss3q5ffx25","comments":1,"layout":"post","photos":[],"link":"","content":"<p>内容有：Linux开发环境搭建、Gcc编译、静态库和动态库、Makefile、GDB调试、虚拟地址空间、文件描述符、open 函数、read 函数、write 函数、lseek 函数、stat 函数、目录操作函数、dup 函数、dup2 函数、fcntl函数。</p>\n<span id=\"more\"></span>\n\n\n\n<hr>\n<h3 id=\"一、-Linux开发环境搭建\"><a href=\"#一、-Linux开发环境搭建\" class=\"headerlink\" title=\"一、 Linux开发环境搭建\"></a>一、 Linux开发环境搭建</h3><h3 id=\"二、-Gcc编译\"><a href=\"#二、-Gcc编译\" class=\"headerlink\" title=\"二、 Gcc编译\"></a>二、 Gcc编译</h3><h3 id=\"三、-静态库和动态库\"><a href=\"#三、-静态库和动态库\" class=\"headerlink\" title=\"三、 静态库和动态库\"></a>三、 静态库和动态库</h3><h3 id=\"四、-Makefile\"><a href=\"#四、-Makefile\" class=\"headerlink\" title=\"四、 Makefile\"></a>四、 Makefile</h3><h3 id=\"五、-GDB调试\"><a href=\"#五、-GDB调试\" class=\"headerlink\" title=\"五、 GDB调试\"></a>五、 GDB调试</h3><h3 id=\"六、-虚拟地址空间\"><a href=\"#六、-虚拟地址空间\" class=\"headerlink\" title=\"六、 虚拟地址空间\"></a>六、 虚拟地址空间</h3><h3 id=\"七、-文件描述符\"><a href=\"#七、-文件描述符\" class=\"headerlink\" title=\"七、 文件描述符\"></a>七、 文件描述符</h3><h3 id=\"八、-open-函数\"><a href=\"#八、-open-函数\" class=\"headerlink\" title=\"八、 open 函数\"></a>八、 open 函数</h3><h3 id=\"九、-read-函数\"><a href=\"#九、-read-函数\" class=\"headerlink\" title=\"九、 read 函数\"></a>九、 read 函数</h3><h3 id=\"十、-write-函数\"><a href=\"#十、-write-函数\" class=\"headerlink\" title=\"十、 write 函数\"></a>十、 write 函数</h3><h3 id=\"十一、-lseek-函数\"><a href=\"#十一、-lseek-函数\" class=\"headerlink\" title=\"十一、 lseek 函数\"></a>十一、 lseek 函数</h3><h3 id=\"十二、-stat-函数\"><a href=\"#十二、-stat-函数\" class=\"headerlink\" title=\"十二、 stat 函数\"></a>十二、 stat 函数</h3><h3 id=\"十三、-目录操作函数\"><a href=\"#十三、-目录操作函数\" class=\"headerlink\" title=\"十三、 目录操作函数\"></a>十三、 目录操作函数</h3><h3 id=\"十四、-dup-函数\"><a href=\"#十四、-dup-函数\" class=\"headerlink\" title=\"十四、 dup 函数\"></a>十四、 dup 函数</h3><h3 id=\"十五、-fcntl函数\"><a href=\"#十五、-fcntl函数\" class=\"headerlink\" title=\"十五、 fcntl函数\"></a>十五、 fcntl函数</h3>","site":{"data":{}},"excerpt":"<p>内容有：Linux开发环境搭建、Gcc编译、静态库和动态库、Makefile、GDB调试、虚拟地址空间、文件描述符、open 函数、read 函数、write 函数、lseek 函数、stat 函数、目录操作函数、dup 函数、dup2 函数、fcntl函数。</p>","more":"<hr>\n<h3 id=\"一、-Linux开发环境搭建\"><a href=\"#一、-Linux开发环境搭建\" class=\"headerlink\" title=\"一、 Linux开发环境搭建\"></a>一、 Linux开发环境搭建</h3><h3 id=\"二、-Gcc编译\"><a href=\"#二、-Gcc编译\" class=\"headerlink\" title=\"二、 Gcc编译\"></a>二、 Gcc编译</h3><h3 id=\"三、-静态库和动态库\"><a href=\"#三、-静态库和动态库\" class=\"headerlink\" title=\"三、 静态库和动态库\"></a>三、 静态库和动态库</h3><h3 id=\"四、-Makefile\"><a href=\"#四、-Makefile\" class=\"headerlink\" title=\"四、 Makefile\"></a>四、 Makefile</h3><h3 id=\"五、-GDB调试\"><a href=\"#五、-GDB调试\" class=\"headerlink\" title=\"五、 GDB调试\"></a>五、 GDB调试</h3><h3 id=\"六、-虚拟地址空间\"><a href=\"#六、-虚拟地址空间\" class=\"headerlink\" title=\"六、 虚拟地址空间\"></a>六、 虚拟地址空间</h3><h3 id=\"七、-文件描述符\"><a href=\"#七、-文件描述符\" class=\"headerlink\" title=\"七、 文件描述符\"></a>七、 文件描述符</h3><h3 id=\"八、-open-函数\"><a href=\"#八、-open-函数\" class=\"headerlink\" title=\"八、 open 函数\"></a>八、 open 函数</h3><h3 id=\"九、-read-函数\"><a href=\"#九、-read-函数\" class=\"headerlink\" title=\"九、 read 函数\"></a>九、 read 函数</h3><h3 id=\"十、-write-函数\"><a href=\"#十、-write-函数\" class=\"headerlink\" title=\"十、 write 函数\"></a>十、 write 函数</h3><h3 id=\"十一、-lseek-函数\"><a href=\"#十一、-lseek-函数\" class=\"headerlink\" title=\"十一、 lseek 函数\"></a>十一、 lseek 函数</h3><h3 id=\"十二、-stat-函数\"><a href=\"#十二、-stat-函数\" class=\"headerlink\" title=\"十二、 stat 函数\"></a>十二、 stat 函数</h3><h3 id=\"十三、-目录操作函数\"><a href=\"#十三、-目录操作函数\" class=\"headerlink\" title=\"十三、 目录操作函数\"></a>十三、 目录操作函数</h3><h3 id=\"十四、-dup-函数\"><a href=\"#十四、-dup-函数\" class=\"headerlink\" title=\"十四、 dup 函数\"></a>十四、 dup 函数</h3><h3 id=\"十五、-fcntl函数\"><a href=\"#十五、-fcntl函数\" class=\"headerlink\" title=\"十五、 fcntl函数\"></a>十五、 fcntl函数</h3>"}],"PostAsset":[],"PostCategory":[{"post_id":"cl22h70sx00095ossbezd3qo0","category_id":"cl22h70sn00045ossf8fg6azc","_id":"cl22h70t9000j5oss1w5u81km"},{"post_id":"cl22h70sb00015ossfi7r8sqz","category_id":"cl22h70sn00045ossf8fg6azc","_id":"cl22h70tc000p5oss7w5phqcv"},{"post_id":"cl22h70t0000b5oss2zsshis9","category_id":"cl22h70sn00045ossf8fg6azc","_id":"cl22h70td000s5oss2e74cdgy"},{"post_id":"cl22h70t6000g5oss664ffi9o","category_id":"cl22h70sn00045ossf8fg6azc","_id":"cl22h70tf000x5oss3m8ragso"},{"post_id":"cl22h70sk00035oss5xrhfs4y","category_id":"cl22h70sn00045ossf8fg6azc","_id":"cl22h70th00105oss04x637ev"},{"post_id":"cl22h70t9000i5oss9f5jey71","category_id":"cl22h70sn00045ossf8fg6azc","_id":"cl22h70ti00155oss5guu3ik2"},{"post_id":"cl22h70tb000o5oss2gccbxch","category_id":"cl22h70sn00045ossf8fg6azc","_id":"cl22h70tj00195ossc2fd9fgy"},{"post_id":"cl22h70st00075ossgd82h7cz","category_id":"cl22h70sn00045ossf8fg6azc","_id":"cl22h70tl001f5oss2hzr7x5r"},{"post_id":"cl22h70tc000r5osser790apn","category_id":"cl22h70sn00045ossf8fg6azc","_id":"cl22h70to001j5oss6jlsdxjn"},{"post_id":"cl22h70tf000w5ossakvba7lf","category_id":"cl22h70sn00045ossf8fg6azc","_id":"cl22h70tq001o5ossd06ja0d2"},{"post_id":"cl22h70tg000z5ossad54a788","category_id":"cl22h70sn00045ossf8fg6azc","_id":"cl22h70tr001s5oss77e7dsao"},{"post_id":"cl22h70ti00145oss9zkn12ci","category_id":"cl22h70tk001b5ossa4sb19cr","_id":"cl22h70tt001x5ossa3gofc0s"},{"post_id":"cl22h70tj00185ossd9963krd","category_id":"cl22h70tk001b5ossa4sb19cr","_id":"cl22h70tx00245oss7bhrgq49"},{"post_id":"cl22h70tu00205oss2zbe2mjq","category_id":"cl22h70tt001w5ossdonx2lxj","_id":"cl22h70u0002c5ossfxyi8x8z"},{"post_id":"cl22h70tk001e5osshwex4wnp","category_id":"cl22h70tt001w5ossdonx2lxj","_id":"cl22h70u2002h5oss3eu224hk"},{"post_id":"cl22h70tw00235oss5qrk23pk","category_id":"cl22h70tt001w5ossdonx2lxj","_id":"cl22h70u4002l5ossejck81ts"},{"post_id":"cl22h70ty00285oss6sxx1yia","category_id":"cl22h70tt001w5ossdonx2lxj","_id":"cl22h70u6002q5oss80zf4mlf"},{"post_id":"cl22h70tl001i5osseyb11u1w","category_id":"cl22h70tt001w5ossdonx2lxj","_id":"cl22h70u7002u5oss41hg4cwa"},{"post_id":"cl22h70tp001m5ossd5q864sy","category_id":"cl22h70tt001w5ossdonx2lxj","_id":"cl22h70u8002z5oss2pok3gfq"},{"post_id":"cl22h70tr001r5ossdxjl5q00","category_id":"cl22h70tt001w5ossdonx2lxj","_id":"cl22h70u900345oss5w2vbxdf"},{"post_id":"cl22h70ts001v5ossf1mq84ip","category_id":"cl22h70tt001w5ossdonx2lxj","_id":"cl22h70ud003a5ossfi5468fl"},{"post_id":"cl22h70u2002g5osseibrfbzk","category_id":"cl22h70ud003c5osscs5o4afk","_id":"cl22h70uh003s5oss48fe3rhq"},{"post_id":"cl22h70u3002k5ossapq33ky7","category_id":"cl22h70ud003c5osscs5o4afk","_id":"cl22h70uj003y5oss8791bp1v"},{"post_id":"cl22h70uh003p5oss2b6ca6di","category_id":"cl22h70ud003c5osscs5o4afk","_id":"cl22h70uk00415oss76mj6slb"},{"post_id":"cl22h70u5002p5oss1sms3477","category_id":"cl22h70ud003c5osscs5o4afk","_id":"cl22h70uk00445oss10g97w47"},{"post_id":"cl22h70u6002t5oss94d1fh7y","category_id":"cl22h70ud003c5osscs5o4afk","_id":"cl22h70ul00495ossf0l72pqz"},{"post_id":"cl22h70u8002y5ossbqy3bbom","category_id":"cl22h70uk00435oss9hz4ddof","_id":"cl22h70un004i5oss9a9i1wjt"},{"post_id":"cl22h70u900315ossgj0f8n6e","category_id":"cl22h70uk00435oss9hz4ddof","_id":"cl22h70uo004m5oss8elkcp0t"},{"post_id":"cl22h70ua00375oss6kf72z54","category_id":"cl22h70un004h5oss7yzq3rmb","_id":"cl22h70uq004t5oss1kgghzqt"},{"post_id":"cl22h70ub00395oss88vk69em","category_id":"cl22h70un004h5oss7yzq3rmb","_id":"cl22h70ut004z5oss8izr79e2"},{"post_id":"cl22h70ud003e5oss2hxs2nfr","category_id":"cl22h70un004h5oss7yzq3rmb","_id":"cl22h70uu00555ossarts67ch"},{"post_id":"cl22h70ue003h5oss3iv31te7","category_id":"cl22h70un004h5oss7yzq3rmb","_id":"cl22h70uv005a5oss4gy864jh"},{"post_id":"cl22h70uf003m5ossf47v8rjw","category_id":"cl22h70un004h5oss7yzq3rmb","_id":"cl22h70ux005f5oss0tuxhx8e"},{"post_id":"cl22hj3960003n4ssfr7me0ly","category_id":"cl22h70u900335ossf3md3459","_id":"cl22hj3970005n4ssctw4g3m3"},{"post_id":"cl22ia3980000ikss3q5ffx25","category_id":"cl22h70u900335ossf3md3459","_id":"cl22ib9uq0002ikss4ubi2zuk"}],"PostTag":[{"post_id":"cl22h70sb00015ossfi7r8sqz","tag_id":"cl22h70sq00055oss59ju3dp9","_id":"cl22h70t5000e5oss8c46d1k1"},{"post_id":"cl22h70sk00035oss5xrhfs4y","tag_id":"cl22h70sq00055oss59ju3dp9","_id":"cl22h70ta000m5oss0yvrgv81"},{"post_id":"cl22h70st00075ossgd82h7cz","tag_id":"cl22h70sq00055oss59ju3dp9","_id":"cl22h70te000u5ossatr5g2mr"},{"post_id":"cl22h70tf000w5ossakvba7lf","tag_id":"cl22h70td000t5ossbwcgc7ly","_id":"cl22h70th00125ossetvo2z2m"},{"post_id":"cl22h70sx00095ossbezd3qo0","tag_id":"cl22h70td000t5ossbwcgc7ly","_id":"cl22h70ti00165oss0fm3cisz"},{"post_id":"cl22h70tg000z5ossad54a788","tag_id":"cl22h70td000t5ossbwcgc7ly","_id":"cl22h70tk001c5oss0kcjgksi"},{"post_id":"cl22h70t0000b5oss2zsshis9","tag_id":"cl22h70td000t5ossbwcgc7ly","_id":"cl22h70tl001g5oss0luf03gq"},{"post_id":"cl22h70t6000g5oss664ffi9o","tag_id":"cl22h70td000t5ossbwcgc7ly","_id":"cl22h70tq001p5ossezmj36tt"},{"post_id":"cl22h70t9000i5oss9f5jey71","tag_id":"cl22h70td000t5ossbwcgc7ly","_id":"cl22h70tt001y5oss663o1y5c"},{"post_id":"cl22h70tb000o5oss2gccbxch","tag_id":"cl22h70td000t5ossbwcgc7ly","_id":"cl22h70tx00255oss7sla28z3"},{"post_id":"cl22h70tc000r5osser790apn","tag_id":"cl22h70td000t5ossbwcgc7ly","_id":"cl22h70u0002d5oss42uz7kac"},{"post_id":"cl22h70ti00145oss9zkn12ci","tag_id":"cl22h70tz00295oss4pn4gguq","_id":"cl22h70u4002n5oss4d0oahjp"},{"post_id":"cl22h70tj00185ossd9963krd","tag_id":"cl22h70u3002i5osse82jfh2g","_id":"cl22h70u7002w5ossf4031wqz"},{"post_id":"cl22h70tk001e5osshwex4wnp","tag_id":"cl22h70u6002r5oss1vsh7oqo","_id":"cl22h70ua00355ossewoyhzb9"},{"post_id":"cl22h70tl001i5osseyb11u1w","tag_id":"cl22h70u900325oss0egj5nk8","_id":"cl22h70ue003f5ossdevofuvr"},{"post_id":"cl22h70tp001m5ossd5q864sy","tag_id":"cl22h70ud003b5oss9i3g6ipp","_id":"cl22h70ug003n5oss7dq35k06"},{"post_id":"cl22h70tr001r5ossdxjl5q00","tag_id":"cl22h70ud003b5oss9i3g6ipp","_id":"cl22h70ui003u5ossek0j78s5"},{"post_id":"cl22h70ts001v5ossf1mq84ip","tag_id":"cl22h70ud003b5oss9i3g6ipp","_id":"cl22h70uj00405osshb99987r"},{"post_id":"cl22h70tu00205oss2zbe2mjq","tag_id":"cl22h70uj003w5oss8j2lbcla","_id":"cl22h70ul00475oss3zpugt8a"},{"post_id":"cl22h70tw00235oss5qrk23pk","tag_id":"cl22h70uj003w5oss8j2lbcla","_id":"cl22h70um004d5oss6h10fcip"},{"post_id":"cl22h70ty00285oss6sxx1yia","tag_id":"cl22h70uj003w5oss8j2lbcla","_id":"cl22h70uo004j5ossci4l5vr2"},{"post_id":"cl22h70u2002g5osseibrfbzk","tag_id":"cl22h70uo004n5ossgg4r8mxg","_id":"cl22h70uq004w5oss1k2h3ypk"},{"post_id":"cl22h70u3002k5ossapq33ky7","tag_id":"cl22h70uq004u5oss0h61ctuc","_id":"cl22h70uu00525ossafpu5qf9"},{"post_id":"cl22h70u5002p5oss1sms3477","tag_id":"cl22h70ut00505ossh7qdbe9z","_id":"cl22h70uv00585ossayie823h"},{"post_id":"cl22h70u6002t5oss94d1fh7y","tag_id":"cl22h70uo004n5ossgg4r8mxg","_id":"cl22h70uw005d5oss7odd280j"},{"post_id":"cl22h70u8002y5ossbqy3bbom","tag_id":"cl22h70uw005b5ossa84qapp1","_id":"cl22h70ux005i5ossh23hh10v"},{"post_id":"cl22h70u900315ossgj0f8n6e","tag_id":"cl22h70ux005h5oss0xiq1k44","_id":"cl22h70uz005n5osse99o3jce"},{"post_id":"cl22h70ua00375oss6kf72z54","tag_id":"cl22h70uy005l5oss6bck657u","_id":"cl22h70uz005r5ossbcv89ex5"},{"post_id":"cl22h70ub00395oss88vk69em","tag_id":"cl22h70uz005p5oss9ipndz3o","_id":"cl22h70v0005v5oss17or09op"},{"post_id":"cl22h70ud003e5oss2hxs2nfr","tag_id":"cl22h70uy005l5oss6bck657u","_id":"cl22h70v2005z5ossecu69srd"},{"post_id":"cl22h70ue003h5oss3iv31te7","tag_id":"cl22h70uz005p5oss9ipndz3o","_id":"cl22h70v300635oss8tf5hpvl"},{"post_id":"cl22h70uf003m5ossf47v8rjw","tag_id":"cl22h70uz005p5oss9ipndz3o","_id":"cl22h70v500675osshzj2e030"},{"post_id":"cl22h70uh003p5oss2b6ca6di","tag_id":"cl22h70ut00505ossh7qdbe9z","_id":"cl22h70v5006a5oss4brmdw0t"},{"post_id":"cl22hj3960003n4ssfr7me0ly","tag_id":"cl22h70un004f5oss3vyz85s3","_id":"cl22hj3970004n4ss4t2matir"},{"post_id":"cl22ia3980000ikss3q5ffx25","tag_id":"cl22h70un004f5oss3vyz85s3","_id":"cl22ib9up0001ikss4h08dbkp"}],"Tag":[{"name":"exec","_id":"cl22h70sq00055oss59ju3dp9"},{"name":"learn","_id":"cl22h70td000t5ossbwcgc7ly"},{"name":"mysql","_id":"cl22h70tz00295oss4pn4gguq"},{"name":"redis","_id":"cl22h70u3002i5osse82jfh2g"},{"name":"cpp","_id":"cl22h70u6002r5oss1vsh7oqo"},{"name":"asm","_id":"cl22h70u900325oss0egj5nk8"},{"name":"go","_id":"cl22h70ud003b5oss9i3g6ipp"},{"name":"py","_id":"cl22h70uj003w5oss8j2lbcla"},{"name":"webServer","_id":"cl22h70un004f5oss3vyz85s3"},{"name":"intro","_id":"cl22h70uo004n5ossgg4r8mxg"},{"name":"job","_id":"cl22h70uq004u5oss0h61ctuc"},{"name":"useless","_id":"cl22h70ut00505ossh7qdbe9z"},{"name":"net","_id":"cl22h70uw005b5ossa84qapp1"},{"name":"sec","_id":"cl22h70ux005h5oss0xiq1k44"},{"name":"git","_id":"cl22h70uy005l5oss6bck657u"},{"name":"hexo","_id":"cl22h70uz005p5oss9ipndz3o"}]}}